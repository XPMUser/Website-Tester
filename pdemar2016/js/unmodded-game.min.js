function Util() {}

function Device() {}

function ApiClient(e, t) {
	function i(e, t, i, a, s, r) {
		void 0 === i && (i = {}), void 0 === r && (r = {}), i["auth-key"] = l.uniqueKey;
		var o = {
			url: t,
			data: i,
			timeout: 3e4,
			type: e,
			success: a["200"],
			crossDomain: !0,
			error: function (e) {
				"Service Unavailable" === e.responseText && (e.status = 503), void 0 !== a[e.status] ? a[e.status](s, e.status) : l.generic_ajax_error(s, e.status)
			}
		};
		r.ignoreHeaders && (o.headers = null), $.ajax(o)
	}

	function a(e, t, a, s) {
		"/status" === e ? i("get", p.root + e.substr(1), t, a, s) : i("get", p.root + p.version + e, t, a, s)
	}

	function s(e, t, a, s) {
		i("post", p.root + p.version + e, t, a, s)
	}

	function r(e, t, i) {
		for (var a = 0, s = t.length; s > a; ++a)
			if (void 0 === e[t[a]]) return console.error("Missing method for " + i + " statusCode: " + t[a]), !1;
		return e
	}

	function o(e, t, i) {
		for (var a = $.extend({}, d), s = Object.keys(e), o = 0, n = s.length; n > o; ++o) a[s[o]] = e[s[o]];
		return void 0 !== t ? r(a, t, i) : void 0
	}

	function n(e) {
		return "[object Array]" !== Object.prototype.toString.call(e) && (e = [e]), JSON.stringify(e)
	}
	var l = this,
		h = {},
		d = {};
	this.generic_ajax_error = function () {}, this.uniqueKey = void 0, this.userID = void 0, this.socket = void 0;
	var p = {
		version: "v1",
		autoping: !0,
		url: {
			leaderboard: void 0,
			chat: void 0,
			game: void 0,
			multiplayer: void 0,
			worlds: void 0
		},
		ajax_timeout: 3e4,
		root: void 0
	};
	switch (window.location.host) {
	case "dev.prodigygame.org":
		p.root = "https://web.archive.org/web/20160415163509/http://dev.prodigygame.org/game-api/", p.url.leaderboard = "https://web.archive.org/web/20160415163509/http://dev.prodigygame.org/leaderboard-api/", p.url.account = "https://web.archive.org/web/20160415163509/http://dev.prodigygame.org/account-api/", p.url.worlds = "https://web.archive.org/web/20160415163509/https://multiplayer.prodigygame.org/", p.url.multiplayer = "https://web.archive.org/web/20160415163509/https://multiplayer.prodigygame.org/", p.url.messages = "https://web.archive.org/web/20160415163509/http://dev.prodigygame.org/message-api/", p.url.matchmaking = "https://web.archive.org/web/20160415163509/http://dev.prodigygame.org/matchmaking-api/";
		break;
	case "www.prodigygame.org":
	case "prodigygame.org":
		p.root = "https://web.archive.org/web/20160415163509/https://game-api.prodigygame.org/", p.url.leaderboard = "https://web.archive.org/web/20160415163509/https://leaderboard-api.prodigygame.org/leaderboard-api", p.url.account = "https://web.archive.org/web/20160415163509/https://account-api.prodigygame.org/", p.url.worlds = "https://web.archive.org/web/20160415163509/https://multiplayer.prodigygame.org/", p.url.multiplayer = "https://web.archive.org/web/20160415163509/https://multiplayer.prodigygame.org/", p.url.messages = "https://web.archive.org/web/20160415163509/https://www.prodigygame.org/message-api/", p.url.matchmaking = "https://web.archive.org/web/20160415163509/https://matchmaking-api.prodigygame.org/matchmaking-api/";
		break;
	case "www.prodigygame.com":
	case "prodigygame.com":
		p.root = "https://web.archive.org/web/20160415163509/https://game-api.prodigygame.com/", p.url.leaderboard = "https://web.archive.org/web/20160415163509/https://www.prodigygame.com/leaderboard-api", p.url.account = "https://web.archive.org/web/20160415163509/https://account-api.prodigygame.com/", p.url.worlds = "https://web.archive.org/web/20160415163509/https://multiplayer-api.prodigygame.com/", p.url.multiplayer = "https://web.archive.org/web/20160415163509/https://multiplayer-api.prodigygame.com/", p.url.messages = "https://web.archive.org/web/20160415163509/https://www.prodigygame.com/message-api/", p.url.matchmaking = "https://web.archive.org/web/20160415163509/https://www.prodigygame.com/matchmaking-api/";
		break;
	default:
		p.root = "https://web.archive.org/web/20160415163509/https://dev.prodigygame.org/account-api/", p.url.leaderboard = "https://web.archive.org/web/20160415163509/http://dev.prodigygame.org/leaderboard-api/", p.url.account = "https://web.archive.org/web/20160415163509/http://dev.prodigygame.org/account-api/", p.url.worlds = "https://web.archive.org/web/20160415163509/https://multiplayer.prodigygame.org/", p.url.multiplayer = "https://web.archive.org/web/20160415163509/https://multiplayer.prodigygame.org/", p.url.messages = "https://web.archive.org/web/20160415163509/http://dev.prodigygame.org/message-api/", p.url.matchmaking = "https://web.archive.org/web/20160415163509/http://dev.prodigygame.org/matchmaking-api/"
	}
	var c = window.location.search;
	if (c.indexOf("env=dev") >= 0 ? (p.root = "https://web.archive.org/web/20160415163509/http://dev.prodigygame.org/game-api/", p.url.leaderboard = "https://web.archive.org/web/20160415163509/http://dev.prodigygame.org/leaderboard-api/", p.url.account = "https://web.archive.org/web/20160415163509/http://dev.prodigygame.org/account-api/", p.url.worlds = "https://web.archive.org/web/20160415163509/https://multiplayer.prodigygame.org/", p.url.multiplayer = "https://web.archive.org/web/20160415163509/https://multiplayer.prodigygame.org/", p.url.messages = "https://web.archive.org/web/20160415163509/http://dev.prodigygame.org/message-api/", p.url.matchmaking = "https://web.archive.org/web/20160415163509/http://dev.prodigygame.org/matchmaking-api/") : c.indexOf("env=staging") >= 0 ? (p.root = "https://web.archive.org/web/20160415163509/https://game-api.prodigygame.org/", p.url.leaderboard = "https://web.archive.org/web/20160415163509/https://leaderboard-api.prodigygame.org/leaderboard-api", p.url.account = "https://web.archive.org/web/20160415163509/https://account-api.prodigygame.org/", p.url.worlds = "https://web.archive.org/web/20160415163509/https://multiplayer.prodigygame.org/", p.url.multiplayer = "https://web.archive.org/web/20160415163509/https://multiplayer.prodigygame.org/", p.url.messages = "https://web.archive.org/web/20160415163509/https://www.prodigygame.org/message-api/", p.url.matchmaking = "https://web.archive.org/web/20160415163509/https://matchmaking-api.prodigygame.org/matchmaking-api/") : (c.indexOf("env=production") >= 0 || c.indexOf("env=prod") >= 0) && (p.root = "https://web.archive.org/web/20160415163509/https://game-api.prodigygame.com/", p.url.leaderboard = "https://web.archive.org/web/20160415163509/https://www.prodigygame.com/leaderboard-api", p.url.account = "https://web.archive.org/web/20160415163509/https://account-api.prodigygame.com/", p.url.worlds = "https://web.archive.org/web/20160415163509/https://multiplayer-api.prodigygame.com/", p.url.multiplayer = "https://web.archive.org/web/20160415163509/https://multiplayer-api.prodigygame.com/", p.url.messages = "https://web.archive.org/web/20160415163509/https://www.prodigygame.com/message-api/", p.url.matchmaking = "https://web.archive.org/web/20160415163509/https://www.prodigygame.com/matchmaking-api/"), e)
		for (var u = Object.keys(p), g = 0, m = u.length; m > g; ++g) void 0 !== e[u[g]] && (p[u[g]] = e[u[g]]);
	if (h = p, d["500"] = function () {
			console.error("Something happened with the webservice...")
		}, d["404"] = function () {
			console.log("The data you are attempting to access does not exist.")
		}, t)
		for (var y = Object.keys(t), g = 0, m = y.length; m > g; ++g) void 0 !== t[y[g]] && (d[y[g]] = t[y[g]]);
	this.joinMultiplayerServer = function (e, t, i, a, s, r, n, h) {
		var d = o(i, ["200", "503"], "Join multiplayer Server");
		if (d) {
			var c = this.userID,
				u = this.uniqueKey;
			if (void 0 == c || void 0 == u) return console.log("missing user id or token"), !1;
			var g = !1,
				m = p.url.multiplayer;
			/^https:\/\//.test(m) && (g = !0);
			var y = {
				"force new connection": !0,
				reconnection: !1,
				transports: ["websocket", "xhr-polling", "jsonp-polling", "htmlfile"],
				secure: g,
				query: "userId=" + c + "&worldId=" + e + "&userToken=" + u + "&zone=" + t
			};
			l.socket = io.connect(p.url.multiplayer, y), l.socket.on("connect", function () {
				console.log("client connected")
			}), l.socket.on("connect", d["200"]), l.socket.on("connect_error", function (e) {
				console.log("connect_error"), console.log(e)
			}), l.socket.on("error", function (e) {
				console.log("error"), e && console.log(e), e.code && d[e.code] && d[e.code]()
			}), l.socket.on("connect_error", d["503"]), l.socket.on("message", function (e) {
				console.log("message received"), a(e)
			}), l.socket.on("playerJoined", function (e) {
				console.log("player Joined - playerId: " + e), n(e)
			}), l.socket.on("playerLeft", function (e) {
				console.log("player Left - playerId: " + e), h(e)
			}), l.socket.on("playerList", function (e) {
				console.log("player list received"), s(e)
			}), l.socket.on("disconnect", function () {
				console.log("Disconnected from multiplayer server"), r()
			})
		}
	}, this.emitMessage = function (e, t) {
		var i = o(t, ["200"], "emit message");
		return i && l.socket ? (l.socket.emit("message", e), !0) : !1
	}, this.getWorldList = function (e) {
		var t = o(e, ["200"], "get world list");
		if (t) {
			var a = "multiplayer/service/worlds",
				s = p.url.worlds + a;
			return i("get", s, {}, t, "getWorldList", {
				ignoreHeaders: !0
			}), !0
		}
		return !1
	}, this.login = function (e, t, i) {
		var a = o(i, ["200", "401"], "login");
		if (!l.uniqueKey || !l.userID) {
			if (a) {
				var r = a["200"];
				if (a["200"] = function (e) {
						l.uniqueKey = e.authToken, l.userID = e.userID, console.log("SET!", l.userID, l.uniqueKey), r(e)
					}, "string" == typeof t) {
					var n = t;
					t = {
						username: e,
						password: n
					}, e = "prodigy"
				}
				return s("/login/" + e, t, a, "login"), !0
			}
			return !1
		}
	}, this.verifyClassCode = function (e, t) {
		var a = o(t, ["200", "400", "500"], "verifyClassCode");
		if (a) {
			var s = p.url.account + "v1";
			return i("get", s + "/class/class_code/" + e, {
				key: "Gh5u7pLHIpm2P7G"
			}, a, "verify-class-code"), !0
		}
		return !1
	}, this.attachStudentUsingClassCode = function (e, t) {
		var a = o(t, ["200"], "attachStudentUsingClassCode");
		if (a) {
			var s = p.root + "v1/users/" + l.userID + "/teacher";
			return i("post", s, {
				classCode: e
			}, a, "attachStudentUsingCassCode"), !0
		}
		return !1
	}, this.create = function (e, t, a, s) {
		a.first_name = e, a.last_name = t;
		var r = o(s, ["200", "400", "500"], "create");
		if (r) {
			var n = p.root + "v1";
			return i("post", n + "/users", a, r, "create"), !0
		}
		return !1
	}, this.createCharacter = function (e, t, a) {
		var s = o(a, ["200"], "createCharacter");
		if (s) {
			var r = p.root + "v1";
			return i("post", r + "/characters/" + e, t, s, "createCharacter"), !0
		}
		return !1
	}, this.updateUser = function (e, t) {
		var a = o(t, ["200", "401"], "update user properties");
		if (a) {
			var s = p.root + "v1/users/" + l.userID;
			return i("post", s, e, a, "update"), !0
		}
		return !1
	}, this.logout = function (e) {
		l.uniqueKey = void 0, l.userID = void 0, void 0 !== l.socket && (l.socket.disconnect(), l.socket = void 0), e["200"] && e["200"]()
	}, this.updateCharacter = function (e, t) {
		var a = o(t, ["200", "401"], "update property");
		if (a) {
			var s = p.root + "v1/characters/" + l.userID;
			return i("post", s, e, a, "update"), !0
		}
		return !1
	}, this.selectInstance = function (e, t, i) {
		i["200"] && i["200"]()
	}, this.switchZones = function (e, t) {
		return void 0 !== l.socket && l.socket.emit("switchZone", e), t["200"] && t["200"](), !0
	}, this.loadSkills = function (e, t, a) {
		var s = o(a, ["200"], "get user ability");
		if (s) {
			var r = p.root + "v1";
			return i("get", r + "/users/" + e + "/education", {
				classIDs: t.join(",")
			}, s, "load_skills"), !0
		}
		return !1
	}, this.updatePlacementTest = function (e, t, a) {
		var s = o(a, ["200"], "update placement test");
		if (s) {
			var r = p.root + "v1/users/" + l.userID + "/education/" + e + "/placement-test";
			return i("post", r, {
				ownerIDs: t
			}, s, "upgradePlacementTest"), !0
		}
		return !1
	}, this.updateUserAbility = function (e, t) {
		var a = o(t, ["200"], "bulk update user ability");
		if (a) {
			e = n(e);
			var s = p.root + "v1/users/" + l.userID + "/ability";
			return i("post", s, {
				userAbilityData: e
			}, a, "bulkUpdateUserAbility"), !0
		}
		return !1
	}, this.saveAnswer = function (e, t) {
		var a = o(t, ["200"], "save answer");
		if (a) {
			var s = p.root + "v1/users/" + l.userID + "/answers";
			return i("post", s, e, a, "saveAnswer"), !0
		}
		return !1
	}, this.getLeaderboard = function (e, t, a, s) {
		var r = o(s, ["200"], "get leaderboard");
		if (r) {
			var n = p.url.leaderboard + "/v1";
			return i("get", n + "/class/" + e, {
				sort: t,
				limit: a
			}, r, "leaderboard", {
				ignoreHeaders: !0
			}), !0
		}
		return !1
	}, this.getPvpLeaderboard = function (e, t, a, s, r) {
		var n = o(r, ["200"], "get pvp leaderboard");
		if (n) {
			var h = p.url.leaderboard + "/v1";
			return i("get", h + "/pvp/" + e.min + "/" + e.max, {
				page: a || 0,
				limit: s || 30,
				player_score: t.arenaScore,
				player_stars: t.stars,
				userID: l.userID
			}, n, "leaderboard", {
				ignoreHeaders: !0
			}), !0
		}
		return !1
	}, this.sendMessage = function (e, t, a, s) {
		var r = o(s, ["200"], "send message"),
			n = {
				to_user: e,
				from_user: l.userID,
				message: t,
				attachments: a
			};
		if (r) {
			var h = p.url.messages + "messages";
			return i("post", h, n, r, "sendMessage"), !0
		}
		return !1
	}, this.getMessage = function (e, t) {
		var a = o(t, ["200"], "get message"),
			s = {
				userID: l.userID
			};
		if (a) {
			var r = p.url.messages + "messages/" + e;
			return i("get", r, s, a, "getMessage"), !0
		}
		return !1
	}, this.deleteMessage = function (e, t) {
		var a = o(t, ["200"], "get message"),
			s = {
				message_id: e,
				userID: l.userID
			};
		if (a) {
			var r = p.url.messages + "messages/" + e;
			return i("del", r, s, a, "deleteMessage"), !0
		}
		return !1
	}, this.getUserMessages = function (e, t, a) {
		var s = o(a, ["200"], "get user messages"),
			r = {
				offset: e,
				items: t
			};
		if (s) {
			var n = p.url.messages + "messages/";
			return i("get", n, r, s, "getUserMessages"), !0
		}
		return !1
	}, this.getNumberOfMessagesSince = function (e, t) {
		var a = o(t, ["200"], "get number since");
		if (a) {
			var s = p.url.messages + "messages/since/" + e;
			return i("get", s, {
				userID: l.userID
			}, a, "getNumberOfMessagesSince"), !0
		}
		return !1
	}, this.markMessageAsRead = function (e, t) {
		var a = o(t, ["200"], "Mark Message As Read");
		if (a) {
			var s = p.url.messages + "messages/" + e;
			return i("post", s, {
				userID: l.userID
			}, a, "markMessageAsRead"), !0
		}
		return !1
	}, this.markAttachmentAsRedeemed = function (e, t, a) {
		var s = o(a, ["200"], "Mark attachment As redeemed");
		if (s) {
			var r = p.url.messages + "messages/" + e + "/attachments/" + t;
			return i("post", r, {}, s, "markAttachmentAsRedeemed"), !0
		}
		return !1
	}, this.getUser = function (e, t, a) {
		var s = p.root + "v1/characters/" + e;
		3 === arguments.length ? s += "?fields=" + t.join(",") : a = t;
		var r = o(a, ["200"], "getUserData");
		return r ? (i("get", s, {}, r, "getUser", {
			ignoreHeaders: !0
		}), !0) : !1
	}, this.startMatchmaking = function (e, t, a, s) {
		var r = o(s, ["200"], "startMatchmaking");
		if (r) {
			var n = p.url.matchmaking + "begin";
			return i("post", n, {
				userID: l.userID,
				level: e,
				score: t,
				playerData: a,
				token: l.uniqueKey
			}, r, "startMatchmaking"), !0
		}
		return !1
	}, this.quitMatchmaking = function (e) {
		var t = o(e, ["200"], "quitMatchmaking");
		if (t) {
			var a = p.url.matchmaking + "end";
			return i("post", a, {
				userID: l.userID,
				token: l.uniqueKey
			}, t, "quitMatchmaking"), !0
		}
		return !1
	}, this.log = function (e, t, i) {
		var a = ["debug", "info", "notice", "warning", "error", "critical", "alert", "emergency"];
		return e = e.toLowerCase(), a.indexOf(e) >= 0 ? (i.message && (i.attr_message = i.message), i.message = t, s("/log/" + e, i, {
			200: function () {}
		}, "log"), !0) : !1
	}, this.completeAssignment = function (e, t) {
		var a = o(t, ["200"], "completeAssignment");
		if (a) {
			var s = p.root + "v1/users/" + l.userID + "/assignments/" + e;
			return i("post", s, {}, a, "completeAssignment"), !1
		}
		return !1
	}, this.status = function (e) {
		var t = o(e, ["200", "503"], "status check");
		return t ? (a("/status", {
			flook: +new Date
		}, t, "status"), !0) : !1
	}
}
var Prodigy = {};
Prodigy.extends = function (e, t, i) {
	e.prototype = Object.create(t.prototype);
	for (var a in i) e.prototype[a] = i[a]
}, Prodigy.Control = {}, Prodigy.Container = {}, Prodigy.Controller = {}, Prodigy.Factory = {}, Prodigy.Listener = {}, Prodigy.Menu = {}, Prodigy.Utility = {}, Util.setCookie = function (e, t, i) {
	var a = new Date;
	a.setTime(a.getTime() + 24 * i * 60 * 60 * 1e3);
	var s = "expires=" + a.toUTCString();
	document.cookie = e + "=" + t + "; " + s
}, Util.getCookie = function (e) {
	e += "=";
	for (var t = document.cookie.split(";"), i = 0; i < t.length; i++) {
		for (var a = t[i];
			" " == a.charAt(0);) a = a.substring(1);
		if (0 == a.indexOf(e)) return a.substring(e.length, a.length)
	}
	return ""
}, Util.convertItemToIcon = function (e) {
	return "gold" === e.type ? "item/26" : "pet" === e.type ? "pets/" + e.ID.toString() : "spell" === e.type ? e.element : "boss" === e.type ? "boss" : "player" === e.type ? "player" : Util.isDefined(e.type) && Util.isDefined(e.ID) ? e.type + "/" + e.ID : Util.isDefined(e.tag) ? e.tag : "empty"
}, Util.numberToString = function (e) {
	e = "" + e;
	for (var t = "", i = 1, a = e.length - 1; a >= 0; a--) t = e.charAt(a) + t, i % 3 === 0 && i > 0 && a > 0 && (t = "," + t), i++;
	return t
}, Util.isSchoolHours = function () {
	var e = new Date,
		t = e.getHours();
	return t >= 8 && 15 >= t ? !0 : !1
}, Util.isDefined = function (e) {
	return !("undefined" == typeof e || null === e || "null" === e)
}, Util.isString = function (e) {
	return "string" == typeof e || e instanceof String
}, Util.getDateSeed = function () {
	var e = new Date,
		t = new Date(e.getUTCFullYear(), e.getUTCMonth(), e.getUTCDay()),
		i = t.getTime();
	return i
}, Util.highlightAll = function (e, t, i, a) {
	for (var s = 0; s < e.length; s++) Util.isDefined(e[s].highlight) && e[s].highlight(t, i, a)
}, Util.getObject = function (e) {
	return "null" === e ? null : Util.isString(e) ? JSON.parse(e) : e
}, Util.copyObject = function (e) {
	var t = {};
	if (null == e || "object" != typeof e) return e;
	if (e instanceof Array) {
		t = [];
		for (var i = 0, a = e.length; a > i; i++) t[i] = Util.copyObject(e[i])
	}
	if (e instanceof Object)
		for (var s in e) e.hasOwnProperty(s) && (t[s] = Util.copyObject(e[s]));
	return t
}, Util.pseudoRandomNumber = function (e) {
	return (9301 * e + 49297) % 233280 / 233280
}, Util.randomArrayElement = function (e, t) {
	return Util.isDefined(t) ? e[Math.floor(this.pseudoRandomNumber(t) * e.length)] : e[Math.floor(Math.random() * e.length)]
}, Util.weightedArrayElement = function (e) {
	for (var t = 0, i = [], a = 0; a < e.length; a++) Util.isDefined(e[a].weight) && e[a].weight > 0 && (t += e[a].weight), i.push(t);
	for (var s = Math.random() * t, a = 0; a < e.length; a++)
		if (s < i[a]) return e[a];
	return null
}, Util.shuffleArray = function (e, t) {
	for (var i, a = e.length; 0 !== a;) {
		i = Math.floor(Util.pseudoRandomNumber(t + a) * a), a--;
		var s = e[i];
		e[i] = e[a], e[a] = s
	}
}, Util.isEmptyObject = function (e) {
	if (!Util.isDefined(e)) return !0;
	for (var t in e)
		if (e.hasOwnProperty(t)) return !1;
	return !0
}, Util.inArray = function (e, t) {
	for (var i = 0; i < e.length; i++)
		if (e[i] === t) return !0;
	return !1
}, Util.removeDuplicates = function (e) {
	for (var t = [], i = 0; i < e.length; i++) Util.inArray(t, e[i]) || t.push(e[i]);
	return t
}, Util.equalArrays = function (e, t) {
	if (e === t) return !0;
	if (null == e || null == t) return !1;
	if (e.length != t.length) return !1;
	for (var i = 0; i < e.length; ++i)
		if (e[i] !== t[i]) return !1;
	return !0
}, Util.getUrlVariable = function (e) {
	{
		var t = {};
		window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (e, i, a) {
			t[i] = a
		})
	}
	return t[e]
}, Util.removeFromArray = function (e, t) {
	for (var i = 0; i < t.length; i++)
		if (t[i] === e) {
			t.splice(i, 1);
			break
		}
}, Util.processTime = function (e) {
	if (0 >= e) return "00:00";
	var t = Math.floor(e / 36e5),
		i = Math.floor((e - 36e5 * t) / 6e4),
		a = Math.floor((e - 36e5 * t - 6e4 * i) / 1e3);
	return 0 === t ? t = "00" : 10 > t && (t = "0" + t), 0 === i ? i = "00" : 10 > i && (i = "0" + i), 0 === a ? a = "00" : 10 > a && (a = "0" + a), "00" === t ? i + ":" + a : 24 > t ? t + ":" + i + ":" + a : Math.floor(t / 24) + " days"
}, Prodigy.Assets = function () {
	var e = "images/player/reduced/outfits/male/",
		t = "images/player/reduced/outfits/female/",
		i = "images/player/reduced/hair/male/",
		a = "images/player/reduced/hair/female/",
		s = "images/player/reduced/hats/",
		r = "images/player/normal/outfits/male/",
		o = "images/player/normal/outfits/female/",
		n = "images/player/normal/hair/male/",
		l = "images/player/normal/hair/female/",
		h = "images/player/normal/hats/",
		d = "images/player/normal/weapons/",
		p = "images/player/",
		c = "fonts/",
		u = "audio/bgm/",
		g = "audio/sfx/",
		m = "audio/voice/",
		y = "images/popups/",
		f = "images/tilesets/",
		D = "data/maps/",
		b = "images/battle/",
		I = "images/stores/",
		v = "images/backgrounds/",
		q = "images/zones/",
		w = "images/games/",
		x = "images/npc/",
		P = "images/icons/",
		k = "images/attacks/",
		M = "images/monsters/",
		C = "images/events/",
		S = "images/monsters/reduced/",
		A = "images/monsters/small/",
		T = "images/boss/",
		E = "images/boss/small/",
		N = "images/prompts/",
		B = "images/scenes/";
	this._assets = {
		"tmp-13": {
			type: "atlas",
			base: "images/pets/",
			url: "13.png",
			json: "13.json"
		},
		"battle-skill": {
			type: "json",
			base: "",
			url: ""
		},
		attacks: {
			type: "atlas",
			base: k,
			url: "attacks.png",
			json: "attacks.json"
		},
		battle: {
			type: "atlas",
			base: b,
			url: "battle.png",
			json: "battle.json"
		},
		"font-general": {
			type: "atlas",
			base: c,
			url: "font-general.png",
			json: "font-general.json"
		},
		"font-button": {
			type: "atlas",
			base: c,
			url: "font-button.png",
			json: "font-button.json"
		},
		"font-black": {
			type: "atlas",
			base: c,
			url: "font-black.png",
			json: "font-black.json"
		},
		"popup-member": {
			type: "atlas",
			base: y,
			url: "popup-member.png",
			json: "popup-member.json"
		},
		"tileset-core": {
			type: "atlas",
			base: f,
			url: "tileset-core.png",
			json: "tileset-core.json"
		},
		"tileset-forest": {
			type: "spritesheet",
			base: f,
			url: "tileset-forest.png",
			w: 40,
			h: 40
		},
		"tileset-generic": {
			type: "spritesheet",
			base: f,
			url: "tileset-generic.png",
			w: 40,
			h: 40
		},
		"tileset-outside": {
			type: "spritesheet",
			base: f,
			url: "tileset-outside.png",
			w: 40,
			h: 40
		},
		"tileset-outsidesnow": {
			type: "spritesheet",
			base: f,
			url: "tileset-outsidesnow.png",
			w: 40,
			h: 40
		},
		"tileset-icecave": {
			type: "spritesheet",
			base: f,
			url: "tileset-icecave.png",
			w: 40,
			h: 40
		},
		"tileset-railruins": {
			type: "spritesheet",
			base: f,
			url: "tileset-railruins.png",
			w: 40,
			h: 40
		},
		"tileset-town": {
			type: "spritesheet",
			base: f,
			url: "tileset-town.png",
			w: 40,
			h: 40
		},
		"map-pathing": {
			type: "json",
			base: D,
			url: "map-pathing.json"
		},
		"map-tutorial-b9": {
			type: "json",
			base: D,
			url: "map-tutorial-b9.json"
		},
		"map-tutorial-c9": {
			type: "json",
			base: D,
			url: "map-tutorial-c9.json"
		},
		"map-tutorial-d8": {
			type: "json",
			base: D,
			url: "map-tutorial-d8.json"
		},
		"map-tutorial-d9": {
			type: "json",
			base: D,
			url: "map-tutorial-d9.json"
		},
		"map-forest-a3": {
			type: "json",
			base: D,
			url: "map-forest-a3.json"
		},
		"map-forest-a4": {
			type: "json",
			base: D,
			url: "map-forest-a4.json"
		},
		"map-forest-a5": {
			type: "json",
			base: D,
			url: "map-forest-a5.json"
		},
		"map-forest-b5": {
			type: "json",
			base: D,
			url: "map-forest-b5.json"
		},
		"map-forest-b6": {
			type: "json",
			base: D,
			url: "map-forest-b6.json"
		},
		"map-forest-b7": {
			type: "json",
			base: D,
			url: "map-forest-b7.json"
		},
		"map-forest-b8": {
			type: "json",
			base: D,
			url: "map-forest-b8.json"
		},
		"map-forest-c4": {
			type: "json",
			base: D,
			url: "map-forest-c4.json"
		},
		"map-forest-c7": {
			type: "json",
			base: D,
			url: "map-forest-c7.json"
		},
		"map-forest-c8": {
			type: "json",
			base: D,
			url: "map-forest-c8.json"
		},
		"map-forest-d3": {
			type: "json",
			base: D,
			url: "map-forest-d3.json"
		},
		"map-shiverchill-a5": {
			type: "json",
			base: D,
			url: "map-shiverchill-a5.json"
		},
		"map-shiverchill-a6": {
			type: "json",
			base: D,
			url: "map-shiverchill-a6.json"
		},
		"map-shiverchill-a7": {
			type: "json",
			base: D,
			url: "map-shiverchill-a7.json"
		},
		"map-shiverchill-a11": {
			type: "json",
			base: D,
			url: "map-shiverchill-a11.json"
		},
		"map-shiverchill-a10": {
			type: "json",
			base: D,
			url: "map-shiverchill-a10.json"
		},
		"map-shiverchill-a9": {
			type: "json",
			base: D,
			url: "map-shiverchill-a9.json"
		},
		"map-shiverchill-b3": {
			type: "json",
			base: D,
			url: "map-shiverchill-b3.json"
		},
		"map-shiverchill-b6": {
			type: "json",
			base: D,
			url: "map-shiverchill-b6.json"
		},
		"map-shiverchill-b7": {
			type: "json",
			base: D,
			url: "map-shiverchill-b7.json"
		},
		"map-shiverchill-b1": {
			type: "json",
			base: D,
			url: "map-shiverchill-b1.json"
		},
		"map-shiverchill-b10": {
			type: "json",
			base: D,
			url: "map-shiverchill-b10.json"
		},
		"map-shiverchill-a4": {
			type: "json",
			base: D,
			url: "map-shiverchill-a4.json"
		},
		"map-shiverchill-a3": {
			type: "json",
			base: D,
			url: "map-shiverchill-a3.json"
		},
		"map-shiverchill-a2": {
			type: "json",
			base: D,
			url: "map-shiverchill-a2.json"
		},
		"map-shiverchill-b2": {
			type: "json",
			base: D,
			url: "map-shiverchill-b2.json"
		},
		"map-shiverchill-b8": {
			type: "json",
			base: D,
			url: "map-shiverchill-b8.json"
		},
		"map-shiverchill-b9": {
			type: "json",
			base: D,
			url: "map-shiverchill-b9.json"
		},
		"map-lamplight-a1": {
			type: "json",
			base: D,
			url: "map-lamplight-a1.json"
		},
		"map-lamplight-b1": {
			type: "json",
			base: D,
			url: "map-lamplight-b1.json"
		},
		"map-lamplight-b2": {
			type: "json",
			base: D,
			url: "map-lamplight-b2.json"
		},
		"map-lamplight-b3": {
			type: "json",
			base: D,
			url: "map-lamplight-b3.json"
		},
		"map-lamplight-c1": {
			type: "json",
			base: D,
			url: "map-lamplight-c1.json"
		},
		"scene-intro": {
			type: "atlas",
			base: B,
			url: "scene-intro.png",
			json: "scene-intro.json"
		},
		"scene-intro-bg1": {
			type: "sprite",
			base: B,
			url: "scene-intro-bg1.jpg"
		},
		"scene-intro-bg2": {
			type: "sprite",
			base: B,
			url: "scene-intro-bg2.jpg"
		},
		"scene-intro-bg3": {
			type: "sprite",
			base: B,
			url: "scene-intro-bg3.jpg"
		},
		"npc-face-bok": {
			type: "atlas",
			base: x,
			url: "npc-face-bok.png",
			json: "npc-face-bok.json"
		},
		"npc-sprite-bok": {
			type: "atlas",
			base: x,
			url: "npc-sprite-bok.png",
			json: "npc-sprite-bok.json"
		},
		"npc-face-clankboot": {
			type: "atlas",
			base: x,
			url: "npc-face-clankboot.png",
			json: "npc-face-clankboot.json"
		},
		"npc-sprite-clankboot": {
			type: "atlas",
			base: x,
			url: "npc-sprite-clankboot.png",
			json: "npc-sprite-clankboot.json"
		},
		"npc-face-cumulo": {
			type: "atlas",
			base: x,
			url: "npc-face-cumulo.png",
			json: "npc-face-cumulo.json"
		},
		"npc-sprite-cumulo": {
			type: "atlas",
			base: x,
			url: "npc-sprite-cumulo.png",
			json: "npc-sprite-cumulo.json"
		},
		"npc-face-eve": {
			type: "atlas",
			base: x,
			url: "npc-face-eve.png",
			json: "npc-face-eve.json"
		},
		"npc-sprite-eve": {
			type: "atlas",
			base: x,
			url: "npc-sprite-eve.png",
			json: "npc-sprite-eve.json"
		},
		"npc-face-flora": {
			type: "atlas",
			base: x,
			url: "npc-face-flora.png",
			json: "npc-face-flora.json"
		},
		"npc-sprite-flora": {
			type: "atlas",
			base: x,
			url: "npc-sprite-flora.png",
			json: "npc-sprite-flora.json"
		},
		"npc-face-merchant": {
			type: "atlas",
			base: x,
			url: "npc-face-merchant.png",
			json: "npc-face-merchant.json"
		},
		"npc-sprite-merchant": {
			type: "atlas",
			base: x,
			url: "npc-sprite-merchant.png",
			json: "npc-sprite-merchant.json"
		},
		"npc-face-mira": {
			type: "atlas",
			base: x,
			url: "npc-face-mira.png",
			json: "npc-face-mira.json"
		},
		"npc-sprite-mira": {
			type: "atlas",
			base: x,
			url: "npc-sprite-mira.png",
			json: "npc-sprite-mira.json"
		},
		"npc-face-mugs": {
			type: "atlas",
			base: x,
			url: "npc-face-mugs.png",
			json: "npc-face-mugs.json"
		},
		"npc-sprite-mugs": {
			type: "atlas",
			base: x,
			url: "npc-sprite-mugs.png",
			json: "npc-sprite-mugs.json"
		},
		"npc-face-noot": {
			type: "atlas",
			base: x,
			url: "npc-face-noot.png",
			json: "npc-face-noot.json"
		},
		"npc-sprite-noot": {
			type: "atlas",
			base: x,
			url: "npc-sprite-noot.png",
			json: "npc-sprite-noot.json"
		},
		"npc-face-scoog": {
			type: "atlas",
			base: x,
			url: "npc-face-scoog.png",
			json: "npc-face-scoog.json"
		},
		"npc-sprite-scoog": {
			type: "atlas",
			base: x,
			url: "npc-sprite-scoog.png",
			json: "npc-sprite-scoog.json"
		},
		"npc-face-stache": {
			type: "atlas",
			base: x,
			url: "npc-face-stache.png",
			json: "npc-face-stache.json"
		},
		"npc-sprite-stache": {
			type: "atlas",
			base: x,
			url: "npc-sprite-stache.png",
			json: "npc-sprite-stache.json"
		},
		"npc-face-boombox": {
			type: "atlas",
			base: x,
			url: "npc-face-boombox.png",
			json: "npc-face-boombox.json"
		},
		"npc-sprite-boombox": {
			type: "atlas",
			base: x,
			url: "npc-sprite-boombox.png",
			json: "npc-sprite-boombox.json"
		},
		"npc-face-wizard": {
			type: "atlas",
			base: x,
			url: "npc-face-wizard.png",
			json: "npc-face-wizard.json"
		},
		"npc-sprite-wizard": {
			type: "atlas",
			base: x,
			url: "npc-sprite-wizard.png",
			json: "npc-sprite-wizard.json"
		},
		"npc-face-guard": {
			type: "atlas",
			base: x,
			url: "npc-face-guard.png",
			json: "npc-face-guard.json"
		},
		"npc-sprite-guard": {
			type: "atlas",
			base: x,
			url: "npc-sprite-guard.png",
			json: "npc-sprite-guard.json"
		},
		"npc-sprite-gnome": {
			type: "atlas",
			base: x,
			url: "npc-sprite-gnome.png",
			json: "npc-sprite-gnome.json"
		},
		"zone-forest": {
			type: "atlas",
			base: q,
			url: "zone-forest.png",
			json: "zone-forest.json"
		},
		"zone-shiverchill": {
			type: "atlas",
			base: q,
			url: "zone-shiverchill.png",
			json: "zone-shiverchill.json"
		},
		"zone-volcano": {
			type: "atlas",
			base: q,
			url: "zone-volcano.png",
			json: "zone-volcano.json"
		},
		"zone-lamplight": {
			type: "atlas",
			base: q,
			url: "zone-lamplight.png",
			json: "zone-lamplight.json"
		},
		"zone-pirate": {
			type: "atlas",
			base: q,
			url: "zone-pirate.png",
			json: "zone-pirate.json"
		},
		"zone-arena": {
			type: "atlas",
			base: q,
			url: "zone-arena.png",
			json: "zone-arena.json"
		},
		"zone-academy": {
			type: "atlas",
			base: q,
			url: "zone-academy.png",
			json: "zone-academy.json"
		},
		"zone-tower": {
			type: "atlas",
			base: q,
			url: "zone-tower.png",
			json: "zone-tower.json"
		},
		"zone-towerbase": {
			type: "atlas",
			base: q,
			url: "zone-towerbase.png",
			json: "zone-towerbase.json"
		},
		"zone-plains": {
			type: "atlas",
			base: q,
			url: "zone-plains.png",
			json: "zone-plains.json"
		},
		"zone-cloud": {
			type: "atlas",
			base: q,
			url: "zone-cloud.png",
			json: "zone-cloud.json"
		},
		"zone-house": {
			type: "atlas",
			base: q,
			url: "zone-house.png",
			json: "zone-house.json"
		},
		"zone-dino": {
			type: "atlas",
			base: q,
			url: "zone-dino.png",
			json: "zone-dino.json"
		},
		"zone-museum": {
			type: "atlas",
			base: q,
			url: "zone-museum.png",
			json: "zone-museum.json"
		},
		"zone-tech": {
			type: "atlas",
			base: q,
			url: "zone-tech.png",
			json: "zone-tech.json"
		},
		"zone-docks": {
			type: "atlas",
			base: q,
			url: "zone-docks.png",
			json: "zone-docks.json"
		},
		"event-october": {
			type: "atlas",
			base: C,
			url: "event-october.png",
			json: "event-october.json"
		},
		"event-winterfest": {
			type: "atlas",
			base: C,
			url: "event-winterfest.png",
			json: "event-winterfest.json"
		},
		"game-dinodig": {
			type: "atlas",
			base: w,
			url: "game-dinodig.png",
			json: "game-dinodig.json"
		},
		"game-dancedance": {
			type: "atlas",
			base: w,
			url: "game-dancedance.png",
			json: "game-dancedance.json"
		},
		core: {
			type: "atlas",
			base: "images/",
			url: "core.png",
			json: "core.json"
		},
		login: {
			type: "atlas",
			base: "images/",
			url: "login.png",
			json: "login.json"
		},
		map: {
			type: "atlas",
			base: "images/",
			url: "map.png",
			json: "map.json"
		},
		manipulatives: {
			type: "atlas",
			base: "images/education/",
			url: "manipulatives.png",
			json: "manipulatives.json"
		},
		"prompt-more-gold": {
			type: "sprite",
			base: N,
			url: "prompt-more-gold.png"
		},
		"prompt-more-exp": {
			type: "sprite",
			base: N,
			url: "prompt-more-exp.png"
		},
		"prompt-premium-item": {
			type: "sprite",
			base: N,
			url: "prompt-premium-item.png"
		},
		"prompt-wheel-spin": {
			type: "sprite",
			base: N,
			url: "prompt-wheel-spin.png"
		},
		"prompt-bigger-team": {
			type: "sprite",
			base: N,
			url: "prompt-bigger-team.png"
		},
		"prompt-bigger-roster": {
			type: "sprite",
			base: N,
			url: "prompt-bigger-roster.png"
		},
		"store-pirate": {
			type: "atlas",
			base: I,
			url: "store-pirate.png",
			json: "store-pirate.json"
		},
		"store-forest": {
			type: "atlas",
			base: I,
			url: "store-forest.png",
			json: "store-forest.json"
		},
		"store-mountain": {
			type: "atlas",
			base: I,
			url: "store-mountain.png",
			json: "store-mountain.json"
		},
		"store-volcano": {
			type: "atlas",
			base: I,
			url: "store-volcano.png",
			json: "store-volcano.json"
		},
		"store-cloud": {
			type: "atlas",
			base: I,
			url: "store-cloud.png",
			json: "store-cloud.json"
		},
		"store-dorm": {
			type: "atlas",
			base: I,
			url: "store-dorm.png",
			json: "store-dorm.json"
		},
		"store-tech": {
			type: "atlas",
			base: I,
			url: "store-tech.png",
			json: "store-tech.json"
		},
		"voice-0": {
			type: "sfx",
			base: m,
			url: "voice-0.mp3"
		},
		"voice-2": {
			type: "sfx",
			base: m,
			url: "voice-2.mp3"
		},
		"voice-3": {
			type: "sfx",
			base: m,
			url: "voice-3.mp3"
		},
		"voice-4": {
			type: "sfx",
			base: m,
			url: "voice-4.mp3"
		},
		"voice-5": {
			type: "sfx",
			base: m,
			url: "voice-5.mp3"
		},
		"voice-6": {
			type: "sfx",
			base: m,
			url: "voice-6.mp3"
		},
		"voice-7": {
			type: "sfx",
			base: m,
			url: "voice-7.mp3"
		},
		"voice-8-1": {
			type: "sfx",
			base: m,
			url: "voice-8-1.mp3"
		},
		"voice-8-2": {
			type: "sfx",
			base: m,
			url: "voice-8-2.mp3"
		},
		"voice-8-3": {
			type: "sfx",
			base: m,
			url: "voice-8-3.mp3"
		},
		"voice-8-4": {
			type: "sfx",
			base: m,
			url: "voice-8-4.mp3"
		},
		"voice-8-5": {
			type: "sfx",
			base: m,
			url: "voice-8-5.mp3"
		},
		"voice-8-6": {
			type: "sfx",
			base: m,
			url: "voice-8-6.mp3"
		},
		"voice-8-7": {
			type: "sfx",
			base: m,
			url: "voice-8-7.mp3"
		},
		"voice-8-8": {
			type: "sfx",
			base: m,
			url: "voice-8-8.mp3"
		},
		"voice-8-9": {
			type: "sfx",
			base: m,
			url: "voice-8-9.mp3"
		},
		"voice-8-10": {
			type: "sfx",
			base: m,
			url: "voice-8-10.mp3"
		},
		"voice-8-11": {
			type: "sfx",
			base: m,
			url: "voice-8-11.mp3"
		},
		"voice-8-12": {
			type: "sfx",
			base: m,
			url: "voice-8-12.mp3"
		},
		"voice-8-13": {
			type: "sfx",
			base: m,
			url: "voice-8-13.mp3"
		},
		"voice-8-14": {
			type: "sfx",
			base: m,
			url: "voice-8-14.mp3"
		},
		"voice-9": {
			type: "sfx",
			base: m,
			url: "voice-9.mp3"
		},
		"voice-10-1": {
			type: "sfx",
			base: m,
			url: "voice-10-1.mp3"
		},
		"voice-10-2": {
			type: "sfx",
			base: m,
			url: "voice-10-2.mp3"
		},
		"voice-10-3": {
			type: "sfx",
			base: m,
			url: "voice-10-3.mp3"
		},
		"voice-10-4": {
			type: "sfx",
			base: m,
			url: "voice-10-4.mp3"
		},
		"voice-10-5": {
			type: "sfx",
			base: m,
			url: "voice-10-5.mp3"
		},
		"voice-10-6": {
			type: "sfx",
			base: m,
			url: "voice-10-6.mp3"
		},
		"voice-10-7": {
			type: "sfx",
			base: m,
			url: "voice-10-7.mp3"
		},
		"voice-10-8": {
			type: "sfx",
			base: m,
			url: "voice-10-8.mp3"
		},
		"voice-10-9": {
			type: "sfx",
			base: m,
			url: "voice-10-9.mp3"
		},
		"voice-10-10": {
			type: "sfx",
			base: m,
			url: "voice-10-10.mp3"
		},
		"voice-10-11": {
			type: "sfx",
			base: m,
			url: "voice-10-11.mp3"
		},
		"voice-10-12": {
			type: "sfx",
			base: m,
			url: "voice-10-12.mp3"
		},
		"voice-10-13": {
			type: "sfx",
			base: m,
			url: "voice-10-13.mp3"
		},
		"voice-10-14": {
			type: "sfx",
			base: m,
			url: "voice-10-14.mp3"
		},
		"voice-10-15": {
			type: "sfx",
			base: m,
			url: "voice-10-15.mp3"
		},
		"voice-10-16": {
			type: "sfx",
			base: m,
			url: "voice-10-16.mp3"
		},
		"voice-10-17": {
			type: "sfx",
			base: m,
			url: "voice-10-17.mp3"
		},
		"voice-10-18": {
			type: "sfx",
			base: m,
			url: "voice-10-18.mp3"
		},
		"voice-10-19": {
			type: "sfx",
			base: m,
			url: "voice-10-19.mp3"
		},
		"voice-10-20": {
			type: "sfx",
			base: m,
			url: "voice-10-20.mp3"
		},
		"voice-10-21": {
			type: "sfx",
			base: m,
			url: "voice-10-21.mp3"
		},
		"voice-10-22": {
			type: "sfx",
			base: m,
			url: "voice-10-22.mp3"
		},
		"voice-10-23": {
			type: "sfx",
			base: m,
			url: "voice-10-23.mp3"
		},
		"voice-10-24": {
			type: "sfx",
			base: m,
			url: "voice-10-24.mp3"
		},
		"voice-10-25": {
			type: "sfx",
			base: m,
			url: "voice-10-25.mp3"
		},
		"voice-10-26": {
			type: "sfx",
			base: m,
			url: "voice-10-26.mp3"
		},
		"voice-10-27": {
			type: "sfx",
			base: m,
			url: "voice-10-27.mp3"
		},
		"voice-10-28": {
			type: "sfx",
			base: m,
			url: "voice-10-28.mp3"
		},
		"voice-11": {
			type: "sfx",
			base: m,
			url: "voice-11.mp3"
		},
		"voice-11-1": {
			type: "sfx",
			base: m,
			url: "voice-11-1.mp3"
		},
		"voice-11-2": {
			type: "sfx",
			base: m,
			url: "voice-11-2.mp3"
		},
		"voice-10-29": {
			type: "sfx",
			base: m,
			url: "voice-10-29.mp3"
		},
		"voice-10-30": {
			type: "sfx",
			base: m,
			url: "voice-10-30.mp3"
		},
		"voice-10-31": {
			type: "sfx",
			base: m,
			url: "voice-10-31.mp3"
		},
		"voice-10-32": {
			type: "sfx",
			base: m,
			url: "voice-10-32.mp3"
		},
		"voice-10-33": {
			type: "sfx",
			base: m,
			url: "voice-10-33.mp3"
		},
		"voice-10-34": {
			type: "sfx",
			base: m,
			url: "voice-10-34.mp3"
		},
		"voice-10-35": {
			type: "sfx",
			base: m,
			url: "voice-10-35.mp3"
		},
		"voice-10-36": {
			type: "sfx",
			base: m,
			url: "voice-10-36.mp3"
		},
		"voice-10-37": {
			type: "sfx",
			base: m,
			url: "voice-10-37.mp3"
		},
		"voice-10-38": {
			type: "sfx",
			base: m,
			url: "voice-10-38.mp3"
		},
		"voice-10-39": {
			type: "sfx",
			base: m,
			url: "voice-10-39.mp3"
		},
		"voice-10-40": {
			type: "sfx",
			base: m,
			url: "voice-10-40.mp3"
		},
		"voice-10-41": {
			type: "sfx",
			base: m,
			url: "voice-10-41.mp3"
		},
		"voice-1-1": {
			type: "sfx",
			base: m,
			url: "voice-1-1.mp3"
		},
		"voice-1-2": {
			type: "sfx",
			base: m,
			url: "voice-1-2.mp3"
		},
		"voice-1-3": {
			type: "sfx",
			base: m,
			url: "voice-1-3.mp3"
		},
		"voice-1-4": {
			type: "sfx",
			base: m,
			url: "voice-1-4.mp3"
		},
		"voice-1-5": {
			type: "sfx",
			base: m,
			url: "voice-1-5.mp3"
		},
		"voice-1-6": {
			type: "sfx",
			base: m,
			url: "voice-1-6.mp3"
		},
		"voice-1-7": {
			type: "sfx",
			base: m,
			url: "voice-1-7.mp3"
		},
		"voice-1-8": {
			type: "sfx",
			base: m,
			url: "voice-1-8.mp3"
		},
		"voice-1-9": {
			type: "sfx",
			base: m,
			url: "voice-1-9.mp3"
		},
		"voice-1-10": {
			type: "sfx",
			base: m,
			url: "voice-1-10.mp3"
		},
		"voice-1-11": {
			type: "sfx",
			base: m,
			url: "voice-1-11.mp3"
		},
		"voice-1-12": {
			type: "sfx",
			base: m,
			url: "voice-1-12.mp3"
		},
		"voice-1-13": {
			type: "sfx",
			base: m,
			url: "voice-1-13.mp3"
		},
		"voice-1-14": {
			type: "sfx",
			base: m,
			url: "voice-1-14.mp3"
		},
		"voice-1-15": {
			type: "sfx",
			base: m,
			url: "voice-1-15.mp3"
		},
		"bgm-victory": {
			type: "bgm",
			base: u,
			url: "bgm-victory.mp3"
		},
		"bgm-battle": {
			type: "bgm",
			base: u,
			url: "bgm-battle.mp3"
		},
		"bgm-intro": {
			type: "bgm",
			base: u,
			url: "bgm-intro.mp3"
		},
		"bgm-space": {
			type: "bgm",
			base: u,
			url: "bgm-space.mp3"
		},
		"bgm-game": {
			type: "bgm",
			base: u,
			url: "bgm-game.mp3"
		},
		"bgm-dance1": {
			type: "bgm",
			base: u,
			url: "bgm-dance1.mp3"
		},
		"bgm-dance2": {
			type: "bgm",
			base: u,
			url: "bgm-dance2.mp3"
		},
		"bgm-intro-1": {
			type: "bgm",
			base: u,
			url: "bgm-intro-1.mp3"
		},
		"sfx-main": {
			type: "sfx",
			base: g,
			url: "sfx-main.mp3"
		},
		"bg-battle-forest": {
			type: "sprite",
			base: v,
			url: "bg-battle-forest.png"
		},
		"bg-battle-mountain": {
			type: "sprite",
			base: v,
			url: "bg-battle-mountain.png"
		},
		"bg-battle-volcano": {
			type: "sprite",
			base: v,
			url: "bg-battle-volcano.png"
		},
		"bg-battle-pirate": {
			type: "sprite",
			base: v,
			url: "bg-battle-pirate.png"
		},
		"bg-battle-arena": {
			type: "sprite",
			base: v,
			url: "bg-battle-arena.png"
		},
		"bg-battle-academy": {
			type: "sprite",
			base: v,
			url: "bg-battle-academy.png"
		},
		"bg-battle-cloud": {
			type: "sprite",
			base: v,
			url: "bg-battle-cloud.png"
		},
		"bg-battle-tower": {
			type: "sprite",
			base: v,
			url: "bg-battle-tower.png"
		},
		"bg-battle-dino": {
			type: "sprite",
			base: v,
			url: "bg-battle-dino.png"
		},
		"bg-battle-tech": {
			type: "sprite",
			base: v,
			url: "bg-battle-tech.png"
		},
		"bg-dorm-house": {
			type: "sprite",
			base: v,
			url: "bg-dorm-house.png"
		},
		"bg-dorm-cave": {
			type: "sprite",
			base: v,
			url: "bg-dorm-cave.png"
		},
		"bg-dorm-tree": {
			type: "sprite",
			base: v,
			url: "bg-dorm-tree.png"
		},
		icons: {
			type: "atlas",
			base: "images/",
			url: "icons.png",
			json: "icons.json"
		},
		"icons-membership": {
			type: "spritesheet",
			base: P,
			url: "icons-membership.png",
			w: 60,
			h: 70
		},
		"boss-small-1": {
			type: "sprite",
			base: E,
			url: "1.png",
			x: 390
		},
		"boss-1": {
			type: "spritesheet",
			base: T,
			url: "1.png",
			x: 390,
			w: 717,
			h: 634
		},
		"boss-small-10": {
			type: "sprite",
			base: E,
			url: "10.png",
			x: 256
		},
		"boss-10": {
			type: "spritesheet",
			base: T,
			url: "10.png",
			x: 256,
			w: 344,
			h: 351
		},
		"boss-small-11": {
			type: "sprite",
			base: E,
			url: "11.png",
			x: 145
		},
		"boss-11": {
			type: "spritesheet",
			base: T,
			url: "11.png",
			x: 145,
			w: 363,
			h: 438
		},
		"boss-small-2": {
			type: "sprite",
			base: E,
			url: "2.png",
			x: 450
		},
		"boss-2": {
			type: "spritesheet",
			base: T,
			url: "2.png",
			x: 450,
			w: 853,
			h: 785
		},
		"boss-small-3": {
			type: "sprite",
			base: E,
			url: "3.png",
			x: 178
		},
		"boss-3": {
			type: "spritesheet",
			base: T,
			url: "3.png",
			x: 178,
			w: 440,
			h: 410
		},
		"boss-small-4": {
			type: "sprite",
			base: E,
			url: "4.png",
			x: 270
		},
		"boss-4": {
			type: "spritesheet",
			base: T,
			url: "4.png",
			x: 270,
			w: 664,
			h: 640
		},
		"boss-small-5": {
			type: "sprite",
			base: E,
			url: "5.png",
			x: 366
		},
		"boss-5": {
			type: "spritesheet",
			base: T,
			url: "5.png",
			x: 366,
			w: 745,
			h: 712
		},
		"boss-small-6": {
			type: "sprite",
			base: E,
			url: "6.png",
			x: 280
		},
		"boss-6": {
			type: "spritesheet",
			base: T,
			url: "6.png",
			x: 280,
			w: 634,
			h: 621
		},
		"boss-small-7": {
			type: "sprite",
			base: E,
			url: "7.png",
			x: 250
		},
		"boss-7": {
			type: "spritesheet",
			base: T,
			url: "7.png",
			x: 250,
			w: 712,
			h: 638
		},
		"boss-small-8": {
			type: "sprite",
			base: E,
			url: "8.png",
			x: 267
		},
		"boss-8": {
			type: "spritesheet",
			base: T,
			url: "8.png",
			x: 267,
			w: 599,
			h: 572
		},
		"boss-small-9": {
			type: "sprite",
			base: E,
			url: "9.png",
			x: 128
		},
		"boss-9": {
			type: "spritesheet",
			base: T,
			url: "9.png",
			x: 128,
			w: 133,
			h: 175
		},
		"monster-small-1": {
			type: "sprite",
			base: A,
			url: "1.png",
			x: 45
		},
		"monster-normal-1": {
			type: "spritesheet",
			base: M,
			url: "1.png",
			x: 45,
			w: 74,
			h: 91
		},
		"monster-reduced-1": {
			type: "spritesheet",
			base: S,
			url: "1.png",
			x: 22,
			w: 37,
			h: 46
		},
		"monster-small-10": {
			type: "sprite",
			base: A,
			url: "10.png",
			x: 55
		},
		"monster-normal-10": {
			type: "spritesheet",
			base: M,
			url: "10.png",
			x: 55,
			w: 113,
			h: 107
		},
		"monster-reduced-10": {
			type: "spritesheet",
			base: S,
			url: "10.png",
			x: 27,
			w: 54,
			h: 42
		},
		"monster-small-100": {
			type: "sprite",
			base: A,
			url: "100.png",
			x: 110
		},
		"monster-normal-100": {
			type: "spritesheet",
			base: M,
			url: "100.png",
			x: 110,
			w: 216,
			h: 185
		},
		"monster-reduced-100": {
			type: "spritesheet",
			base: S,
			url: "100.png",
			x: 55,
			w: 107,
			h: 93
		},
		"monster-small-101": {
			type: "sprite",
			base: A,
			url: "101.png",
			x: 260
		},
		"monster-normal-101": {
			type: "spritesheet",
			base: M,
			url: "101.png",
			x: 260,
			w: 460,
			h: 270
		},
		"monster-reduced-101": {
			type: "spritesheet",
			base: S,
			url: "101.png",
			x: 130,
			w: 190,
			h: 116
		},
		"monster-small-102": {
			type: "sprite",
			base: A,
			url: "102.png",
			x: 40
		},
		"monster-normal-102": {
			type: "spritesheet",
			base: M,
			url: "102.png",
			x: 40,
			w: 81,
			h: 111
		},
		"monster-reduced-102": {
			type: "spritesheet",
			base: S,
			url: "102.png",
			x: 20,
			w: 35,
			h: 47
		},
		"monster-small-103": {
			type: "sprite",
			base: A,
			url: "103.png",
			x: 58
		},
		"monster-normal-103": {
			type: "spritesheet",
			base: M,
			url: "103.png",
			x: 58,
			w: 163,
			h: 179
		},
		"monster-reduced-103": {
			type: "spritesheet",
			base: S,
			url: "103.png",
			x: 29,
			w: 65,
			h: 59
		},
		"monster-small-104": {
			type: "sprite",
			base: A,
			url: "104.png",
			x: 113
		},
		"monster-normal-104": {
			type: "spritesheet",
			base: M,
			url: "104.png",
			x: 113,
			w: 214,
			h: 249
		},
		"monster-reduced-104": {
			type: "spritesheet",
			base: S,
			url: "104.png",
			x: 56,
			w: 96,
			h: 87
		},
		"monster-small-105": {
			type: "sprite",
			base: A,
			url: "105.png",
			x: 120
		},
		"monster-normal-105": {
			type: "spritesheet",
			base: M,
			url: "105.png",
			x: 120,
			w: 246,
			h: 212
		},
		"monster-reduced-105": {
			type: "spritesheet",
			base: S,
			url: "105.png",
			x: 60,
			w: 102,
			h: 99
		},
		"monster-small-106": {
			type: "sprite",
			base: A,
			url: "106.png",
			x: 130
		},
		"monster-normal-106": {
			type: "spritesheet",
			base: M,
			url: "106.png",
			x: 130,
			w: 392,
			h: 224
		},
		"monster-reduced-106": {
			type: "spritesheet",
			base: S,
			url: "106.png",
			x: 65,
			w: 127,
			h: 101
		},
		"monster-small-107": {
			type: "sprite",
			base: A,
			url: "107.png",
			x: 90
		},
		"monster-normal-107": {
			type: "spritesheet",
			base: M,
			url: "107.png",
			x: 90,
			w: 193,
			h: 150
		},
		"monster-reduced-107": {
			type: "spritesheet",
			base: S,
			url: "107.png",
			x: 45,
			w: 85,
			h: 64
		},
		"monster-small-108": {
			type: "sprite",
			base: A,
			url: "108.png",
			x: 90
		},
		"monster-normal-108": {
			type: "spritesheet",
			base: M,
			url: "108.png",
			x: 90,
			w: 252,
			h: 187
		},
		"monster-reduced-108": {
			type: "spritesheet",
			base: S,
			url: "108.png",
			x: 45,
			w: 93,
			h: 94
		},
		"monster-small-109": {
			type: "sprite",
			base: A,
			url: "109.png",
			x: 110
		},
		"monster-normal-109": {
			type: "spritesheet",
			base: M,
			url: "109.png",
			x: 110,
			w: 208,
			h: 176
		},
		"monster-reduced-109": {
			type: "spritesheet",
			base: S,
			url: "109.png",
			x: 55,
			w: 105,
			h: 88
		},
		"monster-small-11": {
			type: "sprite",
			base: A,
			url: "11.png",
			x: 100
		},
		"monster-normal-11": {
			type: "spritesheet",
			base: M,
			url: "11.png",
			x: 100,
			w: 196,
			h: 174
		},
		"monster-reduced-11": {
			type: "spritesheet",
			base: S,
			url: "11.png",
			x: 50,
			w: 76,
			h: 75
		},
		"monster-small-110": {
			type: "sprite",
			base: A,
			url: "110.png",
			x: 160
		},
		"monster-normal-110": {
			type: "spritesheet",
			base: M,
			url: "110.png",
			x: 160,
			w: 254,
			h: 239
		},
		"monster-reduced-110": {
			type: "spritesheet",
			base: S,
			url: "110.png",
			x: 80,
			w: 128,
			h: 120
		},
		"monster-small-111": {
			type: "sprite",
			base: A,
			url: "111.png",
			x: 105
		},
		"monster-normal-111": {
			type: "spritesheet",
			base: M,
			url: "111.png",
			x: 105,
			w: 175,
			h: 180
		},
		"monster-reduced-111": {
			type: "spritesheet",
			base: S,
			url: "111.png",
			x: 52,
			w: 82,
			h: 86
		},
		"monster-small-112": {
			type: "sprite",
			base: A,
			url: "112.png",
			x: 180
		},
		"monster-normal-112": {
			type: "spritesheet",
			base: M,
			url: "112.png",
			x: 180,
			w: 436,
			h: 352
		},
		"monster-reduced-112": {
			type: "spritesheet",
			base: S,
			url: "112.png",
			x: 90,
			w: 157,
			h: 143
		},
		"monster-small-113": {
			type: "sprite",
			base: A,
			url: "113.png",
			x: 124
		},
		"monster-normal-113": {
			type: "spritesheet",
			base: M,
			url: "113.png",
			x: 124,
			w: 246,
			h: 142
		},
		"monster-reduced-113": {
			type: "spritesheet",
			base: S,
			url: "113.png",
			x: 62,
			w: 35,
			h: 59
		},
		"monster-small-114": {
			type: "sprite",
			base: A,
			url: "114.png",
			x: 126
		},
		"monster-normal-114": {
			type: "spritesheet",
			base: M,
			url: "114.png",
			x: 126,
			w: 252,
			h: 207
		},
		"monster-reduced-114": {
			type: "spritesheet",
			base: S,
			url: "114.png",
			x: 63,
			w: 63,
			h: 78
		},
		"monster-small-115": {
			type: "sprite",
			base: A,
			url: "115.png",
			x: 65
		},
		"monster-normal-115": {
			type: "spritesheet",
			base: M,
			url: "115.png",
			x: 65,
			w: 150,
			h: 220
		},
		"monster-reduced-115": {
			type: "spritesheet",
			base: S,
			url: "115.png",
			x: 32,
			w: 42,
			h: 53
		},
		"monster-small-116": {
			type: "sprite",
			base: A,
			url: "116.png",
			x: 116
		},
		"monster-normal-116": {
			type: "spritesheet",
			base: M,
			url: "116.png",
			x: 116,
			w: 239,
			h: 173
		},
		"monster-reduced-116": {
			type: "spritesheet",
			base: S,
			url: "116.png",
			x: 58,
			w: 108,
			h: 76
		},
		"monster-small-117": {
			type: "sprite",
			base: A,
			url: "117.png",
			x: 147
		},
		"monster-normal-117": {
			type: "spritesheet",
			base: M,
			url: "117.png",
			x: 147,
			w: 474,
			h: 421
		},
		"monster-reduced-117": {
			type: "spritesheet",
			base: S,
			url: "117.png",
			x: 73,
			w: 134,
			h: 149
		},
		"monster-small-118": {
			type: "sprite",
			base: A,
			url: "118.png",
			x: 120
		},
		"monster-normal-118": {
			type: "spritesheet",
			base: M,
			url: "118.png",
			x: 120,
			w: 254,
			h: 209
		},
		"monster-reduced-118": {
			type: "spritesheet",
			base: S,
			url: "118.png",
			x: 60,
			w: 73,
			h: 69
		},
		"monster-small-119": {
			type: "sprite",
			base: A,
			url: "119.png",
			x: 100
		},
		"monster-normal-119": {
			type: "spritesheet",
			base: M,
			url: "119.png",
			x: 100,
			w: 241,
			h: 163
		},
		"monster-reduced-119": {
			type: "spritesheet",
			base: S,
			url: "119.png",
			x: 50,
			w: 105,
			h: 82
		},
		"monster-small-12": {
			type: "sprite",
			base: A,
			url: "12.png",
			x: 64
		},
		"monster-normal-12": {
			type: "spritesheet",
			base: M,
			url: "12.png",
			x: 64,
			w: 191,
			h: 150
		},
		"monster-reduced-12": {
			type: "spritesheet",
			base: S,
			url: "12.png",
			x: 32,
			w: 61,
			h: 73
		},
		"monster-small-120": {
			type: "sprite",
			base: A,
			url: "120.png",
			x: 118
		},
		"monster-normal-120": {
			type: "spritesheet",
			base: M,
			url: "120.png",
			x: 118,
			w: 256,
			h: 256
		},
		"monster-reduced-120": {
			type: "spritesheet",
			base: S,
			url: "120.png",
			x: 59,
			w: 128,
			h: 128
		},
		"monster-small-121": {
			type: "sprite",
			base: A,
			url: "121.png",
			x: 132
		},
		"monster-normal-121": {
			type: "spritesheet",
			base: M,
			url: "121.png",
			x: 132,
			w: 256,
			h: 256
		},
		"monster-reduced-121": {
			type: "spritesheet",
			base: S,
			url: "121.png",
			x: 66,
			w: 128,
			h: 128
		},
		"monster-small-122": {
			type: "sprite",
			base: A,
			url: "122.png",
			x: 63
		},
		"monster-normal-122": {
			type: "spritesheet",
			base: M,
			url: "122.png",
			x: 63,
			w: 211,
			h: 150
		},
		"monster-reduced-122": {
			type: "spritesheet",
			base: S,
			url: "122.png",
			x: 31,
			w: 84,
			h: 76
		},
		"monster-small-123": {
			type: "sprite",
			base: A,
			url: "123.png",
			x: 112
		},
		"monster-normal-123": {
			type: "spritesheet",
			base: M,
			url: "123.png",
			x: 112,
			w: 301,
			h: 224
		},
		"monster-reduced-123": {
			type: "spritesheet",
			base: S,
			url: "123.png",
			x: 56,
			w: 98,
			h: 93
		},
		"monster-small-124": {
			type: "sprite",
			base: A,
			url: "124.png",
			x: 132
		},
		"monster-normal-124": {
			type: "spritesheet",
			base: M,
			url: "124.png",
			x: 132,
			w: 330,
			h: 236
		},
		"monster-reduced-124": {
			type: "spritesheet",
			base: S,
			url: "124.png",
			x: 66,
			w: 107,
			h: 117
		},
		"monster-small-13": {
			type: "sprite",
			base: A,
			url: "13.png",
			x: 65
		},
		"monster-normal-13": {
			type: "spritesheet",
			base: M,
			url: "13.png",
			x: 65,
			w: 170,
			h: 170
		},
		"monster-reduced-13": {
			type: "spritesheet",
			base: S,
			url: "13.png",
			x: 32,
			w: 79,
			h: 81
		},
		"monster-small-14": {
			type: "sprite",
			base: A,
			url: "14.png",
			x: 65
		},
		"monster-normal-14": {
			type: "spritesheet",
			base: M,
			url: "14.png",
			x: 65,
			w: 170,
			h: 168
		},
		"monster-reduced-14": {
			type: "spritesheet",
			base: S,
			url: "14.png",
			x: 32,
			w: 79,
			h: 81
		},
		"monster-small-15": {
			type: "sprite",
			base: A,
			url: "15.png",
			x: 134
		},
		"monster-normal-15": {
			type: "spritesheet",
			base: M,
			url: "15.png",
			x: 134,
			w: 247,
			h: 200
		},
		"monster-reduced-15": {
			type: "spritesheet",
			base: S,
			url: "15.png",
			x: 67,
			w: 124,
			h: 87
		},
		"monster-small-16": {
			type: "sprite",
			base: A,
			url: "16.png",
			x: 60
		},
		"monster-normal-16": {
			type: "spritesheet",
			base: M,
			url: "16.png",
			x: 60,
			w: 185,
			h: 158
		},
		"monster-reduced-16": {
			type: "spritesheet",
			base: S,
			url: "16.png",
			x: 30,
			w: 66,
			h: 74
		},
		"monster-small-17": {
			type: "sprite",
			base: A,
			url: "17.png",
			x: 127
		},
		"monster-normal-17": {
			type: "spritesheet",
			base: M,
			url: "17.png",
			x: 127,
			w: 252,
			h: 186
		},
		"monster-reduced-17": {
			type: "spritesheet",
			base: S,
			url: "17.png",
			x: 63,
			w: 104,
			h: 91
		},
		"monster-small-18": {
			type: "sprite",
			base: A,
			url: "18.png",
			x: 25
		},
		"monster-normal-18": {
			type: "spritesheet",
			base: M,
			url: "18.png",
			x: 25,
			w: 92,
			h: 75
		},
		"monster-reduced-18": {
			type: "spritesheet",
			base: S,
			url: "18.png",
			x: 12,
			w: 27,
			h: 24
		},
		"monster-small-19": {
			type: "sprite",
			base: A,
			url: "19.png",
			x: 78
		},
		"monster-normal-19": {
			type: "spritesheet",
			base: M,
			url: "19.png",
			x: 78,
			w: 203,
			h: 162
		},
		"monster-reduced-19": {
			type: "spritesheet",
			base: S,
			url: "19.png",
			x: 39,
			w: 82,
			h: 80
		},
		"monster-small-2": {
			type: "sprite",
			base: A,
			url: "2.png",
			x: 63
		},
		"monster-normal-2": {
			type: "spritesheet",
			base: M,
			url: "2.png",
			x: 63,
			w: 135,
			h: 103
		},
		"monster-reduced-2": {
			type: "spritesheet",
			base: S,
			url: "2.png",
			x: 31,
			w: 63,
			h: 52
		},
		"monster-small-20": {
			type: "sprite",
			base: A,
			url: "20.png",
			x: 80
		},
		"monster-normal-20": {
			type: "spritesheet",
			base: M,
			url: "20.png",
			x: 80,
			w: 137,
			h: 132
		},
		"monster-reduced-20": {
			type: "spritesheet",
			base: S,
			url: "20.png",
			x: 40,
			w: 69,
			h: 50
		},
		"monster-small-21": {
			type: "sprite",
			base: A,
			url: "21.png",
			x: 110
		},
		"monster-normal-21": {
			type: "spritesheet",
			base: M,
			url: "21.png",
			x: 110,
			w: 240,
			h: 193
		},
		"monster-reduced-21": {
			type: "spritesheet",
			base: S,
			url: "21.png",
			x: 55,
			w: 120,
			h: 97
		},
		"monster-small-22": {
			type: "sprite",
			base: A,
			url: "22.png",
			x: 120
		},
		"monster-normal-22": {
			type: "spritesheet",
			base: M,
			url: "22.png",
			x: 120,
			w: 254,
			h: 213
		},
		"monster-reduced-22": {
			type: "spritesheet",
			base: S,
			url: "22.png",
			x: 60,
			w: 128,
			h: 106
		},
		"monster-small-23": {
			type: "sprite",
			base: A,
			url: "23.png",
			x: 95
		},
		"monster-normal-23": {
			type: "spritesheet",
			base: M,
			url: "23.png",
			x: 95,
			w: 202,
			h: 140
		},
		"monster-reduced-23": {
			type: "spritesheet",
			base: S,
			url: "23.png",
			x: 47,
			w: 75,
			h: 64
		},
		"monster-small-24": {
			type: "sprite",
			base: A,
			url: "24.png",
			x: 92
		},
		"monster-normal-24": {
			type: "spritesheet",
			base: M,
			url: "24.png",
			x: 92,
			w: 188,
			h: 150
		},
		"monster-reduced-24": {
			type: "spritesheet",
			base: S,
			url: "24.png",
			x: 46,
			w: 88,
			h: 75
		},
		"monster-small-25": {
			type: "sprite",
			base: A,
			url: "25.png",
			x: 30
		},
		"monster-normal-25": {
			type: "spritesheet",
			base: M,
			url: "25.png",
			x: 30,
			w: 77,
			h: 78
		},
		"monster-reduced-25": {
			type: "spritesheet",
			base: S,
			url: "25.png",
			x: 15,
			w: 31,
			h: 34
		},
		"monster-small-26": {
			type: "sprite",
			base: A,
			url: "26.png",
			x: 75
		},
		"monster-normal-26": {
			type: "spritesheet",
			base: M,
			url: "26.png",
			x: 75,
			w: 132,
			h: 117
		},
		"monster-reduced-26": {
			type: "spritesheet",
			base: S,
			url: "26.png",
			x: 37,
			w: 57,
			h: 52
		},
		"monster-small-27": {
			type: "sprite",
			base: A,
			url: "27.png",
			x: 35
		},
		"monster-normal-27": {
			type: "spritesheet",
			base: M,
			url: "27.png",
			x: 35,
			w: 112,
			h: 111
		},
		"monster-reduced-27": {
			type: "spritesheet",
			base: S,
			url: "27.png",
			x: 17,
			w: 35,
			h: 45
		},
		"monster-small-28": {
			type: "sprite",
			base: A,
			url: "28.png",
			x: 70
		},
		"monster-normal-28": {
			type: "spritesheet",
			base: M,
			url: "28.png",
			x: 70,
			w: 122,
			h: 133
		},
		"monster-reduced-28": {
			type: "spritesheet",
			base: S,
			url: "28.png",
			x: 35,
			w: 58,
			h: 55
		},
		"monster-small-29": {
			type: "sprite",
			base: A,
			url: "29.png",
			x: 50
		},
		"monster-normal-29": {
			type: "spritesheet",
			base: M,
			url: "29.png",
			x: 50,
			w: 104,
			h: 98
		},
		"monster-reduced-29": {
			type: "spritesheet",
			base: S,
			url: "29.png",
			x: 25,
			w: 49,
			h: 47
		},
		"monster-small-3": {
			type: "sprite",
			base: A,
			url: "3.png",
			x: 109
		},
		"monster-normal-3": {
			type: "spritesheet",
			base: M,
			url: "3.png",
			x: 109,
			w: 246,
			h: 185
		},
		"monster-reduced-3": {
			type: "spritesheet",
			base: S,
			url: "3.png",
			x: 54,
			w: 109,
			h: 93
		},
		"monster-small-30": {
			type: "sprite",
			base: A,
			url: "30.png",
			x: 105
		},
		"monster-normal-30": {
			type: "spritesheet",
			base: M,
			url: "30.png",
			x: 105,
			w: 216,
			h: 145
		},
		"monster-reduced-30": {
			type: "spritesheet",
			base: S,
			url: "30.png",
			x: 52,
			w: 68,
			h: 73
		},
		"monster-small-31": {
			type: "sprite",
			base: A,
			url: "31.png",
			x: 80
		},
		"monster-normal-31": {
			type: "spritesheet",
			base: M,
			url: "31.png",
			x: 80,
			w: 183,
			h: 137
		},
		"monster-reduced-31": {
			type: "spritesheet",
			base: S,
			url: "31.png",
			x: 40,
			w: 75,
			h: 56
		},
		"monster-small-32": {
			type: "sprite",
			base: A,
			url: "32.png",
			x: 72
		},
		"monster-normal-32": {
			type: "spritesheet",
			base: M,
			url: "32.png",
			x: 72,
			w: 207,
			h: 238
		},
		"monster-reduced-32": {
			type: "spritesheet",
			base: S,
			url: "32.png",
			x: 36,
			w: 61,
			h: 64
		},
		"monster-small-33": {
			type: "sprite",
			base: A,
			url: "33.png",
			x: 80
		},
		"monster-normal-33": {
			type: "spritesheet",
			base: M,
			url: "33.png",
			x: 80,
			w: 206,
			h: 136
		},
		"monster-reduced-33": {
			type: "spritesheet",
			base: S,
			url: "33.png",
			x: 40,
			w: 80,
			h: 51
		},
		"monster-small-34": {
			type: "sprite",
			base: A,
			url: "34.png",
			x: 112
		},
		"monster-normal-34": {
			type: "spritesheet",
			base: M,
			url: "34.png",
			x: 112,
			w: 230,
			h: 214
		},
		"monster-reduced-34": {
			type: "spritesheet",
			base: S,
			url: "34.png",
			x: 56,
			w: 99,
			h: 103
		},
		"monster-small-35": {
			type: "sprite",
			base: A,
			url: "35.png",
			x: 115
		},
		"monster-normal-35": {
			type: "spritesheet",
			base: M,
			url: "35.png",
			x: 115,
			w: 215,
			h: 167
		},
		"monster-reduced-35": {
			type: "spritesheet",
			base: S,
			url: "35.png",
			x: 57,
			w: 103,
			h: 81
		},
		"monster-small-36": {
			type: "sprite",
			base: A,
			url: "36.png",
			x: 115
		},
		"monster-normal-36": {
			type: "spritesheet",
			base: M,
			url: "36.png",
			x: 115,
			w: 212,
			h: 182
		},
		"monster-reduced-36": {
			type: "spritesheet",
			base: S,
			url: "36.png",
			x: 57,
			w: 102,
			h: 89
		},
		"monster-small-37": {
			type: "sprite",
			base: A,
			url: "37.png",
			x: 105
		},
		"monster-normal-37": {
			type: "spritesheet",
			base: M,
			url: "37.png",
			x: 105,
			w: 201,
			h: 190
		},
		"monster-reduced-37": {
			type: "spritesheet",
			base: S,
			url: "37.png",
			x: 52,
			w: 98,
			h: 92
		},
		"monster-small-38": {
			type: "sprite",
			base: A,
			url: "38.png",
			x: 105
		},
		"monster-normal-38": {
			type: "spritesheet",
			base: M,
			url: "38.png",
			x: 105,
			w: 201,
			h: 155
		},
		"monster-reduced-38": {
			type: "spritesheet",
			base: S,
			url: "38.png",
			x: 52,
			w: 91,
			h: 71
		},
		"monster-small-39": {
			type: "sprite",
			base: A,
			url: "39.png",
			x: 125
		},
		"monster-normal-39": {
			type: "spritesheet",
			base: M,
			url: "39.png",
			x: 125,
			w: 239,
			h: 181
		},
		"monster-reduced-39": {
			type: "spritesheet",
			base: S,
			url: "39.png",
			x: 62,
			w: 103,
			h: 88
		},
		"monster-small-4": {
			type: "sprite",
			base: A,
			url: "4.png",
			x: 65
		},
		"monster-normal-4": {
			type: "spritesheet",
			base: M,
			url: "4.png",
			x: 65,
			w: 100,
			h: 74
		},
		"monster-reduced-4": {
			type: "spritesheet",
			base: S,
			url: "4.png",
			x: 32,
			w: 51,
			h: 38
		},
		"monster-small-40": {
			type: "sprite",
			base: A,
			url: "40.png",
			x: 90
		},
		"monster-normal-40": {
			type: "spritesheet",
			base: M,
			url: "40.png",
			x: 90,
			w: 150,
			h: 185
		},
		"monster-reduced-40": {
			type: "spritesheet",
			base: S,
			url: "40.png",
			x: 45,
			w: 67,
			h: 80
		},
		"monster-small-41": {
			type: "sprite",
			base: A,
			url: "41.png",
			x: 120
		},
		"monster-normal-41": {
			type: "spritesheet",
			base: M,
			url: "41.png",
			x: 120,
			w: 240,
			h: 239
		},
		"monster-reduced-41": {
			type: "spritesheet",
			base: S,
			url: "41.png",
			x: 60,
			w: 110,
			h: 78
		},
		"monster-small-42": {
			type: "sprite",
			base: A,
			url: "42.png",
			x: 115
		},
		"monster-normal-42": {
			type: "spritesheet",
			base: M,
			url: "42.png",
			x: 115,
			w: 240,
			h: 239
		},
		"monster-reduced-42": {
			type: "spritesheet",
			base: S,
			url: "42.png",
			x: 57,
			w: 110,
			h: 78
		},
		"monster-small-43": {
			type: "sprite",
			base: A,
			url: "43.png",
			x: 90
		},
		"monster-normal-43": {
			type: "spritesheet",
			base: M,
			url: "43.png",
			x: 90,
			w: 167,
			h: 183
		},
		"monster-reduced-43": {
			type: "spritesheet",
			base: S,
			url: "43.png",
			x: 45,
			w: 84,
			h: 87
		},
		"monster-small-44": {
			type: "sprite",
			base: A,
			url: "44.png",
			x: 90
		},
		"monster-normal-44": {
			type: "spritesheet",
			base: M,
			url: "44.png",
			x: 90,
			w: 167,
			h: 183
		},
		"monster-reduced-44": {
			type: "spritesheet",
			base: S,
			url: "44.png",
			x: 45,
			w: 84,
			h: 87
		},
		"monster-small-45": {
			type: "sprite",
			base: A,
			url: "45.png",
			x: 95
		},
		"monster-normal-45": {
			type: "spritesheet",
			base: M,
			url: "45.png",
			x: 95,
			w: 222,
			h: 167
		},
		"monster-reduced-45": {
			type: "spritesheet",
			base: S,
			url: "45.png",
			x: 47,
			w: 102,
			h: 84
		},
		"monster-small-46": {
			type: "sprite",
			base: A,
			url: "46.png",
			x: 60
		},
		"monster-normal-46": {
			type: "spritesheet",
			base: M,
			url: "46.png",
			x: 60,
			w: 180,
			h: 140
		},
		"monster-reduced-46": {
			type: "spritesheet",
			base: S,
			url: "46.png",
			x: 30,
			w: 58,
			h: 59
		},
		"monster-small-47": {
			type: "sprite",
			base: A,
			url: "47.png",
			x: 86
		},
		"monster-normal-47": {
			type: "spritesheet",
			base: M,
			url: "47.png",
			x: 86,
			w: 208,
			h: 167
		},
		"monster-reduced-47": {
			type: "spritesheet",
			base: S,
			url: "47.png",
			x: 43,
			w: 77,
			h: 78
		},
		"monster-small-48": {
			type: "sprite",
			base: A,
			url: "48.png",
			x: 85
		},
		"monster-normal-48": {
			type: "spritesheet",
			base: M,
			url: "48.png",
			x: 85,
			w: 175,
			h: 223
		},
		"monster-reduced-48": {
			type: "spritesheet",
			base: S,
			url: "48.png",
			x: 42,
			w: 88,
			h: 101
		},
		"monster-small-49": {
			type: "sprite",
			base: A,
			url: "49.png",
			x: 120
		},
		"monster-normal-49": {
			type: "spritesheet",
			base: M,
			url: "49.png",
			x: 120,
			w: 221,
			h: 245
		},
		"monster-reduced-49": {
			type: "spritesheet",
			base: S,
			url: "49.png",
			x: 60,
			w: 104,
			h: 118
		},
		"monster-small-5": {
			type: "sprite",
			base: A,
			url: "5.png",
			x: 85
		},
		"monster-normal-5": {
			type: "spritesheet",
			base: M,
			url: "5.png",
			x: 85,
			w: 185,
			h: 204
		},
		"monster-reduced-5": {
			type: "spritesheet",
			base: S,
			url: "5.png",
			x: 42,
			w: 93,
			h: 101
		},
		"monster-small-50": {
			type: "sprite",
			base: A,
			url: "50.png",
			x: 115
		},
		"monster-normal-50": {
			type: "spritesheet",
			base: M,
			url: "50.png",
			x: 115,
			w: 227,
			h: 169
		},
		"monster-reduced-50": {
			type: "spritesheet",
			base: S,
			url: "50.png",
			x: 57,
			w: 96,
			h: 83
		},
		"monster-small-51": {
			type: "sprite",
			base: A,
			url: "51.png",
			x: 122
		},
		"monster-normal-51": {
			type: "spritesheet",
			base: M,
			url: "51.png",
			x: 122,
			w: 235,
			h: 174
		},
		"monster-reduced-51": {
			type: "spritesheet",
			base: S,
			url: "51.png",
			x: 61,
			w: 104,
			h: 85
		},
		"monster-small-52": {
			type: "sprite",
			base: A,
			url: "52.png",
			x: 55
		},
		"monster-normal-52": {
			type: "spritesheet",
			base: M,
			url: "52.png",
			x: 55,
			w: 107,
			h: 163
		},
		"monster-reduced-52": {
			type: "spritesheet",
			base: S,
			url: "52.png",
			x: 27,
			w: 54,
			h: 79
		},
		"monster-small-53": {
			type: "sprite",
			base: A,
			url: "53.png",
			x: 90
		},
		"monster-normal-53": {
			type: "spritesheet",
			base: M,
			url: "53.png",
			x: 90,
			w: 166,
			h: 240
		},
		"monster-reduced-53": {
			type: "spritesheet",
			base: S,
			url: "53.png",
			x: 45,
			w: 84,
			h: 117
		},
		"monster-small-54": {
			type: "sprite",
			base: A,
			url: "54.png",
			x: 150
		},
		"monster-normal-54": {
			type: "spritesheet",
			base: M,
			url: "54.png",
			x: 150,
			w: 344,
			h: 333
		},
		"monster-reduced-54": {
			type: "spritesheet",
			base: S,
			url: "54.png",
			x: 75,
			w: 143,
			h: 161
		},
		"monster-small-55": {
			type: "sprite",
			base: A,
			url: "55.png",
			x: 80
		},
		"monster-normal-55": {
			type: "spritesheet",
			base: M,
			url: "55.png",
			x: 80,
			w: 157,
			h: 194
		},
		"monster-reduced-55": {
			type: "spritesheet",
			base: S,
			url: "55.png",
			x: 40,
			w: 79,
			h: 98
		},
		"monster-small-56": {
			type: "sprite",
			base: A,
			url: "56.png",
			x: 82
		},
		"monster-normal-56": {
			type: "spritesheet",
			base: M,
			url: "56.png",
			x: 82,
			w: 160,
			h: 140
		},
		"monster-reduced-56": {
			type: "spritesheet",
			base: S,
			url: "56.png",
			x: 41,
			w: 69,
			h: 54
		},
		"monster-small-57": {
			type: "sprite",
			base: A,
			url: "57.png",
			x: 100
		},
		"monster-normal-57": {
			type: "spritesheet",
			base: M,
			url: "57.png",
			x: 100,
			w: 182,
			h: 136
		},
		"monster-reduced-57": {
			type: "spritesheet",
			base: S,
			url: "57.png",
			x: 50,
			w: 91,
			h: 65
		},
		"monster-small-58": {
			type: "sprite",
			base: A,
			url: "58.png",
			x: 80
		},
		"monster-normal-58": {
			type: "spritesheet",
			base: M,
			url: "58.png",
			x: 80,
			w: 157,
			h: 194
		},
		"monster-reduced-58": {
			type: "spritesheet",
			base: S,
			url: "58.png",
			x: 40,
			w: 78,
			h: 98
		},
		"monster-small-59": {
			type: "sprite",
			base: A,
			url: "59.png",
			x: 80
		},
		"monster-normal-59": {
			type: "spritesheet",
			base: M,
			url: "59.png",
			x: 80,
			w: 197,
			h: 177
		},
		"monster-reduced-59": {
			type: "spritesheet",
			base: S,
			url: "59.png",
			x: 40,
			w: 85,
			h: 87
		},
		"monster-small-6": {
			type: "sprite",
			base: A,
			url: "6.png",
			x: 90
		},
		"monster-normal-6": {
			type: "spritesheet",
			base: M,
			url: "6.png",
			x: 90,
			w: 235,
			h: 215
		},
		"monster-reduced-6": {
			type: "spritesheet",
			base: S,
			url: "6.png",
			x: 45,
			w: 91,
			h: 107
		},
		"monster-small-60": {
			type: "sprite",
			base: A,
			url: "60.png",
			x: 82
		},
		"monster-normal-60": {
			type: "spritesheet",
			base: M,
			url: "60.png",
			x: 82,
			w: 253,
			h: 235
		},
		"monster-reduced-60": {
			type: "spritesheet",
			base: S,
			url: "60.png",
			x: 41,
			w: 97,
			h: 110
		},
		"monster-small-61": {
			type: "sprite",
			base: A,
			url: "61.png",
			x: 102
		},
		"monster-normal-61": {
			type: "spritesheet",
			base: M,
			url: "61.png",
			x: 102,
			w: 233,
			h: 208
		},
		"monster-reduced-61": {
			type: "spritesheet",
			base: S,
			url: "61.png",
			x: 51,
			w: 99,
			h: 99
		},
		"monster-small-62": {
			type: "sprite",
			base: A,
			url: "62.png",
			x: 80
		},
		"monster-normal-62": {
			type: "spritesheet",
			base: M,
			url: "62.png",
			x: 80,
			w: 201,
			h: 193
		},
		"monster-reduced-62": {
			type: "spritesheet",
			base: S,
			url: "62.png",
			x: 40,
			w: 89,
			h: 96
		},
		"monster-small-63": {
			type: "sprite",
			base: A,
			url: "63.png",
			x: 60
		},
		"monster-normal-63": {
			type: "spritesheet",
			base: M,
			url: "63.png",
			x: 60,
			w: 197,
			h: 150
		},
		"monster-reduced-63": {
			type: "spritesheet",
			base: S,
			url: "63.png",
			x: 30,
			w: 81,
			h: 76
		},
		"monster-small-64": {
			type: "sprite",
			base: A,
			url: "64.png",
			x: 122
		},
		"monster-normal-64": {
			type: "spritesheet",
			base: M,
			url: "64.png",
			x: 122,
			w: 295,
			h: 212
		},
		"monster-reduced-64": {
			type: "spritesheet",
			base: S,
			url: "64.png",
			x: 61,
			w: 97,
			h: 102
		},
		"monster-small-65": {
			type: "sprite",
			base: A,
			url: "65.png",
			x: 134
		},
		"monster-normal-65": {
			type: "spritesheet",
			base: M,
			url: "65.png",
			x: 134,
			w: 343,
			h: 249
		},
		"monster-reduced-65": {
			type: "spritesheet",
			base: S,
			url: "65.png",
			x: 67,
			w: 107,
			h: 125
		},
		"monster-small-66": {
			type: "sprite",
			base: A,
			url: "66.png",
			x: 60
		},
		"monster-normal-66": {
			type: "spritesheet",
			base: M,
			url: "66.png",
			x: 60,
			w: 197,
			h: 144
		},
		"monster-reduced-66": {
			type: "spritesheet",
			base: S,
			url: "66.png",
			x: 30,
			w: 82,
			h: 73
		},
		"monster-small-67": {
			type: "sprite",
			base: A,
			url: "67.png",
			x: 122
		},
		"monster-normal-67": {
			type: "spritesheet",
			base: M,
			url: "67.png",
			x: 122,
			w: 297,
			h: 222
		},
		"monster-reduced-67": {
			type: "spritesheet",
			base: S,
			url: "67.png",
			x: 61,
			w: 96,
			h: 90
		},
		"monster-small-68": {
			type: "sprite",
			base: A,
			url: "68.png",
			x: 134
		},
		"monster-normal-68": {
			type: "spritesheet",
			base: M,
			url: "68.png",
			x: 134,
			w: 330,
			h: 233
		},
		"monster-reduced-68": {
			type: "spritesheet",
			base: S,
			url: "68.png",
			x: 67,
			w: 107,
			h: 114
		},
		"monster-small-69": {
			type: "sprite",
			base: A,
			url: "69.png",
			x: 60
		},
		"monster-normal-69": {
			type: "spritesheet",
			base: M,
			url: "69.png",
			x: 60,
			w: 196,
			h: 137
		},
		"monster-reduced-69": {
			type: "spritesheet",
			base: S,
			url: "69.png",
			x: 30,
			w: 83,
			h: 69
		},
		"monster-small-7": {
			type: "sprite",
			base: A,
			url: "7.png",
			x: 55
		},
		"monster-normal-7": {
			type: "spritesheet",
			base: M,
			url: "7.png",
			x: 55,
			w: 108,
			h: 75
		},
		"monster-reduced-7": {
			type: "spritesheet",
			base: S,
			url: "7.png",
			x: 27,
			w: 55,
			h: 38
		},
		"monster-small-70": {
			type: "sprite",
			base: A,
			url: "70.png",
			x: 122
		},
		"monster-normal-70": {
			type: "spritesheet",
			base: M,
			url: "70.png",
			x: 122,
			w: 303,
			h: 234
		},
		"monster-reduced-70": {
			type: "spritesheet",
			base: S,
			url: "70.png",
			x: 61,
			w: 97,
			h: 99
		},
		"monster-small-71": {
			type: "sprite",
			base: A,
			url: "71.png",
			x: 134
		},
		"monster-normal-71": {
			type: "spritesheet",
			base: M,
			url: "71.png",
			x: 134,
			w: 343,
			h: 247
		},
		"monster-reduced-71": {
			type: "spritesheet",
			base: S,
			url: "71.png",
			x: 67,
			w: 107,
			h: 124
		},
		"monster-small-72": {
			type: "sprite",
			base: A,
			url: "72.png",
			x: 60
		},
		"monster-normal-72": {
			type: "spritesheet",
			base: M,
			url: "72.png",
			x: 60,
			w: 196,
			h: 144
		},
		"monster-reduced-72": {
			type: "spritesheet",
			base: S,
			url: "72.png",
			x: 30,
			w: 80,
			h: 73
		},
		"monster-small-73": {
			type: "sprite",
			base: A,
			url: "73.png",
			x: 122
		},
		"monster-normal-73": {
			type: "spritesheet",
			base: M,
			url: "73.png",
			x: 122,
			w: 292,
			h: 212
		},
		"monster-reduced-73": {
			type: "spritesheet",
			base: S,
			url: "73.png",
			x: 61,
			w: 98,
			h: 100
		},
		"monster-small-74": {
			type: "sprite",
			base: A,
			url: "74.png",
			x: 134
		},
		"monster-normal-74": {
			type: "spritesheet",
			base: M,
			url: "74.png",
			x: 134,
			w: 343,
			h: 242
		},
		"monster-reduced-74": {
			type: "spritesheet",
			base: S,
			url: "74.png",
			x: 67,
			w: 107,
			h: 122
		},
		"monster-small-75": {
			type: "sprite",
			base: A,
			url: "75.png",
			x: 95
		},
		"monster-normal-75": {
			type: "spritesheet",
			base: M,
			url: "75.png",
			x: 95,
			w: 154,
			h: 168
		},
		"monster-reduced-75": {
			type: "spritesheet",
			base: S,
			url: "75.png",
			x: 47,
			w: 75,
			h: 85
		},
		"monster-small-76": {
			type: "sprite",
			base: A,
			url: "76.png",
			x: 95
		},
		"monster-normal-76": {
			type: "spritesheet",
			base: M,
			url: "76.png",
			x: 95,
			w: 201,
			h: 217
		},
		"monster-reduced-76": {
			type: "spritesheet",
			base: S,
			url: "76.png",
			x: 47,
			w: 93,
			h: 108
		},
		"monster-small-78": {
			type: "sprite",
			base: A,
			url: "78.png",
			x: 93
		},
		"monster-normal-78": {
			type: "spritesheet",
			base: M,
			url: "78.png",
			x: 93,
			w: 156,
			h: 185
		},
		"monster-reduced-78": {
			type: "spritesheet",
			base: S,
			url: "78.png",
			x: 46,
			w: 75,
			h: 91
		},
		"monster-small-79": {
			type: "sprite",
			base: A,
			url: "79.png",
			x: 88
		},
		"monster-normal-79": {
			type: "spritesheet",
			base: M,
			url: "79.png",
			x: 88,
			w: 213,
			h: 194
		},
		"monster-reduced-79": {
			type: "spritesheet",
			base: S,
			url: "79.png",
			x: 44,
			w: 93,
			h: 97
		},
		"monster-small-8": {
			type: "sprite",
			base: A,
			url: "8.png",
			x: 55
		},
		"monster-normal-8": {
			type: "spritesheet",
			base: M,
			url: "8.png",
			x: 55,
			w: 162,
			h: 117
		},
		"monster-reduced-8": {
			type: "spritesheet",
			base: S,
			url: "8.png",
			x: 27,
			w: 56,
			h: 59
		},
		"monster-small-80": {
			type: "sprite",
			base: A,
			url: "80.png",
			x: 100
		},
		"monster-normal-80": {
			type: "spritesheet",
			base: M,
			url: "80.png",
			x: 100,
			w: 229,
			h: 225
		},
		"monster-reduced-80": {
			type: "spritesheet",
			base: S,
			url: "80.png",
			x: 50,
			w: 82,
			h: 112
		},
		"monster-small-81": {
			type: "sprite",
			base: A,
			url: "81.png",
			x: 95
		},
		"monster-normal-81": {
			type: "spritesheet",
			base: M,
			url: "81.png",
			x: 95,
			w: 157,
			h: 162
		},
		"monster-reduced-81": {
			type: "spritesheet",
			base: S,
			url: "81.png",
			x: 47,
			w: 74,
			h: 80
		},
		"monster-small-82": {
			type: "sprite",
			base: A,
			url: "82.png",
			x: 102
		},
		"monster-normal-82": {
			type: "spritesheet",
			base: M,
			url: "82.png",
			x: 102,
			w: 212,
			h: 187
		},
		"monster-reduced-82": {
			type: "spritesheet",
			base: S,
			url: "82.png",
			x: 51,
			w: 93,
			h: 94
		},
		"monster-small-83": {
			type: "sprite",
			base: A,
			url: "83.png",
			x: 85
		},
		"monster-normal-83": {
			type: "spritesheet",
			base: M,
			url: "83.png",
			x: 85,
			w: 217,
			h: 223
		},
		"monster-reduced-83": {
			type: "spritesheet",
			base: S,
			url: "83.png",
			x: 42,
			w: 75,
			h: 108
		},
		"monster-small-84": {
			type: "sprite",
			base: A,
			url: "84.png",
			x: 90
		},
		"monster-normal-84": {
			type: "spritesheet",
			base: M,
			url: "84.png",
			x: 90,
			w: 156,
			h: 171
		},
		"monster-reduced-84": {
			type: "spritesheet",
			base: S,
			url: "84.png",
			x: 45,
			w: 79,
			h: 85
		},
		"monster-small-85": {
			type: "sprite",
			base: A,
			url: "85.png",
			x: 88
		},
		"monster-normal-85": {
			type: "spritesheet",
			base: M,
			url: "85.png",
			x: 88,
			w: 200,
			h: 190
		},
		"monster-reduced-85": {
			type: "spritesheet",
			base: S,
			url: "85.png",
			x: 44,
			w: 93,
			h: 95
		},
		"monster-small-86": {
			type: "sprite",
			base: A,
			url: "86.png",
			x: 115
		},
		"monster-normal-86": {
			type: "spritesheet",
			base: M,
			url: "86.png",
			x: 115,
			w: 242,
			h: 242
		},
		"monster-reduced-86": {
			type: "spritesheet",
			base: S,
			url: "86.png",
			x: 57,
			w: 84,
			h: 115
		},
		"monster-small-87": {
			type: "sprite",
			base: A,
			url: "87.png",
			x: 65
		},
		"monster-normal-87": {
			type: "spritesheet",
			base: M,
			url: "87.png",
			x: 65,
			w: 189,
			h: 120
		},
		"monster-reduced-87": {
			type: "spritesheet",
			base: S,
			url: "87.png",
			x: 32,
			w: 65,
			h: 54
		},
		"monster-small-88": {
			type: "sprite",
			base: A,
			url: "88.png",
			x: 115
		},
		"monster-normal-88": {
			type: "spritesheet",
			base: M,
			url: "88.png",
			x: 115,
			w: 252,
			h: 212
		},
		"monster-reduced-88": {
			type: "spritesheet",
			base: S,
			url: "88.png",
			x: 57,
			w: 113,
			h: 93
		},
		"monster-small-89": {
			type: "sprite",
			base: A,
			url: "89.png",
			x: 120
		},
		"monster-normal-89": {
			type: "spritesheet",
			base: M,
			url: "89.png",
			x: 120,
			w: 253,
			h: 254
		},
		"monster-reduced-89": {
			type: "spritesheet",
			base: S,
			url: "89.png",
			x: 60,
			w: 123,
			h: 127
		},
		"monster-small-9": {
			type: "sprite",
			base: A,
			url: "9.png",
			x: 120
		},
		"monster-normal-9": {
			type: "spritesheet",
			base: M,
			url: "9.png",
			x: 120,
			w: 250,
			h: 224
		},
		"monster-reduced-9": {
			type: "spritesheet",
			base: S,
			url: "9.png",
			x: 60,
			w: 126,
			h: 111
		},
		"monster-small-90": {
			type: "sprite",
			base: A,
			url: "90.png",
			x: 80
		},
		"monster-normal-90": {
			type: "spritesheet",
			base: M,
			url: "90.png",
			x: 80,
			w: 155,
			h: 128
		},
		"monster-reduced-90": {
			type: "spritesheet",
			base: S,
			url: "90.png",
			x: 40,
			w: 78,
			h: 63
		},
		"monster-small-91": {
			type: "sprite",
			base: A,
			url: "91.png",
			x: 85
		},
		"monster-normal-91": {
			type: "spritesheet",
			base: M,
			url: "91.png",
			x: 85,
			w: 219,
			h: 204
		},
		"monster-reduced-91": {
			type: "spritesheet",
			base: S,
			url: "91.png",
			x: 42,
			w: 88,
			h: 98
		},
		"monster-small-92": {
			type: "sprite",
			base: A,
			url: "92.png",
			x: 80
		},
		"monster-normal-92": {
			type: "spritesheet",
			base: M,
			url: "92.png",
			x: 80,
			w: 155,
			h: 128
		},
		"monster-reduced-92": {
			type: "spritesheet",
			base: S,
			url: "92.png",
			x: 40,
			w: 78,
			h: 63
		},
		"monster-small-93": {
			type: "sprite",
			base: A,
			url: "93.png",
			x: 65
		},
		"monster-normal-93": {
			type: "spritesheet",
			base: M,
			url: "93.png",
			x: 65,
			w: 171,
			h: 150
		},
		"monster-reduced-93": {
			type: "spritesheet",
			base: S,
			url: "93.png",
			x: 32,
			w: 84,
			h: 73
		},
		"monster-small-94": {
			type: "sprite",
			base: A,
			url: "94.png",
			x: 80
		},
		"monster-normal-94": {
			type: "spritesheet",
			base: M,
			url: "94.png",
			x: 80,
			w: 176,
			h: 187
		},
		"monster-reduced-94": {
			type: "spritesheet",
			base: S,
			url: "94.png",
			x: 40,
			w: 88,
			h: 53
		},
		"monster-small-95": {
			type: "sprite",
			base: A,
			url: "95.png",
			x: 115
		},
		"monster-normal-95": {
			type: "spritesheet",
			base: M,
			url: "95.png",
			x: 115,
			w: 203,
			h: 196
		},
		"monster-reduced-95": {
			type: "spritesheet",
			base: S,
			url: "95.png",
			x: 57,
			w: 101,
			h: 67
		},
		"monster-small-96": {
			type: "sprite",
			base: A,
			url: "96.png",
			x: 130
		},
		"monster-normal-96": {
			type: "spritesheet",
			base: M,
			url: "96.png",
			x: 130,
			w: 233,
			h: 206
		},
		"monster-reduced-96": {
			type: "spritesheet",
			base: S,
			url: "96.png",
			x: 65,
			w: 117,
			h: 79
		},
		"monster-small-97": {
			type: "sprite",
			base: A,
			url: "97.png",
			x: 135
		},
		"monster-normal-97": {
			type: "spritesheet",
			base: M,
			url: "97.png",
			x: 135,
			w: 488,
			h: 245
		},
		"monster-reduced-97": {
			type: "spritesheet",
			base: S,
			url: "97.png",
			x: 67,
			w: 135,
			h: 123
		},
		"monster-small-98": {
			type: "sprite",
			base: A,
			url: "98.png",
			x: 70
		},
		"monster-normal-98": {
			type: "spritesheet",
			base: M,
			url: "98.png",
			x: 70,
			w: 183,
			h: 178
		},
		"monster-reduced-98": {
			type: "spritesheet",
			base: S,
			url: "98.png",
			x: 35,
			w: 74,
			h: 69
		},
		"monster-small-99": {
			type: "sprite",
			base: A,
			url: "99.png",
			x: 130
		},
		"monster-normal-99": {
			type: "spritesheet",
			base: M,
			url: "99.png",
			x: 130,
			w: 254,
			h: 171
		},
		"monster-reduced-99": {
			type: "spritesheet",
			base: S,
			url: "99.png",
			x: 65,
			w: 76,
			h: 86
		},
		heads: {
			type: "atlas",
			base: p,
			url: "head.png",
			json: "head.json"
		},
		"normal-outfit-male-1": {
			type: "spritesheet",
			base: r,
			url: "1.png",
			x: 91,
			y: 144,
			w: 75,
			h: 91
		},
		"normal-outfit-male-10": {
			type: "spritesheet",
			base: r,
			url: "10.png",
			x: 91,
			y: 129,
			w: 75,
			h: 106
		},
		"normal-outfit-male-11": {
			type: "spritesheet",
			base: r,
			url: "11.png",
			x: 91,
			y: 150,
			w: 75,
			h: 85
		},
		"normal-outfit-male-12": {
			type: "spritesheet",
			base: r,
			url: "12.png",
			x: 91,
			y: 138,
			w: 75,
			h: 97
		},
		"normal-outfit-male-13": {
			type: "spritesheet",
			base: r,
			url: "13.png",
			x: 91,
			y: 155,
			w: 75,
			h: 80
		},
		"normal-outfit-male-14": {
			type: "spritesheet",
			base: r,
			url: "14.png",
			x: 91,
			y: 155,
			w: 75,
			h: 80
		},
		"normal-outfit-male-15": {
			type: "spritesheet",
			base: r,
			url: "15.png",
			x: 91,
			y: 155,
			w: 75,
			h: 80
		},
		"normal-outfit-male-16": {
			type: "spritesheet",
			base: r,
			url: "16.png",
			x: 91,
			y: 153,
			w: 75,
			h: 82
		},
		"normal-outfit-male-17": {
			type: "spritesheet",
			base: r,
			url: "17.png",
			x: 61,
			y: 144,
			w: 120,
			h: 91
		},
		"normal-outfit-male-18": {
			type: "spritesheet",
			base: r,
			url: "18.png",
			x: 91,
			y: 156,
			w: 75,
			h: 79
		},
		"normal-outfit-male-19": {
			type: "spritesheet",
			base: r,
			url: "19.png",
			x: 91,
			y: 154,
			w: 75,
			h: 81
		},
		"normal-outfit-male-2": {
			type: "spritesheet",
			base: r,
			url: "2.png",
			x: 68,
			y: 152,
			w: 98,
			h: 83
		},
		"normal-outfit-male-20": {
			type: "spritesheet",
			base: r,
			url: "20.png",
			x: 91,
			y: 154,
			w: 75,
			h: 81
		},
		"normal-outfit-male-21": {
			type: "spritesheet",
			base: r,
			url: "21.png",
			x: 91,
			y: 156,
			w: 75,
			h: 79
		},
		"normal-outfit-male-22": {
			type: "spritesheet",
			base: r,
			url: "22.png",
			x: 91,
			y: 153,
			w: 75,
			h: 82
		},
		"normal-outfit-male-23": {
			type: "spritesheet",
			base: r,
			url: "23.png",
			x: 91,
			y: 153,
			w: 75,
			h: 82
		},
		"normal-outfit-male-24": {
			type: "spritesheet",
			base: r,
			url: "24.png",
			x: 54,
			y: 141,
			w: 112,
			h: 94
		},
		"normal-outfit-male-25": {
			type: "spritesheet",
			base: r,
			url: "25.png",
			x: 91,
			y: 155,
			w: 75,
			h: 80
		},
		"normal-outfit-male-26": {
			type: "spritesheet",
			base: r,
			url: "26.png",
			x: 91,
			y: 153,
			w: 75,
			h: 82
		},
		"normal-outfit-male-27": {
			type: "spritesheet",
			base: r,
			url: "27.png",
			x: 91,
			y: 140,
			w: 75,
			h: 95
		},
		"normal-outfit-male-28": {
			type: "spritesheet",
			base: r,
			url: "28.png",
			x: 86,
			y: 154,
			w: 80,
			h: 81
		},
		"normal-outfit-male-29": {
			type: "spritesheet",
			base: r,
			url: "29.png",
			x: 91,
			y: 155,
			w: 75,
			h: 80
		},
		"normal-outfit-male-3": {
			type: "spritesheet",
			base: r,
			url: "3.png",
			x: 91,
			y: 153,
			w: 75,
			h: 82
		},
		"normal-outfit-male-30": {
			type: "spritesheet",
			base: r,
			url: "30.png",
			x: 91,
			y: 153,
			w: 75,
			h: 82
		},
		"normal-outfit-male-31": {
			type: "spritesheet",
			base: r,
			url: "31.png",
			x: 72,
			y: 144,
			w: 94,
			h: 91
		},
		"normal-outfit-male-32": {
			type: "spritesheet",
			base: r,
			url: "32.png",
			x: 88,
			y: 68,
			w: 78,
			h: 167
		},
		"normal-outfit-male-33": {
			type: "spritesheet",
			base: r,
			url: "33.png",
			x: 74,
			y: 150,
			w: 92,
			h: 85
		},
		"normal-outfit-male-34": {
			type: "spritesheet",
			base: r,
			url: "34.png",
			x: 66,
			y: 138,
			w: 100,
			h: 97
		},
		"normal-outfit-male-35": {
			type: "spritesheet",
			base: r,
			url: "35.png",
			x: 88,
			y: 155,
			w: 79,
			h: 80
		},
		"normal-outfit-male-36": {
			type: "spritesheet",
			base: r,
			url: "36.png",
			x: 91,
			y: 155,
			w: 76,
			h: 80
		},
		"normal-outfit-male-37": {
			type: "spritesheet",
			base: r,
			url: "37.png",
			x: 61,
			y: 153,
			w: 105,
			h: 82
		},
		"normal-outfit-male-38": {
			type: "spritesheet",
			base: r,
			url: "38.png",
			x: 30,
			y: 34,
			w: 165,
			h: 221
		},
		"normal-outfit-male-39": {
			type: "spritesheet",
			base: r,
			url: "39.png",
			x: 91,
			y: 151,
			w: 75,
			h: 84
		},
		"normal-outfit-male-4": {
			type: "spritesheet",
			base: r,
			url: "4.png",
			x: 91,
			y: 154,
			w: 75,
			h: 81
		},
		"normal-outfit-male-40": {
			type: "spritesheet",
			base: r,
			url: "40.png",
			x: 75,
			y: 153,
			w: 91,
			h: 82
		},
		"normal-outfit-male-41": {
			type: "spritesheet",
			base: r,
			url: "41.png",
			x: 91,
			y: 150,
			w: 75,
			h: 85
		},
		"normal-outfit-male-42": {
			type: "spritesheet",
			base: r,
			url: "42.png",
			x: 92,
			y: 154,
			w: 74,
			h: 81
		},
		"normal-outfit-male-43": {
			type: "spritesheet",
			base: r,
			url: "43.png",
			x: 89,
			y: 151,
			w: 95,
			h: 86
		},
		"normal-outfit-male-44": {
			type: "spritesheet",
			base: r,
			url: "44.png",
			x: 78,
			y: 137,
			w: 96,
			h: 98
		},
		"normal-outfit-male-45": {
			type: "spritesheet",
			base: r,
			url: "45.png",
			x: 90,
			y: 153,
			w: 79,
			h: 83
		},
		"normal-outfit-male-46": {
			type: "spritesheet",
			base: r,
			url: "46.png",
			x: 84,
			y: 155,
			w: 77,
			h: 80
		},
		"normal-outfit-male-47": {
			type: "spritesheet",
			base: r,
			url: "47.png",
			x: 89,
			y: 149,
			w: 77,
			h: 88
		},
		"normal-outfit-male-48": {
			type: "spritesheet",
			base: r,
			url: "48.png",
			x: 56,
			y: 138,
			w: 110,
			h: 97
		},
		"normal-outfit-male-49": {
			type: "spritesheet",
			base: r,
			url: "49.png",
			x: 87,
			y: 152,
			w: 83,
			h: 81
		},
		"normal-outfit-male-5": {
			type: "spritesheet",
			base: r,
			url: "5.png",
			x: 54,
			y: 141,
			w: 112,
			h: 94
		},
		"normal-outfit-male-50": {
			type: "spritesheet",
			base: r,
			url: "50.png",
			x: 74,
			y: 150,
			w: 107,
			h: 99
		},
		"normal-outfit-male-51": {
			type: "spritesheet",
			base: r,
			url: "51.png",
			x: 71,
			y: 147,
			w: 98,
			h: 87
		},
		"normal-outfit-male-52": {
			type: "spritesheet",
			base: r,
			url: "52.png",
			x: 78,
			y: 139,
			w: 90,
			h: 99
		},
		"normal-outfit-male-53": {
			type: "spritesheet",
			base: r,
			url: "53.png",
			x: 21,
			y: 75,
			w: 145,
			h: 160
		},
		"normal-outfit-male-54": {
			type: "spritesheet",
			base: r,
			url: "54.png",
			x: 51,
			y: 151,
			w: 123,
			h: 84
		},
		"normal-outfit-male-6": {
			type: "spritesheet",
			base: r,
			url: "6.png",
			x: 88,
			y: 139,
			w: 78,
			h: 96
		},
		"normal-outfit-male-7": {
			type: "spritesheet",
			base: r,
			url: "7.png",
			x: 74,
			y: 145,
			w: 92,
			h: 90
		},
		"normal-outfit-male-8": {
			type: "spritesheet",
			base: r,
			url: "8.png",
			x: 83,
			y: 137,
			w: 83,
			h: 98
		},
		"normal-outfit-male-9": {
			type: "spritesheet",
			base: r,
			url: "9.png",
			x: 91,
			y: 154,
			w: 75,
			h: 81
		},
		"reduced-outfit-male-1": {
			type: "spritesheet",
			base: e,
			url: "1.png",
			x: 43,
			y: 82,
			w: 38,
			h: 43
		},
		"reduced-outfit-male-10": {
			type: "spritesheet",
			base: e,
			url: "10.png",
			x: 43,
			y: 72,
			w: 38,
			h: 53
		},
		"reduced-outfit-male-11": {
			type: "spritesheet",
			base: e,
			url: "11.png",
			x: 43,
			y: 82,
			w: 38,
			h: 43
		},
		"reduced-outfit-male-12": {
			type: "spritesheet",
			base: e,
			url: "12.png",
			x: 43,
			y: 80,
			w: 38,
			h: 45
		},
		"reduced-outfit-male-13": {
			type: "spritesheet",
			base: e,
			url: "13.png",
			x: 43,
			y: 85,
			w: 38,
			h: 40
		},
		"reduced-outfit-male-14": {
			type: "spritesheet",
			base: e,
			url: "14.png",
			x: 43,
			y: 85,
			w: 38,
			h: 40
		},
		"reduced-outfit-male-15": {
			type: "spritesheet",
			base: e,
			url: "15.png",
			x: 43,
			y: 85,
			w: 38,
			h: 40
		},
		"reduced-outfit-male-16": {
			type: "spritesheet",
			base: e,
			url: "16.png",
			x: 43,
			y: 85,
			w: 38,
			h: 40
		},
		"reduced-outfit-male-17": {
			type: "spritesheet",
			base: e,
			url: "17.png",
			x: 28,
			y: 82,
			w: 60,
			h: 43
		},
		"reduced-outfit-male-18": {
			type: "spritesheet",
			base: e,
			url: "18.png",
			x: 43,
			y: 86,
			w: 38,
			h: 39
		},
		"reduced-outfit-male-19": {
			type: "spritesheet",
			base: e,
			url: "19.png",
			x: 43,
			y: 85,
			w: 38,
			h: 40
		},
		"reduced-outfit-male-2": {
			type: "spritesheet",
			base: e,
			url: "2.png",
			x: 32,
			y: 83,
			w: 49,
			h: 42
		},
		"reduced-outfit-male-20": {
			type: "spritesheet",
			base: e,
			url: "20.png",
			x: 43,
			y: 85,
			w: 38,
			h: 40
		},
		"reduced-outfit-male-21": {
			type: "spritesheet",
			base: e,
			url: "21.png",
			x: 43,
			y: 86,
			w: 38,
			h: 39
		},
		"reduced-outfit-male-22": {
			type: "spritesheet",
			base: e,
			url: "22.png",
			x: 43,
			y: 84,
			w: 38,
			h: 41
		},
		"reduced-outfit-male-23": {
			type: "spritesheet",
			base: e,
			url: "23.png",
			x: 43,
			y: 84,
			w: 38,
			h: 41
		},
		"reduced-outfit-male-24": {
			type: "spritesheet",
			base: e,
			url: "24.png",
			x: 25,
			y: 78,
			w: 56,
			h: 47
		},
		"reduced-outfit-male-25": {
			type: "spritesheet",
			base: e,
			url: "25.png",
			x: 43,
			y: 84,
			w: 38,
			h: 41
		},
		"reduced-outfit-male-26": {
			type: "spritesheet",
			base: e,
			url: "26.png",
			x: 43,
			y: 84,
			w: 38,
			h: 41
		},
		"reduced-outfit-male-27": {
			type: "spritesheet",
			base: e,
			url: "27.png",
			x: 43,
			y: 78,
			w: 38,
			h: 47
		},
		"reduced-outfit-male-28": {
			type: "spritesheet",
			base: e,
			url: "28.png",
			x: 41,
			y: 85,
			w: 40,
			h: 40
		},
		"reduced-outfit-male-29": {
			type: "spritesheet",
			base: e,
			url: "29.png",
			x: 43,
			y: 85,
			w: 38,
			h: 40
		},
		"reduced-outfit-male-3": {
			type: "spritesheet",
			base: e,
			url: "3.png",
			x: 43,
			y: 85,
			w: 38,
			h: 40
		},
		"reduced-outfit-male-30": {
			type: "spritesheet",
			base: e,
			url: "30.png",
			x: 43,
			y: 84,
			w: 38,
			h: 41
		},
		"reduced-outfit-male-31": {
			type: "spritesheet",
			base: e,
			url: "31.png",
			x: 33,
			y: 80,
			w: 48,
			h: 45
		},
		"reduced-outfit-male-32": {
			type: "spritesheet",
			base: e,
			url: "32.png",
			x: 43,
			y: 85,
			w: 38,
			h: 40
		},
		"reduced-outfit-male-33": {
			type: "spritesheet",
			base: e,
			url: "33.png",
			x: 37,
			y: 82,
			w: 44,
			h: 43
		},
		"reduced-outfit-male-34": {
			type: "spritesheet",
			base: e,
			url: "34.png",
			x: 31,
			y: 77,
			w: 50,
			h: 48
		},
		"reduced-outfit-male-35": {
			type: "spritesheet",
			base: e,
			url: "35.png",
			x: 42,
			y: 85,
			w: 38,
			h: 40
		},
		"reduced-outfit-male-36": {
			type: "spritesheet",
			base: e,
			url: "36.png",
			x: 43,
			y: 85,
			w: 38,
			h: 40
		},
		"reduced-outfit-male-37": {
			type: "spritesheet",
			base: e,
			url: "37.png",
			x: 39,
			y: 84,
			w: 44,
			h: 41
		},
		"reduced-outfit-male-38": {
			type: "spritesheet",
			base: e,
			url: "38.png",
			x: 17,
			y: 0,
			w: 78,
			h: 128
		},
		"reduced-outfit-male-39": {
			type: "spritesheet",
			base: e,
			url: "39.png",
			x: 17,
			y: 66,
			w: 79,
			h: 59
		},
		"reduced-outfit-male-4": {
			type: "spritesheet",
			base: e,
			url: "4.png",
			x: 43,
			y: 84,
			w: 38,
			h: 41
		},
		"reduced-outfit-male-40": {
			type: "spritesheet",
			base: e,
			url: "40.png",
			x: 41,
			y: 84,
			w: 42,
			h: 44
		},
		"reduced-outfit-male-41": {
			type: "spritesheet",
			base: e,
			url: "41.png",
			x: 45,
			y: 83,
			w: 38,
			h: 42
		},
		"reduced-outfit-male-42": {
			type: "spritesheet",
			base: e,
			url: "42.png",
			x: 45,
			y: 84,
			w: 37,
			h: 42
		},
		"reduced-outfit-male-43": {
			type: "spritesheet",
			base: e,
			url: "43.png",
			x: 40,
			y: 84,
			w: 52,
			h: 42
		},
		"reduced-outfit-male-44": {
			type: "spritesheet",
			base: e,
			url: "44.png",
			x: 39,
			y: 79,
			w: 48,
			h: 46
		},
		"reduced-outfit-male-45": {
			type: "spritesheet",
			base: e,
			url: "45.png",
			x: 42,
			y: 85,
			w: 43,
			h: 41
		},
		"reduced-outfit-male-46": {
			type: "spritesheet",
			base: e,
			url: "46.png",
			x: 41,
			y: 85,
			w: 38,
			h: 38
		},
		"reduced-outfit-male-47": {
			type: "spritesheet",
			base: e,
			url: "47.png",
			x: 45,
			y: 82,
			w: 38,
			h: 43
		},
		"reduced-outfit-male-48": {
			type: "spritesheet",
			base: e,
			url: "48.png",
			x: 28,
			y: 77,
			w: 55,
			h: 48
		},
		"reduced-outfit-male-49": {
			type: "spritesheet",
			base: e,
			url: "49.png",
			x: 40,
			y: 85,
			w: 44,
			h: 40
		},
		"reduced-outfit-male-5": {
			type: "spritesheet",
			base: e,
			url: "5.png",
			x: 25,
			y: 78,
			w: 56,
			h: 47
		},
		"reduced-outfit-male-50": {
			type: "spritesheet",
			base: e,
			url: "50.png",
			x: 36,
			y: 82,
			w: 53,
			h: 45
		},
		"reduced-outfit-male-51": {
			type: "spritesheet",
			base: e,
			url: "51.png",
			x: 36,
			y: 81,
			w: 49,
			h: 44
		},
		"reduced-outfit-male-52": {
			type: "spritesheet",
			base: e,
			url: "52.png",
			x: 40,
			y: 78,
			w: 45,
			h: 49
		},
		"reduced-outfit-male-53": {
			type: "spritesheet",
			base: e,
			url: "53.png",
			x: 27,
			y: 77,
			w: 56,
			h: 48
		},
		"reduced-outfit-male-54": {
			type: "spritesheet",
			base: e,
			url: "54.png",
			x: 25,
			y: 83,
			w: 63,
			h: 42
		},
		"reduced-outfit-male-6": {
			type: "spritesheet",
			base: e,
			url: "6.png",
			x: 42,
			y: 78,
			w: 39,
			h: 47
		},
		"reduced-outfit-male-7": {
			type: "spritesheet",
			base: e,
			url: "7.png",
			x: 35,
			y: 80,
			w: 46,
			h: 45
		},
		"reduced-outfit-male-8": {
			type: "spritesheet",
			base: e,
			url: "8.png",
			x: 39,
			y: 76,
			w: 42,
			h: 49
		},
		"reduced-outfit-male-9": {
			type: "spritesheet",
			base: e,
			url: "9.png",
			x: 43,
			y: 85,
			w: 38,
			h: 40
		},
		"normal-outfit-female-1": {
			type: "spritesheet",
			base: o,
			url: "1.png",
			x: 94,
			y: 155,
			w: 68,
			h: 79
		},
		"normal-outfit-female-10": {
			type: "spritesheet",
			base: o,
			url: "10.png",
			x: 94,
			y: 129,
			w: 68,
			h: 105
		},
		"normal-outfit-female-11": {
			type: "spritesheet",
			base: o,
			url: "11.png",
			x: 94,
			y: 151,
			w: 68,
			h: 83
		},
		"normal-outfit-female-12": {
			type: "spritesheet",
			base: o,
			url: "12.png",
			x: 94,
			y: 141,
			w: 68,
			h: 93
		},
		"normal-outfit-female-13": {
			type: "spritesheet",
			base: o,
			url: "13.png",
			x: 94,
			y: 156,
			w: 68,
			h: 78
		},
		"normal-outfit-female-14": {
			type: "spritesheet",
			base: o,
			url: "14.png",
			x: 94,
			y: 156,
			w: 68,
			h: 78
		},
		"normal-outfit-female-15": {
			type: "spritesheet",
			base: o,
			url: "15.png",
			x: 94,
			y: 156,
			w: 68,
			h: 78
		},
		"normal-outfit-female-16": {
			type: "spritesheet",
			base: o,
			url: "16.png",
			x: 94,
			y: 155,
			w: 68,
			h: 79
		},
		"normal-outfit-female-17": {
			type: "spritesheet",
			base: o,
			url: "17.png",
			x: 69,
			y: 155,
			w: 104,
			h: 79
		},
		"normal-outfit-female-18": {
			type: "spritesheet",
			base: o,
			url: "18.png",
			x: 94,
			y: 155,
			w: 68,
			h: 79
		},
		"normal-outfit-female-19": {
			type: "spritesheet",
			base: o,
			url: "19.png",
			x: 94,
			y: 154,
			w: 68,
			h: 80
		},
		"normal-outfit-female-2": {
			type: "spritesheet",
			base: o,
			url: "2.png",
			x: 94,
			y: 157,
			w: 68,
			h: 77
		},
		"normal-outfit-female-20": {
			type: "spritesheet",
			base: o,
			url: "20.png",
			x: 94,
			y: 154,
			w: 68,
			h: 80
		},
		"normal-outfit-female-21": {
			type: "spritesheet",
			base: o,
			url: "21.png",
			x: 94,
			y: 155,
			w: 68,
			h: 79
		},
		"normal-outfit-female-22": {
			type: "spritesheet",
			base: o,
			url: "22.png",
			x: 94,
			y: 156,
			w: 68,
			h: 78
		},
		"normal-outfit-female-23": {
			type: "spritesheet",
			base: o,
			url: "23.png",
			x: 94,
			y: 156,
			w: 68,
			h: 78
		},
		"normal-outfit-female-24": {
			type: "spritesheet",
			base: o,
			url: "24.png",
			x: 63,
			y: 145,
			w: 104,
			h: 89
		},
		"normal-outfit-female-25": {
			type: "spritesheet",
			base: o,
			url: "25.png",
			x: 94,
			y: 155,
			w: 68,
			h: 79
		},
		"normal-outfit-female-26": {
			type: "spritesheet",
			base: o,
			url: "26.png",
			x: 94,
			y: 156,
			w: 68,
			h: 78
		},
		"normal-outfit-female-27": {
			type: "spritesheet",
			base: o,
			url: "27.png",
			x: 93,
			y: 140,
			w: 69,
			h: 94
		},
		"normal-outfit-female-28": {
			type: "spritesheet",
			base: o,
			url: "28.png",
			x: 94,
			y: 155,
			w: 68,
			h: 79
		},
		"normal-outfit-female-29": {
			type: "spritesheet",
			base: o,
			url: "29.png",
			x: 94,
			y: 155,
			w: 68,
			h: 79
		},
		"normal-outfit-female-3": {
			type: "spritesheet",
			base: o,
			url: "3.png",
			x: 94,
			y: 157,
			w: 68,
			h: 77
		},
		"normal-outfit-female-30": {
			type: "spritesheet",
			base: o,
			url: "30.png",
			x: 94,
			y: 155,
			w: 68,
			h: 79
		},
		"normal-outfit-female-31": {
			type: "spritesheet",
			base: o,
			url: "31.png",
			x: 94,
			y: 155,
			w: 68,
			h: 79
		},
		"normal-outfit-female-32": {
			type: "spritesheet",
			base: o,
			url: "32.png",
			x: 94,
			y: 156,
			w: 68,
			h: 78
		},
		"normal-outfit-female-33": {
			type: "spritesheet",
			base: o,
			url: "33.png",
			x: 74,
			y: 151,
			w: 88,
			h: 83
		},
		"normal-outfit-female-34": {
			type: "spritesheet",
			base: o,
			url: "34.png",
			x: 66,
			y: 145,
			w: 99,
			h: 89
		},
		"normal-outfit-female-35": {
			type: "spritesheet",
			base: o,
			url: "35.png",
			x: 94,
			y: 154,
			w: 68,
			h: 80
		},
		"normal-outfit-female-36": {
			type: "spritesheet",
			base: o,
			url: "36.png",
			x: 91,
			y: 156,
			w: 72,
			h: 78
		},
		"normal-outfit-female-37": {
			type: "spritesheet",
			base: o,
			url: "37.png",
			x: 72,
			y: 153,
			w: 90,
			h: 81
		},
		"normal-outfit-female-38": {
			type: "spritesheet",
			base: o,
			url: "38.png",
			x: 30,
			y: 34,
			w: 165,
			h: 221
		},
		"normal-outfit-female-39": {
			type: "spritesheet",
			base: o,
			url: "39.png",
			x: 94,
			y: 155,
			w: 68,
			h: 79
		},
		"normal-outfit-female-4": {
			type: "spritesheet",
			base: o,
			url: "4.png",
			x: 94,
			y: 156,
			w: 68,
			h: 78
		},
		"normal-outfit-female-40": {
			type: "spritesheet",
			base: o,
			url: "40.png",
			x: 75,
			y: 155,
			w: 87,
			h: 79
		},
		"normal-outfit-female-41": {
			type: "spritesheet",
			base: o,
			url: "41.png",
			x: 70,
			y: 153,
			w: 92,
			h: 86
		},
		"normal-outfit-female-42": {
			type: "spritesheet",
			base: o,
			url: "42.png",
			x: 94,
			y: 156,
			w: 68,
			h: 78
		},
		"normal-outfit-female-43": {
			type: "spritesheet",
			base: o,
			url: "43.png",
			x: 89,
			y: 151,
			w: 95,
			h: 86
		},
		"normal-outfit-female-44": {
			type: "spritesheet",
			base: o,
			url: "44.png",
			x: 78,
			y: 135,
			w: 95,
			h: 99
		},
		"normal-outfit-female-45": {
			type: "spritesheet",
			base: o,
			url: "45.png",
			x: 94,
			y: 154,
			w: 79,
			h: 82
		},
		"normal-outfit-female-46": {
			type: "spritesheet",
			base: o,
			url: "46.png",
			x: 89,
			y: 156,
			w: 74,
			h: 77
		},
		"normal-outfit-female-47": {
			type: "spritesheet",
			base: o,
			url: "47.png",
			x: 94,
			y: 149,
			w: 68,
			h: 87
		},
		"normal-outfit-female-48": {
			type: "spritesheet",
			base: o,
			url: "48.png",
			x: 64,
			y: 138,
			w: 98,
			h: 96
		},
		"normal-outfit-female-49": {
			type: "spritesheet",
			base: o,
			url: "49.png",
			x: 87,
			y: 152,
			w: 83,
			h: 81
		},
		"normal-outfit-female-5": {
			type: "spritesheet",
			base: o,
			url: "5.png",
			x: 63,
			y: 145,
			w: 104,
			h: 89
		},
		"normal-outfit-female-50": {
			type: "spritesheet",
			base: o,
			url: "50.png",
			x: 89,
			y: 150,
			w: 77,
			h: 84
		},
		"normal-outfit-female-51": {
			type: "spritesheet",
			base: o,
			url: "51.png",
			x: 88,
			y: 147,
			w: 76,
			h: 87
		},
		"normal-outfit-female-52": {
			type: "spritesheet",
			base: o,
			url: "52.png",
			x: 82,
			y: 139,
			w: 83,
			h: 94
		},
		"normal-outfit-female-53": {
			type: "spritesheet",
			base: o,
			url: "53.png",
			x: 76,
			y: 146,
			w: 90,
			h: 88
		},
		"normal-outfit-female-54": {
			type: "spritesheet",
			base: o,
			url: "54.png",
			x: 57,
			y: 154,
			w: 123,
			h: 80
		},
		"normal-outfit-female-6": {
			type: "spritesheet",
			base: o,
			url: "6.png",
			x: 91,
			y: 140,
			w: 71,
			h: 94
		},
		"normal-outfit-female-7": {
			type: "spritesheet",
			base: o,
			url: "7.png",
			x: 75,
			y: 149,
			w: 87,
			h: 85
		},
		"normal-outfit-female-8": {
			type: "spritesheet",
			base: o,
			url: "8.png",
			x: 92,
			y: 137,
			w: 70,
			h: 97
		},
		"normal-outfit-female-9": {
			type: "spritesheet",
			base: o,
			url: "9.png",
			x: 94,
			y: 153,
			w: 68,
			h: 81
		},
		"reduced-outfit-female-1": {
			type: "spritesheet",
			base: t,
			url: "1.png",
			x: 44,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-10": {
			type: "spritesheet",
			base: t,
			url: "10.png",
			x: 44,
			y: 72,
			w: 35,
			h: 53
		},
		"reduced-outfit-female-11": {
			type: "spritesheet",
			base: t,
			url: "11.png",
			x: 44,
			y: 83,
			w: 35,
			h: 42
		},
		"reduced-outfit-female-12": {
			type: "spritesheet",
			base: t,
			url: "12.png",
			x: 44,
			y: 78,
			w: 35,
			h: 47
		},
		"reduced-outfit-female-13": {
			type: "spritesheet",
			base: t,
			url: "13.png",
			x: 44,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-14": {
			type: "spritesheet",
			base: t,
			url: "14.png",
			x: 44,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-15": {
			type: "spritesheet",
			base: t,
			url: "15.png",
			x: 44,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-16": {
			type: "spritesheet",
			base: t,
			url: "16.png",
			x: 44,
			y: 85,
			w: 35,
			h: 40
		},
		"reduced-outfit-female-17": {
			type: "spritesheet",
			base: t,
			url: "17.png",
			x: 32,
			y: 84,
			w: 53,
			h: 41
		},
		"reduced-outfit-female-18": {
			type: "spritesheet",
			base: t,
			url: "18.png",
			x: 44,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-19": {
			type: "spritesheet",
			base: t,
			url: "19.png",
			x: 44,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-2": {
			type: "spritesheet",
			base: t,
			url: "2.png",
			x: 44,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-20": {
			type: "spritesheet",
			base: t,
			url: "20.png",
			x: 44,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-21": {
			type: "spritesheet",
			base: t,
			url: "21.png",
			x: 44,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-22": {
			type: "spritesheet",
			base: t,
			url: "22.png",
			x: 44,
			y: 85,
			w: 35,
			h: 40
		},
		"reduced-outfit-female-23": {
			type: "spritesheet",
			base: t,
			url: "23.png",
			x: 44,
			y: 85,
			w: 35,
			h: 40
		},
		"reduced-outfit-female-24": {
			type: "spritesheet",
			base: t,
			url: "24.png",
			x: 29,
			y: 79,
			w: 51,
			h: 46
		},
		"reduced-outfit-female-25": {
			type: "spritesheet",
			base: t,
			url: "25.png",
			x: 44,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-26": {
			type: "spritesheet",
			base: t,
			url: "26.png",
			x: 44,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-27": {
			type: "spritesheet",
			base: t,
			url: "27.png",
			x: 43,
			y: 77,
			w: 36,
			h: 48
		},
		"reduced-outfit-female-28": {
			type: "spritesheet",
			base: t,
			url: "28.png",
			x: 44,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-29": {
			type: "spritesheet",
			base: t,
			url: "29.png",
			x: 44,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-3": {
			type: "spritesheet",
			base: t,
			url: "3.png",
			x: 44,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-30": {
			type: "spritesheet",
			base: t,
			url: "30.png",
			x: 44,
			y: 85,
			w: 35,
			h: 40
		},
		"reduced-outfit-female-31": {
			type: "spritesheet",
			base: t,
			url: "31.png",
			x: 44,
			y: 85,
			w: 35,
			h: 40
		},
		"reduced-outfit-female-32": {
			type: "spritesheet",
			base: t,
			url: "32.png",
			x: 44,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-33": {
			type: "spritesheet",
			base: t,
			url: "33.png",
			x: 39,
			y: 83,
			w: 40,
			h: 42
		},
		"reduced-outfit-female-34": {
			type: "spritesheet",
			base: t,
			url: "34.png",
			x: 31,
			y: 80,
			w: 48,
			h: 45
		},
		"reduced-outfit-female-35": {
			type: "spritesheet",
			base: t,
			url: "35.png",
			x: 44,
			y: 84,
			w: 35,
			h: 41
		},
		"reduced-outfit-female-36": {
			type: "spritesheet",
			base: t,
			url: "36.png",
			x: 43,
			y: 86,
			w: 36,
			h: 39
		},
		"reduced-outfit-female-37": {
			type: "spritesheet",
			base: t,
			url: "37.png",
			x: 36,
			y: 83,
			w: 45,
			h: 42
		},
		"reduced-outfit-female-38": {
			type: "spritesheet",
			base: t,
			url: "38.png",
			x: 17,
			y: 0,
			w: 78,
			h: 128
		},
		"reduced-outfit-female-39": {
			type: "spritesheet",
			base: t,
			url: "39.png",
			x: 16,
			y: 68,
			w: 79,
			h: 57
		},
		"reduced-outfit-female-4": {
			type: "spritesheet",
			base: t,
			url: "4.png",
			x: 44,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-40": {
			type: "spritesheet",
			base: t,
			url: "40.png",
			x: 41,
			y: 85,
			w: 39,
			h: 43
		},
		"reduced-outfit-female-41": {
			type: "spritesheet",
			base: t,
			url: "41.png",
			x: 45,
			y: 84,
			w: 35,
			h: 41
		},
		"reduced-outfit-female-42": {
			type: "spritesheet",
			base: t,
			url: "42.png",
			x: 45,
			y: 86,
			w: 35,
			h: 39
		},
		"reduced-outfit-female-43": {
			type: "spritesheet",
			base: t,
			url: "43.png",
			x: 40,
			y: 84,
			w: 52,
			h: 42
		},
		"reduced-outfit-female-44": {
			type: "spritesheet",
			base: t,
			url: "44.png",
			x: 37,
			y: 75,
			w: 47,
			h: 50
		},
		"reduced-outfit-female-45": {
			type: "spritesheet",
			base: t,
			url: "45.png",
			x: 42,
			y: 85,
			w: 43,
			h: 41
		},
		"reduced-outfit-female-46": {
			type: "spritesheet",
			base: t,
			url: "46.png",
			x: 43,
			y: 85,
			w: 36,
			h: 36
		},
		"reduced-outfit-female-47": {
			type: "spritesheet",
			base: t,
			url: "47.png",
			x: 45,
			y: 82,
			w: 35,
			h: 43
		},
		"reduced-outfit-female-48": {
			type: "spritesheet",
			base: t,
			url: "48.png",
			x: 31,
			y: 77,
			w: 49,
			h: 48
		},
		"reduced-outfit-female-49": {
			type: "spritesheet",
			base: t,
			url: "49.png",
			x: 40,
			y: 85,
			w: 44,
			h: 40
		},
		"reduced-outfit-female-5": {
			type: "spritesheet",
			base: t,
			url: "5.png",
			x: 29,
			y: 79,
			w: 51,
			h: 46
		},
		"reduced-outfit-female-50": {
			type: "spritesheet",
			base: t,
			url: "50.png",
			x: 39,
			y: 82,
			w: 42,
			h: 44
		},
		"reduced-outfit-female-51": {
			type: "spritesheet",
			base: t,
			url: "51.png",
			x: 44,
			y: 83,
			w: 38,
			h: 41
		},
		"reduced-outfit-female-52": {
			type: "spritesheet",
			base: t,
			url: "52.png",
			x: 41,
			y: 79,
			w: 43,
			h: 45
		},
		"reduced-outfit-female-53": {
			type: "spritesheet",
			base: t,
			url: "53.png",
			x: 38,
			y: 80,
			w: 45,
			h: 44
		},
		"reduced-outfit-female-54": {
			type: "spritesheet",
			base: t,
			url: "54.png",
			x: 25,
			y: 85,
			w: 63,
			h: 39
		},
		"reduced-outfit-female-6": {
			type: "spritesheet",
			base: t,
			url: "6.png",
			x: 43,
			y: 77,
			w: 36,
			h: 48
		},
		"reduced-outfit-female-7": {
			type: "spritesheet",
			base: t,
			url: "7.png",
			x: 38,
			y: 82,
			w: 41,
			h: 43
		},
		"reduced-outfit-female-8": {
			type: "spritesheet",
			base: t,
			url: "8.png",
			x: 40,
			y: 76,
			w: 39,
			h: 49
		},
		"reduced-outfit-female-9": {
			type: "spritesheet",
			base: t,
			url: "9.png",
			x: 44,
			y: 85,
			w: 35,
			h: 40
		},
		"normal-hat-1": {
			type: "spritesheet",
			base: h,
			url: "1.png",
			x: 49,
			y: 39,
			w: 131,
			h: 89
		},
		"normal-hat-10": {
			type: "spritesheet",
			base: h,
			url: "10.png",
			x: 97,
			y: 14,
			w: 75,
			h: 105
		},
		"normal-hat-11": {
			type: "spritesheet",
			base: h,
			url: "11.png",
			x: 11,
			y: 28,
			w: 172,
			h: 139
		},
		"normal-hat-12": {
			type: "spritesheet",
			base: h,
			url: "12.png",
			x: 73,
			y: 64,
			w: 105,
			h: 61
		},
		"normal-hat-13": {
			type: "spritesheet",
			base: h,
			url: "13.png",
			x: 73,
			y: 64,
			w: 105,
			h: 61
		},
		"normal-hat-14": {
			type: "spritesheet",
			base: h,
			url: "14.png",
			x: 73,
			y: 64,
			w: 105,
			h: 61
		},
		"normal-hat-15": {
			type: "spritesheet",
			base: h,
			url: "15.png",
			x: 58,
			y: 38,
			w: 129,
			h: 85
		},
		"normal-hat-16": {
			type: "spritesheet",
			base: h,
			url: "16.png",
			x: 58,
			y: 38,
			w: 129,
			h: 85
		},
		"normal-hat-17": {
			type: "spritesheet",
			base: h,
			url: "17.png",
			x: 71,
			y: 35,
			w: 118,
			h: 89
		},
		"normal-hat-18": {
			type: "spritesheet",
			base: h,
			url: "18.png",
			x: 65,
			y: 40,
			w: 117,
			h: 84
		},
		"normal-hat-19": {
			type: "spritesheet",
			base: h,
			url: "19.png",
			x: 63,
			y: 37,
			w: 132,
			h: 90
		},
		"normal-hat-2": {
			type: "spritesheet",
			base: h,
			url: "2.png",
			x: 85,
			y: 34,
			w: 94,
			h: 93
		},
		"normal-hat-20": {
			type: "spritesheet",
			base: h,
			url: "20.png",
			x: 71,
			y: 35,
			w: 118,
			h: 89
		},
		"normal-hat-21": {
			type: "spritesheet",
			base: h,
			url: "21.png",
			x: 65,
			y: 40,
			w: 117,
			h: 84
		},
		"normal-hat-22": {
			type: "spritesheet",
			base: h,
			url: "22.png",
			x: 60,
			y: 37,
			w: 117,
			h: 85
		},
		"normal-hat-23": {
			type: "spritesheet",
			base: h,
			url: "23.png",
			x: 93,
			y: 52,
			w: 77,
			h: 58
		},
		"normal-hat-24": {
			type: "spritesheet",
			base: h,
			url: "24.png",
			x: 49,
			y: 53,
			w: 137,
			h: 78
		},
		"normal-hat-25": {
			type: "spritesheet",
			base: h,
			url: "25.png",
			x: 85,
			y: 43,
			w: 95,
			h: 82
		},
		"normal-hat-26": {
			type: "spritesheet",
			base: h,
			url: "26.png",
			x: 69,
			y: 25,
			w: 124,
			h: 99
		},
		"normal-hat-27": {
			type: "spritesheet",
			base: h,
			url: "27.png",
			x: 88,
			y: 80,
			w: 67,
			h: 65
		},
		"normal-hat-28": {
			type: "spritesheet",
			base: h,
			url: "28.png",
			x: 77,
			y: 68,
			w: 100,
			h: 89
		},
		"normal-hat-29": {
			type: "spritesheet",
			base: h,
			url: "29.png",
			x: 62,
			y: 49,
			w: 118,
			h: 99
		},
		"normal-hat-3": {
			type: "spritesheet",
			base: h,
			url: "3.png",
			x: 93,
			y: 61,
			w: 77,
			h: 56
		},
		"normal-hat-30": {
			type: "spritesheet",
			base: h,
			url: "30.png",
			x: 66,
			y: 16,
			w: 124,
			h: 144
		},
		"normal-hat-31": {
			type: "spritesheet",
			base: h,
			url: "31.png",
			x: 55,
			y: 31,
			w: 130,
			h: 110
		},
		"normal-hat-32": {
			type: "spritesheet",
			base: h,
			url: "32.png",
			x: 26,
			y: 35,
			w: 154,
			h: 109
		},
		"normal-hat-33": {
			type: "spritesheet",
			base: h,
			url: "33.png",
			x: 72,
			y: 32,
			w: 117,
			h: 96
		},
		"normal-hat-34": {
			type: "spritesheet",
			base: h,
			url: "34.png",
			x: 99,
			y: 49,
			w: 76,
			h: 71
		},
		"normal-hat-35": {
			type: "spritesheet",
			base: h,
			url: "35.png",
			x: 102,
			y: 54,
			w: 75,
			h: 70
		},
		"normal-hat-36": {
			type: "spritesheet",
			base: h,
			url: "36.png",
			x: 65,
			y: 15,
			w: 129,
			h: 113
		},
		"normal-hat-37": {
			type: "spritesheet",
			base: h,
			url: "37.png",
			x: 61,
			y: 37,
			w: 124,
			h: 104
		},
		"normal-hat-38": {
			type: "spritesheet",
			base: h,
			url: "38.png",
			x: 57,
			y: 37,
			w: 125,
			h: 96
		},
		"normal-hat-39": {
			type: "spritesheet",
			base: h,
			url: "39.png",
			x: 72,
			y: 63,
			w: 120,
			h: 109
		},
		"normal-hat-4": {
			type: "spritesheet",
			base: h,
			url: "4.png",
			x: 61,
			y: 49,
			w: 141,
			h: 78
		},
		"normal-hat-40": {
			type: "spritesheet",
			base: h,
			url: "40.png",
			x: 79,
			y: 84,
			w: 96,
			h: 77
		},
		"normal-hat-41": {
			type: "spritesheet",
			base: h,
			url: "41.png",
			x: 73,
			y: 72,
			w: 109,
			h: 107
		},
		"normal-hat-42": {
			type: "spritesheet",
			base: h,
			url: "42.png",
			x: 63,
			y: 61,
			w: 112,
			h: 93
		},
		"normal-hat-43": {
			type: "spritesheet",
			base: h,
			url: "43.png",
			x: 78,
			y: 48,
			w: 106,
			h: 83
		},
		"normal-hat-44": {
			type: "spritesheet",
			base: h,
			url: "44.png",
			x: 68,
			y: 54,
			w: 125,
			h: 75
		},
		"normal-hat-45": {
			type: "spritesheet",
			base: h,
			url: "45.png",
			x: 73,
			y: 32,
			w: 115,
			h: 93
		},
		"normal-hat-46": {
			type: "spritesheet",
			base: h,
			url: "46.png",
			x: 59,
			y: 41,
			w: 130,
			h: 117
		},
		"normal-hat-47": {
			type: "spritesheet",
			base: h,
			url: "47.png",
			x: 84,
			y: 70,
			w: 85,
			h: 80
		},
		"normal-hat-48": {
			type: "spritesheet",
			base: h,
			url: "48.png",
			x: 64,
			y: 34,
			w: 136,
			h: 124
		},
		"normal-hat-49": {
			type: "spritesheet",
			base: h,
			url: "49.png",
			x: 72,
			y: 45,
			w: 110,
			h: 117
		},
		"normal-hat-5": {
			type: "spritesheet",
			base: h,
			url: "5.png",
			x: 61,
			y: 27,
			w: 151,
			h: 107
		},
		"normal-hat-50": {
			type: "spritesheet",
			base: h,
			url: "50.png",
			x: 27,
			y: 67,
			w: 149,
			h: 110
		},
		"normal-hat-51": {
			type: "spritesheet",
			base: h,
			url: "51.png",
			x: 88,
			y: 83,
			w: 91,
			h: 91
		},
		"normal-hat-52": {
			type: "spritesheet",
			base: h,
			url: "52.png",
			x: 104,
			y: 99,
			w: 69,
			h: 69
		},
		"normal-hat-53": {
			type: "spritesheet",
			base: h,
			url: "53.png",
			x: 93,
			y: 69,
			w: 80,
			h: 95
		},
		"normal-hat-54": {
			type: "spritesheet",
			base: h,
			url: "54.png",
			x: 80,
			y: 55,
			w: 97,
			h: 79
		},
		"normal-hat-55": {
			type: "spritesheet",
			base: h,
			url: "55.png",
			x: 56,
			y: 37,
			w: 118,
			h: 110
		},
		"normal-hat-56": {
			type: "spritesheet",
			base: h,
			url: "56.png",
			x: 75,
			y: 35,
			w: 115,
			h: 163
		},
		"normal-hat-57": {
			type: "spritesheet",
			base: h,
			url: "57.png",
			x: 77,
			y: 34,
			w: 102,
			h: 135
		},
		"normal-hat-58": {
			type: "spritesheet",
			base: h,
			url: "58.png",
			x: 79,
			y: 57,
			w: 100,
			h: 139
		},
		"normal-hat-59": {
			type: "spritesheet",
			base: h,
			url: "59.png",
			x: 69,
			y: 70,
			w: 107,
			h: 89
		},
		"normal-hat-6": {
			type: "spritesheet",
			base: h,
			url: "6.png",
			x: 105,
			y: 34,
			w: 64,
			h: 89
		},
		"normal-hat-60": {
			type: "spritesheet",
			base: h,
			url: "60.png",
			x: 39,
			y: 34,
			w: 133,
			h: 124
		},
		"normal-hat-61": {
			type: "spritesheet",
			base: h,
			url: "61.png",
			x: 18,
			y: 40,
			w: 163,
			h: 111
		},
		"normal-hat-62": {
			type: "spritesheet",
			base: h,
			url: "62.png",
			x: 56,
			y: 23,
			w: 122,
			h: 149
		},
		"normal-hat-63": {
			type: "spritesheet",
			base: h,
			url: "63.png",
			x: 60,
			y: 55,
			w: 135,
			h: 92
		},
		"normal-hat-7": {
			type: "spritesheet",
			base: h,
			url: "7.png",
			x: 69,
			y: 35,
			w: 116,
			h: 83
		},
		"normal-hat-8": {
			type: "spritesheet",
			base: h,
			url: "8.png",
			x: 72,
			y: 57,
			w: 97,
			h: 58
		},
		"normal-hat-9": {
			type: "spritesheet",
			base: h,
			url: "9.png",
			x: 62,
			y: 33,
			w: 127,
			h: 95
		},
		"reduced-hat-1": {
			type: "spritesheet",
			base: s,
			url: "1.png",
			x: 23,
			y: 29,
			w: 65,
			h: 45
		},
		"reduced-hat-10": {
			type: "spritesheet",
			base: s,
			url: "10.png",
			x: 48,
			y: 15,
			w: 37,
			h: 52
		},
		"reduced-hat-11": {
			type: "spritesheet",
			base: s,
			url: "11.png",
			x: 7,
			y: 24,
			w: 86,
			h: 67
		},
		"reduced-hat-12": {
			type: "spritesheet",
			base: s,
			url: "12.png",
			x: 35,
			y: 39,
			w: 53,
			h: 31
		},
		"reduced-hat-13": {
			type: "spritesheet",
			base: s,
			url: "13.png",
			x: 35,
			y: 39,
			w: 53,
			h: 31
		},
		"reduced-hat-14": {
			type: "spritesheet",
			base: s,
			url: "14.png",
			x: 35,
			y: 39,
			w: 53,
			h: 31
		},
		"reduced-hat-15": {
			type: "spritesheet",
			base: s,
			url: "15.png",
			x: 26,
			y: 29,
			w: 64,
			h: 42
		},
		"reduced-hat-16": {
			type: "spritesheet",
			base: s,
			url: "16.png",
			x: 26,
			y: 29,
			w: 64,
			h: 42
		},
		"reduced-hat-17": {
			type: "spritesheet",
			base: s,
			url: "17.png",
			x: 33,
			y: 25,
			w: 59,
			h: 45
		},
		"reduced-hat-18": {
			type: "spritesheet",
			base: s,
			url: "18.png",
			x: 28,
			y: 29,
			w: 60,
			h: 42
		},
		"reduced-hat-19": {
			type: "spritesheet",
			base: s,
			url: "19.png",
			x: 24,
			y: 24,
			w: 69,
			h: 46
		},
		"reduced-hat-2": {
			type: "spritesheet",
			base: s,
			url: "2.png",
			x: 40,
			y: 23,
			w: 48,
			h: 48
		},
		"reduced-hat-20": {
			type: "spritesheet",
			base: s,
			url: "20.png",
			x: 33,
			y: 25,
			w: 59,
			h: 45
		},
		"reduced-hat-21": {
			type: "spritesheet",
			base: s,
			url: "21.png",
			x: 28,
			y: 29,
			w: 60,
			h: 42
		},
		"reduced-hat-22": {
			type: "spritesheet",
			base: s,
			url: "22.png",
			x: 28,
			y: 30,
			w: 60,
			h: 42
		},
		"reduced-hat-23": {
			type: "spritesheet",
			base: s,
			url: "23.png",
			x: 44,
			y: 34,
			w: 39,
			h: 27
		},
		"reduced-hat-24": {
			type: "spritesheet",
			base: s,
			url: "24.png",
			x: 21,
			y: 35,
			w: 69,
			h: 40
		},
		"reduced-hat-25": {
			type: "spritesheet",
			base: s,
			url: "25.png",
			x: 39,
			y: 27,
			w: 48,
			h: 41
		},
		"reduced-hat-26": {
			type: "spritesheet",
			base: s,
			url: "26.png",
			x: 32,
			y: 20,
			w: 62,
			h: 49
		},
		"reduced-hat-27": {
			type: "spritesheet",
			base: s,
			url: "27.png",
			x: 42,
			y: 48,
			w: 33,
			h: 32
		},
		"reduced-hat-28": {
			type: "spritesheet",
			base: s,
			url: "28.png",
			x: 36,
			y: 42,
			w: 50,
			h: 45
		},
		"reduced-hat-29": {
			type: "spritesheet",
			base: s,
			url: "29.png",
			x: 29,
			y: 32,
			w: 59,
			h: 49
		},
		"reduced-hat-3": {
			type: "spritesheet",
			base: s,
			url: "3.png",
			x: 44,
			y: 34,
			w: 39,
			h: 27
		},
		"reduced-hat-30": {
			type: "spritesheet",
			base: s,
			url: "30.png",
			x: 31,
			y: 16,
			w: 62,
			h: 72
		},
		"reduced-hat-31": {
			type: "spritesheet",
			base: s,
			url: "31.png",
			x: 25,
			y: 24,
			w: 65,
			h: 55
		},
		"reduced-hat-32": {
			type: "spritesheet",
			base: s,
			url: "32.png",
			x: 9,
			y: 33,
			w: 77,
			h: 50
		},
		"reduced-hat-33": {
			type: "spritesheet",
			base: s,
			url: "33.png",
			x: 32,
			y: 24,
			w: 59,
			h: 48
		},
		"reduced-hat-34": {
			type: "spritesheet",
			base: s,
			url: "34.png",
			x: 48,
			y: 31,
			w: 38,
			h: 33
		},
		"reduced-hat-35": {
			type: "spritesheet",
			base: s,
			url: "35.png",
			x: 46,
			y: 30,
			w: 39,
			h: 35
		},
		"reduced-hat-36": {
			type: "spritesheet",
			base: s,
			url: "36.png",
			x: 29,
			y: 16,
			w: 65,
			h: 57
		},
		"reduced-hat-37": {
			type: "spritesheet",
			base: s,
			url: "37.png",
			x: 26,
			y: 25,
			w: 62,
			h: 52
		},
		"reduced-hat-38": {
			type: "spritesheet",
			base: s,
			url: "38.png",
			x: 25,
			y: 28,
			w: 63,
			h: 49
		},
		"reduced-hat-39": {
			type: "spritesheet",
			base: s,
			url: "39.png",
			x: 33,
			y: 39,
			w: 61,
			h: 55
		},
		"reduced-hat-4": {
			type: "spritesheet",
			base: s,
			url: "4.png",
			x: 28,
			y: 31,
			w: 70,
			h: 40
		},
		"reduced-hat-40": {
			type: "spritesheet",
			base: s,
			url: "40.png",
			x: 37,
			y: 47,
			w: 49,
			h: 39
		},
		"reduced-hat-41": {
			type: "spritesheet",
			base: s,
			url: "41.png",
			x: 36,
			y: 42,
			w: 55,
			h: 54
		},
		"reduced-hat-42": {
			type: "spritesheet",
			base: s,
			url: "42.png",
			x: 31,
			y: 38,
			w: 57,
			h: 47
		},
		"reduced-hat-43": {
			type: "spritesheet",
			base: s,
			url: "43.png",
			x: 37,
			y: 32,
			w: 54,
			h: 43
		},
		"reduced-hat-44": {
			type: "spritesheet",
			base: s,
			url: "44.png",
			x: 32,
			y: 34,
			w: 63,
			h: 39
		},
		"reduced-hat-45": {
			type: "spritesheet",
			base: s,
			url: "45.png",
			x: 35,
			y: 22,
			w: 58,
			h: 48
		},
		"reduced-hat-46": {
			type: "spritesheet",
			base: s,
			url: "46.png",
			x: 29,
			y: 28,
			w: 66,
			h: 59
		},
		"reduced-hat-47": {
			type: "spritesheet",
			base: s,
			url: "47.png",
			x: 41,
			y: 43,
			w: 44,
			h: 39
		},
		"reduced-hat-48": {
			type: "spritesheet",
			base: s,
			url: "48.png",
			x: 31,
			y: 24,
			w: 68,
			h: 63
		},
		"reduced-hat-49": {
			type: "spritesheet",
			base: s,
			url: "49.png",
			x: 34,
			y: 30,
			w: 55,
			h: 58
		},
		"reduced-hat-5": {
			type: "spritesheet",
			base: s,
			url: "5.png",
			x: 29,
			y: 20,
			w: 76,
			h: 56
		},
		"reduced-hat-50": {
			type: "spritesheet",
			base: s,
			url: "50.png",
			x: 10,
			y: 41,
			w: 76,
			h: 56
		},
		"reduced-hat-51": {
			type: "spritesheet",
			base: s,
			url: "51.png",
			x: 43,
			y: 48,
			w: 46,
			h: 46
		},
		"reduced-hat-52": {
			type: "spritesheet",
			base: s,
			url: "52.png",
			x: 50,
			y: 56,
			w: 35,
			h: 35
		},
		"reduced-hat-53": {
			type: "spritesheet",
			base: s,
			url: "53.png",
			x: 46,
			y: 43,
			w: 40,
			h: 48
		},
		"reduced-hat-54": {
			type: "spritesheet",
			base: s,
			url: "54.png",
			x: 37,
			y: 31,
			w: 50,
			h: 40
		},
		"reduced-hat-55": {
			type: "spritesheet",
			base: s,
			url: "55.png",
			x: 25,
			y: 26,
			w: 60,
			h: 56
		},
		"reduced-hat-56": {
			type: "spritesheet",
			base: s,
			url: "56.png",
			x: 34,
			y: 26,
			w: 59,
			h: 81
		},
		"reduced-hat-57": {
			type: "spritesheet",
			base: s,
			url: "57.png",
			x: 38,
			y: 21,
			w: 52,
			h: 69
		},
		"reduced-hat-58": {
			type: "spritesheet",
			base: s,
			url: "58.png",
			x: 39,
			y: 32,
			w: 51,
			h: 71
		},
		"reduced-hat-59": {
			type: "spritesheet",
			base: s,
			url: "59.png",
			x: 33,
			y: 41,
			w: 54,
			h: 45
		},
		"reduced-hat-6": {
			type: "spritesheet",
			base: s,
			url: "6.png",
			x: 50,
			y: 23,
			w: 32,
			h: 44
		},
		"reduced-hat-60": {
			type: "spritesheet",
			base: s,
			url: "60.png",
			x: 16,
			y: 25,
			w: 68,
			h: 62
		},
		"reduced-hat-61": {
			type: "spritesheet",
			base: s,
			url: "61.png",
			x: 9,
			y: 27,
			w: 81,
			h: 56
		},
		"reduced-hat-62": {
			type: "spritesheet",
			base: s,
			url: "62.png",
			x: 27,
			y: 18,
			w: 62,
			h: 74
		},
		"reduced-hat-63": {
			type: "spritesheet",
			base: s,
			url: "63.png",
			x: 26,
			y: 33,
			w: 69,
			h: 47
		},
		"reduced-hat-7": {
			type: "spritesheet",
			base: s,
			url: "7.png",
			x: 31,
			y: 28,
			w: 58,
			h: 41
		},
		"reduced-hat-8": {
			type: "spritesheet",
			base: s,
			url: "8.png",
			x: 32,
			y: 35,
			w: 49,
			h: 29
		},
		"reduced-hat-9": {
			type: "spritesheet",
			base: s,
			url: "9.png",
			x: 27,
			y: 23,
			w: 64,
			h: 49
		},
		"normal-weapon-1": {
			type: "spritesheet",
			base: d,
			url: "1.png",
			x: 137,
			y: 140,
			w: 59,
			h: 53
		},
		"normal-weapon-10": {
			type: "spritesheet",
			base: d,
			url: "10.png",
			x: 142,
			y: 131,
			w: 64,
			h: 64
		},
		"normal-weapon-11": {
			type: "spritesheet",
			base: d,
			url: "11.png",
			x: 139,
			y: 133,
			w: 64,
			h: 65
		},
		"normal-weapon-12": {
			type: "spritesheet",
			base: d,
			url: "12.png",
			x: 140,
			y: 132,
			w: 63,
			h: 66
		},
		"normal-weapon-13": {
			type: "spritesheet",
			base: d,
			url: "13.png",
			x: 140,
			y: 131,
			w: 66,
			h: 66
		},
		"normal-weapon-14": {
			type: "spritesheet",
			base: d,
			url: "14.png",
			x: 142,
			y: 130,
			w: 61,
			h: 65
		},
		"normal-weapon-15": {
			type: "spritesheet",
			base: d,
			url: "15.png",
			x: 143,
			y: 138,
			w: 56,
			h: 56
		},
		"normal-weapon-16": {
			type: "spritesheet",
			base: d,
			url: "16.png",
			x: 131,
			y: 58,
			w: 106,
			h: 169
		},
		"normal-weapon-17": {
			type: "spritesheet",
			base: d,
			url: "17.png",
			x: 130,
			y: 49,
			w: 105,
			h: 177
		},
		"normal-weapon-18": {
			type: "spritesheet",
			base: d,
			url: "18.png",
			x: 129,
			y: 41,
			w: 114,
			h: 182
		},
		"normal-weapon-19": {
			type: "spritesheet",
			base: d,
			url: "19.png",
			x: 126,
			y: 57,
			w: 110,
			h: 172
		},
		"normal-weapon-2": {
			type: "spritesheet",
			base: d,
			url: "2.png",
			x: 143,
			y: 142,
			w: 52,
			h: 52
		},
		"normal-weapon-20": {
			type: "spritesheet",
			base: d,
			url: "20.png",
			x: 119,
			y: 15,
			w: 141,
			h: 217
		},
		"normal-weapon-21": {
			type: "spritesheet",
			base: d,
			url: "21.png",
			x: 127,
			y: 31,
			w: 141,
			h: 196
		},
		"normal-weapon-22": {
			type: "spritesheet",
			base: d,
			url: "22.png",
			x: 120,
			y: 13,
			w: 130,
			h: 216
		},
		"normal-weapon-23": {
			type: "spritesheet",
			base: d,
			url: "23.png",
			x: 129,
			y: 32,
			w: 149,
			h: 192
		},
		"normal-weapon-24": {
			type: "spritesheet",
			base: d,
			url: "24.png",
			x: 123,
			y: 37,
			w: 141,
			h: 192
		},
		"normal-weapon-25": {
			type: "spritesheet",
			base: d,
			url: "25.png",
			x: 144,
			y: 142,
			w: 51,
			h: 52
		},
		"normal-weapon-26": {
			type: "spritesheet",
			base: d,
			url: "26.png",
			x: 144,
			y: 142,
			w: 51,
			h: 52
		},
		"normal-weapon-27": {
			type: "spritesheet",
			base: d,
			url: "27.png",
			x: 148,
			y: 137,
			w: 52,
			h: 52
		},
		"normal-weapon-28": {
			type: "spritesheet",
			base: d,
			url: "28.png",
			x: 148,
			y: 137,
			w: 52,
			h: 52
		},
		"normal-weapon-29": {
			type: "spritesheet",
			base: d,
			url: "29.png",
			x: 148,
			y: 137,
			w: 52,
			h: 52
		},
		"normal-weapon-3": {
			type: "spritesheet",
			base: d,
			url: "3.png",
			x: 141,
			y: 136,
			w: 62,
			h: 59
		},
		"normal-weapon-30": {
			type: "spritesheet",
			base: d,
			url: "30.png",
			x: 144,
			y: 131,
			w: 61,
			h: 62
		},
		"normal-weapon-31": {
			type: "spritesheet",
			base: d,
			url: "31.png",
			x: 144,
			y: 129,
			w: 64,
			h: 64
		},
		"normal-weapon-32": {
			type: "spritesheet",
			base: d,
			url: "32.png",
			x: 144,
			y: 131,
			w: 61,
			h: 62
		},
		"normal-weapon-33": {
			type: "spritesheet",
			base: d,
			url: "33.png",
			x: 144,
			y: 129,
			w: 64,
			h: 64
		},
		"normal-weapon-34": {
			type: "spritesheet",
			base: d,
			url: "34.png",
			x: 142,
			y: 125,
			w: 71,
			h: 70
		},
		"normal-weapon-35": {
			type: "spritesheet",
			base: d,
			url: "35.png",
			x: 142,
			y: 125,
			w: 71,
			h: 70
		},
		"normal-weapon-36": {
			type: "spritesheet",
			base: d,
			url: "36.png",
			x: 133,
			y: 90,
			w: 86,
			h: 128
		},
		"normal-weapon-37": {
			type: "spritesheet",
			base: d,
			url: "37.png",
			x: 133,
			y: 90,
			w: 86,
			h: 128
		},
		"normal-weapon-38": {
			type: "spritesheet",
			base: d,
			url: "38.png",
			x: 127,
			y: 68,
			w: 112,
			h: 159
		},
		"normal-weapon-39": {
			type: "spritesheet",
			base: d,
			url: "39.png",
			x: 127,
			y: 68,
			w: 112,
			h: 159
		},
		"normal-weapon-4": {
			type: "spritesheet",
			base: d,
			url: "4.png",
			x: 144,
			y: 140,
			w: 53,
			h: 55
		},
		"normal-weapon-40": {
			type: "spritesheet",
			base: d,
			url: "40.png",
			x: 127,
			y: 68,
			w: 112,
			h: 159
		},
		"normal-weapon-41": {
			type: "spritesheet",
			base: d,
			url: "41.png",
			x: 127,
			y: 51,
			w: 108,
			h: 173
		},
		"normal-weapon-42": {
			type: "spritesheet",
			base: d,
			url: "42.png",
			x: 129,
			y: 48,
			w: 119,
			h: 179
		},
		"normal-weapon-43": {
			type: "spritesheet",
			base: d,
			url: "43.png",
			x: 127,
			y: 51,
			w: 108,
			h: 173
		},
		"normal-weapon-44": {
			type: "spritesheet",
			base: d,
			url: "44.png",
			x: 129,
			y: 48,
			w: 119,
			h: 179
		},
		"normal-weapon-45": {
			type: "spritesheet",
			base: d,
			url: "45.png",
			x: 128,
			y: 31,
			w: 113,
			h: 196
		},
		"normal-weapon-46": {
			type: "spritesheet",
			base: d,
			url: "46.png",
			x: 128,
			y: 31,
			w: 113,
			h: 196
		},
		"normal-weapon-47": {
			type: "spritesheet",
			base: d,
			url: "47.png",
			x: 131,
			y: 58,
			w: 106,
			h: 169
		},
		"normal-weapon-48": {
			type: "spritesheet",
			base: d,
			url: "48.png",
			x: 140,
			y: 143,
			w: 54,
			h: 53
		},
		"normal-weapon-49": {
			type: "spritesheet",
			base: d,
			url: "49.png",
			x: 141,
			y: 126,
			w: 70,
			h: 70
		},
		"normal-weapon-5": {
			type: "spritesheet",
			base: d,
			url: "5.png",
			x: 139,
			y: 128,
			w: 54,
			h: 69
		},
		"normal-weapon-50": {
			type: "spritesheet",
			base: d,
			url: "50.png",
			x: 141,
			y: 134,
			w: 62,
			h: 63
		},
		"normal-weapon-51": {
			type: "spritesheet",
			base: d,
			url: "51.png",
			x: 139,
			y: 137,
			w: 62,
			h: 62
		},
		"normal-weapon-52": {
			type: "spritesheet",
			base: d,
			url: "52.png",
			x: 139,
			y: 133,
			w: 66,
			h: 65
		},
		"normal-weapon-53": {
			type: "spritesheet",
			base: d,
			url: "53.png",
			x: 138,
			y: 127,
			w: 72,
			h: 72
		},
		"normal-weapon-54": {
			type: "spritesheet",
			base: d,
			url: "54.png",
			x: 142,
			y: 130,
			w: 63,
			h: 67
		},
		"normal-weapon-55": {
			type: "spritesheet",
			base: d,
			url: "55.png",
			x: 129,
			y: 50,
			w: 108,
			h: 175
		},
		"normal-weapon-56": {
			type: "spritesheet",
			base: d,
			url: "56.png",
			x: 126,
			y: 56,
			w: 115,
			h: 171
		},
		"normal-weapon-57": {
			type: "spritesheet",
			base: d,
			url: "57.png",
			x: 129,
			y: 52,
			w: 109,
			h: 174
		},
		"normal-weapon-58": {
			type: "spritesheet",
			base: d,
			url: "58.png",
			x: 128,
			y: 30,
			w: 124,
			h: 198
		},
		"normal-weapon-59": {
			type: "spritesheet",
			base: d,
			url: "59.png",
			x: 128,
			y: 46,
			w: 113,
			h: 184
		},
		"normal-weapon-6": {
			type: "spritesheet",
			base: d,
			url: "6.png",
			x: 141,
			y: 127,
			w: 64,
			h: 70
		},
		"normal-weapon-60": {
			type: "spritesheet",
			base: d,
			url: "60.png",
			x: 123,
			y: 16,
			w: 129,
			h: 210
		},
		"normal-weapon-61": {
			type: "spritesheet",
			base: d,
			url: "61.png",
			x: 132,
			y: 33,
			w: 103,
			h: 190
		},
		"normal-weapon-62": {
			type: "spritesheet",
			base: d,
			url: "62.png",
			x: 128,
			y: 26,
			w: 127,
			h: 198
		},
		"normal-weapon-63": {
			type: "spritesheet",
			base: d,
			url: "63.png",
			x: 127,
			y: 43,
			w: 118,
			h: 183
		},
		"normal-weapon-64": {
			type: "spritesheet",
			base: d,
			url: "64.png",
			x: 128,
			y: 28,
			w: 122,
			h: 199
		},
		"normal-weapon-65": {
			type: "spritesheet",
			base: d,
			url: "65.png",
			x: 80,
			y: 109,
			w: 48,
			h: 68
		},
		"normal-weapon-66": {
			type: "spritesheet",
			base: d,
			url: "66.png",
			x: 83,
			y: 143,
			w: 107,
			h: 75
		},
		"normal-weapon-67": {
			type: "spritesheet",
			base: d,
			url: "67.png",
			x: 152,
			y: 116,
			w: 55,
			h: 74
		},
		"normal-weapon-68": {
			type: "spritesheet",
			base: d,
			url: "68.png",
			x: 121,
			y: 3,
			w: 144,
			h: 223
		},
		"normal-weapon-69": {
			type: "spritesheet",
			base: d,
			url: "69.png",
			x: 141,
			y: 124,
			w: 55,
			h: 73
		},
		"normal-weapon-7": {
			type: "spritesheet",
			base: d,
			url: "7.png",
			x: 130,
			y: 53,
			w: 108,
			h: 173
		},
		"normal-weapon-70": {
			type: "spritesheet",
			base: d,
			url: "70.png",
			x: 78,
			y: 120,
			w: 66,
			h: 75
		},
		"normal-weapon-71": {
			type: "spritesheet",
			base: d,
			url: "71.png",
			x: 150,
			y: 131,
			w: 59,
			h: 59
		},
		"normal-weapon-72": {
			type: "spritesheet",
			base: d,
			url: "72.png",
			x: 156,
			y: 143,
			w: 47,
			h: 50
		},
		"normal-weapon-73": {
			type: "spritesheet",
			base: d,
			url: "73.png",
			x: 150,
			y: 119,
			w: 70,
			h: 72
		},
		"normal-weapon-74": {
			type: "spritesheet",
			base: d,
			url: "74.png",
			x: 150,
			y: 139,
			w: 48,
			h: 52
		},
		"normal-weapon-75": {
			type: "spritesheet",
			base: d,
			url: "75.png",
			x: 92,
			y: 150,
			w: 157,
			h: 59
		},
		"normal-weapon-76": {
			type: "spritesheet",
			base: d,
			url: "76.png",
			x: 172,
			y: 131,
			w: 50,
			h: 50
		},
		"normal-weapon-77": {
			type: "spritesheet",
			base: d,
			url: "77.png",
			x: 128,
			y: 6,
			w: 112,
			h: 210
		},
		"normal-weapon-78": {
			type: "spritesheet",
			base: d,
			url: "78.png",
			x: 98,
			y: 113,
			w: 139,
			h: 88
		},
		"normal-weapon-79": {
			type: "spritesheet",
			base: d,
			url: "79.png",
			x: 128,
			y: 99,
			w: 85,
			h: 117
		},
		"normal-weapon-8": {
			type: "spritesheet",
			base: d,
			url: "8.png",
			x: 131,
			y: 61,
			w: 104,
			h: 162
		},
		"normal-weapon-9": {
			type: "spritesheet",
			base: d,
			url: "9.png",
			x: 142,
			y: 136,
			w: 59,
			h: 59
		},
		"normal-hair-male-1-1": {
			type: "spritesheet",
			base: n,
			url: "1-1.png",
			x: 88,
			y: 74,
			w: 90,
			h: 75
		},
		"normal-hair-male-1-10": {
			type: "spritesheet",
			base: n,
			url: "1-10.png",
			x: 88,
			y: 74,
			w: 90,
			h: 75
		},
		"normal-hair-male-1-11": {
			type: "spritesheet",
			base: n,
			url: "1-11.png",
			x: 88,
			y: 74,
			w: 90,
			h: 75
		},
		"normal-hair-male-1-12": {
			type: "spritesheet",
			base: n,
			url: "1-12.png",
			x: 88,
			y: 74,
			w: 90,
			h: 75
		},
		"normal-hair-male-1-13": {
			type: "spritesheet",
			base: n,
			url: "1-13.png",
			x: 88,
			y: 74,
			w: 90,
			h: 75
		},
		"normal-hair-male-1-14": {
			type: "spritesheet",
			base: n,
			url: "1-14.png",
			x: 88,
			y: 74,
			w: 90,
			h: 75
		},
		"normal-hair-male-1-15": {
			type: "spritesheet",
			base: n,
			url: "1-15.png",
			x: 88,
			y: 74,
			w: 90,
			h: 75
		},
		"normal-hair-male-1-16": {
			type: "spritesheet",
			base: n,
			url: "1-16.png",
			x: 88,
			y: 74,
			w: 90,
			h: 75
		},
		"normal-hair-male-1-2": {
			type: "spritesheet",
			base: n,
			url: "1-2.png",
			x: 88,
			y: 74,
			w: 90,
			h: 75
		},
		"normal-hair-male-1-3": {
			type: "spritesheet",
			base: n,
			url: "1-3.png",
			x: 88,
			y: 74,
			w: 90,
			h: 75
		},
		"normal-hair-male-1-4": {
			type: "spritesheet",
			base: n,
			url: "1-4.png",
			x: 88,
			y: 74,
			w: 90,
			h: 75
		},
		"normal-hair-male-1-5": {
			type: "spritesheet",
			base: n,
			url: "1-5.png",
			x: 88,
			y: 74,
			w: 90,
			h: 75
		},
		"normal-hair-male-1-6": {
			type: "spritesheet",
			base: n,
			url: "1-6.png",
			x: 88,
			y: 74,
			w: 90,
			h: 75
		},
		"normal-hair-male-1-7": {
			type: "spritesheet",
			base: n,
			url: "1-7.png",
			x: 88,
			y: 74,
			w: 90,
			h: 75
		},
		"normal-hair-male-1-8": {
			type: "spritesheet",
			base: n,
			url: "1-8.png",
			x: 88,
			y: 74,
			w: 90,
			h: 75
		},
		"normal-hair-male-1-9": {
			type: "spritesheet",
			base: n,
			url: "1-9.png",
			x: 88,
			y: 74,
			w: 90,
			h: 75
		},
		"normal-hair-male-2-1": {
			type: "spritesheet",
			base: n,
			url: "2-1.png",
			x: 87,
			y: 51,
			w: 94,
			h: 101
		},
		"normal-hair-male-2-10": {
			type: "spritesheet",
			base: n,
			url: "2-10.png",
			x: 87,
			y: 51,
			w: 94,
			h: 101
		},
		"normal-hair-male-2-11": {
			type: "spritesheet",
			base: n,
			url: "2-11.png",
			x: 87,
			y: 51,
			w: 94,
			h: 101
		},
		"normal-hair-male-2-12": {
			type: "spritesheet",
			base: n,
			url: "2-12.png",
			x: 87,
			y: 51,
			w: 94,
			h: 101
		},
		"normal-hair-male-2-13": {
			type: "spritesheet",
			base: n,
			url: "2-13.png",
			x: 87,
			y: 51,
			w: 94,
			h: 101
		},
		"normal-hair-male-2-14": {
			type: "spritesheet",
			base: n,
			url: "2-14.png",
			x: 87,
			y: 51,
			w: 94,
			h: 101
		},
		"normal-hair-male-2-15": {
			type: "spritesheet",
			base: n,
			url: "2-15.png",
			x: 87,
			y: 51,
			w: 94,
			h: 101
		},
		"normal-hair-male-2-16": {
			type: "spritesheet",
			base: n,
			url: "2-16.png",
			x: 87,
			y: 51,
			w: 94,
			h: 101
		},
		"normal-hair-male-2-2": {
			type: "spritesheet",
			base: n,
			url: "2-2.png",
			x: 87,
			y: 51,
			w: 94,
			h: 101
		},
		"normal-hair-male-2-3": {
			type: "spritesheet",
			base: n,
			url: "2-3.png",
			x: 87,
			y: 51,
			w: 94,
			h: 101
		},
		"normal-hair-male-2-4": {
			type: "spritesheet",
			base: n,
			url: "2-4.png",
			x: 87,
			y: 51,
			w: 94,
			h: 101
		},
		"normal-hair-male-2-5": {
			type: "spritesheet",
			base: n,
			url: "2-5.png",
			x: 87,
			y: 51,
			w: 94,
			h: 101
		},
		"normal-hair-male-2-6": {
			type: "spritesheet",
			base: n,
			url: "2-6.png",
			x: 87,
			y: 51,
			w: 94,
			h: 101
		},
		"normal-hair-male-2-7": {
			type: "spritesheet",
			base: n,
			url: "2-7.png",
			x: 87,
			y: 51,
			w: 94,
			h: 101
		},
		"normal-hair-male-2-8": {
			type: "spritesheet",
			base: n,
			url: "2-8.png",
			x: 87,
			y: 51,
			w: 94,
			h: 101
		},
		"normal-hair-male-2-9": {
			type: "spritesheet",
			base: n,
			url: "2-9.png",
			x: 87,
			y: 51,
			w: 94,
			h: 101
		},
		"normal-hair-male-3-1": {
			type: "spritesheet",
			base: n,
			url: "3-1.png",
			x: 86,
			y: 55,
			w: 100,
			h: 97
		},
		"normal-hair-male-3-10": {
			type: "spritesheet",
			base: n,
			url: "3-10.png",
			x: 86,
			y: 55,
			w: 100,
			h: 97
		},
		"normal-hair-male-3-11": {
			type: "spritesheet",
			base: n,
			url: "3-11.png",
			x: 86,
			y: 55,
			w: 100,
			h: 97
		},
		"normal-hair-male-3-12": {
			type: "spritesheet",
			base: n,
			url: "3-12.png",
			x: 86,
			y: 55,
			w: 100,
			h: 97
		},
		"normal-hair-male-3-13": {
			type: "spritesheet",
			base: n,
			url: "3-13.png",
			x: 86,
			y: 55,
			w: 100,
			h: 97
		},
		"normal-hair-male-3-14": {
			type: "spritesheet",
			base: n,
			url: "3-14.png",
			x: 86,
			y: 55,
			w: 100,
			h: 97
		},
		"normal-hair-male-3-15": {
			type: "spritesheet",
			base: n,
			url: "3-15.png",
			x: 86,
			y: 55,
			w: 100,
			h: 97
		},
		"normal-hair-male-3-16": {
			type: "spritesheet",
			base: n,
			url: "3-16.png",
			x: 86,
			y: 55,
			w: 100,
			h: 97
		},
		"normal-hair-male-3-2": {
			type: "spritesheet",
			base: n,
			url: "3-2.png",
			x: 86,
			y: 55,
			w: 100,
			h: 97
		},
		"normal-hair-male-3-3": {
			type: "spritesheet",
			base: n,
			url: "3-3.png",
			x: 86,
			y: 55,
			w: 100,
			h: 97
		},
		"normal-hair-male-3-4": {
			type: "spritesheet",
			base: n,
			url: "3-4.png",
			x: 86,
			y: 55,
			w: 100,
			h: 97
		},
		"normal-hair-male-3-5": {
			type: "spritesheet",
			base: n,
			url: "3-5.png",
			x: 86,
			y: 55,
			w: 100,
			h: 97
		},
		"normal-hair-male-3-6": {
			type: "spritesheet",
			base: n,
			url: "3-6.png",
			x: 86,
			y: 55,
			w: 100,
			h: 97
		},
		"normal-hair-male-3-7": {
			type: "spritesheet",
			base: n,
			url: "3-7.png",
			x: 86,
			y: 55,
			w: 100,
			h: 97
		},
		"normal-hair-male-3-8": {
			type: "spritesheet",
			base: n,
			url: "3-8.png",
			x: 86,
			y: 55,
			w: 100,
			h: 97
		},
		"normal-hair-male-3-9": {
			type: "spritesheet",
			base: n,
			url: "3-9.png",
			x: 86,
			y: 55,
			w: 100,
			h: 97
		},
		"normal-hair-male-4-1": {
			type: "spritesheet",
			base: n,
			url: "4-1.png",
			x: 86,
			y: 73,
			w: 92,
			h: 77
		},
		"normal-hair-male-4-10": {
			type: "spritesheet",
			base: n,
			url: "4-10.png",
			x: 86,
			y: 73,
			w: 92,
			h: 77
		},
		"normal-hair-male-4-11": {
			type: "spritesheet",
			base: n,
			url: "4-11.png",
			x: 86,
			y: 73,
			w: 92,
			h: 77
		},
		"normal-hair-male-4-12": {
			type: "spritesheet",
			base: n,
			url: "4-12.png",
			x: 86,
			y: 73,
			w: 92,
			h: 77
		},
		"normal-hair-male-4-13": {
			type: "spritesheet",
			base: n,
			url: "4-13.png",
			x: 86,
			y: 73,
			w: 92,
			h: 77
		},
		"normal-hair-male-4-14": {
			type: "spritesheet",
			base: n,
			url: "4-14.png",
			x: 86,
			y: 73,
			w: 92,
			h: 77
		},
		"normal-hair-male-4-15": {
			type: "spritesheet",
			base: n,
			url: "4-15.png",
			x: 86,
			y: 73,
			w: 92,
			h: 77
		},
		"normal-hair-male-4-16": {
			type: "spritesheet",
			base: n,
			url: "4-16.png",
			x: 86,
			y: 73,
			w: 92,
			h: 77
		},
		"normal-hair-male-4-2": {
			type: "spritesheet",
			base: n,
			url: "4-2.png",
			x: 86,
			y: 73,
			w: 92,
			h: 77
		},
		"normal-hair-male-4-3": {
			type: "spritesheet",
			base: n,
			url: "4-3.png",
			x: 86,
			y: 73,
			w: 92,
			h: 77
		},
		"normal-hair-male-4-4": {
			type: "spritesheet",
			base: n,
			url: "4-4.png",
			x: 86,
			y: 73,
			w: 92,
			h: 77
		},
		"normal-hair-male-4-5": {
			type: "spritesheet",
			base: n,
			url: "4-5.png",
			x: 86,
			y: 73,
			w: 92,
			h: 77
		},
		"normal-hair-male-4-6": {
			type: "spritesheet",
			base: n,
			url: "4-6.png",
			x: 86,
			y: 73,
			w: 92,
			h: 77
		},
		"normal-hair-male-4-7": {
			type: "spritesheet",
			base: n,
			url: "4-7.png",
			x: 86,
			y: 73,
			w: 92,
			h: 77
		},
		"normal-hair-male-4-8": {
			type: "spritesheet",
			base: n,
			url: "4-8.png",
			x: 86,
			y: 73,
			w: 92,
			h: 77
		},
		"normal-hair-male-4-9": {
			type: "spritesheet",
			base: n,
			url: "4-9.png",
			x: 86,
			y: 73,
			w: 92,
			h: 77
		},
		"normal-hair-male-5-1": {
			type: "spritesheet",
			base: n,
			url: "5-1.png",
			x: 89,
			y: 75,
			w: 87,
			h: 76
		},
		"normal-hair-male-5-10": {
			type: "spritesheet",
			base: n,
			url: "5-10.png",
			x: 89,
			y: 75,
			w: 87,
			h: 76
		},
		"normal-hair-male-5-11": {
			type: "spritesheet",
			base: n,
			url: "5-11.png",
			x: 89,
			y: 75,
			w: 87,
			h: 76
		},
		"normal-hair-male-5-12": {
			type: "spritesheet",
			base: n,
			url: "5-12.png",
			x: 89,
			y: 75,
			w: 87,
			h: 76
		},
		"normal-hair-male-5-13": {
			type: "spritesheet",
			base: n,
			url: "5-13.png",
			x: 89,
			y: 75,
			w: 87,
			h: 76
		},
		"normal-hair-male-5-14": {
			type: "spritesheet",
			base: n,
			url: "5-14.png",
			x: 89,
			y: 75,
			w: 87,
			h: 76
		},
		"normal-hair-male-5-15": {
			type: "spritesheet",
			base: n,
			url: "5-15.png",
			x: 89,
			y: 75,
			w: 87,
			h: 76
		},
		"normal-hair-male-5-16": {
			type: "spritesheet",
			base: n,
			url: "5-16.png",
			x: 89,
			y: 75,
			w: 87,
			h: 76
		},
		"normal-hair-male-5-2": {
			type: "spritesheet",
			base: n,
			url: "5-2.png",
			x: 89,
			y: 75,
			w: 87,
			h: 76
		},
		"normal-hair-male-5-3": {
			type: "spritesheet",
			base: n,
			url: "5-3.png",
			x: 89,
			y: 75,
			w: 87,
			h: 76
		},
		"normal-hair-male-5-4": {
			type: "spritesheet",
			base: n,
			url: "5-4.png",
			x: 89,
			y: 75,
			w: 87,
			h: 76
		},
		"normal-hair-male-5-5": {
			type: "spritesheet",
			base: n,
			url: "5-5.png",
			x: 89,
			y: 75,
			w: 87,
			h: 76
		},
		"normal-hair-male-5-6": {
			type: "spritesheet",
			base: n,
			url: "5-6.png",
			x: 89,
			y: 75,
			w: 87,
			h: 76
		},
		"normal-hair-male-5-7": {
			type: "spritesheet",
			base: n,
			url: "5-7.png",
			x: 89,
			y: 75,
			w: 87,
			h: 76
		},
		"normal-hair-male-5-8": {
			type: "spritesheet",
			base: n,
			url: "5-8.png",
			x: 89,
			y: 75,
			w: 87,
			h: 76
		},
		"normal-hair-male-5-9": {
			type: "spritesheet",
			base: n,
			url: "5-9.png",
			x: 89,
			y: 75,
			w: 87,
			h: 76
		},
		"normal-hair-male-6-1": {
			type: "spritesheet",
			base: n,
			url: "6-1.png",
			x: 87,
			y: 75,
			w: 85,
			h: 76
		},
		"normal-hair-male-6-10": {
			type: "spritesheet",
			base: n,
			url: "6-10.png",
			x: 87,
			y: 75,
			w: 85,
			h: 76
		},
		"normal-hair-male-6-11": {
			type: "spritesheet",
			base: n,
			url: "6-11.png",
			x: 87,
			y: 75,
			w: 85,
			h: 76
		},
		"normal-hair-male-6-12": {
			type: "spritesheet",
			base: n,
			url: "6-12.png",
			x: 87,
			y: 75,
			w: 85,
			h: 76
		},
		"normal-hair-male-6-13": {
			type: "spritesheet",
			base: n,
			url: "6-13.png",
			x: 87,
			y: 75,
			w: 85,
			h: 76
		},
		"normal-hair-male-6-14": {
			type: "spritesheet",
			base: n,
			url: "6-14.png",
			x: 87,
			y: 75,
			w: 85,
			h: 76
		},
		"normal-hair-male-6-15": {
			type: "spritesheet",
			base: n,
			url: "6-15.png",
			x: 87,
			y: 75,
			w: 85,
			h: 76
		},
		"normal-hair-male-6-16": {
			type: "spritesheet",
			base: n,
			url: "6-16.png",
			x: 87,
			y: 75,
			w: 85,
			h: 76
		},
		"normal-hair-male-6-2": {
			type: "spritesheet",
			base: n,
			url: "6-2.png",
			x: 87,
			y: 75,
			w: 85,
			h: 76
		},
		"normal-hair-male-6-3": {
			type: "spritesheet",
			base: n,
			url: "6-3.png",
			x: 87,
			y: 75,
			w: 85,
			h: 76
		},
		"normal-hair-male-6-4": {
			type: "spritesheet",
			base: n,
			url: "6-4.png",
			x: 87,
			y: 75,
			w: 85,
			h: 76
		},
		"normal-hair-male-6-5": {
			type: "spritesheet",
			base: n,
			url: "6-5.png",
			x: 87,
			y: 75,
			w: 85,
			h: 76
		},
		"normal-hair-male-6-6": {
			type: "spritesheet",
			base: n,
			url: "6-6.png",
			x: 87,
			y: 75,
			w: 85,
			h: 76
		},
		"normal-hair-male-6-7": {
			type: "spritesheet",
			base: n,
			url: "6-7.png",
			x: 87,
			y: 75,
			w: 85,
			h: 76
		},
		"normal-hair-male-6-8": {
			type: "spritesheet",
			base: n,
			url: "6-8.png",
			x: 87,
			y: 75,
			w: 85,
			h: 76
		},
		"normal-hair-male-6-9": {
			type: "spritesheet",
			base: n,
			url: "6-9.png",
			x: 87,
			y: 75,
			w: 85,
			h: 76
		},
		"normal-hair-male-7-1": {
			type: "spritesheet",
			base: n,
			url: "7-1.png",
			x: 76,
			y: 73,
			w: 105,
			h: 78
		},
		"normal-hair-male-7-10": {
			type: "spritesheet",
			base: n,
			url: "7-10.png",
			x: 76,
			y: 73,
			w: 105,
			h: 78
		},
		"normal-hair-male-7-11": {
			type: "spritesheet",
			base: n,
			url: "7-11.png",
			x: 76,
			y: 73,
			w: 105,
			h: 78
		},
		"normal-hair-male-7-12": {
			type: "spritesheet",
			base: n,
			url: "7-12.png",
			x: 76,
			y: 73,
			w: 105,
			h: 78
		},
		"normal-hair-male-7-13": {
			type: "spritesheet",
			base: n,
			url: "7-13.png",
			x: 76,
			y: 73,
			w: 105,
			h: 78
		},
		"normal-hair-male-7-14": {
			type: "spritesheet",
			base: n,
			url: "7-14.png",
			x: 76,
			y: 73,
			w: 105,
			h: 78
		},
		"normal-hair-male-7-15": {
			type: "spritesheet",
			base: n,
			url: "7-15.png",
			x: 76,
			y: 73,
			w: 105,
			h: 78
		},
		"normal-hair-male-7-16": {
			type: "spritesheet",
			base: n,
			url: "7-16.png",
			x: 76,
			y: 73,
			w: 105,
			h: 78
		},
		"normal-hair-male-7-2": {
			type: "spritesheet",
			base: n,
			url: "7-2.png",
			x: 76,
			y: 73,
			w: 105,
			h: 78
		},
		"normal-hair-male-7-3": {
			type: "spritesheet",
			base: n,
			url: "7-3.png",
			x: 76,
			y: 73,
			w: 105,
			h: 78
		},
		"normal-hair-male-7-4": {
			type: "spritesheet",
			base: n,
			url: "7-4.png",
			x: 76,
			y: 73,
			w: 105,
			h: 78
		},
		"normal-hair-male-7-5": {
			type: "spritesheet",
			base: n,
			url: "7-5.png",
			x: 76,
			y: 73,
			w: 105,
			h: 78
		},
		"normal-hair-male-7-6": {
			type: "spritesheet",
			base: n,
			url: "7-6.png",
			x: 76,
			y: 73,
			w: 105,
			h: 78
		},
		"normal-hair-male-7-7": {
			type: "spritesheet",
			base: n,
			url: "7-7.png",
			x: 76,
			y: 73,
			w: 105,
			h: 78
		},
		"normal-hair-male-7-8": {
			type: "spritesheet",
			base: n,
			url: "7-8.png",
			x: 76,
			y: 73,
			w: 105,
			h: 78
		},
		"normal-hair-male-7-9": {
			type: "spritesheet",
			base: n,
			url: "7-9.png",
			x: 76,
			y: 73,
			w: 105,
			h: 78
		},
		"normal-hair-male-8-1": {
			type: "spritesheet",
			base: n,
			url: "8-1.png",
			x: 82,
			y: 73,
			w: 104,
			h: 81
		},
		"normal-hair-male-8-10": {
			type: "spritesheet",
			base: n,
			url: "8-10.png",
			x: 82,
			y: 73,
			w: 104,
			h: 81
		},
		"normal-hair-male-8-11": {
			type: "spritesheet",
			base: n,
			url: "8-11.png",
			x: 82,
			y: 73,
			w: 104,
			h: 81
		},
		"normal-hair-male-8-12": {
			type: "spritesheet",
			base: n,
			url: "8-12.png",
			x: 82,
			y: 73,
			w: 104,
			h: 81
		},
		"normal-hair-male-8-13": {
			type: "spritesheet",
			base: n,
			url: "8-13.png",
			x: 82,
			y: 73,
			w: 104,
			h: 81
		},
		"normal-hair-male-8-14": {
			type: "spritesheet",
			base: n,
			url: "8-14.png",
			x: 82,
			y: 73,
			w: 104,
			h: 81
		},
		"normal-hair-male-8-15": {
			type: "spritesheet",
			base: n,
			url: "8-15.png",
			x: 82,
			y: 73,
			w: 104,
			h: 81
		},
		"normal-hair-male-8-16": {
			type: "spritesheet",
			base: n,
			url: "8-16.png",
			x: 82,
			y: 73,
			w: 104,
			h: 81
		},
		"normal-hair-male-8-2": {
			type: "spritesheet",
			base: n,
			url: "8-2.png",
			x: 82,
			y: 73,
			w: 104,
			h: 81
		},
		"normal-hair-male-8-3": {
			type: "spritesheet",
			base: n,
			url: "8-3.png",
			x: 82,
			y: 73,
			w: 104,
			h: 81
		},
		"normal-hair-male-8-4": {
			type: "spritesheet",
			base: n,
			url: "8-4.png",
			x: 82,
			y: 73,
			w: 104,
			h: 81
		},
		"normal-hair-male-8-5": {
			type: "spritesheet",
			base: n,
			url: "8-5.png",
			x: 82,
			y: 73,
			w: 104,
			h: 81
		},
		"normal-hair-male-8-6": {
			type: "spritesheet",
			base: n,
			url: "8-6.png",
			x: 82,
			y: 73,
			w: 104,
			h: 81
		},
		"normal-hair-male-8-7": {
			type: "spritesheet",
			base: n,
			url: "8-7.png",
			x: 82,
			y: 73,
			w: 104,
			h: 81
		},
		"normal-hair-male-8-8": {
			type: "spritesheet",
			base: n,
			url: "8-8.png",
			x: 82,
			y: 73,
			w: 104,
			h: 81
		},
		"normal-hair-male-8-9": {
			type: "spritesheet",
			base: n,
			url: "8-9.png",
			x: 82,
			y: 73,
			w: 104,
			h: 81
		},
		"reduced-hair-male-1-1": {
			type: "spritesheet",
			base: i,
			url: "1-1.png",
			x: 41,
			y: 45,
			w: 46,
			h: 38
		},
		"reduced-hair-male-1-10": {
			type: "spritesheet",
			base: i,
			url: "1-10.png",
			x: 41,
			y: 44,
			w: 46,
			h: 38
		},
		"reduced-hair-male-1-11": {
			type: "spritesheet",
			base: i,
			url: "1-11.png",
			x: 41,
			y: 44,
			w: 46,
			h: 38
		},
		"reduced-hair-male-1-12": {
			type: "spritesheet",
			base: i,
			url: "1-12.png",
			x: 41,
			y: 44,
			w: 46,
			h: 38
		},
		"reduced-hair-male-1-13": {
			type: "spritesheet",
			base: i,
			url: "1-13.png",
			x: 41,
			y: 44,
			w: 46,
			h: 38
		},
		"reduced-hair-male-1-14": {
			type: "spritesheet",
			base: i,
			url: "1-14.png",
			x: 41,
			y: 44,
			w: 46,
			h: 38
		},
		"reduced-hair-male-1-15": {
			type: "spritesheet",
			base: i,
			url: "1-15.png",
			x: 41,
			y: 44,
			w: 46,
			h: 38
		},
		"reduced-hair-male-1-16": {
			type: "spritesheet",
			base: i,
			url: "1-16.png",
			x: 41,
			y: 44,
			w: 46,
			h: 38
		},
		"reduced-hair-male-1-2": {
			type: "spritesheet",
			base: i,
			url: "1-2.png",
			x: 41,
			y: 44,
			w: 46,
			h: 38
		},
		"reduced-hair-male-1-3": {
			type: "spritesheet",
			base: i,
			url: "1-3.png",
			x: 41,
			y: 44,
			w: 46,
			h: 38
		},
		"reduced-hair-male-1-4": {
			type: "spritesheet",
			base: i,
			url: "1-4.png",
			x: 41,
			y: 44,
			w: 46,
			h: 38
		},
		"reduced-hair-male-1-5": {
			type: "spritesheet",
			base: i,
			url: "1-5.png",
			x: 41,
			y: 44,
			w: 46,
			h: 38
		},
		"reduced-hair-male-1-6": {
			type: "spritesheet",
			base: i,
			url: "1-6.png",
			x: 41,
			y: 44,
			w: 46,
			h: 38
		},
		"reduced-hair-male-1-7": {
			type: "spritesheet",
			base: i,
			url: "1-7.png",
			x: 41,
			y: 44,
			w: 46,
			h: 38
		},
		"reduced-hair-male-1-8": {
			type: "spritesheet",
			base: i,
			url: "1-8.png",
			x: 41,
			y: 44,
			w: 46,
			h: 38
		},
		"reduced-hair-male-1-9": {
			type: "spritesheet",
			base: i,
			url: "1-9.png",
			x: 41,
			y: 44,
			w: 46,
			h: 38
		},
		"reduced-hair-male-2-1": {
			type: "spritesheet",
			base: i,
			url: "2-1.png",
			x: 41,
			y: 32,
			w: 47,
			h: 52
		},
		"reduced-hair-male-2-10": {
			type: "spritesheet",
			base: i,
			url: "2-10.png",
			x: 41,
			y: 32,
			w: 47,
			h: 52
		},
		"reduced-hair-male-2-11": {
			type: "spritesheet",
			base: i,
			url: "2-11.png",
			x: 41,
			y: 32,
			w: 47,
			h: 52
		},
		"reduced-hair-male-2-12": {
			type: "spritesheet",
			base: i,
			url: "2-12.png",
			x: 41,
			y: 32,
			w: 47,
			h: 52
		},
		"reduced-hair-male-2-13": {
			type: "spritesheet",
			base: i,
			url: "2-13.png",
			x: 41,
			y: 32,
			w: 47,
			h: 52
		},
		"reduced-hair-male-2-14": {
			type: "spritesheet",
			base: i,
			url: "2-14.png",
			x: 41,
			y: 32,
			w: 47,
			h: 52
		},
		"reduced-hair-male-2-15": {
			type: "spritesheet",
			base: i,
			url: "2-15.png",
			x: 41,
			y: 32,
			w: 47,
			h: 52
		},
		"reduced-hair-male-2-16": {
			type: "spritesheet",
			base: i,
			url: "2-16.png",
			x: 41,
			y: 32,
			w: 47,
			h: 52
		},
		"reduced-hair-male-2-2": {
			type: "spritesheet",
			base: i,
			url: "2-2.png",
			x: 41,
			y: 32,
			w: 47,
			h: 52
		},
		"reduced-hair-male-2-3": {
			type: "spritesheet",
			base: i,
			url: "2-3.png",
			x: 41,
			y: 32,
			w: 47,
			h: 52
		},
		"reduced-hair-male-2-4": {
			type: "spritesheet",
			base: i,
			url: "2-4.png",
			x: 41,
			y: 32,
			w: 47,
			h: 52
		},
		"reduced-hair-male-2-5": {
			type: "spritesheet",
			base: i,
			url: "2-5.png",
			x: 41,
			y: 32,
			w: 47,
			h: 52
		},
		"reduced-hair-male-2-6": {
			type: "spritesheet",
			base: i,
			url: "2-6.png",
			x: 41,
			y: 32,
			w: 47,
			h: 52
		},
		"reduced-hair-male-2-7": {
			type: "spritesheet",
			base: i,
			url: "2-7.png",
			x: 41,
			y: 32,
			w: 47,
			h: 52
		},
		"reduced-hair-male-2-8": {
			type: "spritesheet",
			base: i,
			url: "2-8.png",
			x: 41,
			y: 32,
			w: 47,
			h: 52
		},
		"reduced-hair-male-2-9": {
			type: "spritesheet",
			base: i,
			url: "2-9.png",
			x: 41,
			y: 32,
			w: 47,
			h: 52
		},
		"reduced-hair-male-3-1": {
			type: "spritesheet",
			base: i,
			url: "3-1.png",
			x: 41,
			y: 36,
			w: 50,
			h: 48
		},
		"reduced-hair-male-3-10": {
			type: "spritesheet",
			base: i,
			url: "3-10.png",
			x: 41,
			y: 36,
			w: 50,
			h: 48
		},
		"reduced-hair-male-3-11": {
			type: "spritesheet",
			base: i,
			url: "3-11.png",
			x: 41,
			y: 36,
			w: 50,
			h: 48
		},
		"reduced-hair-male-3-12": {
			type: "spritesheet",
			base: i,
			url: "3-12.png",
			x: 41,
			y: 36,
			w: 50,
			h: 48
		},
		"reduced-hair-male-3-13": {
			type: "spritesheet",
			base: i,
			url: "3-13.png",
			x: 41,
			y: 36,
			w: 50,
			h: 48
		},
		"reduced-hair-male-3-14": {
			type: "spritesheet",
			base: i,
			url: "3-14.png",
			x: 41,
			y: 36,
			w: 50,
			h: 48
		},
		"reduced-hair-male-3-15": {
			type: "spritesheet",
			base: i,
			url: "3-15.png",
			x: 41,
			y: 36,
			w: 50,
			h: 48
		},
		"reduced-hair-male-3-16": {
			type: "spritesheet",
			base: i,
			url: "3-16.png",
			x: 41,
			y: 36,
			w: 50,
			h: 48
		},
		"reduced-hair-male-3-2": {
			type: "spritesheet",
			base: i,
			url: "3-2.png",
			x: 41,
			y: 36,
			w: 50,
			h: 48
		},
		"reduced-hair-male-3-3": {
			type: "spritesheet",
			base: i,
			url: "3-3.png",
			x: 41,
			y: 36,
			w: 50,
			h: 48
		},
		"reduced-hair-male-3-4": {
			type: "spritesheet",
			base: i,
			url: "3-4.png",
			x: 41,
			y: 36,
			w: 50,
			h: 48
		},
		"reduced-hair-male-3-5": {
			type: "spritesheet",
			base: i,
			url: "3-5.png",
			x: 41,
			y: 36,
			w: 50,
			h: 48
		},
		"reduced-hair-male-3-6": {
			type: "spritesheet",
			base: i,
			url: "3-6.png",
			x: 41,
			y: 36,
			w: 50,
			h: 48
		},
		"reduced-hair-male-3-7": {
			type: "spritesheet",
			base: i,
			url: "3-7.png",
			x: 41,
			y: 36,
			w: 50,
			h: 48
		},
		"reduced-hair-male-3-8": {
			type: "spritesheet",
			base: i,
			url: "3-8.png",
			x: 41,
			y: 36,
			w: 50,
			h: 48
		},
		"reduced-hair-male-3-9": {
			type: "spritesheet",
			base: i,
			url: "3-9.png",
			x: 41,
			y: 36,
			w: 50,
			h: 48
		},
		"reduced-hair-male-4-1": {
			type: "spritesheet",
			base: i,
			url: "4-1.png",
			x: 40,
			y: 44,
			w: 47,
			h: 39
		},
		"reduced-hair-male-4-10": {
			type: "spritesheet",
			base: i,
			url: "4-10.png",
			x: 40,
			y: 44,
			w: 47,
			h: 39
		},
		"reduced-hair-male-4-11": {
			type: "spritesheet",
			base: i,
			url: "4-11.png",
			x: 40,
			y: 44,
			w: 47,
			h: 39
		},
		"reduced-hair-male-4-12": {
			type: "spritesheet",
			base: i,
			url: "4-12.png",
			x: 40,
			y: 44,
			w: 47,
			h: 39
		},
		"reduced-hair-male-4-13": {
			type: "spritesheet",
			base: i,
			url: "4-13.png",
			x: 40,
			y: 44,
			w: 47,
			h: 39
		},
		"reduced-hair-male-4-14": {
			type: "spritesheet",
			base: i,
			url: "4-14.png",
			x: 40,
			y: 44,
			w: 47,
			h: 39
		},
		"reduced-hair-male-4-15": {
			type: "spritesheet",
			base: i,
			url: "4-15.png",
			x: 40,
			y: 44,
			w: 47,
			h: 39
		},
		"reduced-hair-male-4-16": {
			type: "spritesheet",
			base: i,
			url: "4-16.png",
			x: 40,
			y: 44,
			w: 47,
			h: 39
		},
		"reduced-hair-male-4-2": {
			type: "spritesheet",
			base: i,
			url: "4-2.png",
			x: 40,
			y: 44,
			w: 47,
			h: 39
		},
		"reduced-hair-male-4-3": {
			type: "spritesheet",
			base: i,
			url: "4-3.png",
			x: 40,
			y: 44,
			w: 47,
			h: 39
		},
		"reduced-hair-male-4-4": {
			type: "spritesheet",
			base: i,
			url: "4-4.png",
			x: 40,
			y: 44,
			w: 47,
			h: 39
		},
		"reduced-hair-male-4-5": {
			type: "spritesheet",
			base: i,
			url: "4-5.png",
			x: 40,
			y: 44,
			w: 47,
			h: 39
		},
		"reduced-hair-male-4-6": {
			type: "spritesheet",
			base: i,
			url: "4-6.png",
			x: 40,
			y: 44,
			w: 47,
			h: 39
		},
		"reduced-hair-male-4-7": {
			type: "spritesheet",
			base: i,
			url: "4-7.png",
			x: 40,
			y: 44,
			w: 47,
			h: 39
		},
		"reduced-hair-male-4-8": {
			type: "spritesheet",
			base: i,
			url: "4-8.png",
			x: 40,
			y: 44,
			w: 47,
			h: 39
		},
		"reduced-hair-male-4-9": {
			type: "spritesheet",
			base: i,
			url: "4-9.png",
			x: 40,
			y: 44,
			w: 47,
			h: 39
		},
		"reduced-hair-male-5-1": {
			type: "spritesheet",
			base: i,
			url: "5-1.png",
			x: 42,
			y: 44,
			w: 44,
			h: 39
		},
		"reduced-hair-male-5-10": {
			type: "spritesheet",
			base: i,
			url: "5-10.png",
			x: 42,
			y: 44,
			w: 44,
			h: 39
		},
		"reduced-hair-male-5-11": {
			type: "spritesheet",
			base: i,
			url: "5-11.png",
			x: 42,
			y: 44,
			w: 44,
			h: 39
		},
		"reduced-hair-male-5-12": {
			type: "spritesheet",
			base: i,
			url: "5-12.png",
			x: 42,
			y: 44,
			w: 44,
			h: 39
		},
		"reduced-hair-male-5-13": {
			type: "spritesheet",
			base: i,
			url: "5-13.png",
			x: 42,
			y: 44,
			w: 44,
			h: 39
		},
		"reduced-hair-male-5-14": {
			type: "spritesheet",
			base: i,
			url: "5-14.png",
			x: 42,
			y: 44,
			w: 44,
			h: 39
		},
		"reduced-hair-male-5-15": {
			type: "spritesheet",
			base: i,
			url: "5-15.png",
			x: 42,
			y: 44,
			w: 44,
			h: 39
		},
		"reduced-hair-male-5-16": {
			type: "spritesheet",
			base: i,
			url: "5-16.png",
			x: 42,
			y: 44,
			w: 44,
			h: 39
		},
		"reduced-hair-male-5-2": {
			type: "spritesheet",
			base: i,
			url: "5-2.png",
			x: 42,
			y: 44,
			w: 44,
			h: 39
		},
		"reduced-hair-male-5-3": {
			type: "spritesheet",
			base: i,
			url: "5-3.png",
			x: 42,
			y: 44,
			w: 44,
			h: 39
		},
		"reduced-hair-male-5-4": {
			type: "spritesheet",
			base: i,
			url: "5-4.png",
			x: 42,
			y: 44,
			w: 44,
			h: 39
		},
		"reduced-hair-male-5-5": {
			type: "spritesheet",
			base: i,
			url: "5-5.png",
			x: 42,
			y: 44,
			w: 44,
			h: 39
		},
		"reduced-hair-male-5-6": {
			type: "spritesheet",
			base: i,
			url: "5-6.png",
			x: 42,
			y: 44,
			w: 44,
			h: 39
		},
		"reduced-hair-male-5-7": {
			type: "spritesheet",
			base: i,
			url: "5-7.png",
			x: 42,
			y: 44,
			w: 44,
			h: 39
		},
		"reduced-hair-male-5-8": {
			type: "spritesheet",
			base: i,
			url: "5-8.png",
			x: 42,
			y: 44,
			w: 44,
			h: 39
		},
		"reduced-hair-male-5-9": {
			type: "spritesheet",
			base: i,
			url: "5-9.png",
			x: 42,
			y: 44,
			w: 44,
			h: 39
		},
		"reduced-hair-male-6-1": {
			type: "spritesheet",
			base: i,
			url: "6-1.png",
			x: 41,
			y: 44,
			w: 45,
			h: 38
		},
		"reduced-hair-male-6-10": {
			type: "spritesheet",
			base: i,
			url: "6-10.png",
			x: 41,
			y: 44,
			w: 45,
			h: 38
		},
		"reduced-hair-male-6-11": {
			type: "spritesheet",
			base: i,
			url: "6-11.png",
			x: 41,
			y: 44,
			w: 45,
			h: 38
		},
		"reduced-hair-male-6-12": {
			type: "spritesheet",
			base: i,
			url: "6-12.png",
			x: 41,
			y: 44,
			w: 45,
			h: 38
		},
		"reduced-hair-male-6-13": {
			type: "spritesheet",
			base: i,
			url: "6-13.png",
			x: 41,
			y: 44,
			w: 45,
			h: 38
		},
		"reduced-hair-male-6-14": {
			type: "spritesheet",
			base: i,
			url: "6-14.png",
			x: 41,
			y: 44,
			w: 45,
			h: 38
		},
		"reduced-hair-male-6-15": {
			type: "spritesheet",
			base: i,
			url: "6-15.png",
			x: 41,
			y: 44,
			w: 45,
			h: 38
		},
		"reduced-hair-male-6-16": {
			type: "spritesheet",
			base: i,
			url: "6-16.png",
			x: 41,
			y: 44,
			w: 45,
			h: 38
		},
		"reduced-hair-male-6-2": {
			type: "spritesheet",
			base: i,
			url: "6-2.png",
			x: 41,
			y: 44,
			w: 45,
			h: 38
		},
		"reduced-hair-male-6-3": {
			type: "spritesheet",
			base: i,
			url: "6-3.png",
			x: 41,
			y: 44,
			w: 45,
			h: 38
		},
		"reduced-hair-male-6-4": {
			type: "spritesheet",
			base: i,
			url: "6-4.png",
			x: 41,
			y: 44,
			w: 45,
			h: 38
		},
		"reduced-hair-male-6-5": {
			type: "spritesheet",
			base: i,
			url: "6-5.png",
			x: 41,
			y: 44,
			w: 45,
			h: 38
		},
		"reduced-hair-male-6-6": {
			type: "spritesheet",
			base: i,
			url: "6-6.png",
			x: 41,
			y: 44,
			w: 45,
			h: 38
		},
		"reduced-hair-male-6-7": {
			type: "spritesheet",
			base: i,
			url: "6-7.png",
			x: 41,
			y: 44,
			w: 45,
			h: 38
		},
		"reduced-hair-male-6-8": {
			type: "spritesheet",
			base: i,
			url: "6-8.png",
			x: 41,
			y: 44,
			w: 45,
			h: 38
		},
		"reduced-hair-male-6-9": {
			type: "spritesheet",
			base: i,
			url: "6-9.png",
			x: 41,
			y: 44,
			w: 45,
			h: 38
		},
		"reduced-hair-male-7-1": {
			type: "spritesheet",
			base: i,
			url: "7-1.png",
			x: 36,
			y: 44,
			w: 53,
			h: 38
		},
		"reduced-hair-male-7-10": {
			type: "spritesheet",
			base: i,
			url: "7-10.png",
			x: 36,
			y: 44,
			w: 53,
			h: 38
		},
		"reduced-hair-male-7-11": {
			type: "spritesheet",
			base: i,
			url: "7-11.png",
			x: 36,
			y: 44,
			w: 53,
			h: 38
		},
		"reduced-hair-male-7-12": {
			type: "spritesheet",
			base: i,
			url: "7-12.png",
			x: 36,
			y: 44,
			w: 53,
			h: 38
		},
		"reduced-hair-male-7-13": {
			type: "spritesheet",
			base: i,
			url: "7-13.png",
			x: 36,
			y: 44,
			w: 53,
			h: 38
		},
		"reduced-hair-male-7-14": {
			type: "spritesheet",
			base: i,
			url: "7-14.png",
			x: 36,
			y: 44,
			w: 53,
			h: 38
		},
		"reduced-hair-male-7-15": {
			type: "spritesheet",
			base: i,
			url: "7-15.png",
			x: 36,
			y: 44,
			w: 53,
			h: 38
		},
		"reduced-hair-male-7-16": {
			type: "spritesheet",
			base: i,
			url: "7-16.png",
			x: 36,
			y: 44,
			w: 53,
			h: 38
		},
		"reduced-hair-male-7-2": {
			type: "spritesheet",
			base: i,
			url: "7-2.png",
			x: 36,
			y: 44,
			w: 53,
			h: 38
		},
		"reduced-hair-male-7-3": {
			type: "spritesheet",
			base: i,
			url: "7-3.png",
			x: 36,
			y: 44,
			w: 53,
			h: 38
		},
		"reduced-hair-male-7-4": {
			type: "spritesheet",
			base: i,
			url: "7-4.png",
			x: 36,
			y: 44,
			w: 53,
			h: 38
		},
		"reduced-hair-male-7-5": {
			type: "spritesheet",
			base: i,
			url: "7-5.png",
			x: 36,
			y: 44,
			w: 53,
			h: 38
		},
		"reduced-hair-male-7-6": {
			type: "spritesheet",
			base: i,
			url: "7-6.png",
			x: 36,
			y: 44,
			w: 53,
			h: 38
		},
		"reduced-hair-male-7-7": {
			type: "spritesheet",
			base: i,
			url: "7-7.png",
			x: 36,
			y: 44,
			w: 53,
			h: 38
		},
		"reduced-hair-male-7-8": {
			type: "spritesheet",
			base: i,
			url: "7-8.png",
			x: 36,
			y: 44,
			w: 53,
			h: 38
		},
		"reduced-hair-male-7-9": {
			type: "spritesheet",
			base: i,
			url: "7-9.png",
			x: 36,
			y: 44,
			w: 53,
			h: 38
		},
		"reduced-hair-male-8-1": {
			type: "spritesheet",
			base: i,
			url: "8-1.png",
			x: 40,
			y: 44,
			w: 50,
			h: 40
		},
		"reduced-hair-male-8-10": {
			type: "spritesheet",
			base: i,
			url: "8-10.png",
			x: 40,
			y: 44,
			w: 50,
			h: 40
		},
		"reduced-hair-male-8-11": {
			type: "spritesheet",
			base: i,
			url: "8-11.png",
			x: 40,
			y: 44,
			w: 50,
			h: 40
		},
		"reduced-hair-male-8-12": {
			type: "spritesheet",
			base: i,
			url: "8-12.png",
			x: 40,
			y: 44,
			w: 50,
			h: 40
		},
		"reduced-hair-male-8-13": {
			type: "spritesheet",
			base: i,
			url: "8-13.png",
			x: 40,
			y: 44,
			w: 50,
			h: 40
		},
		"reduced-hair-male-8-14": {
			type: "spritesheet",
			base: i,
			url: "8-14.png",
			x: 40,
			y: 44,
			w: 50,
			h: 40
		},
		"reduced-hair-male-8-15": {
			type: "spritesheet",
			base: i,
			url: "8-15.png",
			x: 40,
			y: 44,
			w: 50,
			h: 40
		},
		"reduced-hair-male-8-16": {
			type: "spritesheet",
			base: i,
			url: "8-16.png",
			x: 40,
			y: 44,
			w: 50,
			h: 40
		},
		"reduced-hair-male-8-2": {
			type: "spritesheet",
			base: i,
			url: "8-2.png",
			x: 40,
			y: 44,
			w: 50,
			h: 40
		},
		"reduced-hair-male-8-3": {
			type: "spritesheet",
			base: i,
			url: "8-3.png",
			x: 40,
			y: 44,
			w: 50,
			h: 40
		},
		"reduced-hair-male-8-4": {
			type: "spritesheet",
			base: i,
			url: "8-4.png",
			x: 40,
			y: 44,
			w: 50,
			h: 40
		},
		"reduced-hair-male-8-5": {
			type: "spritesheet",
			base: i,
			url: "8-5.png",
			x: 40,
			y: 44,
			w: 50,
			h: 40
		},
		"reduced-hair-male-8-6": {
			type: "spritesheet",
			base: i,
			url: "8-6.png",
			x: 40,
			y: 44,
			w: 50,
			h: 40
		},
		"reduced-hair-male-8-7": {
			type: "spritesheet",
			base: i,
			url: "8-7.png",
			x: 40,
			y: 44,
			w: 50,
			h: 40
		},
		"reduced-hair-male-8-8": {
			type: "spritesheet",
			base: i,
			url: "8-8.png",
			x: 40,
			y: 44,
			w: 50,
			h: 40
		},
		"reduced-hair-male-8-9": {
			type: "spritesheet",
			base: i,
			url: "8-9.png",
			x: 40,
			y: 44,
			w: 50,
			h: 40
		},
		"normal-hair-female-1-1": {
			type: "spritesheet",
			base: l,
			url: "1-1.png",
			x: 54,
			y: 77,
			w: 120,
			h: 107
		},
		"normal-hair-female-1-10": {
			type: "spritesheet",
			base: l,
			url: "1-10.png",
			x: 54,
			y: 77,
			w: 120,
			h: 107
		},
		"normal-hair-female-1-11": {
			type: "spritesheet",
			base: l,
			url: "1-11.png",
			x: 54,
			y: 77,
			w: 120,
			h: 107
		},
		"normal-hair-female-1-12": {
			type: "spritesheet",
			base: l,
			url: "1-12.png",
			x: 54,
			y: 77,
			w: 120,
			h: 107
		},
		"normal-hair-female-1-13": {
			type: "spritesheet",
			base: l,
			url: "1-13.png",
			x: 54,
			y: 77,
			w: 120,
			h: 107
		},
		"normal-hair-female-1-14": {
			type: "spritesheet",
			base: l,
			url: "1-14.png",
			x: 54,
			y: 77,
			w: 120,
			h: 107
		},
		"normal-hair-female-1-15": {
			type: "spritesheet",
			base: l,
			url: "1-15.png",
			x: 54,
			y: 77,
			w: 120,
			h: 107
		},
		"normal-hair-female-1-16": {
			type: "spritesheet",
			base: l,
			url: "1-16.png",
			x: 54,
			y: 77,
			w: 120,
			h: 107
		},
		"normal-hair-female-1-2": {
			type: "spritesheet",
			base: l,
			url: "1-2.png",
			x: 54,
			y: 77,
			w: 120,
			h: 107
		},
		"normal-hair-female-1-3": {
			type: "spritesheet",
			base: l,
			url: "1-3.png",
			x: 54,
			y: 77,
			w: 120,
			h: 107
		},
		"normal-hair-female-1-4": {
			type: "spritesheet",
			base: l,
			url: "1-4.png",
			x: 54,
			y: 77,
			w: 120,
			h: 107
		},
		"normal-hair-female-1-5": {
			type: "spritesheet",
			base: l,
			url: "1-5.png",
			x: 54,
			y: 77,
			w: 120,
			h: 107
		},
		"normal-hair-female-1-6": {
			type: "spritesheet",
			base: l,
			url: "1-6.png",
			x: 54,
			y: 77,
			w: 120,
			h: 107
		},
		"normal-hair-female-1-7": {
			type: "spritesheet",
			base: l,
			url: "1-7.png",
			x: 54,
			y: 77,
			w: 120,
			h: 107
		},
		"normal-hair-female-1-8": {
			type: "spritesheet",
			base: l,
			url: "1-8.png",
			x: 54,
			y: 77,
			w: 120,
			h: 107
		},
		"normal-hair-female-1-9": {
			type: "spritesheet",
			base: l,
			url: "1-9.png",
			x: 54,
			y: 77,
			w: 120,
			h: 107
		},
		"normal-hair-female-10-1": {
			type: "spritesheet",
			base: l,
			url: "10-1.png",
			x: 68,
			y: 77,
			w: 108,
			h: 102
		},
		"normal-hair-female-10-10": {
			type: "spritesheet",
			base: l,
			url: "10-10.png",
			x: 68,
			y: 77,
			w: 108,
			h: 102
		},
		"normal-hair-female-10-11": {
			type: "spritesheet",
			base: l,
			url: "10-11.png",
			x: 68,
			y: 77,
			w: 108,
			h: 102
		},
		"normal-hair-female-10-12": {
			type: "spritesheet",
			base: l,
			url: "10-12.png",
			x: 68,
			y: 77,
			w: 108,
			h: 102
		},
		"normal-hair-female-10-13": {
			type: "spritesheet",
			base: l,
			url: "10-13.png",
			x: 68,
			y: 77,
			w: 108,
			h: 102
		},
		"normal-hair-female-10-14": {
			type: "spritesheet",
			base: l,
			url: "10-14.png",
			x: 68,
			y: 77,
			w: 108,
			h: 102
		},
		"normal-hair-female-10-15": {
			type: "spritesheet",
			base: l,
			url: "10-15.png",
			x: 68,
			y: 77,
			w: 108,
			h: 102
		},
		"normal-hair-female-10-16": {
			type: "spritesheet",
			base: l,
			url: "10-16.png",
			x: 68,
			y: 77,
			w: 108,
			h: 102
		},
		"normal-hair-female-10-2": {
			type: "spritesheet",
			base: l,
			url: "10-2.png",
			x: 68,
			y: 77,
			w: 108,
			h: 102
		},
		"normal-hair-female-10-3": {
			type: "spritesheet",
			base: l,
			url: "10-3.png",
			x: 68,
			y: 77,
			w: 108,
			h: 102
		},
		"normal-hair-female-10-4": {
			type: "spritesheet",
			base: l,
			url: "10-4.png",
			x: 68,
			y: 77,
			w: 108,
			h: 102
		},
		"normal-hair-female-10-5": {
			type: "spritesheet",
			base: l,
			url: "10-5.png",
			x: 68,
			y: 77,
			w: 108,
			h: 102
		},
		"normal-hair-female-10-6": {
			type: "spritesheet",
			base: l,
			url: "10-6.png",
			x: 68,
			y: 77,
			w: 108,
			h: 102
		},
		"normal-hair-female-10-7": {
			type: "spritesheet",
			base: l,
			url: "10-7.png",
			x: 68,
			y: 77,
			w: 108,
			h: 102
		},
		"normal-hair-female-10-8": {
			type: "spritesheet",
			base: l,
			url: "10-8.png",
			x: 68,
			y: 77,
			w: 108,
			h: 102
		},
		"normal-hair-female-10-9": {
			type: "spritesheet",
			base: l,
			url: "10-9.png",
			x: 68,
			y: 77,
			w: 108,
			h: 102
		},
		"normal-hair-female-11-1": {
			type: "spritesheet",
			base: l,
			url: "11-1.png",
			x: 68,
			y: 77,
			w: 106,
			h: 102
		},
		"normal-hair-female-11-10": {
			type: "spritesheet",
			base: l,
			url: "11-10.png",
			x: 68,
			y: 77,
			w: 106,
			h: 102
		},
		"normal-hair-female-11-11": {
			type: "spritesheet",
			base: l,
			url: "11-11.png",
			x: 68,
			y: 77,
			w: 106,
			h: 102
		},
		"normal-hair-female-11-12": {
			type: "spritesheet",
			base: l,
			url: "11-12.png",
			x: 68,
			y: 77,
			w: 106,
			h: 102
		},
		"normal-hair-female-11-13": {
			type: "spritesheet",
			base: l,
			url: "11-13.png",
			x: 68,
			y: 77,
			w: 106,
			h: 102
		},
		"normal-hair-female-11-14": {
			type: "spritesheet",
			base: l,
			url: "11-14.png",
			x: 68,
			y: 77,
			w: 106,
			h: 102
		},
		"normal-hair-female-11-15": {
			type: "spritesheet",
			base: l,
			url: "11-15.png",
			x: 68,
			y: 77,
			w: 106,
			h: 102
		},
		"normal-hair-female-11-16": {
			type: "spritesheet",
			base: l,
			url: "11-16.png",
			x: 68,
			y: 77,
			w: 106,
			h: 102
		},
		"normal-hair-female-11-2": {
			type: "spritesheet",
			base: l,
			url: "11-2.png",
			x: 68,
			y: 77,
			w: 106,
			h: 102
		},
		"normal-hair-female-11-3": {
			type: "spritesheet",
			base: l,
			url: "11-3.png",
			x: 68,
			y: 77,
			w: 106,
			h: 102
		},
		"normal-hair-female-11-4": {
			type: "spritesheet",
			base: l,
			url: "11-4.png",
			x: 68,
			y: 77,
			w: 106,
			h: 102
		},
		"normal-hair-female-11-5": {
			type: "spritesheet",
			base: l,
			url: "11-5.png",
			x: 68,
			y: 77,
			w: 106,
			h: 102
		},
		"normal-hair-female-11-6": {
			type: "spritesheet",
			base: l,
			url: "11-6.png",
			x: 68,
			y: 77,
			w: 106,
			h: 102
		},
		"normal-hair-female-11-7": {
			type: "spritesheet",
			base: l,
			url: "11-7.png",
			x: 68,
			y: 77,
			w: 106,
			h: 102
		},
		"normal-hair-female-11-8": {
			type: "spritesheet",
			base: l,
			url: "11-8.png",
			x: 68,
			y: 77,
			w: 106,
			h: 102
		},
		"normal-hair-female-11-9": {
			type: "spritesheet",
			base: l,
			url: "11-9.png",
			x: 68,
			y: 77,
			w: 106,
			h: 102
		},
		"normal-hair-female-12-1": {
			type: "spritesheet",
			base: l,
			url: "12-1.png",
			x: 68,
			y: 75,
			w: 106,
			h: 104
		},
		"normal-hair-female-12-10": {
			type: "spritesheet",
			base: l,
			url: "12-10.png",
			x: 68,
			y: 75,
			w: 106,
			h: 104
		},
		"normal-hair-female-12-11": {
			type: "spritesheet",
			base: l,
			url: "12-11.png",
			x: 68,
			y: 75,
			w: 106,
			h: 104
		},
		"normal-hair-female-12-12": {
			type: "spritesheet",
			base: l,
			url: "12-12.png",
			x: 68,
			y: 75,
			w: 106,
			h: 104
		},
		"normal-hair-female-12-13": {
			type: "spritesheet",
			base: l,
			url: "12-13.png",
			x: 68,
			y: 75,
			w: 106,
			h: 104
		},
		"normal-hair-female-12-14": {
			type: "spritesheet",
			base: l,
			url: "12-14.png",
			x: 68,
			y: 75,
			w: 106,
			h: 104
		},
		"normal-hair-female-12-15": {
			type: "spritesheet",
			base: l,
			url: "12-15.png",
			x: 68,
			y: 75,
			w: 106,
			h: 104
		},
		"normal-hair-female-12-16": {
			type: "spritesheet",
			base: l,
			url: "12-16.png",
			x: 68,
			y: 75,
			w: 106,
			h: 104
		},
		"normal-hair-female-12-2": {
			type: "spritesheet",
			base: l,
			url: "12-2.png",
			x: 68,
			y: 75,
			w: 106,
			h: 104
		},
		"normal-hair-female-12-3": {
			type: "spritesheet",
			base: l,
			url: "12-3.png",
			x: 68,
			y: 75,
			w: 106,
			h: 104
		},
		"normal-hair-female-12-4": {
			type: "spritesheet",
			base: l,
			url: "12-4.png",
			x: 68,
			y: 75,
			w: 106,
			h: 104
		},
		"normal-hair-female-12-5": {
			type: "spritesheet",
			base: l,
			url: "12-5.png",
			x: 68,
			y: 75,
			w: 106,
			h: 104
		},
		"normal-hair-female-12-6": {
			type: "spritesheet",
			base: l,
			url: "12-6.png",
			x: 68,
			y: 75,
			w: 106,
			h: 104
		},
		"normal-hair-female-12-7": {
			type: "spritesheet",
			base: l,
			url: "12-7.png",
			x: 68,
			y: 75,
			w: 106,
			h: 104
		},
		"normal-hair-female-12-8": {
			type: "spritesheet",
			base: l,
			url: "12-8.png",
			x: 68,
			y: 75,
			w: 106,
			h: 104
		},
		"normal-hair-female-12-9": {
			type: "spritesheet",
			base: l,
			url: "12-9.png",
			x: 68,
			y: 75,
			w: 106,
			h: 104
		},
		"normal-hair-female-13-1": {
			type: "spritesheet",
			base: l,
			url: "13-1.png",
			x: 48,
			y: 77,
			w: 126,
			h: 110
		},
		"normal-hair-female-13-10": {
			type: "spritesheet",
			base: l,
			url: "13-10.png",
			x: 48,
			y: 77,
			w: 126,
			h: 110
		},
		"normal-hair-female-13-11": {
			type: "spritesheet",
			base: l,
			url: "13-11.png",
			x: 48,
			y: 77,
			w: 126,
			h: 110
		},
		"normal-hair-female-13-12": {
			type: "spritesheet",
			base: l,
			url: "13-12.png",
			x: 48,
			y: 77,
			w: 126,
			h: 110
		},
		"normal-hair-female-13-13": {
			type: "spritesheet",
			base: l,
			url: "13-13.png",
			x: 48,
			y: 77,
			w: 126,
			h: 110
		},
		"normal-hair-female-13-14": {
			type: "spritesheet",
			base: l,
			url: "13-14.png",
			x: 48,
			y: 77,
			w: 126,
			h: 110
		},
		"normal-hair-female-13-15": {
			type: "spritesheet",
			base: l,
			url: "13-15.png",
			x: 48,
			y: 77,
			w: 126,
			h: 110
		},
		"normal-hair-female-13-16": {
			type: "spritesheet",
			base: l,
			url: "13-16.png",
			x: 48,
			y: 77,
			w: 126,
			h: 110
		},
		"normal-hair-female-13-2": {
			type: "spritesheet",
			base: l,
			url: "13-2.png",
			x: 48,
			y: 77,
			w: 126,
			h: 110
		},
		"normal-hair-female-13-3": {
			type: "spritesheet",
			base: l,
			url: "13-3.png",
			x: 48,
			y: 77,
			w: 126,
			h: 110
		},
		"normal-hair-female-13-4": {
			type: "spritesheet",
			base: l,
			url: "13-4.png",
			x: 48,
			y: 77,
			w: 126,
			h: 110
		},
		"normal-hair-female-13-5": {
			type: "spritesheet",
			base: l,
			url: "13-5.png",
			x: 48,
			y: 77,
			w: 126,
			h: 110
		},
		"normal-hair-female-13-6": {
			type: "spritesheet",
			base: l,
			url: "13-6.png",
			x: 48,
			y: 77,
			w: 126,
			h: 110
		},
		"normal-hair-female-13-7": {
			type: "spritesheet",
			base: l,
			url: "13-7.png",
			x: 48,
			y: 77,
			w: 126,
			h: 110
		},
		"normal-hair-female-13-8": {
			type: "spritesheet",
			base: l,
			url: "13-8.png",
			x: 48,
			y: 77,
			w: 126,
			h: 110
		},
		"normal-hair-female-13-9": {
			type: "spritesheet",
			base: l,
			url: "13-9.png",
			x: 48,
			y: 77,
			w: 126,
			h: 110
		},
		"normal-hair-female-14-1": {
			type: "spritesheet",
			base: l,
			url: "14-1.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-14-10": {
			type: "spritesheet",
			base: l,
			url: "14-10.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-14-11": {
			type: "spritesheet",
			base: l,
			url: "14-11.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-14-12": {
			type: "spritesheet",
			base: l,
			url: "14-12.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-14-13": {
			type: "spritesheet",
			base: l,
			url: "14-13.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-14-14": {
			type: "spritesheet",
			base: l,
			url: "14-14.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-14-15": {
			type: "spritesheet",
			base: l,
			url: "14-15.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-14-16": {
			type: "spritesheet",
			base: l,
			url: "14-16.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-14-2": {
			type: "spritesheet",
			base: l,
			url: "14-2.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-14-3": {
			type: "spritesheet",
			base: l,
			url: "14-3.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-14-4": {
			type: "spritesheet",
			base: l,
			url: "14-4.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-14-5": {
			type: "spritesheet",
			base: l,
			url: "14-5.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-14-6": {
			type: "spritesheet",
			base: l,
			url: "14-6.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-14-7": {
			type: "spritesheet",
			base: l,
			url: "14-7.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-14-8": {
			type: "spritesheet",
			base: l,
			url: "14-8.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-14-9": {
			type: "spritesheet",
			base: l,
			url: "14-9.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-15-1": {
			type: "spritesheet",
			base: l,
			url: "15-1.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-15-10": {
			type: "spritesheet",
			base: l,
			url: "15-10.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-15-11": {
			type: "spritesheet",
			base: l,
			url: "15-11.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-15-12": {
			type: "spritesheet",
			base: l,
			url: "15-12.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-15-13": {
			type: "spritesheet",
			base: l,
			url: "15-13.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-15-14": {
			type: "spritesheet",
			base: l,
			url: "15-14.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-15-15": {
			type: "spritesheet",
			base: l,
			url: "15-15.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-15-16": {
			type: "spritesheet",
			base: l,
			url: "15-16.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-15-2": {
			type: "spritesheet",
			base: l,
			url: "15-2.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-15-3": {
			type: "spritesheet",
			base: l,
			url: "15-3.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-15-4": {
			type: "spritesheet",
			base: l,
			url: "15-4.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-15-5": {
			type: "spritesheet",
			base: l,
			url: "15-5.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-15-6": {
			type: "spritesheet",
			base: l,
			url: "15-6.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-15-7": {
			type: "spritesheet",
			base: l,
			url: "15-7.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-15-8": {
			type: "spritesheet",
			base: l,
			url: "15-8.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-15-9": {
			type: "spritesheet",
			base: l,
			url: "15-9.png",
			x: 48,
			y: 74,
			w: 125,
			h: 111
		},
		"normal-hair-female-2-1": {
			type: "spritesheet",
			base: l,
			url: "2-1.png",
			x: 54,
			y: 77,
			w: 122,
			h: 107
		},
		"normal-hair-female-2-10": {
			type: "spritesheet",
			base: l,
			url: "2-10.png",
			x: 54,
			y: 77,
			w: 122,
			h: 107
		},
		"normal-hair-female-2-11": {
			type: "spritesheet",
			base: l,
			url: "2-11.png",
			x: 54,
			y: 77,
			w: 122,
			h: 107
		},
		"normal-hair-female-2-12": {
			type: "spritesheet",
			base: l,
			url: "2-12.png",
			x: 54,
			y: 77,
			w: 122,
			h: 107
		},
		"normal-hair-female-2-13": {
			type: "spritesheet",
			base: l,
			url: "2-13.png",
			x: 54,
			y: 77,
			w: 122,
			h: 107
		},
		"normal-hair-female-2-14": {
			type: "spritesheet",
			base: l,
			url: "2-14.png",
			x: 54,
			y: 77,
			w: 122,
			h: 107
		},
		"normal-hair-female-2-15": {
			type: "spritesheet",
			base: l,
			url: "2-15.png",
			x: 54,
			y: 77,
			w: 122,
			h: 107
		},
		"normal-hair-female-2-16": {
			type: "spritesheet",
			base: l,
			url: "2-16.png",
			x: 54,
			y: 77,
			w: 122,
			h: 107
		},
		"normal-hair-female-2-2": {
			type: "spritesheet",
			base: l,
			url: "2-2.png",
			x: 54,
			y: 77,
			w: 122,
			h: 107
		},
		"normal-hair-female-2-3": {
			type: "spritesheet",
			base: l,
			url: "2-3.png",
			x: 54,
			y: 77,
			w: 122,
			h: 107
		},
		"normal-hair-female-2-4": {
			type: "spritesheet",
			base: l,
			url: "2-4.png",
			x: 54,
			y: 77,
			w: 122,
			h: 107
		},
		"normal-hair-female-2-5": {
			type: "spritesheet",
			base: l,
			url: "2-5.png",
			x: 54,
			y: 77,
			w: 122,
			h: 107
		},
		"normal-hair-female-2-6": {
			type: "spritesheet",
			base: l,
			url: "2-6.png",
			x: 54,
			y: 77,
			w: 122,
			h: 107
		},
		"normal-hair-female-2-7": {
			type: "spritesheet",
			base: l,
			url: "2-7.png",
			x: 54,
			y: 77,
			w: 122,
			h: 107
		},
		"normal-hair-female-2-8": {
			type: "spritesheet",
			base: l,
			url: "2-8.png",
			x: 54,
			y: 77,
			w: 122,
			h: 107
		},
		"normal-hair-female-2-9": {
			type: "spritesheet",
			base: l,
			url: "2-9.png",
			x: 54,
			y: 77,
			w: 122,
			h: 107
		},
		"normal-hair-female-3-1": {
			type: "spritesheet",
			base: l,
			url: "3-1.png",
			x: 54,
			y: 77,
			w: 134,
			h: 107
		},
		"normal-hair-female-3-10": {
			type: "spritesheet",
			base: l,
			url: "3-10.png",
			x: 54,
			y: 77,
			w: 134,
			h: 107
		},
		"normal-hair-female-3-11": {
			type: "spritesheet",
			base: l,
			url: "3-11.png",
			x: 54,
			y: 77,
			w: 134,
			h: 107
		},
		"normal-hair-female-3-12": {
			type: "spritesheet",
			base: l,
			url: "3-12.png",
			x: 54,
			y: 77,
			w: 134,
			h: 107
		},
		"normal-hair-female-3-13": {
			type: "spritesheet",
			base: l,
			url: "3-13.png",
			x: 54,
			y: 77,
			w: 134,
			h: 107
		},
		"normal-hair-female-3-14": {
			type: "spritesheet",
			base: l,
			url: "3-14.png",
			x: 54,
			y: 77,
			w: 134,
			h: 107
		},
		"normal-hair-female-3-15": {
			type: "spritesheet",
			base: l,
			url: "3-15.png",
			x: 54,
			y: 77,
			w: 134,
			h: 107
		},
		"normal-hair-female-3-16": {
			type: "spritesheet",
			base: l,
			url: "3-16.png",
			x: 54,
			y: 77,
			w: 134,
			h: 107
		},
		"normal-hair-female-3-2": {
			type: "spritesheet",
			base: l,
			url: "3-2.png",
			x: 54,
			y: 77,
			w: 134,
			h: 107
		},
		"normal-hair-female-3-3": {
			type: "spritesheet",
			base: l,
			url: "3-3.png",
			x: 54,
			y: 77,
			w: 134,
			h: 107
		},
		"normal-hair-female-3-4": {
			type: "spritesheet",
			base: l,
			url: "3-4.png",
			x: 54,
			y: 77,
			w: 134,
			h: 107
		},
		"normal-hair-female-3-5": {
			type: "spritesheet",
			base: l,
			url: "3-5.png",
			x: 54,
			y: 77,
			w: 134,
			h: 107
		},
		"normal-hair-female-3-6": {
			type: "spritesheet",
			base: l,
			url: "3-6.png",
			x: 54,
			y: 77,
			w: 134,
			h: 107
		},
		"normal-hair-female-3-7": {
			type: "spritesheet",
			base: l,
			url: "3-7.png",
			x: 54,
			y: 77,
			w: 134,
			h: 107
		},
		"normal-hair-female-3-8": {
			type: "spritesheet",
			base: l,
			url: "3-8.png",
			x: 54,
			y: 77,
			w: 134,
			h: 107
		},
		"normal-hair-female-3-9": {
			type: "spritesheet",
			base: l,
			url: "3-9.png",
			x: 54,
			y: 77,
			w: 134,
			h: 107
		},
		"normal-hair-female-4-1": {
			type: "spritesheet",
			base: l,
			url: "4-1.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-4-10": {
			type: "spritesheet",
			base: l,
			url: "4-10.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-4-11": {
			type: "spritesheet",
			base: l,
			url: "4-11.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-4-12": {
			type: "spritesheet",
			base: l,
			url: "4-12.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-4-13": {
			type: "spritesheet",
			base: l,
			url: "4-13.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-4-14": {
			type: "spritesheet",
			base: l,
			url: "4-14.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-4-15": {
			type: "spritesheet",
			base: l,
			url: "4-15.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-4-16": {
			type: "spritesheet",
			base: l,
			url: "4-16.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-4-2": {
			type: "spritesheet",
			base: l,
			url: "4-2.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-4-3": {
			type: "spritesheet",
			base: l,
			url: "4-3.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-4-4": {
			type: "spritesheet",
			base: l,
			url: "4-4.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-4-5": {
			type: "spritesheet",
			base: l,
			url: "4-5.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-4-6": {
			type: "spritesheet",
			base: l,
			url: "4-6.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-4-7": {
			type: "spritesheet",
			base: l,
			url: "4-7.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-4-8": {
			type: "spritesheet",
			base: l,
			url: "4-8.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-4-9": {
			type: "spritesheet",
			base: l,
			url: "4-9.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-5-1": {
			type: "spritesheet",
			base: l,
			url: "5-1.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-5-10": {
			type: "spritesheet",
			base: l,
			url: "5-10.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-5-11": {
			type: "spritesheet",
			base: l,
			url: "5-11.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-5-12": {
			type: "spritesheet",
			base: l,
			url: "5-12.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-5-13": {
			type: "spritesheet",
			base: l,
			url: "5-13.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-5-14": {
			type: "spritesheet",
			base: l,
			url: "5-14.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-5-15": {
			type: "spritesheet",
			base: l,
			url: "5-15.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-5-16": {
			type: "spritesheet",
			base: l,
			url: "5-16.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-5-2": {
			type: "spritesheet",
			base: l,
			url: "5-2.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-5-3": {
			type: "spritesheet",
			base: l,
			url: "5-3.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-5-4": {
			type: "spritesheet",
			base: l,
			url: "5-4.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-5-5": {
			type: "spritesheet",
			base: l,
			url: "5-5.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-5-6": {
			type: "spritesheet",
			base: l,
			url: "5-6.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-5-7": {
			type: "spritesheet",
			base: l,
			url: "5-7.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-5-8": {
			type: "spritesheet",
			base: l,
			url: "5-8.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-5-9": {
			type: "spritesheet",
			base: l,
			url: "5-9.png",
			x: 54,
			y: 77,
			w: 119,
			h: 107
		},
		"normal-hair-female-6-1": {
			type: "spritesheet",
			base: l,
			url: "6-1.png",
			x: 48,
			y: 77,
			w: 140,
			h: 110
		},
		"normal-hair-female-6-10": {
			type: "spritesheet",
			base: l,
			url: "6-10.png",
			x: 48,
			y: 77,
			w: 140,
			h: 110
		},
		"normal-hair-female-6-11": {
			type: "spritesheet",
			base: l,
			url: "6-11.png",
			x: 48,
			y: 77,
			w: 140,
			h: 110
		},
		"normal-hair-female-6-12": {
			type: "spritesheet",
			base: l,
			url: "6-12.png",
			x: 48,
			y: 77,
			w: 140,
			h: 110
		},
		"normal-hair-female-6-13": {
			type: "spritesheet",
			base: l,
			url: "6-13.png",
			x: 48,
			y: 77,
			w: 140,
			h: 110
		},
		"normal-hair-female-6-14": {
			type: "spritesheet",
			base: l,
			url: "6-14.png",
			x: 48,
			y: 77,
			w: 140,
			h: 110
		},
		"normal-hair-female-6-15": {
			type: "spritesheet",
			base: l,
			url: "6-15.png",
			x: 48,
			y: 77,
			w: 140,
			h: 110
		},
		"normal-hair-female-6-16": {
			type: "spritesheet",
			base: l,
			url: "6-16.png",
			x: 48,
			y: 77,
			w: 140,
			h: 110
		},
		"normal-hair-female-6-2": {
			type: "spritesheet",
			base: l,
			url: "6-2.png",
			x: 48,
			y: 77,
			w: 140,
			h: 110
		},
		"normal-hair-female-6-3": {
			type: "spritesheet",
			base: l,
			url: "6-3.png",
			x: 48,
			y: 77,
			w: 140,
			h: 110
		},
		"normal-hair-female-6-4": {
			type: "spritesheet",
			base: l,
			url: "6-4.png",
			x: 48,
			y: 77,
			w: 140,
			h: 110
		},
		"normal-hair-female-6-5": {
			type: "spritesheet",
			base: l,
			url: "6-5.png",
			x: 48,
			y: 77,
			w: 140,
			h: 110
		},
		"normal-hair-female-6-6": {
			type: "spritesheet",
			base: l,
			url: "6-6.png",
			x: 48,
			y: 77,
			w: 140,
			h: 110
		},
		"normal-hair-female-6-7": {
			type: "spritesheet",
			base: l,
			url: "6-7.png",
			x: 48,
			y: 77,
			w: 140,
			h: 110
		},
		"normal-hair-female-6-8": {
			type: "spritesheet",
			base: l,
			url: "6-8.png",
			x: 48,
			y: 77,
			w: 140,
			h: 110
		},
		"normal-hair-female-6-9": {
			type: "spritesheet",
			base: l,
			url: "6-9.png",
			x: 48,
			y: 77,
			w: 140,
			h: 110
		},
		"normal-hair-female-7-1": {
			type: "spritesheet",
			base: l,
			url: "7-1.png",
			x: 75,
			y: 74,
			w: 98,
			h: 93
		},
		"normal-hair-female-7-10": {
			type: "spritesheet",
			base: l,
			url: "7-10.png",
			x: 75,
			y: 74,
			w: 98,
			h: 93
		},
		"normal-hair-female-7-11": {
			type: "spritesheet",
			base: l,
			url: "7-11.png",
			x: 75,
			y: 74,
			w: 98,
			h: 93
		},
		"normal-hair-female-7-12": {
			type: "spritesheet",
			base: l,
			url: "7-12.png",
			x: 75,
			y: 74,
			w: 98,
			h: 93
		},
		"normal-hair-female-7-13": {
			type: "spritesheet",
			base: l,
			url: "7-13.png",
			x: 75,
			y: 74,
			w: 98,
			h: 93
		},
		"normal-hair-female-7-14": {
			type: "spritesheet",
			base: l,
			url: "7-14.png",
			x: 75,
			y: 74,
			w: 98,
			h: 93
		},
		"normal-hair-female-7-15": {
			type: "spritesheet",
			base: l,
			url: "7-15.png",
			x: 75,
			y: 74,
			w: 98,
			h: 93
		},
		"normal-hair-female-7-16": {
			type: "spritesheet",
			base: l,
			url: "7-16.png",
			x: 75,
			y: 74,
			w: 98,
			h: 93
		},
		"normal-hair-female-7-2": {
			type: "spritesheet",
			base: l,
			url: "7-2.png",
			x: 75,
			y: 74,
			w: 98,
			h: 93
		},
		"normal-hair-female-7-3": {
			type: "spritesheet",
			base: l,
			url: "7-3.png",
			x: 75,
			y: 74,
			w: 98,
			h: 93
		},
		"normal-hair-female-7-4": {
			type: "spritesheet",
			base: l,
			url: "7-4.png",
			x: 75,
			y: 74,
			w: 98,
			h: 93
		},
		"normal-hair-female-7-5": {
			type: "spritesheet",
			base: l,
			url: "7-5.png",
			x: 75,
			y: 74,
			w: 98,
			h: 93
		},
		"normal-hair-female-7-6": {
			type: "spritesheet",
			base: l,
			url: "7-6.png",
			x: 75,
			y: 74,
			w: 98,
			h: 93
		},
		"normal-hair-female-7-7": {
			type: "spritesheet",
			base: l,
			url: "7-7.png",
			x: 75,
			y: 74,
			w: 98,
			h: 93
		},
		"normal-hair-female-7-8": {
			type: "spritesheet",
			base: l,
			url: "7-8.png",
			x: 75,
			y: 74,
			w: 98,
			h: 93
		},
		"normal-hair-female-7-9": {
			type: "spritesheet",
			base: l,
			url: "7-9.png",
			x: 75,
			y: 74,
			w: 98,
			h: 93
		},
		"normal-hair-female-8-1": {
			type: "spritesheet",
			base: l,
			url: "8-1.png",
			x: 73,
			y: 75,
			w: 101,
			h: 90
		},
		"normal-hair-female-8-10": {
			type: "spritesheet",
			base: l,
			url: "8-10.png",
			x: 73,
			y: 75,
			w: 101,
			h: 90
		},
		"normal-hair-female-8-11": {
			type: "spritesheet",
			base: l,
			url: "8-11.png",
			x: 73,
			y: 75,
			w: 101,
			h: 90
		},
		"normal-hair-female-8-12": {
			type: "spritesheet",
			base: l,
			url: "8-12.png",
			x: 73,
			y: 75,
			w: 101,
			h: 90
		},
		"normal-hair-female-8-13": {
			type: "spritesheet",
			base: l,
			url: "8-13.png",
			x: 73,
			y: 75,
			w: 101,
			h: 90
		},
		"normal-hair-female-8-14": {
			type: "spritesheet",
			base: l,
			url: "8-14.png",
			x: 73,
			y: 75,
			w: 101,
			h: 90
		},
		"normal-hair-female-8-15": {
			type: "spritesheet",
			base: l,
			url: "8-15.png",
			x: 73,
			y: 75,
			w: 101,
			h: 90
		},
		"normal-hair-female-8-16": {
			type: "spritesheet",
			base: l,
			url: "8-16.png",
			x: 73,
			y: 75,
			w: 101,
			h: 90
		},
		"normal-hair-female-8-2": {
			type: "spritesheet",
			base: l,
			url: "8-2.png",
			x: 73,
			y: 75,
			w: 101,
			h: 90
		},
		"normal-hair-female-8-3": {
			type: "spritesheet",
			base: l,
			url: "8-3.png",
			x: 73,
			y: 75,
			w: 101,
			h: 90
		},
		"normal-hair-female-8-4": {
			type: "spritesheet",
			base: l,
			url: "8-4.png",
			x: 73,
			y: 75,
			w: 101,
			h: 90
		},
		"normal-hair-female-8-5": {
			type: "spritesheet",
			base: l,
			url: "8-5.png",
			x: 73,
			y: 75,
			w: 101,
			h: 90
		},
		"normal-hair-female-8-6": {
			type: "spritesheet",
			base: l,
			url: "8-6.png",
			x: 73,
			y: 75,
			w: 101,
			h: 90
		},
		"normal-hair-female-8-7": {
			type: "spritesheet",
			base: l,
			url: "8-7.png",
			x: 73,
			y: 75,
			w: 101,
			h: 90
		},
		"normal-hair-female-8-8": {
			type: "spritesheet",
			base: l,
			url: "8-8.png",
			x: 73,
			y: 75,
			w: 101,
			h: 90
		},
		"normal-hair-female-8-9": {
			type: "spritesheet",
			base: l,
			url: "8-9.png",
			x: 73,
			y: 75,
			w: 101,
			h: 90
		},
		"normal-hair-female-9-1": {
			type: "spritesheet",
			base: l,
			url: "9-1.png",
			x: 75,
			y: 77,
			w: 113,
			h: 88
		},
		"normal-hair-female-9-10": {
			type: "spritesheet",
			base: l,
			url: "9-10.png",
			x: 75,
			y: 77,
			w: 113,
			h: 88
		},
		"normal-hair-female-9-11": {
			type: "spritesheet",
			base: l,
			url: "9-11.png",
			x: 75,
			y: 77,
			w: 113,
			h: 88
		},
		"normal-hair-female-9-12": {
			type: "spritesheet",
			base: l,
			url: "9-12.png",
			x: 75,
			y: 77,
			w: 113,
			h: 88
		},
		"normal-hair-female-9-13": {
			type: "spritesheet",
			base: l,
			url: "9-13.png",
			x: 75,
			y: 77,
			w: 113,
			h: 88
		},
		"normal-hair-female-9-14": {
			type: "spritesheet",
			base: l,
			url: "9-14.png",
			x: 75,
			y: 77,
			w: 113,
			h: 88
		},
		"normal-hair-female-9-15": {
			type: "spritesheet",
			base: l,
			url: "9-15.png",
			x: 75,
			y: 77,
			w: 113,
			h: 88
		},
		"normal-hair-female-9-16": {
			type: "spritesheet",
			base: l,
			url: "9-16.png",
			x: 75,
			y: 77,
			w: 113,
			h: 88
		},
		"normal-hair-female-9-2": {
			type: "spritesheet",
			base: l,
			url: "9-2.png",
			x: 75,
			y: 77,
			w: 113,
			h: 88
		},
		"normal-hair-female-9-3": {
			type: "spritesheet",
			base: l,
			url: "9-3.png",
			x: 75,
			y: 77,
			w: 113,
			h: 88
		},
		"normal-hair-female-9-4": {
			type: "spritesheet",
			base: l,
			url: "9-4.png",
			x: 75,
			y: 77,
			w: 113,
			h: 88
		},
		"normal-hair-female-9-5": {
			type: "spritesheet",
			base: l,
			url: "9-5.png",
			x: 75,
			y: 77,
			w: 113,
			h: 88
		},
		"normal-hair-female-9-6": {
			type: "spritesheet",
			base: l,
			url: "9-6.png",
			x: 75,
			y: 77,
			w: 113,
			h: 88
		},
		"normal-hair-female-9-7": {
			type: "spritesheet",
			base: l,
			url: "9-7.png",
			x: 75,
			y: 77,
			w: 113,
			h: 88
		},
		"normal-hair-female-9-8": {
			type: "spritesheet",
			base: l,
			url: "9-8.png",
			x: 75,
			y: 77,
			w: 113,
			h: 88
		},
		"normal-hair-female-9-9": {
			type: "spritesheet",
			base: l,
			url: "9-9.png",
			x: 75,
			y: 77,
			w: 113,
			h: 88
		},
		"reduced-hair-female-1-1": {
			type: "spritesheet",
			base: a,
			url: "1-1.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-1-10": {
			type: "spritesheet",
			base: a,
			url: "1-10.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-1-11": {
			type: "spritesheet",
			base: a,
			url: "1-11.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-1-12": {
			type: "spritesheet",
			base: a,
			url: "1-12.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-1-13": {
			type: "spritesheet",
			base: a,
			url: "1-13.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-1-14": {
			type: "spritesheet",
			base: a,
			url: "1-14.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-1-15": {
			type: "spritesheet",
			base: a,
			url: "1-15.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-1-16": {
			type: "spritesheet",
			base: a,
			url: "1-16.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-1-2": {
			type: "spritesheet",
			base: a,
			url: "1-2.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-1-3": {
			type: "spritesheet",
			base: a,
			url: "1-3.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-1-4": {
			type: "spritesheet",
			base: a,
			url: "1-4.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-1-5": {
			type: "spritesheet",
			base: a,
			url: "1-5.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-1-6": {
			type: "spritesheet",
			base: a,
			url: "1-6.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-1-7": {
			type: "spritesheet",
			base: a,
			url: "1-7.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-1-8": {
			type: "spritesheet",
			base: a,
			url: "1-8.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-1-9": {
			type: "spritesheet",
			base: a,
			url: "1-9.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-10-1": {
			type: "spritesheet",
			base: a,
			url: "10-1.png",
			x: 33,
			y: 46,
			w: 53,
			h: 50
		},
		"reduced-hair-female-10-10": {
			type: "spritesheet",
			base: a,
			url: "10-10.png",
			x: 33,
			y: 46,
			w: 53,
			h: 50
		},
		"reduced-hair-female-10-11": {
			type: "spritesheet",
			base: a,
			url: "10-11.png",
			x: 33,
			y: 46,
			w: 53,
			h: 50
		},
		"reduced-hair-female-10-12": {
			type: "spritesheet",
			base: a,
			url: "10-12.png",
			x: 33,
			y: 46,
			w: 53,
			h: 50
		},
		"reduced-hair-female-10-13": {
			type: "spritesheet",
			base: a,
			url: "10-13.png",
			x: 33,
			y: 46,
			w: 53,
			h: 50
		},
		"reduced-hair-female-10-14": {
			type: "spritesheet",
			base: a,
			url: "10-14.png",
			x: 33,
			y: 46,
			w: 53,
			h: 50
		},
		"reduced-hair-female-10-15": {
			type: "spritesheet",
			base: a,
			url: "10-15.png",
			x: 33,
			y: 46,
			w: 53,
			h: 50
		},
		"reduced-hair-female-10-16": {
			type: "spritesheet",
			base: a,
			url: "10-16.png",
			x: 33,
			y: 46,
			w: 53,
			h: 50
		},
		"reduced-hair-female-10-2": {
			type: "spritesheet",
			base: a,
			url: "10-2.png",
			x: 33,
			y: 46,
			w: 53,
			h: 50
		},
		"reduced-hair-female-10-3": {
			type: "spritesheet",
			base: a,
			url: "10-3.png",
			x: 33,
			y: 46,
			w: 53,
			h: 50
		},
		"reduced-hair-female-10-4": {
			type: "spritesheet",
			base: a,
			url: "10-4.png",
			x: 33,
			y: 46,
			w: 53,
			h: 50
		},
		"reduced-hair-female-10-5": {
			type: "spritesheet",
			base: a,
			url: "10-5.png",
			x: 33,
			y: 46,
			w: 53,
			h: 50
		},
		"reduced-hair-female-10-6": {
			type: "spritesheet",
			base: a,
			url: "10-6.png",
			x: 33,
			y: 46,
			w: 53,
			h: 50
		},
		"reduced-hair-female-10-7": {
			type: "spritesheet",
			base: a,
			url: "10-7.png",
			x: 33,
			y: 46,
			w: 53,
			h: 50
		},
		"reduced-hair-female-10-8": {
			type: "spritesheet",
			base: a,
			url: "10-8.png",
			x: 33,
			y: 46,
			w: 53,
			h: 50
		},
		"reduced-hair-female-10-9": {
			type: "spritesheet",
			base: a,
			url: "10-9.png",
			x: 33,
			y: 46,
			w: 53,
			h: 50
		},
		"reduced-hair-female-11-1": {
			type: "spritesheet",
			base: a,
			url: "11-1.png",
			x: 33,
			y: 46,
			w: 52,
			h: 50
		},
		"reduced-hair-female-11-10": {
			type: "spritesheet",
			base: a,
			url: "11-10.png",
			x: 33,
			y: 46,
			w: 52,
			h: 50
		},
		"reduced-hair-female-11-11": {
			type: "spritesheet",
			base: a,
			url: "11-11.png",
			x: 33,
			y: 46,
			w: 52,
			h: 50
		},
		"reduced-hair-female-11-12": {
			type: "spritesheet",
			base: a,
			url: "11-12.png",
			x: 33,
			y: 46,
			w: 52,
			h: 50
		},
		"reduced-hair-female-11-13": {
			type: "spritesheet",
			base: a,
			url: "11-13.png",
			x: 33,
			y: 46,
			w: 52,
			h: 50
		},
		"reduced-hair-female-11-14": {
			type: "spritesheet",
			base: a,
			url: "11-14.png",
			x: 33,
			y: 46,
			w: 52,
			h: 50
		},
		"reduced-hair-female-11-15": {
			type: "spritesheet",
			base: a,
			url: "11-15.png",
			x: 33,
			y: 46,
			w: 52,
			h: 50
		},
		"reduced-hair-female-11-16": {
			type: "spritesheet",
			base: a,
			url: "11-16.png",
			x: 33,
			y: 46,
			w: 52,
			h: 50
		},
		"reduced-hair-female-11-2": {
			type: "spritesheet",
			base: a,
			url: "11-2.png",
			x: 33,
			y: 46,
			w: 52,
			h: 50
		},
		"reduced-hair-female-11-3": {
			type: "spritesheet",
			base: a,
			url: "11-3.png",
			x: 33,
			y: 46,
			w: 52,
			h: 50
		},
		"reduced-hair-female-11-4": {
			type: "spritesheet",
			base: a,
			url: "11-4.png",
			x: 33,
			y: 46,
			w: 52,
			h: 50
		},
		"reduced-hair-female-11-5": {
			type: "spritesheet",
			base: a,
			url: "11-5.png",
			x: 33,
			y: 46,
			w: 52,
			h: 50
		},
		"reduced-hair-female-11-6": {
			type: "spritesheet",
			base: a,
			url: "11-6.png",
			x: 33,
			y: 46,
			w: 52,
			h: 50
		},
		"reduced-hair-female-11-7": {
			type: "spritesheet",
			base: a,
			url: "11-7.png",
			x: 33,
			y: 46,
			w: 52,
			h: 50
		},
		"reduced-hair-female-11-8": {
			type: "spritesheet",
			base: a,
			url: "11-8.png",
			x: 33,
			y: 46,
			w: 52,
			h: 50
		},
		"reduced-hair-female-11-9": {
			type: "spritesheet",
			base: a,
			url: "11-9.png",
			x: 33,
			y: 46,
			w: 52,
			h: 50
		},
		"reduced-hair-female-12-1": {
			type: "spritesheet",
			base: a,
			url: "12-1.png",
			x: 33,
			y: 44,
			w: 52,
			h: 52
		},
		"reduced-hair-female-12-10": {
			type: "spritesheet",
			base: a,
			url: "12-10.png",
			x: 33,
			y: 44,
			w: 52,
			h: 52
		},
		"reduced-hair-female-12-11": {
			type: "spritesheet",
			base: a,
			url: "12-11.png",
			x: 33,
			y: 44,
			w: 52,
			h: 52
		},
		"reduced-hair-female-12-12": {
			type: "spritesheet",
			base: a,
			url: "12-12.png",
			x: 33,
			y: 44,
			w: 52,
			h: 52
		},
		"reduced-hair-female-12-13": {
			type: "spritesheet",
			base: a,
			url: "12-13.png",
			x: 33,
			y: 44,
			w: 52,
			h: 52
		},
		"reduced-hair-female-12-14": {
			type: "spritesheet",
			base: a,
			url: "12-14.png",
			x: 33,
			y: 44,
			w: 52,
			h: 52
		},
		"reduced-hair-female-12-15": {
			type: "spritesheet",
			base: a,
			url: "12-15.png",
			x: 33,
			y: 44,
			w: 52,
			h: 52
		},
		"reduced-hair-female-12-16": {
			type: "spritesheet",
			base: a,
			url: "12-16.png",
			x: 33,
			y: 44,
			w: 52,
			h: 52
		},
		"reduced-hair-female-12-2": {
			type: "spritesheet",
			base: a,
			url: "12-2.png",
			x: 33,
			y: 44,
			w: 52,
			h: 52
		},
		"reduced-hair-female-12-3": {
			type: "spritesheet",
			base: a,
			url: "12-3.png",
			x: 33,
			y: 44,
			w: 52,
			h: 52
		},
		"reduced-hair-female-12-4": {
			type: "spritesheet",
			base: a,
			url: "12-4.png",
			x: 33,
			y: 44,
			w: 52,
			h: 52
		},
		"reduced-hair-female-12-5": {
			type: "spritesheet",
			base: a,
			url: "12-5.png",
			x: 33,
			y: 44,
			w: 52,
			h: 52
		},
		"reduced-hair-female-12-6": {
			type: "spritesheet",
			base: a,
			url: "12-6.png",
			x: 33,
			y: 44,
			w: 52,
			h: 52
		},
		"reduced-hair-female-12-7": {
			type: "spritesheet",
			base: a,
			url: "12-7.png",
			x: 33,
			y: 44,
			w: 52,
			h: 52
		},
		"reduced-hair-female-12-8": {
			type: "spritesheet",
			base: a,
			url: "12-8.png",
			x: 33,
			y: 44,
			w: 52,
			h: 52
		},
		"reduced-hair-female-12-9": {
			type: "spritesheet",
			base: a,
			url: "12-9.png",
			x: 33,
			y: 44,
			w: 52,
			h: 52
		},
		"reduced-hair-female-13-1": {
			type: "spritesheet",
			base: a,
			url: "13-1.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-13-10": {
			type: "spritesheet",
			base: a,
			url: "13-10.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-13-11": {
			type: "spritesheet",
			base: a,
			url: "13-11.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-13-12": {
			type: "spritesheet",
			base: a,
			url: "13-12.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-13-13": {
			type: "spritesheet",
			base: a,
			url: "13-13.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-13-14": {
			type: "spritesheet",
			base: a,
			url: "13-14.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-13-15": {
			type: "spritesheet",
			base: a,
			url: "13-15.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-13-16": {
			type: "spritesheet",
			base: a,
			url: "13-16.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-13-2": {
			type: "spritesheet",
			base: a,
			url: "13-2.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-13-3": {
			type: "spritesheet",
			base: a,
			url: "13-3.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-13-4": {
			type: "spritesheet",
			base: a,
			url: "13-4.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-13-5": {
			type: "spritesheet",
			base: a,
			url: "13-5.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-13-6": {
			type: "spritesheet",
			base: a,
			url: "13-6.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-13-7": {
			type: "spritesheet",
			base: a,
			url: "13-7.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-13-8": {
			type: "spritesheet",
			base: a,
			url: "13-8.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-13-9": {
			type: "spritesheet",
			base: a,
			url: "13-9.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-14-1": {
			type: "spritesheet",
			base: a,
			url: "14-1.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-14-10": {
			type: "spritesheet",
			base: a,
			url: "14-10.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-14-11": {
			type: "spritesheet",
			base: a,
			url: "14-11.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-14-12": {
			type: "spritesheet",
			base: a,
			url: "14-12.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-14-13": {
			type: "spritesheet",
			base: a,
			url: "14-13.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-14-14": {
			type: "spritesheet",
			base: a,
			url: "14-14.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-14-15": {
			type: "spritesheet",
			base: a,
			url: "14-15.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-14-16": {
			type: "spritesheet",
			base: a,
			url: "14-16.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-14-2": {
			type: "spritesheet",
			base: a,
			url: "14-2.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-14-3": {
			type: "spritesheet",
			base: a,
			url: "14-3.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-14-4": {
			type: "spritesheet",
			base: a,
			url: "14-4.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-14-5": {
			type: "spritesheet",
			base: a,
			url: "14-5.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-14-6": {
			type: "spritesheet",
			base: a,
			url: "14-6.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-14-7": {
			type: "spritesheet",
			base: a,
			url: "14-7.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-14-8": {
			type: "spritesheet",
			base: a,
			url: "14-8.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-14-9": {
			type: "spritesheet",
			base: a,
			url: "14-9.png",
			x: 22,
			y: 46,
			w: 63,
			h: 55
		},
		"reduced-hair-female-15-1": {
			type: "spritesheet",
			base: a,
			url: "15-1.png",
			x: 22,
			y: 46,
			w: 64,
			h: 55
		},
		"reduced-hair-female-15-10": {
			type: "spritesheet",
			base: a,
			url: "15-10.png",
			x: 22,
			y: 46,
			w: 64,
			h: 55
		},
		"reduced-hair-female-15-11": {
			type: "spritesheet",
			base: a,
			url: "15-11.png",
			x: 22,
			y: 46,
			w: 64,
			h: 55
		},
		"reduced-hair-female-15-12": {
			type: "spritesheet",
			base: a,
			url: "15-12.png",
			x: 22,
			y: 46,
			w: 64,
			h: 55
		},
		"reduced-hair-female-15-13": {
			type: "spritesheet",
			base: a,
			url: "15-13.png",
			x: 22,
			y: 46,
			w: 64,
			h: 55
		},
		"reduced-hair-female-15-14": {
			type: "spritesheet",
			base: a,
			url: "15-14.png",
			x: 22,
			y: 46,
			w: 64,
			h: 55
		},
		"reduced-hair-female-15-15": {
			type: "spritesheet",
			base: a,
			url: "15-15.png",
			x: 22,
			y: 46,
			w: 64,
			h: 55
		},
		"reduced-hair-female-15-16": {
			type: "spritesheet",
			base: a,
			url: "15-16.png",
			x: 22,
			y: 46,
			w: 64,
			h: 55
		},
		"reduced-hair-female-15-2": {
			type: "spritesheet",
			base: a,
			url: "15-2.png",
			x: 22,
			y: 46,
			w: 64,
			h: 55
		},
		"reduced-hair-female-15-3": {
			type: "spritesheet",
			base: a,
			url: "15-3.png",
			x: 22,
			y: 46,
			w: 64,
			h: 55
		},
		"reduced-hair-female-15-4": {
			type: "spritesheet",
			base: a,
			url: "15-4.png",
			x: 22,
			y: 46,
			w: 64,
			h: 55
		},
		"reduced-hair-female-15-5": {
			type: "spritesheet",
			base: a,
			url: "15-5.png",
			x: 22,
			y: 46,
			w: 64,
			h: 55
		},
		"reduced-hair-female-15-6": {
			type: "spritesheet",
			base: a,
			url: "15-6.png",
			x: 22,
			y: 46,
			w: 64,
			h: 55
		},
		"reduced-hair-female-15-7": {
			type: "spritesheet",
			base: a,
			url: "15-7.png",
			x: 22,
			y: 46,
			w: 64,
			h: 55
		},
		"reduced-hair-female-15-8": {
			type: "spritesheet",
			base: a,
			url: "15-8.png",
			x: 22,
			y: 46,
			w: 64,
			h: 55
		},
		"reduced-hair-female-15-9": {
			type: "spritesheet",
			base: a,
			url: "15-9.png",
			x: 22,
			y: 46,
			w: 64,
			h: 55
		},
		"reduced-hair-female-2-1": {
			type: "spritesheet",
			base: a,
			url: "2-1.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-2-10": {
			type: "spritesheet",
			base: a,
			url: "2-10.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-2-11": {
			type: "spritesheet",
			base: a,
			url: "2-11.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-2-12": {
			type: "spritesheet",
			base: a,
			url: "2-12.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-2-13": {
			type: "spritesheet",
			base: a,
			url: "2-13.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-2-14": {
			type: "spritesheet",
			base: a,
			url: "2-14.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-2-15": {
			type: "spritesheet",
			base: a,
			url: "2-15.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-2-16": {
			type: "spritesheet",
			base: a,
			url: "2-16.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-2-2": {
			type: "spritesheet",
			base: a,
			url: "2-2.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-2-3": {
			type: "spritesheet",
			base: a,
			url: "2-3.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-2-4": {
			type: "spritesheet",
			base: a,
			url: "2-4.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-2-5": {
			type: "spritesheet",
			base: a,
			url: "2-5.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-2-6": {
			type: "spritesheet",
			base: a,
			url: "2-6.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-2-7": {
			type: "spritesheet",
			base: a,
			url: "2-7.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-2-8": {
			type: "spritesheet",
			base: a,
			url: "2-8.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-2-9": {
			type: "spritesheet",
			base: a,
			url: "2-9.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-3-1": {
			type: "spritesheet",
			base: a,
			url: "3-1.png",
			x: 25,
			y: 46,
			w: 70,
			h: 54
		},
		"reduced-hair-female-3-10": {
			type: "spritesheet",
			base: a,
			url: "3-10.png",
			x: 25,
			y: 46,
			w: 70,
			h: 54
		},
		"reduced-hair-female-3-11": {
			type: "spritesheet",
			base: a,
			url: "3-11.png",
			x: 25,
			y: 46,
			w: 70,
			h: 54
		},
		"reduced-hair-female-3-12": {
			type: "spritesheet",
			base: a,
			url: "3-12.png",
			x: 25,
			y: 46,
			w: 70,
			h: 54
		},
		"reduced-hair-female-3-13": {
			type: "spritesheet",
			base: a,
			url: "3-13.png",
			x: 25,
			y: 46,
			w: 70,
			h: 54
		},
		"reduced-hair-female-3-14": {
			type: "spritesheet",
			base: a,
			url: "3-14.png",
			x: 25,
			y: 46,
			w: 70,
			h: 54
		},
		"reduced-hair-female-3-15": {
			type: "spritesheet",
			base: a,
			url: "3-15.png",
			x: 25,
			y: 46,
			w: 70,
			h: 54
		},
		"reduced-hair-female-3-16": {
			type: "spritesheet",
			base: a,
			url: "3-16.png",
			x: 25,
			y: 46,
			w: 70,
			h: 54
		},
		"reduced-hair-female-3-2": {
			type: "spritesheet",
			base: a,
			url: "3-2.png",
			x: 25,
			y: 46,
			w: 70,
			h: 54
		},
		"reduced-hair-female-3-3": {
			type: "spritesheet",
			base: a,
			url: "3-3.png",
			x: 25,
			y: 46,
			w: 70,
			h: 54
		},
		"reduced-hair-female-3-4": {
			type: "spritesheet",
			base: a,
			url: "3-4.png",
			x: 25,
			y: 46,
			w: 70,
			h: 54
		},
		"reduced-hair-female-3-5": {
			type: "spritesheet",
			base: a,
			url: "3-5.png",
			x: 25,
			y: 46,
			w: 70,
			h: 54
		},
		"reduced-hair-female-3-6": {
			type: "spritesheet",
			base: a,
			url: "3-6.png",
			x: 25,
			y: 46,
			w: 70,
			h: 54
		},
		"reduced-hair-female-3-7": {
			type: "spritesheet",
			base: a,
			url: "3-7.png",
			x: 25,
			y: 46,
			w: 70,
			h: 54
		},
		"reduced-hair-female-3-8": {
			type: "spritesheet",
			base: a,
			url: "3-8.png",
			x: 25,
			y: 46,
			w: 70,
			h: 54
		},
		"reduced-hair-female-3-9": {
			type: "spritesheet",
			base: a,
			url: "3-9.png",
			x: 25,
			y: 46,
			w: 70,
			h: 54
		},
		"reduced-hair-female-4-1": {
			type: "spritesheet",
			base: a,
			url: "4-1.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-4-10": {
			type: "spritesheet",
			base: a,
			url: "4-10.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-4-11": {
			type: "spritesheet",
			base: a,
			url: "4-11.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-4-12": {
			type: "spritesheet",
			base: a,
			url: "4-12.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-4-13": {
			type: "spritesheet",
			base: a,
			url: "4-13.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-4-14": {
			type: "spritesheet",
			base: a,
			url: "4-14.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-4-15": {
			type: "spritesheet",
			base: a,
			url: "4-15.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-4-16": {
			type: "spritesheet",
			base: a,
			url: "4-16.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-4-2": {
			type: "spritesheet",
			base: a,
			url: "4-2.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-4-3": {
			type: "spritesheet",
			base: a,
			url: "4-3.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-4-4": {
			type: "spritesheet",
			base: a,
			url: "4-4.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-4-5": {
			type: "spritesheet",
			base: a,
			url: "4-5.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-4-6": {
			type: "spritesheet",
			base: a,
			url: "4-6.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-4-7": {
			type: "spritesheet",
			base: a,
			url: "4-7.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-4-8": {
			type: "spritesheet",
			base: a,
			url: "4-8.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-4-9": {
			type: "spritesheet",
			base: a,
			url: "4-9.png",
			x: 25,
			y: 46,
			w: 61,
			h: 54
		},
		"reduced-hair-female-5-1": {
			type: "spritesheet",
			base: a,
			url: "5-1.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-5-10": {
			type: "spritesheet",
			base: a,
			url: "5-10.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-5-11": {
			type: "spritesheet",
			base: a,
			url: "5-11.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-5-12": {
			type: "spritesheet",
			base: a,
			url: "5-12.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-5-13": {
			type: "spritesheet",
			base: a,
			url: "5-13.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-5-14": {
			type: "spritesheet",
			base: a,
			url: "5-14.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-5-15": {
			type: "spritesheet",
			base: a,
			url: "5-15.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-5-16": {
			type: "spritesheet",
			base: a,
			url: "5-16.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-5-2": {
			type: "spritesheet",
			base: a,
			url: "5-2.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-5-3": {
			type: "spritesheet",
			base: a,
			url: "5-3.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-5-4": {
			type: "spritesheet",
			base: a,
			url: "5-4.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-5-5": {
			type: "spritesheet",
			base: a,
			url: "5-5.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-5-6": {
			type: "spritesheet",
			base: a,
			url: "5-6.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-5-7": {
			type: "spritesheet",
			base: a,
			url: "5-7.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-5-8": {
			type: "spritesheet",
			base: a,
			url: "5-8.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-5-9": {
			type: "spritesheet",
			base: a,
			url: "5-9.png",
			x: 25,
			y: 46,
			w: 60,
			h: 54
		},
		"reduced-hair-female-6-1": {
			type: "spritesheet",
			base: a,
			url: "6-1.png",
			x: 22,
			y: 46,
			w: 73,
			h: 55
		},
		"reduced-hair-female-6-10": {
			type: "spritesheet",
			base: a,
			url: "6-10.png",
			x: 22,
			y: 46,
			w: 73,
			h: 55
		},
		"reduced-hair-female-6-11": {
			type: "spritesheet",
			base: a,
			url: "6-11.png",
			x: 22,
			y: 46,
			w: 73,
			h: 55
		},
		"reduced-hair-female-6-12": {
			type: "spritesheet",
			base: a,
			url: "6-12.png",
			x: 22,
			y: 46,
			w: 73,
			h: 55
		},
		"reduced-hair-female-6-13": {
			type: "spritesheet",
			base: a,
			url: "6-13.png",
			x: 22,
			y: 46,
			w: 73,
			h: 55
		},
		"reduced-hair-female-6-14": {
			type: "spritesheet",
			base: a,
			url: "6-14.png",
			x: 22,
			y: 46,
			w: 73,
			h: 55
		},
		"reduced-hair-female-6-15": {
			type: "spritesheet",
			base: a,
			url: "6-15.png",
			x: 22,
			y: 46,
			w: 73,
			h: 55
		},
		"reduced-hair-female-6-16": {
			type: "spritesheet",
			base: a,
			url: "6-16.png",
			x: 22,
			y: 46,
			w: 73,
			h: 55
		},
		"reduced-hair-female-6-2": {
			type: "spritesheet",
			base: a,
			url: "6-2.png",
			x: 22,
			y: 46,
			w: 73,
			h: 55
		},
		"reduced-hair-female-6-3": {
			type: "spritesheet",
			base: a,
			url: "6-3.png",
			x: 22,
			y: 46,
			w: 73,
			h: 55
		},
		"reduced-hair-female-6-4": {
			type: "spritesheet",
			base: a,
			url: "6-4.png",
			x: 22,
			y: 46,
			w: 73,
			h: 55
		},
		"reduced-hair-female-6-5": {
			type: "spritesheet",
			base: a,
			url: "6-5.png",
			x: 22,
			y: 46,
			w: 73,
			h: 55
		},
		"reduced-hair-female-6-6": {
			type: "spritesheet",
			base: a,
			url: "6-6.png",
			x: 22,
			y: 46,
			w: 73,
			h: 55
		},
		"reduced-hair-female-6-7": {
			type: "spritesheet",
			base: a,
			url: "6-7.png",
			x: 22,
			y: 46,
			w: 73,
			h: 55
		},
		"reduced-hair-female-6-8": {
			type: "spritesheet",
			base: a,
			url: "6-8.png",
			x: 22,
			y: 46,
			w: 73,
			h: 55
		},
		"reduced-hair-female-6-9": {
			type: "spritesheet",
			base: a,
			url: "6-9.png",
			x: 22,
			y: 46,
			w: 73,
			h: 55
		},
		"reduced-hair-female-7-1": {
			type: "spritesheet",
			base: a,
			url: "7-1.png",
			x: 36,
			y: 44,
			w: 49,
			h: 47
		},
		"reduced-hair-female-7-10": {
			type: "spritesheet",
			base: a,
			url: "7-10.png",
			x: 36,
			y: 44,
			w: 49,
			h: 47
		},
		"reduced-hair-female-7-11": {
			type: "spritesheet",
			base: a,
			url: "7-11.png",
			x: 36,
			y: 44,
			w: 49,
			h: 47
		},
		"reduced-hair-female-7-12": {
			type: "spritesheet",
			base: a,
			url: "7-12.png",
			x: 36,
			y: 44,
			w: 49,
			h: 47
		},
		"reduced-hair-female-7-13": {
			type: "spritesheet",
			base: a,
			url: "7-13.png",
			x: 36,
			y: 44,
			w: 49,
			h: 47
		},
		"reduced-hair-female-7-14": {
			type: "spritesheet",
			base: a,
			url: "7-14.png",
			x: 36,
			y: 44,
			w: 49,
			h: 47
		},
		"reduced-hair-female-7-15": {
			type: "spritesheet",
			base: a,
			url: "7-15.png",
			x: 36,
			y: 44,
			w: 49,
			h: 47
		},
		"reduced-hair-female-7-16": {
			type: "spritesheet",
			base: a,
			url: "7-16.png",
			x: 36,
			y: 44,
			w: 49,
			h: 47
		},
		"reduced-hair-female-7-2": {
			type: "spritesheet",
			base: a,
			url: "7-2.png",
			x: 36,
			y: 44,
			w: 49,
			h: 47
		},
		"reduced-hair-female-7-3": {
			type: "spritesheet",
			base: a,
			url: "7-3.png",
			x: 36,
			y: 44,
			w: 49,
			h: 47
		},
		"reduced-hair-female-7-4": {
			type: "spritesheet",
			base: a,
			url: "7-4.png",
			x: 36,
			y: 44,
			w: 49,
			h: 47
		},
		"reduced-hair-female-7-5": {
			type: "spritesheet",
			base: a,
			url: "7-5.png",
			x: 36,
			y: 44,
			w: 49,
			h: 47
		},
		"reduced-hair-female-7-6": {
			type: "spritesheet",
			base: a,
			url: "7-6.png",
			x: 36,
			y: 44,
			w: 49,
			h: 47
		},
		"reduced-hair-female-7-7": {
			type: "spritesheet",
			base: a,
			url: "7-7.png",
			x: 36,
			y: 44,
			w: 49,
			h: 47
		},
		"reduced-hair-female-7-8": {
			type: "spritesheet",
			base: a,
			url: "7-8.png",
			x: 36,
			y: 44,
			w: 49,
			h: 47
		},
		"reduced-hair-female-7-9": {
			type: "spritesheet",
			base: a,
			url: "7-9.png",
			x: 36,
			y: 44,
			w: 49,
			h: 47
		},
		"reduced-hair-female-8-1": {
			type: "spritesheet",
			base: a,
			url: "8-1.png",
			x: 34,
			y: 44,
			w: 51,
			h: 45
		},
		"reduced-hair-female-8-10": {
			type: "spritesheet",
			base: a,
			url: "8-10.png",
			x: 34,
			y: 44,
			w: 51,
			h: 45
		},
		"reduced-hair-female-8-11": {
			type: "spritesheet",
			base: a,
			url: "8-11.png",
			x: 34,
			y: 44,
			w: 51,
			h: 45
		},
		"reduced-hair-female-8-12": {
			type: "spritesheet",
			base: a,
			url: "8-12.png",
			x: 34,
			y: 44,
			w: 51,
			h: 45
		},
		"reduced-hair-female-8-13": {
			type: "spritesheet",
			base: a,
			url: "8-13.png",
			x: 34,
			y: 44,
			w: 51,
			h: 45
		},
		"reduced-hair-female-8-14": {
			type: "spritesheet",
			base: a,
			url: "8-14.png",
			x: 34,
			y: 44,
			w: 51,
			h: 45
		},
		"reduced-hair-female-8-15": {
			type: "spritesheet",
			base: a,
			url: "8-15.png",
			x: 34,
			y: 44,
			w: 51,
			h: 45
		},
		"reduced-hair-female-8-16": {
			type: "spritesheet",
			base: a,
			url: "8-16.png",
			x: 34,
			y: 44,
			w: 51,
			h: 45
		},
		"reduced-hair-female-8-2": {
			type: "spritesheet",
			base: a,
			url: "8-2.png",
			x: 34,
			y: 44,
			w: 51,
			h: 45
		},
		"reduced-hair-female-8-3": {
			type: "spritesheet",
			base: a,
			url: "8-3.png",
			x: 34,
			y: 44,
			w: 51,
			h: 45
		},
		"reduced-hair-female-8-4": {
			type: "spritesheet",
			base: a,
			url: "8-4.png",
			x: 34,
			y: 44,
			w: 51,
			h: 45
		},
		"reduced-hair-female-8-5": {
			type: "spritesheet",
			base: a,
			url: "8-5.png",
			x: 34,
			y: 44,
			w: 51,
			h: 45
		},
		"reduced-hair-female-8-6": {
			type: "spritesheet",
			base: a,
			url: "8-6.png",
			x: 34,
			y: 44,
			w: 51,
			h: 45
		},
		"reduced-hair-female-8-7": {
			type: "spritesheet",
			base: a,
			url: "8-7.png",
			x: 34,
			y: 44,
			w: 51,
			h: 45
		},
		"reduced-hair-female-8-8": {
			type: "spritesheet",
			base: a,
			url: "8-8.png",
			x: 34,
			y: 44,
			w: 51,
			h: 45
		},
		"reduced-hair-female-8-9": {
			type: "spritesheet",
			base: a,
			url: "8-9.png",
			x: 34,
			y: 44,
			w: 51,
			h: 45
		},
		"reduced-hair-female-9-1": {
			type: "spritesheet",
			base: a,
			url: "9-1.png",
			x: 36,
			y: 46,
			w: 59,
			h: 43
		},
		"reduced-hair-female-9-10": {
			type: "spritesheet",
			base: a,
			url: "9-10.png",
			x: 36,
			y: 46,
			w: 59,
			h: 43
		},
		"reduced-hair-female-9-11": {
			type: "spritesheet",
			base: a,
			url: "9-11.png",
			x: 36,
			y: 46,
			w: 59,
			h: 43
		},
		"reduced-hair-female-9-12": {
			type: "spritesheet",
			base: a,
			url: "9-12.png",
			x: 36,
			y: 46,
			w: 59,
			h: 43
		},
		"reduced-hair-female-9-13": {
			type: "spritesheet",
			base: a,
			url: "9-13.png",
			x: 36,
			y: 46,
			w: 59,
			h: 43
		},
		"reduced-hair-female-9-14": {
			type: "spritesheet",
			base: a,
			url: "9-14.png",
			x: 36,
			y: 46,
			w: 59,
			h: 43
		},
		"reduced-hair-female-9-15": {
			type: "spritesheet",
			base: a,
			url: "9-15.png",
			x: 36,
			y: 46,
			w: 59,
			h: 43
		},
		"reduced-hair-female-9-16": {
			type: "spritesheet",
			base: a,
			url: "9-16.png",
			x: 36,
			y: 46,
			w: 59,
			h: 43
		},
		"reduced-hair-female-9-2": {
			type: "spritesheet",
			base: a,
			url: "9-2.png",
			x: 36,
			y: 46,
			w: 59,
			h: 43
		},
		"reduced-hair-female-9-3": {
			type: "spritesheet",
			base: a,
			url: "9-3.png",
			x: 36,
			y: 46,
			w: 59,
			h: 43
		},
		"reduced-hair-female-9-4": {
			type: "spritesheet",
			base: a,
			url: "9-4.png",
			x: 36,
			y: 46,
			w: 59,
			h: 43
		},
		"reduced-hair-female-9-5": {
			type: "spritesheet",
			base: a,
			url: "9-5.png",
			x: 36,
			y: 46,
			w: 59,
			h: 43
		},
		"reduced-hair-female-9-6": {
			type: "spritesheet",
			base: a,
			url: "9-6.png",
			x: 36,
			y: 46,
			w: 59,
			h: 43
		},
		"reduced-hair-female-9-7": {
			type: "spritesheet",
			base: a,
			url: "9-7.png",
			x: 36,
			y: 46,
			w: 59,
			h: 43
		},
		"reduced-hair-female-9-8": {
			type: "spritesheet",
			base: a,
			url: "9-8.png",
			x: 36,
			y: 46,
			w: 59,
			h: 43
		},
		"reduced-hair-female-9-9": {
			type: "spritesheet",
			base: a,
			url: "9-9.png",
			x: 36,
			y: 46,
			w: 59,
			h: 43
		}
	}
}, Prodigy.Assets.prototype = {
	getAsset: function (e) {
		return this._assets[e]
	},
	getImageBounds: function (e) {
		return Util.isDefined(this._assets[e]) && Util.isDefined(this._assets[e].x) ? new Array(this._assets[e].x, this._assets[e].y, this._assets[e].w, this._assets[e].h) : new Array(0, 0, 0, 0)
	}
}, Prodigy.Assets.prototype.constructor = Prodigy.Assets, Prodigy.Attacks = function (e) {
	this.game = e
}, Prodigy.Attacks.prototype = {
	constructor: Prodigy.Attacks,
	calculateDamage: function (e, t, i, a) {
		Util.isDefined(a) || (a = 0);
		var s = 0;
		Util.isDefined(e) && Util.isDefined(e.damage) && (s = e.damage);
		e.element, i.getElement();
		return s += this.game.prodigy.affixes.getDamageModifier(e, t, i), Math.max(Math.floor(s + a), 2)
	},
	isStrong: function (e, t) {
		return Util.isDefined(e) && Util.isDefined(t) ? "fire" !== e || "ice" !== t && "earth" !== t ? "water" === e && "fire" === t ? !0 : "earth" === e && "water" === t ? !0 : "storm" === e && "water" === t ? !0 : "ice" === e && "storm" === t ? !0 : !1 : !0 : !1
	},
	isWeak: function (e, t) {
		return Util.isDefined(e) && Util.isDefined(t) ? "fire" === e && "water" === t ? !0 : "water" !== e || "earth" !== t && "storm" !== t ? "earth" === e && "fire" === t ? !0 : "storm" === e && "ice" === t ? !0 : "ice" === e && "fire" === t ? !0 : !1 : !0 : !1
	},
	getBestAttack: function (e, t, i) {
		if (e.length <= 0) return null;
		for (var a = [], s = 0; s < e.length; s++) {
			var r = this.getAttack(e[s]);
			a[s] = "Glacial Shield" === r.name ? {
				dmg: 0,
				ID: e[s]
			} : {
				dmg: this.calculateDamage(r, null, t, 0),
				ID: e[s]
			}
		}
		a.sort(function (e, t) {
			return t.dmg - e.dmg
		}), i = i || 0;
		for (var o = a[a.length - 1].ID, s = 0; s < a.length; s++) {
			if (Math.random() > i) {
				o = a[s].ID;
				break
			}
			i *= .75
		}
		return this.getAttack(o)
	},
	getHealingAttack: function (e) {
		for (var t = 0; t < e.length; t++) {
			var i = this.getAttack(e[t]);
			if (i.heal) return i
		}
		return null
	},
	getAttack: function (e) {
		var t = Prodigy.Attacks.data[e - 1];
		return Util.isDefined(t) ? t : null
	}
}, Prodigy.Attacks.data = [{
	ID: 1,
	name: "Fireball",
	element: "fire",
	animation: "Fireball",
	damage: 4
}, {
	ID: 2,
	name: "Embers",
	element: "fire",
	animation: "Embers",
	damage: 5
}, {
	ID: 3,
	name: "Charclone",
	element: "fire",
	animation: "Charclone",
	damage: 6
}, {
	ID: 4,
	name: "Razorfire",
	element: "fire",
	animation: "Razorfire",
	damage: 7
}, {
	ID: 5,
	name: "Fire Rain",
	element: "fire",
	animation: "FireRain",
	damage: 8
}, {
	ID: 6,
	name: "Dragos",
	element: "fire",
	animation: "Dragos",
	damage: 9
}, {
	ID: 7,
	name: "Water Blast",
	element: "water",
	animation: "WaterBlast",
	damage: 4
}, {
	ID: 8,
	name: "Water Bomb",
	element: "water",
	animation: "WaterBomb",
	damage: 5
}, {
	ID: 9,
	name: "Rainy Day",
	element: "water",
	animation: "RainyDay",
	damage: 6
}, {
	ID: 10,
	name: "Water Bubble",
	element: "water",
	animation: "WaterBubble",
	damage: 7
}, {
	ID: 11,
	name: "Geyser",
	element: "water",
	animation: "Geyser",
	damage: 8
}, {
	ID: 12,
	name: "Angel's Fountain",
	element: "water",
	animation: "Fountain",
	damage: 9
}, {
	ID: 13,
	name: "Mudball",
	element: "earth",
	animation: "Mudball",
	damage: 4
}, {
	ID: 14,
	name: "Whirlwind",
	element: "earth",
	animation: "Whirlwind",
	damage: 5
}, {
	ID: 15,
	name: "Leaf Wind",
	element: "earth",
	animation: "LeafWind",
	damage: 6
}, {
	ID: 16,
	name: "Absorb",
	element: "earth",
	animation: "Absorb",
	damage: 4,
	heal: !0
}, {
	ID: 17,
	name: "Earthsprite",
	element: "earth",
	animation: "EarthSprite",
	damage: 7
}, {
	ID: 18,
	name: "Blitz",
	element: "earth",
	animation: "Blitz",
	damage: 8
}, {
	ID: 19,
	name: "Ice Cannon",
	element: "ice",
	animation: "IceCannon",
	damage: 4
}, {
	ID: 20,
	name: "Ice Prison",
	element: "ice",
	animation: "IcePrison",
	damage: 5
}, {
	ID: 21,
	name: "Blizzard",
	element: "ice",
	animation: "Blizzard",
	damage: 6
}, {
	ID: 22,
	name: "Glacial Shield",
	element: "ice",
	animation: "GlacialShield",
	damage: 16,
	heal: !0
}, {
	ID: 23,
	name: "Snowman",
	element: "ice",
	animation: "Snowman",
	damage: 7
}, {
	ID: 24,
	name: "Ice to Meet You",
	element: "ice",
	animation: "IceToMeetYou",
	damage: 8
}, {
	ID: 25,
	name: "Cloudshot",
	element: "storm",
	animation: "Cloudshot",
	damage: 4
}, {
	ID: 26,
	name: "Bolt",
	element: "storm",
	animation: "Bolt",
	damage: 5
}, {
	ID: 27,
	name: "Trinity",
	element: "storm",
	animation: "Trinity",
	damage: 6
}, {
	ID: 28,
	name: "Thunderdome",
	element: "storm",
	animation: "Thunderdome",
	damage: 7
}, {
	ID: 29,
	name: "Shocksphere",
	element: "storm",
	animation: "Shocksphere",
	damage: 8
}, {
	ID: 30,
	name: "Storm's Coming",
	element: "storm",
	animation: "StormComing",
	damage: 9
}, {
	ID: 31,
	name: "Magi-shot",
	element: "wizard",
	animation: "MagiShot",
	damage: 4
}, {
	ID: 32,
	name: "Batter Up!",
	element: "wizard",
	animation: "BatterUp",
	damage: 5
}, {
	ID: 33,
	name: "Conjure",
	element: "wizard",
	animation: "Conjure",
	damage: 6
}, {
	ID: 34,
	name: "Pummel",
	element: "wizard",
	animation: "Pummel",
	damage: 7
}, {
	ID: 35,
	name: "Powerbeam",
	element: "wizard",
	animation: "Powerbeam",
	damage: 8
}, {
	ID: 36,
	name: "Zero",
	element: "wizard",
	animation: "Zero",
	damage: 9
}], Prodigy.Dialogues = function () {}, Prodigy.Dialogues.prototype = {
	get: function (e, t) {
		return Prodigy.Dialogues.data[e][t]
	},
	printScript: function (e, t) {
		for (var i = Prodigy.Dialogues.data[e], a = "", s = 0; s < i.length; s++)(!Util.isDefined(t) || t(i[s])) && (a += i[s].text + "\n");
		console.log(a)
	}
}, Prodigy.Dialogues.prototype.constructor = Prodigy.Dialogues, Prodigy.Dialogues.data = {
	noot: [{
		text: "Look out below!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-12",
			s: 0,
			d: 1
		}
	}, {
		text: "Ouch!\n...\nAnother happy landing!",
		face: 3,
		anim: 1,
		audio: {
			tag: "voice-10-12",
			s: 1,
			d: 4
		}
	}, {
		text: "I'm Noot, and I'll be your fairy guide! All new wizards need a guide, and I'm ALL YOURS!",
		face: 0,
		audio: {
			tag: "voice-10-12",
			s: 5,
			d: 7
		}
	}, {
		text: "This is a wizard battle! The goal is to reduce your opponent's hearts to zero by casting spells.",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-10-13",
			s: 0,
			d: 7
		}
	}, {
		text: "It's okay, try again! The scarecrow won't fight back, so practice away!",
		face: 1,
		audio: {
			tag: "voice-10-13",
			s: 7,
			d: 6
		}
	}, {
		text: "When you cast a spell, your opponent loses hearts! When they have no hearts left, you win!",
		face: 3,
		audio: {
			tag: "voice-10-13",
			s: 13,
			d: 7
		}
	}, {
		text: "Don't know how to walk, huh? Click the ground to walk, and follow me to the edge of the map!",
		face: 4,
		audio: {
			tag: "voice-10-14",
			s: 0,
			d: 6
		}
	}, {
		text: "I think you're ready for the next lesson...follow me!",
		face: 3,
		anim: 2,
		audio: {
			tag: "voice-10-14",
			s: 6,
			d: 4
		}
	}, {
		text: "To cast a spell, press the Attack button. Then choose your spell from the list!",
		face: 4,
		audio: {
			tag: "voice-10-3",
			s: 2,
			d: 5
		}
	}, {
		text: "Uh oh! Your hearts are low! At times like this, it might be best to change team members!",
		face: 1,
		audio: {
			tag: "voice-10-1",
			s: 0,
			d: 6
		}
	}, {
		text: "Just click the Switch button and choose another teammate.",
		face: 0,
		audio: {
			tag: "voice-10-1",
			s: 6,
			d: 3.5
		}
	}, {
		text: "Your opponent is getting tired! Now's the time to try and catch it!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-2",
			s: 0,
			d: 4
		}
	}, {
		text: "Just click the Catch button when you want to catch a new pet!",
		face: 3,
		audio: {
			tag: "voice-10-2",
			s: 4,
			d: 3
		}
	}, {
		text: "All you have to do is click this button when the arrow is pointing to the green area! Give it a try!",
		face: 4,
		audio: {
			tag: "voice-10-4",
			s: 0,
			d: 6
		}
	}, {
		text: "I think it's time you got a pet of your own! Choose a pet to join you on your adventures!",
		face: 0,
		audio: {
			tag: "voice-10-15",
			s: 8,
			d: 6
		}
	}, {
		text: "This is your backpack! All the items you collect are stored here!",
		face: 0,
		audio: {
			tag: "voice-10-5",
			s: 0,
			d: 4
		}
	}, {
		text: "To equip an item, click on one of your items and select 'wear'.",
		face: 4,
		audio: {
			tag: "voice-10-5",
			s: 4,
			d: 4
		}
	}, {
		text: "To unequip an item, click on an equipped item here. Looking good!",
		face: 3,
		audio: {
			tag: "voice-10-5",
			s: 8,
			d: 5
		}
	}, {
		text: "Your map shows all the areas on the island! To travel to a new area, just click the area's icon!",
		face: 2,
		audio: {
			tag: "voice-10-6",
			s: 0,
			d: 6
		}
	}, {
		text: "This is where you select your battle team!",
		face: 0,
		audio: {
			tag: "voice-10-7",
			s: 0,
			d: 3
		}
	}, {
		text: "First click one of your pets in the boxes here...",
		face: 4,
		audio: {
			tag: "voice-10-7",
			s: 3,
			d: 3
		}
	}, {
		text: "Then, click an open slot on your team. You can do this to remove pets from your team too!",
		face: 0,
		audio: {
			tag: "voice-10-7",
			s: 6,
			d: 6
		}
	}, {
		text: "Oh no! You ran out of hearts...you must be exhausted!",
		face: 1,
		anim: 1,
		audio: {
			tag: "voice-10-8",
			s: 0,
			d: 4
		}
	}, {
		text: "Don't worry, I'll heal you and your pets! But I'll have to charge you [gold] 100...",
		face: 4,
		audio: {
			tag: "voice-10-8",
			s: 4,
			d: 5
		}
	}, {
		text: "Let's keep going! There's still so much to explore!",
		face: 3,
		anim: 2,
		audio: {
			tag: "voice-10-16",
			s: 0,
			d: 4
		}
	}, {
		text: "Uh oh! A monster is blocking our path!",
		face: 5,
		anim: 4,
		audio: {
			tag: "voice-10-16",
			s: 4,
			d: 3
		}
	}, {
		text: "The Academy is full of monsters, and monsters love a good wizard battle! Click on the monster to challenge it!",
		face: 4,
		audio: {
			tag: "voice-10-16",
			s: 7,
			d: 8
		}
	}, {
		text: "Pets are very useful - they level up and cast spells just like you! They can also help you in battle!",
		face: 0,
		audio: {
			tag: "voice-10-15",
			s: 0,
			d: 8
		}
	}, {
		text: "But before we go anywhere, you need to know how to defend yourself from monsters!",
		face: 1,
		audio: {
			tag: "voice-10-12",
			s: 12,
			d: 5
		}
	}, {
		text: "Oh no! It looks like a monster broke the bridge! How will we get across now?",
		face: 5,
		anim: 2,
		audio: {
			tag: "voice-10-17",
			s: 0,
			d: 6
		}
	}, {
		text: "Oh, nice! It looks like there are some pieces nearby...go collect them and we can rebuild the bridge ourselves!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-17",
			s: 6,
			d: 8
		}
	}, {
		text: "Just click on the items around the map to pick them up...but watch out for monsters!",
		face: 1,
		audio: {
			tag: "voice-10-17",
			s: 14,
			d: 5
		}
	}, {
		text: "Great job! Now step back and watch this!",
		face: 3,
		audio: {
			tag: "voice-10-18",
			s: 0,
			d: 5
		}
	}, {
		text: "TADA! Not bad, huh? Okay, follow me!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-18",
			s: 5,
			d: 4
		}
	}, {
		text: "In battle, monsters also cast spells. The first to defeat the other wins the battle!",
		face: 0,
		audio: {
			tag: "voice-10-16",
			s: 15,
			d: 6
		}
	}, {
		text: "Well, that's all I have left to teach you, but your wizard quest has only just begun!",
		face: 0,
		audio: {
			tag: "voice-10-19",
			s: 0,
			d: 6
		}
	}, {
		text: "Follow the path to the left to meet the first master wizard, Flora!",
		face: 2,
		audio: {
			tag: "voice-10-19",
			s: 10,
			d: 5
		}
	}, {
		text: "Don't you worry, though, because I'll always be here to help you out!",
		face: 3,
		anim: 2,
		audio: {
			tag: "voice-10-19",
			s: 6,
			d: 4
		}
	}, {
		text: "Do you want to heal you and your pets?",
		face: 3,
		anim: 2,
		audio: {
			tag: "voice-10-20",
			s: 0,
			d: 3
		}
	}, {
		text: "Oh dear! Try again!",
		face: 1,
		audio: {
			tag: "voice-10-20",
			s: 3,
			d: 2
		}
	}, {
		text: "Whoa, great job!",
		face: 3,
		anim: 4,
		audio: {
			tag: "voice-10-20",
			s: 5,
			d: 3
		}
	}, {
		text: "All finished! Let's head back, okay?",
		face: 3,
		anim: 4,
		audio: {
			tag: "voice-10-20",
			s: 8,
			d: 3
		}
	}, {
		text: "To become a true PRODIGY, you must travel all over the island and meet the master wizards!",
		face: 0,
		audio: {
			tag: "voice-10-19",
			s: 15,
			d: 7
		}
	}, {
		text: "Each master will teach you new spells, and award you a gemstone for completing their trials!",
		face: 0,
		audio: {
			tag: "voice-10-19",
			s: 22,
			d: 6
		}
	}, {
		text: "First, ask your teacher for your class code, and enter it here!",
		face: 0,
		audio: {
			tag: "voice-10-21",
			s: 0,
			d: 4
		}
	}, {
		text: "Now, enter your first and last name!",
		face: 2,
		audio: {
			tag: "voice-10-21",
			s: 4,
			d: 3
		}
	}, {
		text: "Create a password for your account! Remember to enter it twice!",
		face: 3,
		audio: {
			tag: "voice-10-21",
			s: 7,
			d: 4
		}
	}, {
		text: "Where do you live?",
		face: 4,
		audio: {
			tag: "voice-10-21",
			s: 11,
			d: 1
		}
	}, {
		text: "What grade are you in?",
		face: 1,
		audio: {
			tag: "voice-10-21",
			s: 12,
			d: 1
		}
	}, {
		text: "What does your wizard look like?",
		face: 2,
		audio: {
			tag: "voice-10-21",
			s: 13,
			d: 2
		}
	}, {
		text: "What is your wizard's name?",
		face: 3,
		audio: {
			tag: "voice-10-21",
			s: 15,
			d: 2
		}
	}, {
		text: "Here is your login information. Be sure to write these down!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-21",
			s: 17,
			d: 4
		}
	}, {
		text: "Uh oh! Something went wrong...do you want to try again?",
		face: 1,
		audio: {
			tag: "voice-10-21",
			s: 21,
			d: 4
		}
	}, {
		text: "There's the healstone! When you're low on health, just click it to heal you and your pets!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-22",
			s: 0,
			d: 5
		}
	}, {
		text: "There are the Sprikes! In battle, monsters drop items, and some items are used for quests!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-23",
			s: 0,
			d: 6
		}
	}, {
		text: "Defeat the Sprikes until one of them drops some evidence for Flora!",
		face: 0,
		audio: {
			tag: "voice-10-23",
			s: 6,
			d: 4
		}
	}, {
		text: "Um...I think we found the TripTrop Trio!",
		face: 1,
		anim: 2,
		audio: {
			tag: "voice-10-24",
			s: 0,
			d: 4
		}
	}, {
		text: "Whew, that wasn't so bad...good job!",
		face: 2,
		audio: {
			tag: "voice-10-24",
			s: 4,
			d: 4
		}
	}, {
		text: "See that gate? It leads to the icy Shiverchill Mountains... but you need the Firefly Gem to open it!",
		face: 4,
		audio: {
			tag: "voice-10-24",
			s: 8,
			d: 7
		}
	}, {
		text: "WOW! That must be Gerald! I guess he's sleeping...thank goodness! We should probably tell Flora.",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-25",
			s: 0,
			d: 7
		}
	}, {
		text: "Oh no! A monster stole the flute! We'd better go tell Flora...",
		face: 5,
		audio: {
			tag: "voice-10-26",
			s: 0,
			d: 5
		}
	}, {
		text: "All we have to do is play this flute? Piece of cake, I used to take lessons!",
		face: 1,
		audio: {
			tag: "voice-10-27",
			s: 0,
			d: 6
		}
	}, {
		text: "Pftfbpfffppfbt!",
		face: 3,
		audio: {
			tag: "voice-10-27",
			s: 6,
			d: 2
		}
	}, {
		text: "What? I never said I was any good at it!",
		face: 5,
		audio: {
			tag: "voice-10-27",
			s: 8,
			d: 3
		}
	}, {
		text: "You opened the gate and got your first gemstone! Well done!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-28",
			s: 0,
			d: 4
		}
	}, {
		text: "Next stop, Shiverchill Mountains!",
		face: 3,
		audio: {
			tag: "voice-10-28",
			s: 4,
			d: 3
		}
	}, {
		text: "Enter your parent's email if you're playing at home!",
		face: 1,
		audio: {
			tag: "voice-10-21",
			s: 25,
			d: 3
		}
	}, {
		text: "It looks like all the furnaces are out...no wonder it's so cold!",
		face: 1,
		anim: 4,
		audio: {
			tag: "voice-10-29",
			s: 0,
			d: 5
		}
	}, {
		text: "Whoa...what was that about?",
		face: 1,
		audio: {
			tag: "voice-10-30",
			s: 0,
			d: 2
		}
	}, {
		text: "We'd better tell Bok about this...",
		face: 4,
		audio: {
			tag: "voice-10-31",
			s: 0,
			d: 2
		}
	}, {
		text: "What the...this is NOT a shovel! We'd better go tell Bok.",
		face: 5,
		audio: {
			tag: "voice-10-32",
			s: 0,
			d: 5
		}
	}, {
		text: "Wait, those weren't the monsters?",
		face: 1,
		audio: {
			tag: "voice-10-33",
			s: 0,
			d: 3
		}
	}, {
		text: "Hmmm...well, you wouldn't happen to know where we could find some power crystals, would you?",
		face: 4,
		audio: {
			tag: "voice-10-33",
			s: 3,
			d: 7
		}
	}, {
		text: "Ummm...I think that's the REAL monster!",
		face: 3,
		anim: 2,
		audio: {
			tag: "voice-10-34",
			s: 0,
			d: 4
		}
	}, {
		text: "I'll bet that's the throne room, but it looks like the entrance is still frozen...",
		face: 1,
		audio: {
			tag: "voice-10-35",
			s: 0,
			d: 5
		}
	}, {
		text: "Look there! It's another power crystal...we can light another furnace!",
		face: 2,
		anim: 2,
		audio: {
			tag: "voice-10-35",
			s: 5,
			d: 6
		}
	}, {
		text: "Or maybe not? I guess the worm is still around...",
		face: 1,
		audio: {
			tag: "voice-10-35",
			s: 11,
			d: 4
		}
	}, {
		text: "Hey look! The furnace melted some of the ice!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-36",
			s: 0,
			d: 4
		}
	}, {
		text: "You got your second gemstone and opened the second gate! Well done!",
		face: 2,
		anim: 4,
		audio: {}
	}, {
		text: "Next stop, Dyno Dig Oasis!",
		face: 3
	}, {
		text: "Welcome to Lamplight, the most magical town on the island and home of the Academy!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-37",
			s: 0,
			d: 6
		}
	}, {
		text: "This is a great little town. I'm sure you'll find yourself right at home.",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-37",
			s: 6,
			d: 5
		}
	}, {
		text: "Let's go on a quick tour around town, shall we? There's so much to see!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-37",
			s: 11,
			d: 5
		}
	}, {
		text: "Here is the Coliseum. Inside you can face the best wizards around, and earn great rewards!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-38",
			s: 0,
			d: 8
		}
	}, {
		text: "But you should probably level up a bit first...some are pretty tricky! Let's keep moving!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-38",
			s: 8,
			d: 7
		}
	}, {
		text: "This is the Shopping District - most of the shops in Lamplight are here.",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-39",
			s: 0,
			d: 5
		}
	}, {
		text: "Here is the Equipment Store. They sell wands, outfits and hats.",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-39",
			s: 5,
			d: 4
		}
	}, {
		text: "This is the Stylist Shop, where wizards can change their appearance! Let's continue, shall we?",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-39",
			s: 9,
			d: 6
		}
	}, {
		text: "This is the Town Square, the heart of Lamplight!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-40",
			s: 0,
			d: 4
		}
	}, {
		text: "Many special events and festivals are hosted here...be sure to check in often!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-40",
			s: 4,
			d: 5
		}
	}, {
		text: "All right! Only one more stop to go.",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-40",
			s: 9,
			d: 4
		}
	}, {
		text: "Down that way is the eastern gate, which leads to the Academy...",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-41",
			s: 0,
			d: 4
		}
	}, {
		text: "Unfortunately, it's been closed down ever since the Wardens disappeared... Maybe someday you'll get to see it for yourself!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-41",
			s: 4,
			d: 8
		}
	}, {
		text: "Anyways, that's it for the tour! Come back often...the town changes all the time!",
		face: 2,
		anim: 4,
		audio: {
			tag: "voice-10-41",
			s: 12,
			d: 6
		}
	}, {
		text: "Great job! Be sure to talk to Boardy in Lamplight to get your reward.",
		face: 2,
		anim: 4
	}],
	flora: [{
		text: "Well hello there! The name's Flora - the master wizard of Firefly Forest!",
		face: 5,
		anim: 4,
		audio: {
			tag: "voice-8-1",
			s: 0,
			d: 6
		}
	}, {
		text: "Complete my trials to learn earth spells. Complete them all to earn the Firefly Gem!",
		face: 3,
		audio: {
			tag: "voice-8-1",
			s: 6,
			d: 6
		}
	}, {
		text: "But first, I have an itty bitty favor to ask...",
		face: 2,
		audio: {
			tag: "voice-8-1",
			s: 12,
			d: 3
		}
	}, {
		text: "Can you go rescue my friend? He's been surrounded by monsters!",
		face: 6,
		anim: 2,
		audio: {
			tag: "voice-8-1",
			s: 15,
			d: 5
		}
	}, {
		text: "Quick question - what does every wizard need?",
		face: 2,
		audio: {
			tag: "voice-8-2",
			s: 0,
			d: 4
		}
	}, {
		text: "A wand, silly! I'm fresh out of wands, but I think there's a special one in a chest in the forest!",
		face: 1,
		audio: {
			tag: "voice-8-2",
			s: 4,
			d: 8
		}
	}, {
		text: "Or you can always buy one from the store!",
		face: 2,
		audio: {
			tag: "voice-8-2",
			s: 12,
			d: 3
		}
	}, {
		text: "Oh! You got one!",
		face: 1,
		audio: {
			tag: "voice-8-2",
			s: 15,
			d: 2
		}
	}, {
		text: "After a few battles, your hearts get low and you need to heal.",
		face: 2,
		audio: {
			tag: "voice-8-3",
			s: 0,
			d: 4
		}
	}, {
		text: "Follow the path and find a HEALSTONE - a magical gem that can heal your team!",
		face: 5,
		audio: {
			tag: "voice-8-3",
			s: 4,
			d: 6
		}
	}, {
		text: "And while you're there, challenge some Saplettes for your next trial!",
		face: 3,
		audio: {
			tag: "voice-8-3",
			s: 10,
			d: 5
		}
	}, {
		text: "To become a true Prodigy, you must learn spells! And the best way to learn new spells is by helping people!",
		face: 4,
		anim: 4,
		audio: {
			tag: "voice-8-4",
			s: 0,
			d: 7
		}
	}, {
		text: "Firefly Forest has a problem...vandals! Someone's been littering at the crossroads!",
		face: 6,
		audio: {
			tag: "voice-8-4",
			s: 7,
			d: 6
		}
	}, {
		text: "Do me a favor and help clean it up, okay?",
		face: 7,
		audio: {
			tag: "voice-8-4",
			s: 13,
			d: 3
		}
	}, {
		text: "The paper you picked up seems to be part of a note... but it's written in 'monster'.",
		face: 2,
		audio: {
			tag: "voice-8-5",
			s: 0,
			d: 5
		}
	}, {
		text: "Try bringing it to the traveller in the northern woods!",
		face: 0,
		audio: {
			tag: "voice-8-5",
			s: 5,
			d: 3
		}
	}, {
		text: "The note says 'don't tell Flora' \n...HEY! I'M FLORA!",
		face: 6,
		anim: 1,
		audio: {
			tag: "voice-8-6",
			s: 0,
			d: 5
		}
	}, {
		text: "So, those Sprikes are up to something secret, huh? Defeat a few until they drop some evidence!",
		face: 6,
		audio: {
			tag: "voice-8-6",
			s: 5,
			d: 8
		}
	}, {
		text: "Hmmm, this is a Mandrake... \nMandrakes are the best spies in the whole forest!",
		face: 3,
		audio: {
			tag: "voice-8-7",
			s: 0,
			d: 6
		}
	}, {
		text: "Collect more for me and bring them in for questioning...maybe they can tell us more!",
		face: 6,
		audio: {
			tag: "voice-8-7",
			s: 6,
			d: 5
		}
	}, {
		text: "Be sure to look around...they may be in more than one place!",
		face: 1,
		audio: {
			tag: "voice-8-7",
			s: 11,
			d: 4
		}
	}, {
		text: "According to the Mandrakes, the TripTrop Trio ordered the Sprikes to steal something from me.",
		face: 6,
		anim: 4,
		audio: {
			tag: "voice-8-8",
			s: 0,
			d: 6
		}
	}, {
		text: "This forest is mischevious! \n...and confusing!",
		face: 7,
		audio: {
			tag: "voice-8-8",
			s: 6,
			d: 4
		}
	}, {
		text: "Track down the TripTrop Trio, defeat them, and bring back what they stole!",
		face: 6,
		audio: {
			tag: "voice-8-8",
			s: 10,
			d: 5
		}
	}, {
		text: "So, they stole my flute? And they BROKE IT?! THE NERVE!",
		face: 6,
		anim: 2,
		audio: {
			tag: "voice-8-9",
			s: 0,
			d: 6
		}
	}, {
		text: "This can only mean one thing... \nCan you head into the forest to find my Golem, Gerald?",
		face: 2,
		audio: {
			tag: "voice-8-9",
			s: 6,
			d: 6
		}
	}, {
		text: "WHAT?! That boulder-brain is asleep again?!",
		face: 6,
		anim: 4,
		audio: {
			tag: "voice-8-9",
			s: 12,
			d: 4
		}
	}, {
		text: "Monsters lull Gerald to sleep all the time...I guess he's a bit loud when he walks around.",
		face: 2,
		audio: {
			tag: "voice-8-10",
			s: 0,
			d: 7
		}
	}, {
		text: "We can wake him up, but first we need to fix my broken flute!",
		face: 7,
		audio: {
			tag: "voice-8-10",
			s: 7,
			d: 5
		}
	}, {
		text: "Easy Peasy! Just bring it to the 'magic stump' in the woods!",
		face: 0,
		audio: {
			tag: "voice-8-10",
			s: 12,
			d: 4
		}
	}, {
		text: "WHAT?! It's been stolen again?!",
		face: 6,
		anim: 2,
		audio: {
			tag: "voice-8-10",
			s: 16,
			d: 3
		}
	}, {
		text: "That's the last straw! Now I'm REAL MAD, and nobody wants to mess with an angry forest fairy!",
		face: 6,
		anim: 4,
		audio: {
			tag: "voice-8-11",
			s: 0,
			d: 9
		}
	}, {
		text: "Go find that monster and bring back my flute! He could be anywhere!",
		face: 6,
		audio: {
			tag: "voice-8-11",
			s: 9,
			d: 5
		}
	}, {
		text: "Now that we have the flute, it's time for your final challenge!",
		face: 3,
		audio: {
			tag: "voice-8-12",
			s: 0,
			d: 4
		}
	}, {
		text: "Take this to Gerald and wake him up! Careful, though...he can get REAL grumpy!",
		face: 2,
		audio: {
			tag: "voice-8-12",
			s: 4,
			d: 6
		}
	}, {
		text: "Wow! You did it! As promised, here is the Firefly Gem!",
		face: 4,
		anim: 4,
		audio: {
			tag: "voice-8-12",
			s: 10,
			d: 6
		}
	}, {
		text: "You're ready to head into Shiverchill Mountains, where you'll meet your second master, Bok!",
		face: 5,
		audio: {
			tag: "voice-8-13",
			s: 0,
			d: 6
		}
	}, {
		text: "Just take the gem to the gate and open it!",
		face: 4,
		audio: {
			tag: "voice-8-13",
			s: 6,
			d: 3
		}
	}, {
		text: "Just follow the arrows!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-8-14",
			s: 0,
			d: 2
		}
	}, {
		text: "Well done!",
		face: 4,
		anim: 2,
		audio: {
			tag: "voice-8-14",
			s: 2,
			d: 2
		}
	}],
	bok: [{
		text: "Hahaha! Bok knew you could do it!",
		face: 0,
		anim: 4,
		audio: {
			tag: "voice-1-1",
			s: 0,
			d: 5
		}
	}, {
		text: "Slip say it time you learn new spell. Bok agree - you the best!",
		face: 7,
		anim: 2,
		audio: {
			tag: "voice-1-1",
			s: 5,
			d: 8
		}
	}, {
		text: "Hoot hoot!",
		face: 2,
		audio: {
			tag: "voice-1-1",
			s: 13,
			d: 1
		}
	}, {
		text: "Welcome to Bok cave! New wizard seek gem, learn spells? You come to right place!",
		face: 1,
		audio: {
			tag: "voice-1-2",
			s: 0,
			d: 8
		}
	}, {
		text: "Bok teach wizard, but first we have problem...IT FREEZING IN HERE!",
		face: 6,
		anim: 1,
		audio: {
			tag: "voice-1-2",
			s: 8,
			d: 8
		}
	}, {
		text: "Need to check on furnaces, but room full of chilly monsters...",
		face: 3,
		audio: {
			tag: "voice-1-2",
			s: 16,
			d: 6
		}
	}, {
		text: "But you wizard! Wizard strong! Head to furnace room...first door on right.",
		face: 4,
		audio: {
			tag: "voice-1-2",
			s: 22,
			d: 7
		}
	}, {
		text: "Furnaces ALL broken? Bok use power crystal to light furnace, but last crystal stolen...",
		face: 8,
		audio: {
			tag: "voice-1-3",
			s: 0,
			d: 8
		}
	}, {
		text: "What?! Bok tell Slip to hide crystal...it not Bok fault it stolen!",
		face: 6,
		audio: {
			tag: "voice-1-3",
			s: 8,
			d: 8
		}
	}, {
		text: "Go to treasure room and find chilly monster that stole Bok crystal!",
		face: 3,
		audio: {
			tag: "voice-1-3",
			s: 16,
			d: 6
		}
	}, {
		text: "Now that wizard have crystal, time to light furnace!",
		face: 0,
		audio: {
			tag: "voice-1-4",
			s: 0,
			d: 5
		}
	}, {
		text: "Go to furnace room and light furnace. Bok counting on wizard!",
		face: 1,
		audio: {
			tag: "voice-1-4",
			s: 5,
			d: 6
		}
	}, {
		text: "Wizard do good, but much of mountain still frozen. Need more crystals, Bok think.",
		face: 5,
		audio: {
			tag: "voice-1-5",
			s: 0,
			d: 9
		}
	}, {
		text: "Crystals rare, but Bok used to find them in caves. Go explore caves, see what can find!",
		face: 0,
		audio: {
			tag: "voice-1-5",
			s: 9,
			d: 9
		}
	}, {
		text: "You find miner? BOK NOT LIKE MINERS ONE BIT!",
		face: 3,
		anim: 2,
		audio: {
			tag: "voice-1-5",
			s: 18,
			d: 6
		}
	}, {
		text: "Before miners, Bok king of mountain. Then miners come with scary wizard, chase Bok to this cave.",
		face: 8,
		audio: {
			tag: "voice-1-5",
			s: 24,
			d: 10
		}
	}, {
		text: "Slip right...miners good at finding crystals. Okay, Bok help...take key to chest - shovel there.",
		face: 5,
		audio: {
			tag: "voice-1-5",
			s: 34,
			d: 12
		}
	}, {
		text: "Wizard can find chest in mines...but be careful! Shovel prized possession, passed to Bok from dear mother.",
		face: 4,
		audio: {
			tag: "voice-1-6",
			s: 0,
			d: 11
		}
	}, {
		text: "Wizard say shovel is spoon? That mean Bok been using real shovel as spoon for WEEKS!",
		face: 8,
		anim: 2,
		audio: {
			tag: "voice-1-6",
			s: 11,
			d: 8
		}
	}, {
		text: "NO LAUGHING, SLIP!",
		face: 3,
		anim: 4,
		audio: {
			tag: "voice-1-6",
			s: 19,
			d: 2
		}
	}, {
		text: "Now you have real shovel, go help miner and get crystal for Bok!",
		face: 0,
		audio: {
			tag: "voice-1-7",
			s: 0,
			d: 7
		}
	}, {
		text: "All miner say is that power crystal in mines? BOK ALREADY KNOW THAT!",
		face: 8,
		audio: {
			tag: "voice-1-8",
			s: 0,
			d: 7
		}
	}, {
		text: "Head into mines, and find that crystal!",
		face: 0,
		audio: {
			tag: "voice-1-8",
			s: 7,
			d: 5
		}
	}, {
		text: "Giant ice worm? That must be what cause all these cavequakes...",
		face: 5,
		audio: {
			tag: "voice-1-9",
			s: 0,
			d: 6
		}
	}, {
		text: "Well, it sound like you defeat it, so back to plan - head back into mines!",
		face: 1,
		audio: {
			tag: "voice-1-9",
			s: 6,
			d: 7
		}
	}, {
		text: "What? Oh, Slip want you to defeat ghosties in mines first...",
		face: 8,
		audio: {
			tag: "voice-1-9",
			s: 13,
			d: 7
		}
	}, {
		text: "Okay, no more delay! Head to mines, ghosties or not, and bring back power crystal!",
		face: 3,
		audio: {
			tag: "voice-1-10",
			s: 0,
			d: 9
		}
	}, {
		text: "With two furnaces on, Bok throne room should be open, and Bok can be king of mountain again!",
		face: 0,
		audio: {
			tag: "voice-1-11",
			s: 0,
			d: 10
		}
	}, {
		text: "But before I go, check throne room for Bok, make sure it safe.",
		face: 4,
		audio: {
			tag: "voice-1-11",
			s: 10,
			d: 7
		}
	}, {
		text: "Throne room still frozen? And worm eat last power crystal? This not good...",
		face: 6,
		audio: {
			tag: "voice-1-11",
			s: 17,
			d: 8
		}
	}, {
		text: "Okay, Bok have plan!",
		face: 0,
		audio: {
			tag: "voice-1-12",
			s: 0,
			d: 3
		}
	}, {
		text: "BOK HAVE GOOD PLANS SOMETIMES! LOTS OF TIMES!",
		face: 3,
		audio: {
			tag: "voice-1-12",
			s: 3,
			d: 5
		}
	}, {
		text: "Monster eat crystals, so wizard go collect lots of crystals!",
		face: 5,
		audio: {
			tag: "voice-1-12",
			s: 8,
			d: 5
		}
	}, {
		text: "Lure monster, defeat, and get crystal! Off you go, hero wizard!",
		face: 1,
		audio: {
			tag: "voice-1-12",
			s: 13,
			d: 8
		}
	}, {
		text: "You have crystals, now it time to face the ice worm...good luck!",
		face: 7,
		anim: 4,
		audio: {
			tag: "voice-1-13",
			s: 0,
			d: 7
		}
	}, {
		text: "Slip wish you luck too!",
		face: 4,
		audio: {
			tag: "voice-1-13",
			s: 7,
			d: 4
		}
	}, {
		text: "For this, wizard deserve the Shiverchill Gem!",
		face: 1,
		anim: 4,
		audio: {
			tag: "voice-1-14",
			s: 7,
			d: 6
		}
	}, {
		text: "...But, Bok leave in throne room. As final test, go to throne room and pick up reward!",
		face: 5,
		audio: {
			tag: "voice-1-14",
			s: 13,
			d: 9
		}
	}, {
		text: "Well, that all Bok have to teach! Now it time for wizard to face new journey!",
		face: 7,
		anim: 4,
		audio: {
			tag: "voice-1-15",
			s: 0,
			d: 8
		}
	}, {
		text: "Bring gem to gate at top of mountain, open, and find Cumulo, the next master!",
		face: 5,
		audio: {
			tag: "voice-1-15",
			s: 8,
			d: 10
		}
	}],
	merchant: [{
		text: "Boy, have I got some deals for you!",
		face: 0,
		anim: 4,
		audio: {
			tag: "voice-11",
			s: 0,
			d: 4
		}
	}, {
		text: "Oh dear...I'm in quite a pickle now!",
		face: 0,
		anim: 2,
		audio: {
			tag: "voice-11",
			s: 24,
			d: 3
		}
	}, {
		text: "Those monsters almost got away with my loot!!",
		face: 0,
		anim: 4,
		audio: {
			tag: "voice-11",
			s: 6,
			d: 3
		}
	}, {
		text: "What have we here? A note written by monsters, huh? Let me read it...",
		face: 0,
		audio: {
			tag: "voice-11",
			s: 9,
			d: 5
		}
	}, {
		text: "It says... \n'Big plans happening, don't tell Flora!'",
		face: 0,
		audio: {
			tag: "voice-11",
			s: 19,
			d: 24
		}
	}, {
		text: "Well it looks like it was written by a Sprike - strange little monsters, they are!",
		face: 0,
		audio: {
			tag: "voice-11",
			s: 14,
			d: 5
		}
	}, {
		text: "Well hello there, young one!",
		face: 0,
		audio: {
			tag: "voice-11",
			s: 4,
			d: 2
		}
	}, {
		text: "You there, help! The earthquake trapped me under some rubble!",
		face: 0,
		audio: {
			tag: "voice-11-1",
			s: 0,
			d: 6
		}
	}, {
		text: "Please find something to dig me out before the monster comes back!",
		face: 0,
		audio: {
			tag: "voice-11-1",
			s: 6,
			d: 4
		}
	}, {
		text: "Thank goodness you came before the monster returned!",
		face: 0,
		audio: {
			tag: "voice-11-2",
			s: 0,
			d: 4
		}
	}, {
		text: "Goodness no! I speak of the ice demon lurking in the mountains! Scary stuff, it is!",
		face: 0,
		audio: {
			tag: "voice-11-2",
			s: 4,
			d: 6
		}
	}, {
		text: "I was trying to escape with the other miners, but I got trapped here!",
		face: 0,
		audio: {
			tag: "voice-11-2",
			s: 10,
			d: 4
		}
	}, {
		text: "Power crystals, huh? There might be one or two left in the mines...",
		face: 0,
		audio: {
			tag: "voice-11-2",
			s: 14,
			d: 5
		}
	}, {
		text: "Thanks for all your hard work completing bounties. Here is your reward!"
	}, {
		text: "Do you want to open the Arena Rewards shop?"
	}, {
		text: "Are you ready to take part in the ARENA? Face the toughest wizards around the world and work your way to the top!"
	}, {
		text: "You cannot take part in the Arena in Offline Mode!"
	}, {
		text: "Do you want to open the Bounty Rewards shop?"
	}],
	winterfest: [{
		text: "Open the present to get your daily gift!",
		audio: {}
	}, {
		text: "You've already gotten your gift for today. Come back tomorrow.",
		audio: {}
	}]
};
var Items = function () {
	function e() {}
	return e
}();
Items.getItemData = function (e, t) {
	return Util.isDefined(Items.data[e]) ? Items.data[e][t - 1] : "pet" === e ? Monsters.data[t] : null
}, Items.getRandomItem = function (e) {
	return Util.isDefined(Items.data[e]) ? Math.floor(Items.data[e].length * Math.random()) + 1 : 1
}, Items.getDormItems = function (e) {
	for (var t = [], i = 0; i < Items.data.dorm.length; i++) Items.data.dorm[i].category === e && t.push(Items.data.dorm[i]);
	return t
}, Items.getItemDropList = function () {
	for (var e = [], t = 0; t < Items.TYPES.length; t++)
		for (var i = 0; i < Items.data[Items.TYPES[t]].length; i++) {
			var a = Items.data[Items.TYPES[t]][i],
				s = Items.TYPES[t];
			Util.isDefined(a.drop) && e.push({
				type: s,
				ID: i + 1,
				R: Items.DROP_RATE_BY_TYPE[s] * Items.DROP_RATE_BY_RARITY[a.rarity]
			})
		}
	return e
}, Items.getItems = function (e, t) {
	if (Util.isDefined(Items.RARITY[t]) || (t = Items.RARITY.indexOf(t)), !Util.isDefined(Items.data[e]) || -1 === t) return null;
	for (var i = [], a = 0; a < Items.data[e].length; a++) {
		var s = Items.data[e][a];
		Util.isDefined(s.drop) && Util.isDefined(s.rarity) && s.rarity === t && i.push({
			type: e,
			ID: a + 1,
			rarity: t,
			N: 1
		})
	}
	return i
}, Items.getItemDrops = function (e) {
	for (var t = e || Items.getItemDropList(), i = [], a = 0; a < t.length; a++) {
		var s = t[a];
		Util.isDefined(s) && Math.random() < s.R && i.push(s)
	}
	return i
}, Items.getItemPrice = function (e, t) {
	var i = Items.getItemData(e, t);
	if (!Util.isDefined(i)) return 0;
	var a = i.rarity || 0,
		s = 50;
	if ("outfit" === e) s = 200;
	else if ("hat" === e) s = 150;
	else if ("weapon" === e) s = 300;
	else if ("pet" === e) s = 500;
	else if ("dorm" === e) "Comfy" === i.type ? s = 250 : "Surface" === i.type ? s = 150 : "Plants" === i.type ? s = 50 : "Storage" === i.type ? s = 450 : "Wall" === i.type ? s = 150 : "Items" === i.type ? s = 200 : "Lamp" === i.type && (s = 100);
	else if ("dormbg" === e) return i.price;
	return s += 50 * a, s += 25 * (i.h || 0), s += 50 * (i.d || 0)
}, Items.DROP_RATE_BY_TYPE = {
	outfit: 4e-4,
	weapon: 5e-4,
	hat: .001,
	boots: .001,
	item: .025
}, Items.DROP_RATE_BY_RARITY = [1, .75, .5, .25, .1], Items.RARITY_COLOR = ["#c7c7c7", "#6fc159", "#408cd9", "#b93ae2", "#f7942e"], Items.RARITY = ["common", "uncommon", "rare", "epic", "legendary"], Items.TYPES = ["outfit", "weapon", "boots", "hat", "item"], Items.data = {
	outfit: [{
		ID: 1,
		name: "Magi's Shroud",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "Worn by apprentice wizards, the Magi's Shroud is a light, yet magical garb.",
		effects: [34]
	}, {
		ID: 2,
		name: "Warlock's Robe",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "A robe made from magical silk, used by student and teacher alike at the Academy.",
		effects: [34]
	}, {
		ID: 3,
		name: "Jester's Robes",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "The bells on this cloak only ring when its wearer wins a battle, never when they walk.",
		effects: [34]
	}, {
		ID: 4,
		name: "Crimson Cloak",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "It is common to see this robe worn by individuals at formal gatherings.",
		effects: [34]
	}, {
		ID: 5,
		name: "Angelic Shroud",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "Only the most powerful wizards wear this enchanted robe, adorned with eagle's feathers.",
		effects: [34]
	}, {
		ID: 6,
		name: "Glacial Ward",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "It is said the ice crystals used to make this robe will protect its wearer from bad things.",
		effects: [34]
	}, {
		ID: 7,
		name: "Dragon Scales",
		member: 1,
		rarity: 2,
		drop: 1,
		flavorText: 'Made from the hide of "Carcus the Terrible" the most unforgiving dragon ever known.',
		effects: [35]
	}, {
		ID: 8,
		name: "Sun's Embrace",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "This cloak can sense its wearer and will burn brighter when it detects fear.",
		effects: [34]
	}, {
		ID: 9,
		name: "Water Robe",
		member: 1,
		rarity: 0,
		drop: 1,
		flavorText: "The standard robe worn by initiated members of the Academy's Water School.",
		effects: [33]
	}, {
		ID: 10,
		name: "Fire Robe",
		member: 1,
		rarity: 0,
		drop: 1,
		flavorText: "The standard robe worn by initiated members of the Academy's Fire School.",
		effects: [33]
	}, {
		ID: 11,
		name: "Air Robe",
		member: 1,
		rarity: 0,
		drop: 1,
		flavorText: "The standard robe worn by initiated members of the Academy's Storm School.",
		effects: [33]
	}, {
		ID: 12,
		name: "Earth Robe",
		member: 1,
		rarity: 0,
		drop: 1,
		flavorText: "The standard robe worn by initiated members of the Academy's Earth School.",
		effects: [33]
	}, {
		ID: 13,
		name: "Training Garb",
		member: 1,
		rarity: 0,
		drop: 1,
		flavorText: "Worn for practice dueling, it is not uncommon to see this garb singed and torn.",
		effects: [33]
	}, {
		ID: 14,
		name: "Light Clothes",
		member: 1,
		rarity: 0,
		drop: 1,
		flavorText: "The favourite choice of wizards on hot days, it's cool but provides little protection.",
		effects: [33]
	}, {
		ID: 15,
		name: "Cloth Robe",
		member: 1,
		rarity: 0,
		drop: 1,
		flavorText: "Light and durable, this robe is prized by wizards both young and old for its comfort",
		effects: [33]
	}, {
		ID: 16,
		name: "Heavy Robe",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "Made for wizards who don't like being cold but don't mind being itchy.",
		effects: [33]
	}, {
		ID: 17,
		name: "Leather Apparel",
		member: 1,
		rarity: 0,
		drop: 1,
		flavorText: "For the stylish wizard, these robes are intimidating and stain-resistant!",
		effects: [33]
	}, {
		ID: 18,
		name: "Durofibre Robe",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "Modern wizards love how soft these robes feel, often worn by academics in libraries.",
		effects: [33]
	}, {
		ID: 19,
		name: "Magi-thread Outfit",
		member: 1,
		rarity: 0,
		drop: 1,
		flavorText: "The Magi were ancient wizards that studied the stars. They wore these robes for their most important ceremonies.",
		effects: [33]
	}, {
		ID: 20,
		name: "Pyrium Robe",
		member: 1,
		rarity: 0,
		drop: 1,
		flavorText: "This is the product of genius weavers who were able to spin metal into colorful threads.",
		effects: [33]
	}, {
		ID: 21,
		name: "Mithril Robe",
		member: 1,
		rarity: 0,
		drop: 1,
		flavorText: "As strong as it is lightweight, Mithril was once rare because it could only be found in distant lands.",
		effects: [33]
	}, {
		ID: 22,
		name: "Vitrium Robe",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: 'This robe gets its name from its large blue gems, often referred to as "Water Glass".',
		effects: [34]
	}, {
		ID: 23,
		name: "Culix Robe",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "Specially designed for a northern wizard who studied the history of magic, Culix's diaries are required reading for student wizards.",
		effects: [33]
	}, {
		ID: 24,
		name: "Trialmaster's Garb",
		member: 1,
		rarity: 4,
		flavorText: "Only the trial masters of past and present were given these robes and are forbidden to take them off. How did you get them?",
		effects: [83]
	}, {
		ID: 25,
		name: "Anorak Suit",
		member: 0,
		rarity: 2,
		flavorText: "Need to keep warm in those winter days? It may not be a robe, but it sure is warm!",
		effects: [35]
	}, {
		ID: 26,
		name: "Winterfest Outfit",
		member: 1,
		rarity: 2,
		flavorText: "The official outfit worn by helpers at Winterfest!",
		effects: [35]
	}, {
		ID: 27,
		name: "Dragon Spike Robes",
		member: 1,
		rarity: 2,
		flavorText: "In close combat these spikes are dangerous indeed. Be careful when you're around your friends!",
		effects: [35]
	}, {
		ID: 28,
		name: "Warm Robes",
		member: 1,
		rarity: 1,
		flavorText: "Commonly worn in very cold places, these robes are made from many layers of fur and pelts.",
		effects: [34]
	}, {
		ID: 29,
		name: "Firefly Robes",
		member: 1,
		rarity: 2,
		flavorText: "A magical robe made from the leaves and materials found in Firefly Forest.",
		effects: [35]
	}, {
		ID: 30,
		name: "Magic Robes",
		member: 1,
		rarity: 1,
		flavorText: "These robes were custom made for a wizard...but they seem to fit you just right!",
		effects: [34]
	}, {
		ID: 31,
		name: "Frost Saber Robes",
		member: 1,
		rarity: 2,
		flavorText: "These wooly robes will keep you warm in cold weather...but don't wear them in the sun!",
		effects: [35]
	}, {
		ID: 32,
		name: "Duelist Robes",
		member: 1,
		rarity: 2,
		flavorText: "The robes of one of the greatest wizards in the Academy.",
		effects: [35]
	}, {
		ID: 33,
		name: "Shiverchill Robes",
		member: 1,
		rarity: 2,
		flavorText: "The ceremonial robes of the Shiverchill Tribes.",
		effects: [35]
	}, {
		ID: 34,
		name: "Bonfire Robes",
		member: 1,
		rarity: 1,
		flavorText: 'These can only be worn by those who have seen the "Bonfire of the Spire", a volcanic eruption, up close.',
		effects: [34]
	}, {
		ID: 35,
		name: "Captain's Digs",
		member: 1,
		rarity: 2,
		flavorText: 'Don\'t these just scream "Arggg"? They even come with the optional hook attachment!',
		effects: [35]
	}, {
		ID: 36,
		name: "Buccaneer's Digs",
		member: 1,
		rarity: 1,
		flavorText: "The choice clothes of deckhands and mates everywhere. Watch out, captains will be sure to shout orders at you.",
		effects: [34]
	}, {
		ID: 37,
		name: "Skywatch Gear",
		member: 1,
		rarity: 1,
		flavorText: "Since the Skyfolk don't wear clothing, the humans that come up to the clouds wear this outfit to stay warm and dry.",
		effects: [34]
	}, {
		ID: 38,
		name: "Mira's Robes",
		member: 1,
		rarity: 3,
		flavorText: "These robes give off immense power, and almost seem to repel the ground below you.",
		effects: [82]
	}, {
		ID: 39,
		name: "Diggin' Outfit",
		member: 1,
		rarity: 2,
		flavorText: "This is the outfit of the Oasis Institute of Natural Creatures (OINC).",
		effects: [35]
	}, {
		ID: 40,
		name: "Desert Robes",
		member: 1,
		rarity: 1,
		flavorText: "These robes protect the wearer from the brutal weather in the desert.",
		effects: [34]
	}, {
		ID: 41,
		name: "Tinkerer Outfit",
		member: 1,
		rarity: 1,
		flavorText: "This outfit is very stylish, but also pretty heavy-duty! The people back then sure were tough!",
		effects: [34]
	}, {
		ID: 42,
		name: "TEK-Y4 Jumpsuit",
		member: 1,
		rarity: 1,
		flavorText: "The jumpsuit worn by the official TEK-Y4 dance instructors. Kind of sweaty...",
		effects: [34]
	}, {
		ID: 43,
		name: "Robot Outfit",
		member: 1,
		rarity: 2,
		flavorText: "Whoever said that a wizard couldn't be a robot never had a chance to try these on...",
		effects: [35]
	}, {
		ID: 44,
		name: "Pumpkin Outfit",
		member: 1,
		rarity: 2,
		flavorText: "The Pumpkin Lord is said to return every year on Pumpkinfest to rule over all pumpkins.",
		effects: [35]
	}, {
		ID: 45,
		name: "Luminite Costume",
		member: 1,
		rarity: 0,
		flavorText: "A cute Luminite costume! It's so lifelike!",
		effects: [33]
	}, {
		ID: 46,
		name: "Specter Robes",
		member: 1,
		rarity: 0,
		flavorText: "The tattered robes of the legendary specter - a ghost that only shows up around Pumpkinfest.",
		effects: [33]
	}, {
		ID: 47,
		name: "Mountaineer's Gear",
		member: 0,
		rarity: 0,
		flavorText: "This warm, rugged coat is equipped with a standard set of climbing equipment, a must have for exploring the mountains.",
		effects: [33]
	}, {
		ID: 48,
		name: "Frost Beard's Clasp",
		member: 1,
		rarity: 2,
		flavorText: "The magic armor of the great Viking Frost Beard - a mystic wind constantly billows its cape.",
		effects: [35]
	}, {
		ID: 49,
		name: "Yeti Coat",
		member: 1,
		rarity: 1,
		flavorText: "Who knew that Yetis shed?! Whether the coat directly came from a Yeti or was crafted from loose hairs is unclear.",
		effects: [34]
	}, {
		ID: 50,
		name: "Red Armor",
		member: 0,
		rarity: 1,
		flavorText: "This armor is lighter than it looks, but it seems to be all for show...the metal actually seems to be plastic...",
		effects: [34]
	}, {
		ID: 51,
		name: "Phantom Cloak",
		member: 0,
		rarity: 2,
		flavorText: "A magic barrier seems to emanate from the cloak...protecting you from all sorts of nasty spells.",
		effects: [35]
	}, {
		ID: 52,
		name: "Draconyx Gear",
		member: 0,
		rarity: 3,
		flavorText: "Worn by ancient battle wizards, this gear seems to fit you perfectly, almost as if you were meant to wear it.",
		effects: [82]
	}, {
		ID: 53,
		name: "Black Fang Coat",
		member: 0,
		rarity: 3,
		flavorText: "This outfit is worn only by the greatest of Bounty Hunters. It is a testimant to the skill of its wearer.",
		effects: [82]
	}, {
		ID: 54,
		name: "Hunter Coat",
		member: 0,
		rarity: 2,
		flavorText: "The standard issue garb of a Bounty Hunter. It holds up in the toughest of situations.",
		effects: [35]
	}],
	weapon: [{
		ID: 1,
		name: "Enchanted Stick",
		member: 0,
		rarity: 1,
		drop: 1,
		flavorText: "The most unassuming of wands, it is said to be imbued with natural energy.",
		effects: [31]
	}, {
		ID: 2,
		name: "Ivory Star",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "Just like the stars themselves, it is most powerful under the cover of night.",
		effects: [31]
	}, {
		ID: 3,
		name: "Angelic Shard",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "Charmed with a celestial power, wizards take it to be a symbol of justice and good.",
		effects: [31]
	}, {
		ID: 4,
		name: "Blue Pearl",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "Its orb pulsates when close to the ocean and water pets hum gently in its presence.",
		effects: [31]
	}, {
		ID: 5,
		name: "Cheeple's Toy Wand",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "Often given to young wizards who love that it squawks when it casts a spell.",
		effects: [31]
	}, {
		ID: 6,
		name: "Dragonwing",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "Hold on tight! Many unsuspecting wizards have watched this wand fly away.",
		effects: [31]
	}, {
		ID: 7,
		name: "Lunar Staff",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "Made for a wizard who was also a werewolf, it strengthens as the moon approaches full.",
		effects: [31]
	}, {
		ID: 8,
		name: "Wanderer's Staff",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "Friend to the wizard who travels far from home, it comforts a lonely heart and smells of fresh bread.",
		effects: [31]
	}, {
		ID: 9,
		name: "Firewing",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "It was once a wizard's pet Phoenix that relinquished its magic to empower his wand. It saved him from peril most great.",
		effects: [31]
	}, {
		ID: 10,
		name: "Dragon's Bane",
		member: 1,
		rarity: 2,
		drop: 1,
		flavorText: 'The wand used to end the reign of "Carcus the Terrible", its origins are a mystery.',
		effects: [32]
	}, {
		ID: 11,
		name: "Hurricane",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "To save her village, a wizard once ran into the eye of a storm. When it abated, all that remained was this wand.",
		effects: [31]
	}, {
		ID: 12,
		name: "Firebrand",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: 'The wand that belonged to Crios as a child, he cast it aside as "weak" when he entered the Academy.',
		effects: [31]
	}, {
		ID: 13,
		name: "Frozen Shard",
		member: 0,
		rarity: 1,
		drop: 1,
		flavorText: "Cold to the touch, wizards who use it shiver uncontrollably and their lips turn blue.",
		effects: [31]
	}, {
		ID: 14,
		name: "Wand of Dreams",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "Whoever possesses this wand will never have a dreamless sleep and when they dream of the future, it always comes true.",
		effects: [31]
	}, {
		ID: 15,
		name: "Nature's Bloom",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "During the winter its leaf withers and falls off but always grows again the following spring.",
		effects: [31]
	}, {
		ID: 16,
		name: "Angel Wing",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "This staff was once paired with another just like it and belonged to twin wizards.",
		effects: [31]
	}, {
		ID: 17,
		name: "Vita",
		member: 0,
		rarity: 1,
		drop: 1,
		flavorText: "Energizing whoever holds it, this staff was forged entirely from the earth by ancient wizards using a method now lost.",
		effects: [31]
	}, {
		ID: 18,
		name: "Staff of Flames",
		member: 0,
		rarity: 1,
		drop: 1,
		flavorText: "Commonly used by the Flameweavers of the Spire to create beautiful burning patterns in the night sky.",
		effects: [31]
	}, {
		ID: 19,
		name: "Tidal Sphere",
		member: 0,
		rarity: 1,
		drop: 1,
		flavorText: "Long sought after by pirates who can use it to push their ships through the waves.",
		effects: [31]
	}, {
		ID: 20,
		name: "Frosted Spear",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "Its central gem comes from deep in the Shiverchill Mountains, allowing wizards to turn the water in air to ice.",
		effects: [31]
	}, {
		ID: 21,
		name: "Dragon Staff",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "Used by the Dragon Tamers of old, no one knows if it retains its power to control the winged beasts. Do you dare find out?",
		effects: [31]
	}, {
		ID: 22,
		name: "Phoenix Talon",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "Containing the power of the Phoenix, some say the one who holds it is can recover from any injury.",
		effects: [31]
	}, {
		ID: 23,
		name: "Dream",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "Made by a Dreamweaver, if used correctly, it can put your opponent into a deep sleep.",
		effects: [31]
	}, {
		ID: 24,
		name: "Efflorescence",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "Its wielder need have no fear of the dark. When shaken, this staff puts out a powerful light.",
		effects: [30]
	}, {
		ID: 25,
		name: "Training Wand",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: 'Also known as the "Safety Wand" it is used by all academy wizards to reduce injury during training.',
		effects: [30]
	}, {
		ID: 26,
		name: "Birch Wand",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "A creative wizard carved this himself from a branch in a nearby forest.",
		effects: [30]
	}, {
		ID: 27,
		name: "Granite Wand",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "A geologist wizard once claimed that a wand could be made from rocks, this wand proves it!",
		effects: [30]
	}, {
		ID: 28,
		name: "Iron Wand",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "Though rough to the touch and very heavy, its got plenty of power for the everyday wizard.",
		effects: [30]
	}, {
		ID: 29,
		name: "Steel Wand",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "Forged from various metals by blacksmiths, some wizards feel that its the best material for wands.",
		effects: [30]
	}, {
		ID: 30,
		name: "Onyx Wand",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "Its dark stone sparkles, making it look like stars in the night sky.",
		effects: [30]
	}, {
		ID: 31,
		name: "Diamond Wand",
		member: 1,
		rarity: 0,
		drop: 1,
		flavorText: "The diamond in this wand has not been shaped or cut, leaving its earthly energy untouched.",
		effects: [30]
	}, {
		ID: 32,
		name: "Pyrium Wand",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "Though it looks like gold, it's not. Pyrium is prized for its strength and flexibility, making this a very durable wand.",
		effects: [30]
	}, {
		ID: 33,
		name: "Mithril Wand",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "Not as rare as it once was, Mithril is still popular amongst the wizards of distant lands.",
		effects: [30]
	}, {
		ID: 34,
		name: "Magite Wand",
		member: 1,
		rarity: 0,
		drop: 1,
		flavorText: "Students of the stars, the Magi loved the setting sun most of all, making this their favorite wand.",
		effects: [30]
	}, {
		ID: 35,
		name: "Adamantium Wand",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "Its strength iswith shimmering minerals which ma unsurpassed by any other metal wand, it has been known to block even the most potent of spells.",
		effects: [30]
	}, {
		ID: 36,
		name: "Training Staff",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "Some say that staffs are more powerful but are also harder to use, making this staff very important for training.",
		effects: [30]
	}, {
		ID: 37,
		name: "Birch Staff",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "In the old days wizards would carve their own staffs from the wood of the forest, this one seems quite old.",
		effects: [30]
	}, {
		ID: 38,
		name: "Granite Staff",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: 'Only the strongest wizards can carry the weight of this staff, giving it the nickname the "Staff of Giants".',
		effects: [30]
	}, {
		ID: 39,
		name: "Iron Staff",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "Used by the monks of the ancient lands, many have adopted its use because of its common materials and uncommon strength.",
		effects: [30]
	}, {
		ID: 40,
		name: "Steel Staff",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "The choice of wizard knights of old, who could carry the lightweight staff with all their heavy armor on.",
		effects: [30]
	}, {
		ID: 41,
		name: "Onyx Staff",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "It's smooth and polished to shine. It's clear a fine craftsman made this beautiful staff.",
		effects: [30]
	}, {
		ID: 42,
		name: "Diamond Staff",
		member: 1,
		rarity: 0,
		drop: 1,
		flavorText: "Diamond is very hard and very sharp, it's recommended that you wear gloves when using this staff.",
		effects: [30]
	}, {
		ID: 43,
		name: "Pyrium Staff",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "Pyrium is difficult to work with. It must have taken a great blacksmith to make this staff.",
		effects: [30]
	}, {
		ID: 44,
		name: "Mithril Staff",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "This staff has an aura of old power around it. Did it come from somewhere far away? ",
		effects: [30]
	}, {
		ID: 45,
		name: "Magite Staff",
		member: 1,
		rarity: 0,
		drop: 1,
		flavorText: "The Magi liked staffs over wands because they were longer and they reached closer to the stars.",
		effects: [30]
	}, {
		ID: 46,
		name: "Adamantium Staff",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "Made from the strongest of metals, its beauty is only matched by its power.",
		effects: [30]
	}, {
		ID: 47,
		name: "The Master of Trials",
		member: 0,
		rarity: 3,
		flavorText: "To be held only by the Trial Masters, its powers are the stuff of legends. How did you get it?",
		effects: [81]
	}, {
		ID: 48,
		name: "Winter Bell",
		member: 1,
		rarity: 0,
		flavorText: "Its sound is beautiful, but don't be lulled by its enchanting tones.",
		effects: [30]
	}, {
		ID: 49,
		name: "Minotaur's Head",
		member: 1,
		rarity: 2,
		flavorText: "A prize given to those who have successfully navigated the Labyrinth, it prevents them from ever being lost again.",
		effects: [32]
	}, {
		ID: 50,
		name: "Sunburst Wand",
		member: 1,
		rarity: 1,
		flavorText: "A ball of energy from the sun itself.",
		effects: [31]
	}, {
		ID: 51,
		name: "Flamerose Wand",
		member: 1,
		rarity: 2,
		flavorText: "Designed to appear like the mythical Flamerose, a rare flower that grows only on the side of the Bonfire Spire.",
		effects: [32]
	}, {
		ID: 52,
		name: "Crystal Wand",
		member: 1,
		rarity: 1,
		flavorText: "Transparent, it's easy to admire the beauty of the energy being charged inside this wand just before a spell is cast.",
		effects: [31]
	}, {
		ID: 53,
		name: "Batwing Wand",
		member: 1,
		rarity: 2,
		flavorText: "Those who hold this wand can sense what is around them even in the darkest of caves - much like the bat, which gives the wand its name.",
		effects: [32]
	}, {
		ID: 54,
		name: "Fungoid",
		member: 1,
		rarity: 2,
		flavorText: "Many wizards refuse to make their wands from living trees, instead they grow this wand from the forest's soils.",
		effects: [32]
	}, {
		ID: 55,
		name: "Sacred Flame",
		member: 1,
		rarity: 1,
		flavorText: "For those who hail from the Spire, this wand that carries a flame from Bonfire is respected and admired.",
		effects: [31]
	}, {
		ID: 56,
		name: "Sun Orb Staff",
		member: 1,
		rarity: 3,
		flavorText: "Its heat is so immense that its owner must possess great knowledge of fire magic simply to be in its presence.",
		effects: [81]
	}, {
		ID: 57,
		name: "Staff of Winter",
		member: 1,
		rarity: 2,
		flavorText: "In the hands of the ice king of old, this staff was used to turn those who insulted his beard into frozen statues.",
		effects: [32]
	}, {
		ID: 58,
		name: "Crystal Staff",
		member: 1,
		rarity: 2,
		flavorText: "As beautiful as it is elegant, it can be used to break light into parts that can be weaved into powerful spells.",
		effects: [32]
	}, {
		ID: 59,
		name: "TuskTooth",
		member: 0,
		rarity: 2,
		flavorText: "An ancient staff from the realms of the Shiverchill tribes, it is thought to possess an animal spirit.",
		effects: [32]
	}, {
		ID: 60,
		name: "Dragos",
		member: 1,
		rarity: 3,
		flavorText: 'Also known as the "Heart of the Dragon", the limits of this staff\'s power have never been reached.',
		effects: [81]
	}, {
		ID: 61,
		name: "Twisted Staff",
		member: 1,
		rarity: 1,
		flavorText: "This staff was grown by tree whisperers from the roots of the elder trees deep in the heart of the Firefly Forest.",
		effects: [31]
	}, {
		ID: 62,
		name: "Staff of the Duelist",
		member: 0,
		rarity: 2,
		flavorText: "Crios once swore that if anyone could beat him in a duel, he'd give them this staff. Looks like you did it!",
		effects: [32]
	}, {
		ID: 63,
		name: "Hailstone",
		member: 1,
		rarity: 1,
		flavorText: "The central stone for this staff can only be gathered during storms on the coldest winter nights by the Shiverchill Tribes.",
		effects: [31]
	}, {
		ID: 64,
		name: "Bonfire",
		member: 1,
		rarity: 2,
		flavorText: "Forged in the heat of the Bonfire Spire, it inspires both fear and awe in anyone who opposes it.",
		effects: [32]
	}, {
		ID: 65,
		name: "Parrot",
		member: 1,
		rarity: 1,
		flavorText: 'A magical parrot that sits on your shoulder. It might be too friendly because it keeps saying "hello" and asking for crackers...urgh.',
		effects: [31]
	}, {
		ID: 66,
		name: "Shell-shocked",
		member: 1,
		rarity: 2,
		flavorText: 'A daring turtle has made this its home. It gets a little nervous whenever someone says the word "fire".',
		effects: [32]
	}, {
		ID: 67,
		name: "Remote Ship",
		member: 1,
		rarity: 2,
		flavorText: "This little remote may look normal, but something is awful strange about it. Maybe because it doesn't need batteries...",
		effects: [32]
	}, {
		ID: 68,
		name: "Mira's Staff",
		member: 0,
		rarity: 3,
		flavorText: "A gift from the great wizard Mira. Just holding this staff makes you feel stronger than ever before.",
		effects: [81]
	}, {
		ID: 69,
		name: "Wrench",
		member: 0,
		rarity: 1,
		flavorText: "Not a very powerful weapon, but certainly useful for tightening bolts!",
		effects: [31]
	}, {
		ID: 70,
		name: "Gizmotron",
		member: 1,
		rarity: 2,
		flavorText: "A modified machine, the gizmotron stores magic inside and releases it at the user's will.",
		effects: [32]
	}, {
		ID: 71,
		name: "Pumpkin Wand",
		member: 1,
		rarity: 1,
		flavorText: "A plastic wand replica of the original Pumpkin Lord's weapon of choice...",
		effects: [31]
	}, {
		ID: 72,
		name: "Spooky Candle",
		member: 1,
		rarity: 1,
		flavorText: "There's nothing really wrong with this candle, but it does kind of give you the creeps.",
		effects: [31]
	}, {
		ID: 73,
		name: "Mjoln-Ice",
		member: 0,
		rarity: 2,
		flavorText: "A mystic hammer wielded by the great Frost Beard - some say the hammer grants its wielder the powers of a Norse god.",
		effects: [32]
	}, {
		ID: 74,
		name: "Pickaxe",
		member: 0,
		rarity: 0,
		flavorText: "A standard-issue pickaxe, popular among the miners who used to inhabit the Shiverchill mines.",
		effects: [30]
	}, {
		ID: 75,
		name: "Energy Staff",
		member: 0,
		rarity: 1,
		flavorText: "This staff likely used to be much more powerful...when it worked. Now, it just seems to be used to intimidate.",
		effects: [31]
	}, {
		ID: 76,
		name: "Glassfire",
		member: 0,
		rarity: 2,
		flavorText: "This strange orb seems to have a small elemental stuck inside, though it seems happy enough in there.",
		effects: [32]
	}, {
		ID: 77,
		name: "Draconyx",
		member: 0,
		rarity: 3,
		flavorText: "There's something about this staff that you don't like - as if strange whispers beckon you to hold it and never let go.",
		effects: [81]
	}, {
		ID: 78,
		name: "Power Orb",
		member: 0,
		rarity: 3,
		flavorText: "This weapon is wielded only by the greatest of Bounty Hunters. Its crystaline orb has a hypnotic draw to all monster near it.",
		effects: [81]
	}, {
		ID: 79,
		name: "Clawed Staff",
		member: 0,
		rarity: 2,
		flavorText: "The standard issue weapon of a Bounty Hunter. Its claw is perfect for catching rogue monsters.",
		effects: [32]
	}],
	boots: [{
		ID: 1,
		name: "Magi Runners",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "It is said that a Magi once ran to the sun with these shoes on. You're not sure if you could, but they sure are fast.",
		effects: [34]
	}, {
		ID: 2,
		name: "Warlock's Slippers",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "Many people don't trust Warlocks, so they don't get out much. These keep their feet cozy at home.",
		effects: [34]
	}, {
		ID: 3,
		name: "Crimson Boots",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "These will certainly make a bold statement at your next wizarding get together.",
		effects: [34]
	}, {
		ID: 4,
		name: "Glacial Boots",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "Extremely warm, these will keep your feet toasty in the Mountains but elsewhere they might make them sweaty.",
		effects: [34]
	}, {
		ID: 5,
		name: "Dragon Soles",
		member: 1,
		rarity: 2,
		drop: 1,
		flavorText: "Are these dragonskin boots? Comfortable, but they smell a bit like burnt meat and old cave.",
		effects: [35]
	}, {
		ID: 6,
		name: "Sun Walkers",
		member: 1,
		rarity: 2,
		drop: 1,
		flavorText: "Fitted with a handy self-drying flame, you can swim with these on and not have to worry.",
		effects: [35]
	}, {
		ID: 7,
		name: "Training Shoes",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "Nothing special but they'll protect your feet during training.",
		effects: [33]
	}, {
		ID: 8,
		name: "Light Shoes",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "Lightweight and breathable they'll make your feet move faster and maybe a little less smelly.",
		effects: [33]
	}, {
		ID: 9,
		name: "Cloth Shoes",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "Made from cloth, don't get them wet or your feet will be cold all day!",
		effects: [33]
	}, {
		ID: 10,
		name: "Heavy Shoes",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "Whoa, these are heavy! Your feet feel pretty safe, but it also feels like you're walking through mud.",
		effects: [33]
	}, {
		ID: 11,
		name: "Leather Boots",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "The choice of the everyday wizard. They say they're hand-crafted in the Spire.",
		effects: [33]
	}, {
		ID: 12,
		name: "Durofibre Boots",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "Sleek, stylish and purple...",
		effects: [33]
	}, {
		ID: 13,
		name: "Magi-thread Boots",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "You don't usually go for used boots, but the Magi made these long-lasting and really cool-looking.",
		effects: [33]
	}, {
		ID: 14,
		name: "Pyrium Boots",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "You can wear these boots all year long, just make sure to change your wizard socks!",
		effects: [33]
	}, {
		ID: 15,
		name: "Mithril Boots",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "Metal boots? You might not move that fast but your toes are totally protected!",
		effects: [33]
	}, {
		ID: 16,
		name: "Vitrium Boots",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "When you wear them you move more gracefully but also always have the urge to dance.",
		effects: [33]
	}, {
		ID: 17,
		name: "Culix Boots",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "Although Culix was a bit stuffy he had great taste in shoes.",
		effects: [33]
	}, {
		ID: 18,
		name: "Trialmaster's Boots",
		member: 1,
		rarity: 4,
		drop: 1,
		flavorText: "Worn by a former master of trials, whose feet seemed to be quite small. They're a little snug.",
		effects: [83]
	}, {
		ID: 19,
		name: "Winter Boots",
		member: 0,
		rarity: 1,
		drop: 1,
		flavorText: "Fuzzy on the inside and waterproof on the outside, the perfect choice for the long winter months.",
		effects: [34]
	}, {
		ID: 20,
		name: "Dragon Spike Boots",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "Your friend wore these spiky boots to play wizard soccer once, they don't let him play anymore. I wonder why?",
		effects: [34]
	}, {
		ID: 21,
		name: "Warm Boots",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "These sure do live up to their name.",
		effects: [34]
	}, {
		ID: 22,
		name: "Magic Boots",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "You do feel suddenly more magical, but sometimes people laugh at the pointy toes.",
		effects: [34]
	}, {
		ID: 23,
		name: "Frost Saber Boots",
		member: 1,
		rarity: 2,
		drop: 1,
		flavorText: "Made for battle in the cold, these shoes help you stay on top of the snow instead of sinking in.",
		effects: [35]
	}, {
		ID: 24,
		name: "Firefly Boots",
		member: 1,
		rarity: 2,
		drop: 1,
		flavorText: "The trademark boots of the Firefly Forest. It says they're made with moss and lots of love.",
		effects: [35]
	}, {
		ID: 25,
		name: "Skywalkers",
		member: 1,
		rarity: 2,
		drop: 1,
		flavorText: "A wizard once wanted to see how high he could jump with these shoes on. He's supposed to come back down any day now.",
		effects: [35]
	}, {
		ID: 26,
		name: "Duelist Boots",
		member: 0,
		rarity: 3,
		flavorText: 'Official sponsors of the Annual Wizard Dueling Contest, they say "The Choice of Champions" in big letters on the side. ',
		effects: [82]
	}, {
		ID: 27,
		name: "Shiverchill Boots",
		member: 0,
		rarity: 2,
		drop: 1,
		flavorText: "Commonly worn by the tribes of the Shiverchill Mountains, many travellers take them when going to cold places.",
		effects: [35]
	}, {
		ID: 28,
		name: "Embers",
		member: 0,
		rarity: 1,
		flavorText: "Made for wizards whose feet get cold. It feels like your toes are warming up in front of the fire.",
		effects: [34]
	}],
	relic: [{
		ID: 1,
		name: "Aircorn",
		member: 0,
		rarity: 1,
		flavorText: "",
		effects: [31]
	}, {
		ID: 2,
		name: "Earthnutt",
		member: 0,
		rarity: 1,
		flavorText: "",
		effects: [31]
	}, {
		ID: 3,
		name: "Fireseed",
		member: 0,
		rarity: 1,
		flavorText: "",
		effects: [31]
	}, {
		ID: 4,
		name: "Icycorn",
		member: 0,
		rarity: 1,
		flavorText: "",
		effects: [31]
	}, {
		ID: 5,
		name: "Waterseed",
		member: 0,
		rarity: 1,
		flavorText: "",
		effects: [31]
	}, {
		ID: 6,
		name: "Candy Bone",
		member: 1,
		rarity: 1,
		flavorText: "",
		effects: [34]
	}, {
		ID: 7,
		name: "Lover's Band",
		member: 0,
		rarity: 1,
		flavorText: "",
		effects: [35]
	}, {
		ID: 8,
		name: "Lucky Clover",
		member: 0,
		rarity: 2,
		flavorText: "",
		effects: [33]
	}, {
		ID: 9,
		name: "Luminex Paw",
		member: 1,
		rarity: 2,
		flavorText: "",
		effects: [32]
	}, {
		ID: 10,
		name: "Magic Bandage",
		member: 0,
		rarity: 1,
		flavorText: "",
		effects: [35]
	}],
	hat: [{
		ID: 1,
		name: "Jester's Cap",
		type: "",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "Think yourself a comedian? Try on this hat, and you'll be throwing punchlines left and right.",
		effects: [34]
	}, {
		ID: 2,
		name: "Rogue's Hat",
		type: "",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "Worn to keep cool in the desert, its magic properties make it popular amongst students.",
		effects: [34]
	}, {
		ID: 3,
		name: "Apprentice Circlet",
		type: "",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "This circlet is adorned with magical jewels, making it very powerful...and expensive.",
		effects: [34]
	}, {
		ID: 4,
		name: "Prankster's Crown",
		type: "",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "This hat happens to have its own personality, so make sure you wash your hair regularly!",
		effects: [34]
	}, {
		ID: 5,
		name: "E-nigma",
		type: "",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "Question me this, question me that...how good will you look, wearing this hat?",
		effects: [34]
	}, {
		ID: 6,
		name: "Highlord's Crown",
		type: "",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "An ancient ruler passed this crown down to his children, and now it's in your hands.",
		effects: [34]
	}, {
		ID: 7,
		name: "Hound's Helm",
		type: "",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "The Hound's Helm only looks like a dog...in fact, it was actually made by dogs!",
		effects: [34]
	}, {
		ID: 8,
		name: "Winged Helm",
		type: "",
		member: 0,
		rarity: 1,
		drop: 1,
		flavorText: "This Helm was found in the ruins of an ancient city, but mysteriously disappeared...",
		effects: [34]
	}, {
		ID: 9,
		name: "Mayhem's Guise",
		type: "",
		member: 1,
		rarity: 2,
		drop: 1,
		flavorText: "Mayhem was a warlock that caused lots of trouble. He was so well known that he used to wear this hat to hide among the crowds.",
		effects: [35]
	}, {
		ID: 10,
		name: "Frozen Crown",
		type: "",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "This crown belonged to the terrible Ice King but he gave it away when a witch turned him into a nice king.",
		effects: [34]
	}, {
		ID: 11,
		name: "Infernal Helm",
		type: "",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "The feathers tickle a little bit but this hat sure seems to spook your opponents. Maybe it's because it's still alive!",
		effects: [34]
	}, {
		ID: 12,
		name: "Training Cap",
		type: "",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "Keeps your head out of the sun and your hair dry during those tough training days.",
		effects: [33]
	}, {
		ID: 13,
		name: "Light Hat",
		type: "",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "It fits so nicely, and doesn't give you a case of nasty wizarding hat hair.",
		effects: [33]
	}, {
		ID: 14,
		name: "Cloth Hat",
		type: "",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "It's cloth. It's green. It's a green, cloth hat!",
		effects: [33]
	}, {
		ID: 15,
		name: "Heavy Hat",
		type: "",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "Someone told you that this was a Platypus that was turned into a hat. You're not sure but it does seem water resistant.",
		effects: [33]
	}, {
		ID: 16,
		name: "Leather Hat",
		type: "",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "Leather hats are all the rage these days especially since Worly the Wonderful wears one. ",
		effects: [33]
	}, {
		ID: 17,
		name: "Durofibre Hat",
		type: "",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "In classic wizarding blue, you might think this hat old-fashioned, but the old wizards smile when you wear it.",
		effects: [33]
	}, {
		ID: 18,
		name: "Magi-thread Hat",
		type: "",
		member: 1,
		rarity: 0,
		drop: 1,
		flavorText: "The Magi loved the sun most of all, they just didn't like it burning their heads. So they made this popular hat.",
		effects: [33]
	}, {
		ID: 19,
		name: "Pyrium Hat",
		type: "",
		member: 1,
		rarity: 0,
		drop: 1,
		flavorText: "Made with pyrium thread in a classic style. This hat is a good option just about everywhere!",
		effects: [33]
	}, {
		ID: 20,
		name: "Mithril Hat",
		type: "",
		member: 1,
		rarity: 0,
		drop: 1,
		flavorText: "Some think that the mithril in this hat gives you psychic powers but who knows? Maybe you...you're wearing it.",
		effects: [33]
	}, {
		ID: 21,
		name: "Vitrium Hat",
		type: "",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "Older wizards don't like how younger ones wear this hat backwards.",
		effects: [33]
	}, {
		ID: 22,
		name: "Culix Hat",
		type: "",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: 'Worn by fans of Culix, the famous historian who wrote "101 wacky warlock wands" and "The Tales of Hapless Headless Heath".',
		effects: [33]
	}, {
		ID: 23,
		name: "Trialmaster's Circlet",
		type: "",
		member: 1,
		rarity: 4,
		flavorText: "This ceremonial circlet is exceedingly rare and grants wisdom to those who wear it. Who would give it up?",
		effects: [83]
	}, {
		ID: 24,
		name: "Winterfest Hat",
		type: "",
		member: 1,
		rarity: 0,
		drop: 1,
		flavorText: "The official hat worn by helpers at Winterfest!",
		effects: [33]
	}, {
		ID: 25,
		name: "Winter Hat",
		type: "",
		member: 0,
		rarity: 2,
		drop: 1,
		flavorText: "It may look like just a winter hat, but it is actually a MAGICAL winter hat!",
		effects: [35]
	}, {
		ID: 26,
		name: "Fancy Tophat",
		type: "",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "This stylish hat is intended to be worn at formal gatherings, but you can wear it anywhere you want.",
		effects: [34]
	}, {
		ID: 27,
		name: "Earmuffs",
		type: "",
		member: 1,
		rarity: 1,
		drop: 1,
		flavorText: "Need to keep your ears warm, but your hair neat? Try these earmuffs on!",
		effects: [34]
	}, {
		ID: 28,
		name: "Parka Hood",
		type: "cover",
		member: 1,
		rarity: 2,
		drop: 1,
		flavorText: "Mrrrrrf mmmrrrhhmhhh mhhhmhmhr!",
		effects: [35]
	}, {
		ID: 29,
		name: "Reindeer Antlers",
		type: "",
		member: 1,
		rarity: 2,
		drop: 1,
		flavorText: "If you've ever needed to look like a reindeer, this is the hat for you!",
		effects: [35]
	}, {
		ID: 30,
		name: "Snowman Head",
		type: "wrap",
		member: 1,
		rarity: 2,
		drop: 1,
		flavorText: "A large snowman mask, and it's even made out of snow! Brrrr!",
		effects: [35]
	}, {
		ID: 31,
		name: "Dragon Helm",
		type: "",
		member: 1,
		rarity: 2,
		drop: 1,
		flavorText: "Legend says that those who wear can hear the songs of dragons. Often its wearers can be heard singing to themselves.",
		effects: [35]
	}, {
		ID: 32,
		name: "Frost Saber Cap",
		type: "",
		member: 1,
		rarity: 2,
		drop: 1,
		flavorText: "When they grow into adults, Frost Saber Cats choose a new form. This one chose to be a hat for some reason.",
		effects: [35]
	}, {
		ID: 33,
		name: "Firefly Hat",
		type: "",
		member: 1,
		rarity: 2,
		flavorText: "A magical hat crafted by the magical creatures in Firefly Forest.",
		effects: [35]
	}, {
		ID: 34,
		name: "Dragon Tiara",
		type: "",
		member: 1,
		rarity: 2,
		flavorText: "Some say that if the correct words are spoken, this tiara will spit flames. Be careful what you say while wearing it!",
		effects: [35]
	}, {
		ID: 35,
		name: "Dragon Spike Crown",
		type: "",
		member: 1,
		rarity: 2,
		flavorText: 'Formerly worn by Eustace Redhale "The King of Dragons" and the last ruler to ride one. It has the power of dragon\'s fire.',
		effects: [35]
	}, {
		ID: 36,
		name: "Duelist Helm",
		type: "",
		member: 0,
		rarity: 2,
		flavorText: "The hat of one of the greatest wizards in the Academy.",
		effects: [35]
	}, {
		ID: 37,
		name: "Shiverchill Hat",
		type: "",
		member: 1,
		rarity: 1,
		flavorText: 'The Shiverchill Tribes wear this hat during important ceremonies like the "Welcome to Winter" and "Tobogganing Tuesdays".',
		effects: [34]
	}, {
		ID: 38,
		name: "Tinder Toque",
		type: "",
		member: 1,
		rarity: 1,
		flavorText: "A celebratory hat worn by the people of Spire on feast days. You can store a lot of food in it if you're sneaky.",
		effects: [34]
	}, {
		ID: 39,
		name: "Captain's Hat",
		type: "",
		member: 1,
		rarity: 1,
		flavorText: "The choice of pirate captains everywhere! It smells like the sea and comes with a cool-looking eye patch!",
		effects: [34]
	}, {
		ID: 40,
		name: "Bandana",
		type: "",
		member: 0,
		rarity: 1,
		flavorText: "The favorite head gear of scurvy dogs because it's very absorbent and pirates love polka dots.",
		effects: [34]
	}, {
		ID: 41,
		name: "Skycap",
		type: "",
		member: 1,
		rarity: 1,
		flavorText: "This is the hat worn by the Skyfolk - the small creatures who live in the clouds above the Academy.",
		effects: [34]
	}, {
		ID: 42,
		name: "Mira's Hood",
		type: "",
		member: 0,
		rarity: 3,
		flavorText: "Mira's hood radiates a powerful energy...",
		effects: [82]
	}, {
		ID: 43,
		name: "Desert Hat",
		type: "",
		member: 0,
		rarity: 1,
		flavorText: "A fashionable hat worn by initiates in the Oasis Institute of Natural Creatures (OINC).",
		effects: [34]
	}, {
		ID: 44,
		name: "Explorer Hat",
		type: "",
		member: 0,
		rarity: 2,
		flavorText: "This hat is rumored to have been worn by Looter Dan, the Academy's greatest explorer.",
		effects: [35]
	}, {
		ID: 45,
		name: "Tinkerer Hat",
		type: "",
		member: 1,
		rarity: 1,
		flavorText: "An old hat, probably worn by the people who built the ancient city.",
		effects: [34]
	}, {
		ID: 46,
		name: "Robot Mask",
		type: "mask",
		member: 1,
		rarity: 2,
		flavorText: "You aren't a robot, but this hat sure makes you look like one!",
		effects: [35]
	}, {
		ID: 47,
		name: "TEK-Y4 Headphones",
		type: "",
		member: 1,
		rarity: 1,
		flavorText: "These headphones are used to enhance the dancing skills of the TEK-Y4 dancing robots!",
		effects: [34]
	}, {
		ID: 48,
		name: "Pumpkinhead",
		type: "wrap",
		member: 1,
		rarity: 2,
		flavorText: "This actually smells like a pumpkin! Kind of sweaty, though.",
		effects: [35]
	}, {
		ID: 49,
		name: "Luminite Mask",
		type: "mask",
		member: 1,
		rarity: 1,
		flavorText: "A plastic Luminite mask...pretty well-made, I think!",
		effects: [34]
	}, {
		ID: 50,
		name: "Specter Hood",
		type: "mask",
		member: 1,
		rarity: 1,
		flavorText: "The hood of a creepy specter - a bit dingy, but that just makes it even creepier.",
		effects: [34]
	}, {
		ID: 51,
		name: "Franky Mask",
		type: "",
		member: 0,
		rarity: 1,
		flavorText: "A plastic mask of Franky the Stein, the popular TV monster.",
		effects: [34]
	}, {
		ID: 52,
		name: "Skelly Mask",
		type: "",
		member: 0,
		rarity: 1,
		flavorText: "A plastic mask of a skelly.",
		effects: [34]
	}, {
		ID: 53,
		name: "Wolfy Mask",
		type: "",
		member: 0,
		rarity: 1,
		flavorText: "A plastic wolf mask... ooooo scary!",
		effects: [34]
	}, {
		ID: 54,
		name: "Climber's Toque",
		type: "",
		member: 0,
		rarity: 1,
		flavorText: "A thick, durable knitted toque, perfect for braving the harsh mountain conditions.",
		effects: [34]
	}, {
		ID: 55,
		name: "Featherwing Helm",
		type: "mask",
		member: 1,
		rarity: 1,
		flavorText: "A standard viking helmet, but with wings! Who cares if they don't make you fly, they're wings!",
		effects: [33]
	}, {
		ID: 56,
		name: "Frost Beard's Mug",
		type: "mask",
		member: 1,
		rarity: 2,
		flavorText: "The helm of the great Frost Beard. Causes the wearer to grow a beard of ice.",
		effects: [35]
	}, {
		ID: 57,
		name: "Lady Yeti Mask",
		type: "mask",
		member: 1,
		rarity: 1,
		flavorText: "A Yeti mask covered in makeup...",
		effects: [34]
	}, {
		ID: 58,
		name: "Male Yeti Mask",
		type: "mask",
		member: 1,
		rarity: 1,
		flavorText: "A Yeti mask...so scary!",
		effects: [34]
	}, {
		ID: 59,
		name: "Red Helm",
		type: "mask",
		member: 0,
		rarity: 1,
		flavorText: "This relic from a more technical age seems to be restored perfectly...it even has that new car smell!",
		effects: [34]
	}, {
		ID: 60,
		name: "Ghastly Hood",
		type: "mask",
		member: 0,
		rarity: 2,
		flavorText: "A strange feeling overwhelms you when you put on this hood; it makes you feel...mysterious.",
		effects: [35]
	}, {
		ID: 61,
		name: "Draconyx Helm",
		type: "mask",
		member: 0,
		rarity: 3,
		flavorText: "This helm was worn by the warrior wizards of legend - meant only for those who passed the toughest of tests.",
		effects: [82]
	}, {
		ID: 62,
		name: "Black Fang",
		type: "mask",
		member: 0,
		rarity: 3,
		flavorText: "This helm is worn only by the greatest of Bounty Hunters. Its staring gaze strikes fear into the hearts of all who see it!",
		effects: [82]
	}, {
		ID: 63,
		name: "Hunter Hat",
		type: "mask",
		member: 0,
		rarity: 2,
		flavorText: "The standard issue hat of a Bounty Hunter. It is durable enough to wear into storms and provides excellent visibility.",
		effects: [35]
	}],
	item: [{
		ID: 1,
		name: "Apple",
		type: "consumable",
		effect: {
			hp: 16
		},
		member: 0,
		rarity: 0,
		flavorText: "Looks delicious!"
	}, {
		ID: 2,
		name: "Tin Can",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "An old tin can. Probably contained some soup or maybe some vegetables."
	}, {
		ID: 3,
		name: "Salad",
		type: "consumable",
		effect: {
			hp: 24
		},
		member: 0,
		rarity: 0,
		flavorText: "Looks delicious!"
	}, {
		ID: 4,
		name: "Croissant",
		type: "consumable",
		effect: {
			hp: 16
		},
		member: 0,
		rarity: 0,
		flavorText: "Looks delicious!"
	}, {
		ID: 5,
		name: "Tooth",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "It looks like the tooth of some monster. I don't think this monster brushed his teeth too often!"
	}, {
		ID: 6,
		name: "Large Scale",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "The scale of a large reptile, probably a dragon!"
	}, {
		ID: 7,
		name: "White Feather",
		member: 0,
		rarity: 0,
		flavorText: "The feather of a white bird. I've heard that some people at the Academy collect feathers..."
	}, {
		ID: 8,
		name: "Fish Bone",
		member: 0,
		rarity: 0,
		flavorText: "Fish bones? Gross! Why am I even carrying this around?!"
	}, {
		ID: 9,
		name: "Red Feather",
		member: 0,
		rarity: 0,
		flavorText: "The feather of a red bird. I've heard that some people at the Academy collect feathers..."
	}, {
		ID: 10,
		name: "Green Feather",
		member: 0,
		rarity: 0,
		flavorText: "The feather of a green bird. I've heard that some people at the Academy collect feathers..."
	}, {
		ID: 11,
		name: "Cake",
		type: "consumable",
		effect: {
			hp: 32
		},
		member: 0,
		rarity: 0,
		flavorText: "A cake? I guess monsters celebrate birthday's too..."
	}, {
		ID: 12,
		name: "Blue Feather",
		member: 0,
		rarity: 0,
		flavorText: "The feather of a blue bird. I've heard that some people at the Academy collect feathers..."
	}, {
		ID: 13,
		name: "Gold Ring",
		member: 0,
		rarity: 0,
		flavorText: "A gold ring! I wonder how much it's worth?"
	}, {
		ID: 14,
		name: "Silver Ring",
		member: 0,
		rarity: 0,
		flavorText: "A silver ring! I wonder how much it's worth?"
	}, {
		ID: 15,
		name: "Old Sock",
		member: 0,
		rarity: 0,
		drop: 1,
		flavorText: "Weird! You ever wonder where all your missing socks go?"
	}, {
		ID: 16,
		name: "Purple Feather",
		member: 0,
		rarity: 0,
		flavorText: "The feather of a purple bird. I've heard that some people at the Academy collect feathers..."
	}, {
		ID: 17,
		name: "Carmine Floret",
		member: 0,
		rarity: 0,
		flavorText: "These flowers tend to spread quickly and are a common sight in Firefly Forest."
	}, {
		ID: 18,
		name: "Helio Floret",
		member: 0,
		rarity: 0,
		flavorText: "These flowers are only found growing in trees, making them hard to reach."
	}, {
		ID: 19,
		name: "Slate Floret",
		member: 0,
		rarity: 0,
		flavorText: "The Slate Floret can only be found growing underneath the largest rocks, far away from the sunlight."
	}, {
		ID: 20,
		name: "Ring of the Forest",
		member: 0,
		rarity: 0,
		flavorText: "This ring is made from Forest Emeralds, which are hard to find in Firefly Forest."
	}, {
		ID: 21,
		name: "Forest Emerald",
		member: 0,
		rarity: 0,
		flavorText: "The forest emerald is a bright, glowing stone found only in Firefly Forest."
	}, {
		ID: 22,
		name: "Chicken",
		type: "consumable",
		effect: {
			hp: 40
		},
		member: 0,
		rarity: 0,
		flavorText: "Looks delicious!"
	}, {
		ID: 23,
		name: "Seedling",
		member: 0,
		rarity: 0,
		flavorText: "The Firefly Forest is full of roots, which can grow into all sorts of neat things!"
	}, {
		ID: 24,
		name: "Mandrake",
		member: 0,
		rarity: 0,
		flavorText: "In the Firefly Forest, sometimes roots sprout life! The result - the magical Mandrake!"
	}, {
		ID: 25,
		name: "Pizza",
		type: "consumable",
		effect: {
			hp: 48
		},
		member: 0,
		rarity: 0,
		flavorText: "Looks delicious!"
	}, {
		ID: 26,
		name: "Lucky Coin",
		member: 0,
		rarity: 0,
		flavorText: "I wonder whose coin this is...? It looks like it's rare..."
	}, {
		ID: 27,
		name: "Icy Floret",
		member: 0,
		rarity: 0,
		flavorText: "Also called the Snow Flower, this plant thrives in the harsh cold of the mountains."
	}, {
		ID: 28,
		name: "Glacier Diamond",
		member: 0,
		rarity: 0,
		flavorText: "This gem looks so much like ice that students often pass it by without notice."
	}, {
		ID: 29,
		name: "Ring of the Glacier",
		member: 0,
		rarity: 0,
		flavorText: "This ring is made from Glacier Diamonds, which are hard to find in Shiverchill Mountains."
	}, {
		ID: 30,
		name: "Chillymoth",
		member: 0,
		rarity: 0,
		flavorText: "When frightened, a Chillymoth turns into ice and people often keep them as trinkets."
	}, {
		ID: 31,
		name: "Mountain Star",
		member: 0,
		rarity: 0,
		flavorText: "These mysterious gems are formed in the ice on moonlit nights, but never melt."
	}, {
		ID: 32,
		name: "Frozen Object",
		member: 0,
		rarity: 0,
		flavorText: "It looks like there's something frozen inside! I wonder what it is?"
	}, {
		ID: 33,
		name: "Fire Flower",
		member: 0,
		rarity: 0,
		flavorText: "This flower's petals look like a dancing flame, but the flower is cool to the touch."
	}, {
		ID: 34,
		name: "Volcanic Ruby",
		member: 0,
		rarity: 0,
		flavorText: "A glowing gem that can be found only in the hottest of places."
	}, {
		ID: 35,
		name: "Sunfire Pod",
		member: 0,
		rarity: 0,
		flavorText: "Nobody really knows how a sunfire pod is created, or where it comes from."
	}, {
		ID: 36,
		name: "Embershard",
		member: 0,
		rarity: 0,
		flavorText: "Not actually a gem, but instead a piece of glass or metal that has been formed in a volcano."
	}, {
		ID: 37,
		name: "Ring of the Volcano",
		member: 0,
		rarity: 0,
		flavorText: "This ring is made with Volcanic Rubies, which are hard to find in Bonfire Spire."
	}, {
		ID: 38,
		name: "Message in a Bottle",
		member: 0,
		rarity: 0,
		flavorText: "Looks like someone left a message in a bottle...I wonder what it says...?"
	}, {
		ID: 39,
		name: "Shark Tooth",
		member: 0,
		rarity: 0,
		flavorText: "This tooth is huge and sharp...it must have come from a shark."
	}, {
		ID: 40,
		name: "Red Shell",
		member: 0,
		rarity: 0,
		flavorText: "A red clam shell, found in clusters on sunny beaches."
	}, {
		ID: 41,
		name: "Blue Shell",
		member: 0,
		rarity: 0,
		flavorText: "A blue clam shell, found in clusters on sunny beaches."
	}, {
		ID: 42,
		name: "White Shell",
		member: 0,
		rarity: 0,
		flavorText: "A white clam shell, found in clusters on sunny beaches."
	}, {
		ID: 43,
		name: "Confused Shark",
		member: 0,
		rarity: 0,
		flavorText: "This little shark looks confused...better keep it in water for now."
	}, {
		ID: 44,
		name: "Bag of Flour",
		member: 0,
		rarity: 0,
		flavorText: "Flour used for baking."
	}, {
		ID: 45,
		name: "Bag of Spices",
		member: 0,
		rarity: 0,
		flavorText: "Spices used in cooking"
	}, {
		ID: 46,
		name: "Bottled Cloud",
		member: 0,
		rarity: 0,
		flavorText: ""
	}, {
		ID: 47,
		name: "Gears",
		member: 0,
		rarity: 0,
		flavorText: "These look like they were part of a machine. I wonder what it did?"
	}, {
		ID: 48,
		name: "Medallion",
		member: 0,
		rarity: 0,
		flavorText: "Strange markings are found on this medallion."
	}, {
		ID: 49,
		name: "Spare Parts",
		member: 0,
		rarity: 0,
		flavorText: "Various metal pieces...maybe they're part of a puzzle?"
	}, {
		ID: 50,
		name: "Cloth Scrap",
		member: 0,
		rarity: 0,
		flavorText: "It looks like this cloth was torn from some larger fabric."
	}, {
		ID: 51,
		name: "Scrap Wood",
		member: 0,
		rarity: 0,
		flavorText: "A piece of scrap wood, probably useful for building."
	}, {
		ID: 52,
		name: "Scepter",
		member: 0,
		rarity: 0,
		flavorText: "This metal rod looks a little shabby..."
	}, {
		ID: 53,
		name: "Wrench",
		member: 0,
		rarity: 0,
		flavorText: "A little worn, but probably still works great."
	}, {
		ID: 54,
		name: "Lightning Stone",
		member: 0,
		rarity: 0,
		flavorText: "This stone is supposed to hold electricity...my hair is standing on end!"
	}, {
		ID: 55,
		name: "Doubloon",
		member: 0,
		rarity: 0,
		flavorText: "It's a pirate coin! I wonder if it's worth anything..."
	}, {
		ID: 56,
		name: "Scroll of Paper",
		member: 0,
		rarity: 0,
		flavorText: "A roll of paper, looks pretty important."
	}, {
		ID: 57,
		name: "Spyglass",
		member: 0,
		rarity: 0,
		flavorText: "This spyglass is in pretty good condition...someone took good care of it!"
	}, {
		ID: 58,
		name: "Seeds",
		member: 0,
		rarity: 0,
		flavorText: "A bunch of little seeds...who knows what they will grow into."
	}, {
		ID: 59,
		name: "Green Key",
		member: 0,
		rarity: 0,
		flavorText: "A strange-looking key adorned with a green jewel."
	}, {
		ID: 60,
		name: "Animal Tag",
		member: 0,
		rarity: 0,
		flavorText: "It looks like a tag for animal tracking..."
	}, {
		ID: 61,
		name: "Scoog's Hat",
		member: 0,
		rarity: 0,
		flavorText: "This must be Professor Scoog's hat...smells like dog food..."
	}, {
		ID: 62,
		name: "Moog's Evil Scheme",
		member: 0,
		rarity: 0,
		flavorText: "This appears to be a novel outlining all of Moog's plan to capture the dynos. It's very well-written."
	}, {
		ID: 63,
		name: "Digging Equipment",
		member: 0,
		rarity: 0,
		flavorText: "It looks like a machine for digging...but the batteries seem to have fallen out."
	}, {
		ID: 64,
		name: "Dyno Egg",
		member: 0,
		rarity: 0,
		flavorText: "It's a dyno egg! It looks like it's safe and intact."
	}, {
		ID: 65,
		name: "Prize Ribbon",
		member: 0,
		rarity: 0,
		flavorText: "Looks like a cheap prize ribbon for winning the Robolympics...I wonder what I can use it for?"
	}, {
		ID: 66,
		name: "Scrap of Paper",
		member: 0,
		rarity: 0,
		flavorText: "Contains a lot of scribbles and doodles."
	}, {
		ID: 67,
		name: "Monster Note",
		member: 0,
		rarity: 0,
		flavorText: "It says - 'Huffy mop derp biggy book Flora'. Okay..."
	}, {
		ID: 68,
		name: "Broken Stone",
		member: 0,
		rarity: 0,
		flavorText: "Looks like a piece of a bridge, covered in claw marks."
	}, {
		ID: 69,
		name: "Broken Flute",
		member: 0,
		rarity: 0,
		flavorText: "A wooden flute...looks like it was broken in half."
	}, {
		ID: 70,
		name: "Magic Flute",
		member: 0,
		rarity: 0,
		flavorText: "A wooden flute containing the magical powers of the forest."
	}, {
		ID: 71,
		name: "Power Crystal",
		member: 0,
		rarity: 0,
		flavorText: "Crystal used to power the old furnaces in the ice caves."
	}, {
		ID: 72,
		name: "Miner Shovel",
		member: 0,
		rarity: 0,
		flavorText: "A shovel...looks sturdy enough to dig through anything!"
	}, {
		ID: 73,
		name: "Spoon",
		member: 0,
		rarity: 0,
		flavorText: "A very large, Yeti-sized spoon. Definitely not a shovel."
	}, {
		ID: 74,
		name: "Crystal",
		member: 0,
		rarity: 0,
		flavorText: "A dim, worn-out Power Crystal. It no longer possesses enough energy to be of any use."
	}, {
		ID: 75,
		name: "Bok's Key",
		member: 0,
		rarity: 0,
		flavorText: "A key to a chest containing Bok's shovel."
	}, {
		ID: 76,
		name: "Firework",
		type: "consumable",
		effect: {
			fx: "firework"
		},
		member: 0,
		rarity: 0,
		flavorText: "Classic fireworks, great to use during a celebration."
	}, {
		ID: 77,
		name: "Confetti",
		type: "consumable",
		effect: {
			fx: "confetti"
		},
		member: 0,
		rarity: 0,
		flavorText: "What's a party without confetti?"
	}],
	key: [{
		ID: 1,
		name: "Shovel",
		levels: 3,
		flavorText: "A shovel used for digging up fossils."
	}, {
		ID: 2,
		name: "TEK-Y4",
		levels: 5,
		flavorText: "A dancing robot with a neural network processor for dance move acceleration and increased groove accuracy."
	}, {
		ID: 3,
		name: "Firefly Gem",
		levels: 1,
		flavorText: "An emerald representing your mastery of Flora's trials in Firefly Forest."
	}, {
		ID: 4,
		name: "Shiverchill Gem",
		levels: 1,
		flavorText: "A diamond representing your aid in Bok's woes in the Shiverchill Mountains."
	}, {
		ID: 5,
		name: "Bounty Note",
		levels: 1,
		flavorText: "This bounty note means you have accepted the 1st bounty for today. Check the bounty section of the Awards Menu for details."
	}, {
		ID: 6,
		name: "Bounty Note",
		levels: 1,
		flavorText: "This bounty note means you have accepted the 2nd bounty for today. Check the bounty section of the Awards Menu for details."
	}, {
		ID: 7,
		name: "Bounty Note",
		levels: 1,
		flavorText: "This bounty note means you have accepted the 3rd bounty for today. Check the bounty section of the Awards Menu for details."
	}],
	fossil: [{
		ID: 1,
		name: "Terrosaur Bone",
		count: 20,
		rarity: 0,
		flavorText: "This bone looks like a piece from a much larger skeleton. I better find them all!"
	}, {
		ID: 2,
		name: "Stampeed Bone",
		count: 20,
		rarity: 0,
		flavorText: "This bone looks like a piece from a much larger skeleton. I better find them all!"
	}, {
		ID: 3,
		name: "Claustro Bone",
		count: 10,
		rarity: 0,
		flavorText: "This bone looks like a piece from a much larger skeleton. I better find them all!"
	}, {
		ID: 4,
		name: "Pterrocks Bone",
		count: 10,
		rarity: 0,
		flavorText: "This bone looks like a piece from a much larger skeleton. I better find them all!"
	}, {
		ID: 5,
		name: "Beetle in Amber",
		count: 1,
		rarity: 0,
		flavorText: "It appears to be a large beetle, preserved in a piece of amber. Neat!"
	}, {
		ID: 6,
		name: "Trellobyte",
		count: 1,
		rarity: 0,
		flavorText: "Trellobytes once scavenged the ocean floors, looking for scraps and collectible cards."
	}, {
		ID: 7,
		name: "Sharp Claw",
		count: 1,
		rarity: 0,
		flavorText: "A large claw to some carnivore...or perhaps an ill-tempered herbivore."
	}, {
		ID: 8,
		name: "Dragonfly in Amber",
		count: 1,
		rarity: 0,
		flavorText: "This dragonfly must have landed on a tree, and got caught in some tree sap."
	}, {
		ID: 9,
		name: "Shell",
		count: 1,
		rarity: 0,
		flavorText: "This shell was likely once home to a large crustacean, or perhaps just a fancy-looking thermos."
	}, {
		ID: 10,
		name: "Mosquito in Amber",
		count: 1,
		rarity: 0,
		flavorText: "These are often treasured as jewelry, and some old men like to place them atop their canes."
	}, {
		ID: 11,
		name: "Piece of Fossilized Fish",
		count: 5,
		rarity: 0,
		flavorText: "A fragment of a fossilized fish...it looks like there are more out there!"
	}, {
		ID: 12,
		name: "Piece of Fossilized Plant",
		count: 5,
		rarity: 0,
		flavorText: "A fragment of a fossilized plant...it looks like there are more out there!"
	}, {
		ID: 13,
		name: "Terrosaur Skeleton",
		rarity: 3,
		flavorText: "A skeleton of the awesome terrosaur, the meanest dyno in history!",
		recipe: [{
			ID: 1,
			type: "fossil",
			N: 20
		}]
	}, {
		ID: 14,
		name: "Stampeed Skeleton",
		rarity: 3,
		flavorText: "A skeleton of a stampeed. It looks pretty cool, and boy is it heavy!",
		recipe: [{
			ID: 2,
			type: "fossil",
			N: 20
		}]
	}, {
		ID: 15,
		name: "Claustro Skeleton",
		rarity: 2,
		flavorText: "This skeleton of a claustro is actually a combination of bone and cartilage.",
		recipe: [{
			ID: 3,
			type: "fossil",
			N: 10
		}]
	}, {
		ID: 16,
		name: "Pterrocks Skeleton",
		rarity: 2,
		flavorText: "This pterrocks skeleton is incredibly fragile, and is held together with strong glue and wire.",
		recipe: [{
			ID: 4,
			type: "fossil",
			N: 10
		}]
	}, {
		ID: 17,
		name: "Beetle in Amber",
		rarity: 1,
		flavorText: "It appears to be a large beetle, preserved in a piece of amber. Neat!",
		recipe: [{
			ID: 5,
			type: "fossil",
			N: 1
		}]
	}, {
		ID: 18,
		name: "Trellobyte",
		rarity: 1,
		flavorText: "Trellobytes once scavenged the ocean floors, looking for scraps and collectible cards.",
		recipe: [{
			ID: 6,
			type: "fossil",
			N: 1
		}]
	}, {
		ID: 19,
		name: "Sharp Claw",
		rarity: 1,
		flavorText: "A large claw to some carnivore...or perhaps an ill-tempered herbivore.",
		recipe: [{
			ID: 7,
			type: "fossil",
			N: 1
		}]
	}, {
		ID: 20,
		name: "Dragonfly in Amber",
		rarity: 1,
		flavorText: "This dragonfly must have landed on a tree, and got caught in some tree sap.",
		recipe: [{
			ID: 8,
			type: "fossil",
			N: 1
		}]
	}, {
		ID: 21,
		name: "Shell",
		rarity: 1,
		flavorText: "This shell was likely once a home to a large crustacean, or perhaps just a fancy-looking thermos.",
		recipe: [{
			ID: 9,
			type: "fossil",
			N: 1
		}]
	}, {
		ID: 22,
		name: "Mosquito in Amber",
		rarity: 1,
		flavorText: "These are often treasured as jewellry, and some old men like to place them atop their canes.",
		recipe: [{
			ID: 10,
			type: "fossil",
			N: 1
		}]
	}, {
		ID: 23,
		name: "Fossilized Fish",
		rarity: 2,
		flavorText: "This fish was likely a deep ocean dweller; perhaps a darkfish, crazyfish, or maybe the rare stinkyfish.",
		recipe: [{
			ID: 11,
			type: "fossil",
			N: 5
		}]
	}, {
		ID: 24,
		name: "Fossilized Plant",
		rarity: 2,
		flavorText: "A small fern, fossilized over millions of years. This plant still exists on the island today.",
		recipe: [{
			ID: 12,
			type: "fossil",
			N: 5
		}]
	}],
	fish: [{
		ID: 1,
		name: "Fish",
		weightMin: 1,
		weightMax: 10,
		str: 10,
		spd: 10,
		hourMin: 1,
		hourMax: 24,
		rod: 1,
		bait: [1, 2, 3]
	}],
	dorm: [{
		ID: 1,
		name: "Comfy Chair",
		member: 0,
		rarity: 0,
		category: "Comfy",
		price: 300,
		r: 4,
		flavorText: "Just a regular old chair. You can sit on it; that's all you need, right?"
	}, {
		ID: 2,
		name: "Steel Chair",
		member: 0,
		rarity: 0,
		category: "Comfy",
		price: 350,
		r: 4,
		flavorText: "A sturdy steel chair. One questions the comfort of such a thing."
	}, {
		ID: 3,
		name: "Wooden Nightstand",
		member: 0,
		rarity: 0,
		category: "Surface",
		price: 500,
		r: 4,
		flavorText: "A standard nightstand. Perfect for storing bedtime stories."
	}, {
		ID: 4,
		name: "Steel Table",
		member: 0,
		rarity: 0,
		category: "Surface",
		price: 400,
		r: 0,
		flavorText: "A sturdy steel table. Much more practical than its chair counterpart."
	}, {
		ID: 5,
		name: "Glass Table",
		member: 1,
		rarity: 0,
		category: "Surface",
		price: 600,
		r: 0,
		flavorText: "A standard glass table. Don't jump on it!"
	}, {
		ID: 6,
		name: "Pink Flowerpot",
		member: 0,
		rarity: 0,
		category: "Plants",
		price: 200,
		r: 0,
		flavorText: "This little pink flower is a common gift on Valentine's Day."
	}, {
		ID: 7,
		name: "Bushy Plant",
		member: 1,
		rarity: 0,
		category: "Plants",
		price: 200,
		mprice: 100,
		r: 0,
		flavorText: "A regular green potted plant. Gives off a distinct aroma."
	}, {
		ID: 8,
		name: "Tall Fern",
		member: 1,
		rarity: 0,
		category: "Plants",
		price: 200,
		mprice: 100,
		r: 0,
		flavorText: "This plant has grown to be a bit unkempt. Perfect for those who want a wild look for their room."
	}, {
		ID: 9,
		name: "Forest Flower",
		member: 1,
		rarity: 0,
		category: "Plants",
		price: 150,
		mprice: 100,
		r: 0,
		flavorText: "This large wild flower can only be found during Spring in the Firefly forest. It's perfume like odor keeps bugs away."
	}, {
		ID: 10,
		name: "Purple Couch",
		member: 1,
		rarity: 0,
		category: "Comfy",
		price: 600,
		mprice: 300,
		r: 4,
		flavorText: "Like a regular couch, but purple."
	}, {
		ID: 11,
		name: "Green Couch",
		member: 1,
		rarity: 1,
		category: "Comfy",
		price: 600,
		mprice: 400,
		r: 4,
		flavorText: "Like a regular couch, but green."
	}, {
		ID: 12,
		name: "Purple Chair",
		member: 1,
		rarity: 1,
		category: "Comfy",
		price: 400,
		mprice: 250,
		r: 4,
		flavorText: "This large, lazy chair is so comfy, that once you sit on it, you'll never want to stand up again."
	}, {
		ID: 13,
		name: "Bookshelf",
		member: 1,
		rarity: 0,
		category: "Storage",
		price: 800,
		mprice: 450,
		r: 4,
		flavorText: "A regular wooden bookshelf, perfect for storing all of your favorite spell books."
	}, {
		ID: 14,
		name: "Wooden Table",
		member: 1,
		rarity: 0,
		category: "Surface",
		price: 300,
		mprice: 150,
		r: 0,
		flavorText: "A standard wooden table. The most standard of all the tables."
	}, {
		ID: 15,
		name: "Small Chair",
		member: 1,
		rarity: 0,
		category: "Comfy",
		price: 300,
		mprice: 150,
		r: 4,
		flavorText: "Tiny chairs made for tiny individuals."
	}, {
		ID: 16,
		name: "Wardrobe",
		member: 1,
		rarity: 1,
		category: "Storage",
		price: 1200,
		mprice: 750,
		r: 4,
		flavorText: "This large wooden wardrobe has all the space you could need to store your wizarding outfits."
	}, {
		ID: 17,
		name: "Starry Bed",
		member: 0,
		rarity: 1,
		category: "Comfy",
		price: 1500,
		mprice: 800,
		r: 4,
		flavorText: "This sky themed bed is so fluffy, it's like lying on a cloud."
	}, {
		ID: 18,
		name: "Square Window",
		member: 0,
		rarity: 0,
		category: "Wall",
		price: 250,
		mprice: 100,
		r: 2,
		flavorText: "A square window, or is it 4 square windows?"
	}, {
		ID: 19,
		name: "Fancy Window",
		member: 1,
		rarity: 1,
		category: "Wall",
		price: 350,
		mprice: 150,
		r: 2,
		flavorText: "The fanciest of windows. Not actually, but it is pretty fancy."
	}, {
		ID: 20,
		name: "Dining Table",
		member: 1,
		rarity: 1,
		category: "Surface",
		price: 850,
		mprice: 550,
		r: 2,
		flavorText: "This spacious table is perfect for large gatherings and parties."
	}, {
		ID: 21,
		name: "Treasure Chest",
		member: 1,
		rarity: 1,
		category: "Storage",
		price: 1500,
		mprice: 600,
		r: 2,
		flavorText: "A chest to store all your treasures."
	}, {
		ID: 22,
		name: "Frosty Bear",
		member: 1,
		rarity: 2,
		category: "Items",
		mprice: 350,
		r: 4,
		flavorText: "This cuddly guy is perfect for those lonely days at home."
	}, {
		ID: 23,
		name: "Bawk-bawk Clock",
		member: 1,
		rarity: 2,
		category: "Wall",
		mprice: 350,
		r: 2,
		flavorText: "Never be late again! The squawking sound this clock makes is so annoying, it is impossible to ignore."
	}, {
		ID: 24,
		name: "Dragon Mirror",
		member: 1,
		rarity: 2,
		category: "Wall",
		price: 650,
		mprice: 350,
		r: 2,
		flavorText: "A mirror that shows its user as a dragon. It was created by Small Hood Nagol, a wizard notorious for his obsession with dragons."
	}, {
		ID: 25,
		name: "Frozen Mirror",
		member: 1,
		rarity: 1,
		category: "Wall",
		price: 750,
		mprice: 400,
		r: 2,
		flavorText: "A mirror made of ice. There is a label on the back that says 'Warning keep frozen'."
	}, {
		ID: 26,
		name: "Round Mirror",
		member: 1,
		rarity: 0,
		category: "Wall",
		price: 400,
		mprice: 250,
		r: 2,
		flavorText: "This mirror is so perfectly rounded, it is impossible to tell the top from the bottom."
	}, {
		ID: 27,
		name: "Frozen Throne",
		member: 1,
		rarity: 2,
		category: "Comfy",
		price: 3500,
		mprice: 500,
		r: 4,
		flavorText: "This throne doesn't look too comfy, but gosh does it look cool."
	}, {
		ID: 28,
		name: "Forest Wardrobe",
		member: 1,
		rarity: 2,
		category: "Storage",
		price: 3e3,
		mprice: 600,
		r: 4,
		flavorText: "A wardrobe made carved of wood from the Big Tree. The vines on the side are grown around the closet for a unique look every time."
	}, {
		ID: 29,
		name: "Purple Potted Plant",
		member: 1,
		rarity: 0,
		category: "Plants",
		price: 200,
		mprice: 0,
		r: 0,
		flavorText: "This purple potted plant is picked in the plains and is perfect for perching atop any platform."
	}, {
		ID: 30,
		name: "Red Potted Plant",
		member: 1,
		rarity: 0,
		category: "Plants",
		price: 200,
		mprice: 0,
		r: 0,
		flavorText: "This red potted plant emanates a light pulsating glow. It is picked from the Fiery Forest surrounding Bonfire Spire."
	}, {
		ID: 31,
		name: "Mushroom Lamp",
		member: 1,
		rarity: 0,
		category: "Lamps",
		price: 350,
		mprice: 150,
		r: 0,
		flavorText: "A special mushroom for the Firefly forest. When shocked with electricity, it gives off a warm glow from its spots."
	}, {
		ID: 32,
		name: "Table Lamp",
		member: 1,
		rarity: 0,
		category: "Lamps",
		price: 250,
		mprice: 150,
		r: 0,
		flavorText: "A normal table lamp. You can put it on a chair if you're feeling crazy."
	}, {
		ID: 33,
		name: "Flower Lamp",
		member: 1,
		rarity: 0,
		category: "Lamps",
		price: 350,
		mprice: 150,
		r: 0,
		flavorText: "Looks like a flower, smells like a flower, but isn't a flower. Its a lamp."
	}, {
		ID: 34,
		name: "Aquarium",
		member: 1,
		rarity: 1,
		category: "Items",
		price: 600,
		mprice: 250,
		r: 2,
		flavorText: "Keep your favorite water pets happy with this personal aquarium."
	}, {
		ID: 35,
		name: "Icy Table",
		member: 1,
		rarity: 2,
		category: "Surface",
		price: 600,
		mprice: 200,
		r: 0,
		flavorText: "A table made of ice. Designed for the inhabitants of Shiverchill before the Ice Worm appeared."
	}, {
		ID: 36,
		name: "Flame Banner",
		member: 1,
		rarity: 1,
		category: "Wall",
		price: 1e3,
		mprice: 250,
		r: 2,
		flavorText: "A banner flown only by those who have mastered the art of fire spells."
	}, {
		ID: 37,
		name: "Snow Banner",
		member: 1,
		rarity: 1,
		category: "Wall",
		price: 1e3,
		mprice: 250,
		r: 2,
		flavorText: "A banner flown only by those who have mastered the art of ice spells."
	}, {
		ID: 38,
		name: "Forest Banner",
		member: 1,
		rarity: 1,
		category: "Wall",
		price: 1e3,
		mprice: 250,
		r: 2,
		flavorText: "A banner flown only by those who have mastered the art of earth spells."
	}, {
		ID: 39,
		name: "Stuffed Dragon",
		member: 1,
		rarity: 3,
		category: "Items",
		mprice: 200,
		r: 4,
		flavorText: "A plush dragon toy. It is surprisingly not particularly hug-able, as the skin is made from real dragon hide."
	}, {
		ID: 40,
		name: "Fire Throne",
		member: 1,
		rarity: 2,
		category: "Comfy",
		price: 3500,
		mprice: 500,
		r: 4,
		flavorText: "Keep your touche warm with the ultimate in heated seats. A flaming throne!"
	}, {
		ID: 41,
		name: "Tall Lamp",
		member: 1,
		rarity: 2,
		category: "Lamps",
		price: 600,
		mprice: 200,
		r: 0,
		flavorText: "This lamp is so tall its a miracle if you can get it into your room."
	}, {
		ID: 42,
		name: "Sunfire Lamp",
		member: 1,
		rarity: 2,
		category: "Lamps",
		price: 2500,
		mprice: 400,
		r: 0,
		flavorText: "A lamp that emanates a large amount of heat, as its light source is a heated iron core."
	}, {
		ID: 43,
		name: "Ice Shard Lamp",
		member: 1,
		rarity: 2,
		category: "Lamps",
		price: 2500,
		mprice: 400,
		r: 0,
		flavorText: "A lamp that shines brilliantly in many colors, filtering light through its ice prisms."
	}, {
		ID: 44,
		name: "Canopy Lamp",
		member: 1,
		rarity: 2,
		category: "Lamps",
		price: 2500,
		mprice: 400,
		r: 0,
		flavorText: "A lamp made from a firefly plant. These plants only grow in the Firefly forest and glow much like a giant firefly's tail."
	}, {
		ID: 45,
		name: "Forest Throne",
		member: 1,
		rarity: 2,
		category: "Comfy",
		price: 3500,
		mprice: 500,
		r: 4,
		flavorText: "A throne carved from a stump. It is still a living plant, so be sure to water it!"
	}, {
		ID: 46,
		name: "Phoenix Lamp",
		member: 1,
		rarity: 2,
		category: "Lamps",
		price: 2500,
		mprice: 400,
		r: 4,
		flavorText: "A lamp designed to look like a phoenix."
	}, {
		ID: 47,
		name: "Ice Phoenix Lamp",
		member: 1,
		rarity: 2,
		category: "Lamps",
		price: 2500,
		mprice: 400,
		r: 4,
		flavorText: "A lamp designed to look like a phoenix, but icey for some reason."
	}, {
		ID: 48,
		name: "Amber",
		member: 1,
		rarity: 2,
		category: "Items",
		r: 2,
		flavorText: "This piece of amber has an ancient bug pet preserved inside of it. It makes for quite the conversation piece."
	}, {
		ID: 49,
		name: "Anchor Chair",
		member: 1,
		rarity: 2,
		category: "Comfy",
		r: 4,
		flavorText: "The perfect chair for a seafarer or, ironically, someone who cannot swim."
	}, {
		ID: 50,
		name: "Dingy Bed",
		member: 1,
		rarity: 2,
		category: "Comfy",
		r: 4,
		flavorText: "This tiny bed is convenient to have for guests. It can compress for easy storage."
	}, {
		ID: 51,
		name: "Boombox",
		member: 1,
		rarity: 1,
		category: "Items",
		r: 2,
		flavorText: "No party is complete with some great music to dance to. Get your groove on!"
	}, {
		ID: 52,
		name: "Ship in a Bottle",
		member: 1,
		rarity: 2,
		category: "Items",
		r: 2,
		flavorText: "A perfect scale model of a ship. One wonders how they got it into the bottle."
	}, {
		ID: 53,
		name: "Carnoplant",
		member: 1,
		rarity: 2,
		category: "Plants",
		r: 2,
		flavorText: "This carnivorous plant is useful for keeping bug infestations under control."
	}, {
		ID: 54,
		name: "Rugged Bed",
		member: 1,
		rarity: 2,
		category: "Comfy",
		r: 4,
		flavorText: "For those who like to reminisce about the cave-man days. Enjoy the worst night of sleep in you life."
	}, {
		ID: 55,
		name: "Dyno Skull",
		member: 1,
		rarity: 3,
		category: "Items",
		r: 2,
		flavorText: "A large decorative dyno skull. It is made from foam, for ease of transportation."
	}, {
		ID: 56,
		name: "Floaty Bed",
		member: 1,
		rarity: 3,
		category: "Comfy",
		r: 4,
		flavorText: "This bed is filled with helium, making it float slightly off the ground. Its light rocking will put you to sleep instantly!"
	}, {
		ID: 57,
		name: "Stuffed Dyno",
		member: 1,
		rarity: 2,
		category: "Items",
		r: 4,
		flavorText: "This cute little stuffed dyno used to be a common prize at the dyno dig site."
	}, {
		ID: 58,
		name: "Gramophone",
		member: 1,
		rarity: 2,
		category: "Items",
		r: 2,
		flavorText: "A boombox for the old school. Perfect for it you like your music to sound old."
	}, {
		ID: 59,
		name: "Shipwheel",
		member: 1,
		rarity: 1,
		category: "Wall",
		r: 2,
		flavorText: "The steering wheel from a sunken ship. The remnants of the ship have never been found."
	}, {
		ID: 60,
		name: "Phaser Lamp",
		member: 1,
		rarity: 2,
		category: "Lamps",
		r: 2,
		flavorText: "A lamp designed for those with interests in the sci-fi."
	}, {
		ID: 61,
		name: "Lifesaver",
		member: 1,
		rarity: 2,
		category: "Wall",
		r: 2,
		flavorText: "A perfect edition to any home in a location that is prone to flooding, or if you just can't swim."
	}, {
		ID: 62,
		name: "Excavation Table",
		member: 1,
		rarity: 3,
		category: "Surface",
		r: 2,
		flavorText: "This table comes equipped with everything you could need to investigate a dig site."
	}, {
		ID: 63,
		name: "Porthole",
		member: 1,
		rarity: 1,
		category: "Wall",
		r: 2,
		flavorText: "Intended for peering out at the sea. One wonders about its purpose in a house."
	}, {
		ID: 64,
		name: "Fossil Chair",
		member: 1,
		rarity: 2,
		category: "Comfy",
		r: 4,
		flavorText: "A chair carved from ancient bones. It is surprisingly sturdy for something so old."
	}, {
		ID: 65,
		name: "Modified Organ",
		member: 1,
		rarity: 3,
		category: "Items",
		r: 4,
		flavorText: "An organ with a unique sound. It is steam powered and lets out plumes of smoke upon use."
	}, {
		ID: 66,
		name: "Time-o-tron",
		member: 1,
		rarity: 1,
		category: "Wall",
		r: 2,
		flavorText: "A coocoo clock, without the coocoo. It sends the alarm directly to its owners brain telepathically."
	}, {
		ID: 67,
		name: "Cloud Throne",
		member: 1,
		rarity: 3,
		category: "Comfy",
		r: 4,
		flavorText: "It is miraculous that one can even sit on this throne, as the seat is made of clouds."
	}, {
		ID: 68,
		name: "Timekeeper",
		member: 1,
		rarity: 2,
		category: "Items",
		r: 2,
		flavorText: "Honestly, its just a clock."
	}, {
		ID: 69,
		name: "Rainbow Decal",
		member: 1,
		rarity: 1,
		category: "Wall",
		r: 2,
		flavorText: "A rainbow that doesn't need any rain! Use it to spice up your living space."
	}, {
		ID: 70,
		name: "Time Box",
		member: 1,
		rarity: 3,
		category: "Storage",
		r: 4,
		flavorText: "This mysterious machine is constantly whirring and whizzing with no obvious effect."
	}, {
		ID: 71,
		name: "Zapper Lamp",
		member: 1,
		rarity: 1,
		category: "Lamps",
		r: 2,
		flavorText: "A lamp light by lightning to look like lightning."
	}],
	dormbg: [{
		ID: 1,
		name: "Lamplight House",
		member: 0,
		rarity: 0,
		category: "Comfy",
		price: 300,
		flavorText: "",
		x: 800,
		y: 470,
		bg: "bg-dorm-house",
		area: [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
	}, {
		ID: 2,
		name: "Ice Cave",
		member: 1,
		rarity: 0,
		category: "Comfy",
		price: 1500,
		flavorText: "",
		x: 107,
		y: 607,
		bg: "bg-dorm-cave",
		area: [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, 0, 0, 0, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, 0, 0, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, 0, 0, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
	}, {
		ID: 3,
		name: "Firefly Treehouse",
		member: 1,
		rarity: 0,
		category: "Surface",
		price: 2e3,
		flavorText: "",
		x: 1e3,
		y: 480,
		bg: "bg-dorm-tree",
		area: [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
	}]
};
var Monsters = function () {
	function e() {}
	return e
}();
Monsters.areEqual = function (e, t) {
	return e.ID === t.ID && e.level === t.level && e.hearts === t.hearts ? !0 : !1
}, Monsters.getItemData = function (e) {
	return Monsters.data[e]
}, Monsters.getRandomItem = function () {
	for (var e = null; !Util.isDefined(e);) {
		var t = Math.floor(97 * Math.random()) + 1;
		e = Monsters.data[t]
	}
	return e.ID
}, Monsters.getEvolveLevel = function (e) {
	for (var t = Monsters.getItemData(e), i = 0; i < t.curve.length; i++) {
		var a = t.curve[i];
		if (Util.isDefined(a.e)) return a.lvl
	}
	return 1
}, Monsters.getEvolveID = function (e) {
	for (var t = Monsters.getItemData(e), i = 0; i < t.curve.length; i++) {
		var a = t.curve[i];
		if (Util.isDefined(a.e)) return a.e
	}
	return -1
}, Monsters.getEncounterRate = function (e) {
	var t = Monsters.getItemData(e);
	return Util.isDefined(t) ? t.R || 1 : 0
}, Monsters.getRange = function (e, t) {
	for (var i = [], a = e; t >= a; a++) Util.isDefined(Monsters.data[a]) ? i.push({
		ID: a
	}) : i.push(null);
	return i
}, Monsters.MAX_ID = 124, Monsters.data = {
	1: {
		ID: 1,
		name: "Peeko",
		element: "earth",
		effects: [6, 45],
		life: "B",
		power: "B",
		growth: "B",
		curve: [{
			lvl: 1,
			a: 13
		}, {
			lvl: 5,
			a: 14
		}, {
			lvl: 10,
			a: 15
		}, {
			lvl: 20,
			a: 16
		}, {
			lvl: 32,
			a: 17
		}, {
			lvl: 50,
			a: 18
		}, {
			lvl: 15,
			e: 2
		}],
		flavorText: "Peekos cheerfully wiggle their ears when they are happy, which they almost always are!"
	},
	2: {
		ID: 2,
		name: "Rack-rack",
		R: 2,
		element: "earth",
		effects: [6, 45],
		life: "B+",
		power: "B",
		growth: "C",
		curve: [{
			lvl: 1,
			a: 13
		}, {
			lvl: 6,
			a: 14
		}, {
			lvl: 12,
			a: 15
		}, {
			lvl: 23,
			a: 16
		}, {
			lvl: 36,
			a: 17
		}, {
			lvl: 55,
			a: 18
		}, {
			lvl: 30,
			e: 3
		}],
		flavorText: "Not quite a cat, and not quite a raccoon, a Rack-rack is a strange but adorable mix of both."
	},
	3: {
		ID: 3,
		name: "Flyger",
		R: 5,
		element: "earth",
		effects: [6, 45],
		life: "A-",
		power: "B",
		growth: "D",
		curve: [{
			lvl: 1,
			a: 13
		}, {
			lvl: 7,
			a: 26
		}, {
			lvl: 14,
			a: 15
		}, {
			lvl: 26,
			a: 28
		}, {
			lvl: 40,
			a: 17
		}, {
			lvl: 60,
			a: 30
		}],
		flavorText: "A rare sight in air or on land, Flygers tend to hide most of the day, emerging only to dance."
	},
	4: {
		ID: 4,
		name: "Soral",
		element: "storm",
		effects: [6, 48],
		life: "B",
		power: "B",
		growth: "B",
		curve: [{
			lvl: 1,
			a: 25
		}, {
			lvl: 5,
			a: 26
		}, {
			lvl: 10,
			a: 27
		}, {
			lvl: 20,
			a: 28
		}, {
			lvl: 32,
			a: 29
		}, {
			lvl: 50,
			a: 30
		}, {
			lvl: 15,
			e: 5
		}],
		flavorText: "Soral babies love attention, often squawking loudly when people stop paying attention to them."
	},
	5: {
		ID: 5,
		name: "Solarix",
		R: 2,
		element: "storm",
		effects: [6, 48],
		life: "B+",
		power: "B",
		growth: "C",
		curve: [{
			lvl: 1,
			a: 25
		}, {
			lvl: 6,
			a: 26
		}, {
			lvl: 12,
			a: 27
		}, {
			lvl: 23,
			a: 28
		}, {
			lvl: 36,
			a: 29
		}, {
			lvl: 55,
			a: 30
		}, {
			lvl: 30,
			e: 6
		}],
		flavorText: "The sun's rays reflect off of the Solarix in all directions, making it appear to glow yellow."
	},
	6: {
		ID: 6,
		name: "Solarasis",
		R: 5,
		element: "storm",
		effects: [6, 48],
		life: "A-",
		power: "B",
		growth: "D",
		curve: [{
			lvl: 1,
			a: 25
		}, {
			lvl: 7,
			a: 8
		}, {
			lvl: 14,
			a: 27
		}, {
			lvl: 26,
			a: 10
		}, {
			lvl: 40,
			a: 29
		}, {
			lvl: 60,
			a: 12
		}],
		flavorText: "It's rare to find more than one Solarasis at a time, and so few people know the plural form of Solarasis. Solarases? Solarasises? It's a mystery."
	},
	7: {
		ID: 7,
		name: "Dragic",
		element: "fire",
		effects: [3, 12, 51],
		life: "B",
		power: "B",
		growth: "B",
		curve: [{
			lvl: 1,
			a: 1
		}, {
			lvl: 5,
			a: 2
		}, {
			lvl: 10,
			a: 3
		}, {
			lvl: 20,
			a: 4
		}, {
			lvl: 32,
			a: 5
		}, {
			lvl: 50,
			a: 6
		}, {
			lvl: 15,
			e: 8
		}],
		flavorText: "Scalier than other babies, the Dragic hide their mischief behind their giant smiles."
	},
	8: {
		ID: 8,
		name: "Dragling",
		R: 2,
		element: "fire",
		effects: [3, 12, 51],
		life: "B+",
		power: "B",
		growth: "C",
		curve: [{
			lvl: 1,
			a: 1
		}, {
			lvl: 6,
			a: 2
		}, {
			lvl: 12,
			a: 3
		}, {
			lvl: 23,
			a: 4
		}, {
			lvl: 36,
			a: 5
		}, {
			lvl: 55,
			a: 6
		}, {
			lvl: 30,
			e: 9
		}],
		flavorText: "Most people are afraid of dragons, but not of Draglings. These little guys are very friendly!"
	},
	9: {
		ID: 9,
		name: "Tarragon",
		R: 5,
		element: "fire",
		effects: [3, 12, 51],
		life: "A-",
		power: "B",
		growth: "D",
		curve: [{
			lvl: 1,
			a: 1
		}, {
			lvl: 7,
			a: 8
		}, {
			lvl: 14,
			a: 3
		}, {
			lvl: 26,
			a: 10
		}, {
			lvl: 40,
			a: 5
		}, {
			lvl: 60,
			a: 12
		}],
		flavorText: "Tarragons strike fear to any opponent, but are just as playful as Dragics once you get to know them."
	},
	10: {
		ID: 10,
		name: "Creela",
		element: "water",
		effects: [0, 57, 54],
		life: "B",
		power: "B",
		growth: "B",
		curve: [{
			lvl: 1,
			a: 7
		}, {
			lvl: 5,
			a: 8
		}, {
			lvl: 10,
			a: 9
		}, {
			lvl: 20,
			a: 10
		}, {
			lvl: 32,
			a: 11
		}, {
			lvl: 50,
			a: 12
		}, {
			lvl: 15,
			e: 11
		}],
		flavorText: "Creela babies are very sweet by nature, and are living proof that bugs can be adorable."
	},
	11: {
		ID: 11,
		name: "Celesteate",
		R: 2,
		element: "water",
		effects: [0, 57, 54],
		life: "B+",
		power: "B",
		growth: "C",
		curve: [{
			lvl: 1,
			a: 7
		}, {
			lvl: 6,
			a: 8
		}, {
			lvl: 12,
			a: 9
		}, {
			lvl: 23,
			a: 10
		}, {
			lvl: 36,
			a: 11
		}, {
			lvl: 55,
			a: 12
		}, {
			lvl: 30,
			e: 12
		}],
		flavorText: "It is hard to find a Celesteate unless you look underground... they hide in nests in small groups."
	},
	12: {
		ID: 12,
		name: "Aureate",
		R: 5,
		element: "water",
		effects: [0, 57, 54],
		life: "A-",
		power: "B",
		growth: "D",
		curve: [{
			lvl: 1,
			a: 7
		}, {
			lvl: 7,
			a: 26
		}, {
			lvl: 14,
			a: 9
		}, {
			lvl: 26,
			a: 28
		}, {
			lvl: 40,
			a: 11
		}, {
			lvl: 60,
			a: 30
		}],
		flavorText: "The Aureate's glowing body can light up like a lightbulb bright as the sun to blind its foes."
	},
	13: {
		ID: 13,
		name: "Browl",
		special: !0,
		element: "storm",
		effects: [6, 48],
		life: "C",
		power: "C",
		growth: "A",
		curve: [{
			lvl: 1,
			a: 25
		}, {
			lvl: 4,
			a: 13
		}, {
			lvl: 8,
			a: 27
		}, {
			lvl: 17,
			a: 15
		}, {
			lvl: 28,
			a: 29
		}, {
			lvl: 45,
			a: 17
		}, {
			lvl: 12,
			e: 14
		}],
		flavorText: "The Browl is a smart creature, capable of long division with no remainders."
	},
	14: {
		ID: 14,
		name: "Acromi",
		R: 2,
		element: "storm",
		effects: [6, 48],
		life: "C",
		power: "C",
		growth: "A",
		curve: [{
			lvl: 1,
			a: 25
		}, {
			lvl: 4,
			a: 26
		}, {
			lvl: 8,
			a: 27
		}, {
			lvl: 17,
			a: 28
		}, {
			lvl: 28,
			a: 29
		}, {
			lvl: 45,
			a: 30
		}],
		flavorText: "The eyes of an Acromi are so big and bright, that they are often mistaken for stars in the night."
	},
	15: {
		ID: 15,
		name: "Nebluff",
		element: "storm",
		effects: [6, 48],
		life: "C",
		power: "C",
		growth: "A",
		curve: [{
			lvl: 1,
			a: 25
		}, {
			lvl: 4,
			a: 26
		}, {
			lvl: 8,
			a: 27
		}, {
			lvl: 17,
			a: 28
		}, {
			lvl: 28,
			a: 29
		}, {
			lvl: 45,
			a: 30
		}],
		flavorText: "These critters are commonly seen flitting in and out of the clouds, chasing thunder and lightning."
	},
	16: {
		ID: 16,
		name: "Battaram",
		element: "ice",
		effects: [9, 45],
		life: "B-",
		power: "B",
		growth: "A-",
		curve: [{
			lvl: 1,
			a: 19
		}, {
			lvl: 4,
			a: 20
		}, {
			lvl: 8,
			a: 21
		}, {
			lvl: 18,
			a: 22
		}, {
			lvl: 29,
			a: 23
		}, {
			lvl: 47,
			a: 24
		}, {
			lvl: 22,
			e: 17
		}],
		flavorText: "Battarams use their large horns to make loud noises, not unlike the beat of a drum, to make music."
	},
	17: {
		ID: 17,
		name: "Battabash",
		R: 2,
		element: "ice",
		effects: [9, 45],
		life: "B-",
		power: "B",
		growth: "A-",
		curve: [{
			lvl: 1,
			a: 19
		}, {
			lvl: 4,
			a: 20
		}, {
			lvl: 8,
			a: 21
		}, {
			lvl: 18,
			a: 22
		}, {
			lvl: 29,
			a: 23
		}, {
			lvl: 47,
			a: 24
		}],
		flavorText: "The horns on a Battabash's head are so heavy that they cannot walk on ice of any thickness, for fear of it cracking."
	},
	18: {
		ID: 18,
		name: "Squawks",
		element: "storm",
		effects: [6, 48],
		life: "B",
		power: "B",
		growth: "A",
		curve: [{
			lvl: 1,
			a: 25
		}, {
			lvl: 4,
			a: 26
		}, {
			lvl: 8,
			a: 27
		}, {
			lvl: 17,
			a: 28
		}, {
			lvl: 28,
			a: 29
		}, {
			lvl: 45,
			a: 30
		}, {
			lvl: 12,
			e: 19
		}],
		flavorText: "It's tough being a bird with no legs or body, but Squawks never complain... or get tired!"
	},
	19: {
		ID: 19,
		name: "Tribeak",
		R: 2,
		element: "storm",
		effects: [6, 48],
		life: "A",
		power: "B",
		growth: "B",
		curve: [{
			lvl: 1,
			a: 25
		}, {
			lvl: 5,
			a: 26
		}, {
			lvl: 10,
			a: 27
		}, {
			lvl: 20,
			a: 28
		}, {
			lvl: 32,
			a: 29
		}, {
			lvl: 50,
			a: 30
		}],
		flavorText: "It's harder to take down three birds with one stone."
	},
	20: {
		ID: 20,
		name: "Luminite",
		element: "storm",
		effects: [6, 48],
		life: "C",
		power: "B",
		growth: "A",
		curve: [{
			lvl: 1,
			a: 25
		}, {
			lvl: 4,
			a: 26
		}, {
			lvl: 8,
			a: 27
		}, {
			lvl: 17,
			a: 28
		}, {
			lvl: 28,
			a: 29
		}, {
			lvl: 45,
			a: 30
		}, {
			lvl: 14,
			e: 21
		}],
		flavorText: "A Luminite is very loyal and friendly, earning it the nickname 'Man's Bestest Friend.'"
	},
	21: {
		ID: 21,
		name: "Lumiot",
		R: 2,
		element: "storm",
		effects: [6, 48],
		life: "B",
		power: "B",
		growth: "B",
		curve: [{
			lvl: 1,
			a: 25
		}, {
			lvl: 5,
			a: 26
		}, {
			lvl: 10,
			a: 27
		}, {
			lvl: 20,
			a: 28
		}, {
			lvl: 32,
			a: 29
		}, {
			lvl: 50,
			a: 30
		}, {
			lvl: 24,
			e: 22
		}],
		flavorText: "A bigger Luminite, the Lumiot is much better at playing fetch, catch, and napping in the sun."
	},
	22: {
		ID: 22,
		name: "Luminex",
		R: 5,
		element: "storm",
		effects: [6, 48],
		life: "A",
		power: "B",
		growth: "C",
		curve: [{
			lvl: 1,
			a: 25
		}, {
			lvl: 6,
			a: 26
		}, {
			lvl: 12,
			a: 27
		}, {
			lvl: 23,
			a: 28
		}, {
			lvl: 36,
			a: 29
		}, {
			lvl: 55,
			a: 30
		}],
		flavorText: "Lumiots that do not brush or clean their fur for long periods of time turn into Luminexes."
	},
	23: {
		ID: 23,
		name: "Tinyger",
		element: "fire",
		effects: [3, 12, 51],
		life: "B-",
		power: "C",
		growth: "B+",
		curve: [{
			lvl: 1,
			a: 1
		}, {
			lvl: 5,
			a: 7
		}, {
			lvl: 10,
			a: 3
		}, {
			lvl: 19,
			a: 9
		}, {
			lvl: 31,
			a: 5
		}, {
			lvl: 48,
			a: 11
		}, {
			lvl: 20,
			e: 24
		}],
		flavorText: "Tinygers only walk upright to impress others, and even wear pants to appear more human."
	},
	24: {
		ID: 24,
		name: "Tyscout",
		R: 2,
		element: "fire",
		effects: [3, 12, 51],
		life: "B-",
		power: "C",
		growth: "B+",
		curve: [{
			lvl: 1,
			a: 1
		}, {
			lvl: 5,
			a: 7
		}, {
			lvl: 10,
			a: 3
		}, {
			lvl: 19,
			a: 9
		}, {
			lvl: 31,
			a: 5
		}, {
			lvl: 48,
			a: 11
		}],
		flavorText: "Tyscouts are tinygers that have learned to live and work with humans, and have been even seen taking jobs."
	},
	25: {
		ID: 25,
		name: "Flikflit",
		element: "water",
		effects: [0, 57, 54],
		life: "C-",
		power: "C",
		growth: "C+",
		curve: [{
			lvl: 1,
			a: 7
		}, {
			lvl: 6,
			a: 25
		}, {
			lvl: 12,
			a: 15
		}, {
			lvl: 22,
			a: 9
		}, {
			lvl: 35,
			a: 29
		}, {
			lvl: 53,
			a: 17
		}, {
			lvl: 14,
			e: 26
		}],
		flavorText: "Don't let the size of Flikflit fool you... they are lightning fast and impossible to catch."
	},
	26: {
		ID: 26,
		name: "Serrazag",
		R: 2,
		element: "ice",
		effects: [9, 45],
		life: "C+",
		power: "C",
		growth: "C-",
		curve: [{
			lvl: 1,
			a: 7
		}, {
			lvl: 6,
			a: 25
		}, {
			lvl: 12,
			a: 21
		}, {
			lvl: 24,
			a: 9
		}, {
			lvl: 37,
			a: 29
		}, {
			lvl: 57,
			a: 23
		}],
		flavorText: "The female Serrazag freezes the air around her to create ice tunnels to protect her from danger."
	},
	27: {
		ID: 27,
		name: "Sprite",
		element: "fire",
		effects: [3, 12, 51],
		life: "B-",
		power: "C",
		growth: "C+",
		curve: [{
			lvl: 1,
			a: 1
		}, {
			lvl: 6,
			a: 25
		}, {
			lvl: 12,
			a: 3
		}, {
			lvl: 22,
			a: 27
		}, {
			lvl: 35,
			a: 5
		}, {
			lvl: 53,
			a: 29
		}, {
			lvl: 14,
			e: 28
		}],
		flavorText: "Sprites are tiny insects, capable of producing melodies through their flute-like mouths."
	},
	28: {
		ID: 28,
		name: "Serrazig",
		R: 2,
		element: "fire",
		effects: [3, 12, 51],
		life: "B+",
		power: "C",
		growth: "C-",
		curve: [{
			lvl: 1,
			a: 1
		}, {
			lvl: 6,
			a: 25
		}, {
			lvl: 12,
			a: 3
		}, {
			lvl: 24,
			a: 27
		}, {
			lvl: 37,
			a: 5
		}, {
			lvl: 57,
			a: 29
		}],
		flavorText: "The male Serrazig uses his thick tail to steer himself through the sky, much like a rudder on a boat."
	},
	29: {
		ID: 29,
		name: "Pomprikle",
		element: "earth",
		effects: [6, 45],
		life: "B",
		power: "C",
		growth: "C",
		curve: [{
			lvl: 1,
			a: 13
		}, {
			lvl: 6,
			a: 25
		}, {
			lvl: 12,
			a: 15
		}, {
			lvl: 23,
			a: 27
		}, {
			lvl: 36,
			a: 17
		}, {
			lvl: 55,
			a: 29
		}, {
			lvl: 16,
			e: 30
		}],
		flavorText: "The quills on the Pomprikle's body react to stress, and can be very dangerous when scared or excited."
	},
	30: {
		ID: 30,
		name: "Spindle",
		R: 2,
		element: "earth",
		effects: [6, 45],
		life: "B+",
		power: "C",
		growth: "C-",
		curve: [{
			lvl: 1,
			a: 13
		}, {
			lvl: 6,
			a: 25
		}, {
			lvl: 12,
			a: 15
		}, {
			lvl: 24,
			a: 27
		}, {
			lvl: 37,
			a: 17
		}, {
			lvl: 57,
			a: 29
		}],
		flavorText: "Spindles have strong arms, and often collect small junk to throw at their enemies if bothered."
	},
	31: {
		ID: 31,
		name: "Muckster",
		R: 2,
		element: "earth",
		effects: [6, 45],
		life: "B",
		power: "C",
		growth: "B",
		curve: [{
			lvl: 1,
			a: 13
		}, {
			lvl: 5,
			a: 14
		}, {
			lvl: 10,
			a: 15
		}, {
			lvl: 20,
			a: 16
		}, {
			lvl: 32,
			a: 17
		}, {
			lvl: 50,
			a: 18
		}],
		flavorText: "Mucksters are very friendly, and will always water your plants when you are away from home."
	},
	32: {
		ID: 32,
		name: "Sprike",
		R: 5,
		element: "earth",
		effects: [6, 45],
		life: "A-",
		power: "B",
		growth: "D",
		curve: [{
			lvl: 1,
			a: 13
		}, {
			lvl: 7,
			a: 26
		}, {
			lvl: 14,
			a: 15
		}, {
			lvl: 26,
			a: 28
		}, {
			lvl: 40,
			a: 17
		}, {
			lvl: 60,
			a: 30
		}],
		flavorText: "Sprikes are very antisocial creatures, and tend to spend most of their time avoiding everything."
	},
	33: {
		ID: 33,
		name: "Aquaster",
		R: 2,
		element: "water",
		effects: [0, 57, 54],
		life: "B",
		power: "C",
		growth: "B",
		curve: [{
			lvl: 1,
			a: 7
		}, {
			lvl: 5,
			a: 8
		}, {
			lvl: 10,
			a: 9
		}, {
			lvl: 20,
			a: 10
		}, {
			lvl: 32,
			a: 11
		}, {
			lvl: 50,
			a: 12
		}],
		flavorText: "The Aquaster's tail holds the water used for its spells and feels like a full water balloon."
	},
	34: {
		ID: 34,
		name: "Hotpot",
		R: 3,
		element: "fire",
		effects: [3, 12, 51],
		life: "A",
		power: "A",
		growth: "F-",
		curve: [{
			lvl: 1,
			a: 2
		}, {
			lvl: 9,
			a: 26
		}, {
			lvl: 18,
			a: 4
		}, {
			lvl: 33,
			a: 28
		}, {
			lvl: 49,
			a: 6
		}, {
			lvl: 72,
			a: 30
		}],
		flavorText: "Hotpots are not actually stoves, but actually monsters hiding inside discarded stoves."
	},
	35: {
		ID: 35,
		name: "Mystyyk",
		R: 5,
		element: "storm",
		effects: [6, 48],
		life: "B",
		power: "B",
		growth: "B+",
		curve: [{
			lvl: 1,
			a: 25
		}, {
			lvl: 5,
			a: 26
		}, {
			lvl: 10,
			a: 27
		}, {
			lvl: 19,
			a: 28
		}, {
			lvl: 31,
			a: 29
		}, {
			lvl: 48,
			a: 30
		}],
		flavorText: "The legendary Mystyyk is hard to tame, as it has difficulty trusting new people."
	},
	36: {
		ID: 36,
		name: "Mystile",
		R: 5,
		element: "earth",
		effects: [6, 45],
		life: "B",
		power: "B",
		growth: "B+",
		curve: [{
			lvl: 1,
			a: 13
		}, {
			lvl: 5,
			a: 14
		}, {
			lvl: 10,
			a: 15
		}, {
			lvl: 19,
			a: 16
		}, {
			lvl: 31,
			a: 17
		}, {
			lvl: 48,
			a: 18
		}],
		flavorText: "Mystiles are often found prancing and playing in Firefly Forest."
	},
	37: {
		ID: 37,
		name: "Mystember",
		R: 5,
		element: "fire",
		effects: [3, 12, 51],
		life: "B",
		power: "B",
		growth: "B+",
		curve: [{
			lvl: 1,
			a: 1
		}, {
			lvl: 5,
			a: 2
		}, {
			lvl: 10,
			a: 3
		}, {
			lvl: 19,
			a: 4
		}, {
			lvl: 31,
			a: 5
		}, {
			lvl: 48,
			a: 6
		}],
		flavorText: "Students often recall seeing this dark horse in their dreams, which gives it its name."
	},
	38: {
		ID: 38,
		name: "Emburn",
		element: "fire",
		effects: [3, 12, 51],
		life: "B",
		power: "B",
		growth: "B",
		curve: [{
			lvl: 1,
			a: 1
		}, {
			lvl: 5,
			a: 2
		}, {
			lvl: 10,
			a: 3
		}, {
			lvl: 20,
			a: 4
		}, {
			lvl: 32,
			a: 5
		}, {
			lvl: 50,
			a: 6
		}, {
			lvl: 18,
			e: 39
		}],
		flavorText: "An Emburn's tail flickers like a candle, and is easily seen in the dark of night. "
	},
	39: {
		ID: 39,
		name: "Liosen",
		R: 2,
		element: "fire",
		effects: [3, 12, 51],
		life: "A-",
		power: "B",
		growth: "C",
		curve: [{
			lvl: 1,
			a: 1
		}, {
			lvl: 6,
			a: 14
		}, {
			lvl: 12,
			a: 3
		}, {
			lvl: 23,
			a: 16
		}, {
			lvl: 36,
			a: 5
		}, {
			lvl: 55,
			a: 18
		}],
		flavorText: "Liosen is Prince of the Forest, but is only considered King when it wears a Forest Emerald."
	},
	40: {
		ID: 40,
		name: "Snoots",
		element: "storm",
		effects: [6, 48],
		life: "B+",
		power: "A",
		growth: "D+",
		curve: [{
			lvl: 1,
			a: 26
		}, {
			lvl: 7,
			a: 20
		}, {
			lvl: 14,
			a: 28
		}, {
			lvl: 25,
			a: 22
		}, {
			lvl: 39,
			a: 30
		}, {
			lvl: 58,
			a: 24
		}, {
			lvl: 18,
			e: 41
		}],
		flavorText: "A Snoots is hard to impress...ite always claims to know everything before it was cool."
	},
	41: {
		ID: 41,
		name: "Highfawn",
		R: 2,
		element: "storm",
		effects: [6, 48],
		life: "B+",
		power: "A",
		growth: "D",
		curve: [{
			lvl: 1,
			a: 26
		}, {
			lvl: 7,
			a: 14
		}, {
			lvl: 14,
			a: 28
		}, {
			lvl: 26,
			a: 16
		}, {
			lvl: 40,
			a: 30
		}, {
			lvl: 60,
			a: 18
		}, {
			lvl: 32,
			e: 42
		}],
		flavorText: "The Highfawn prides itself on its razor sharp talons, giant wing span, and tremendous modesty."
	},
	42: {
		ID: 42,
		name: "Gloricious",
		element: "storm",
		effects: [6, 48],
		life: "B+",
		power: "A",
		growth: "D-",
		curve: [{
			lvl: 1,
			a: 25
		}, {
			lvl: 7,
			a: 26
		}, {
			lvl: 14,
			a: 27
		}, {
			lvl: 27,
			a: 28
		}, {
			lvl: 41,
			a: 29
		}, {
			lvl: 62,
			a: 30
		}],
		flavorText: "Known as the King of Peaks, the Gloricious banished the Highfawn to the forest for not using a coaster."
	},
	43: {
		ID: 43,
		name: "Evolotus",
		element: "storm",
		effects: [6, 48],
		life: "C-",
		power: "B",
		growth: "A+",
		curve: [{
			lvl: 1,
			a: 25
		}, {
			lvl: 4,
			a: 14
		}, {
			lvl: 8,
			a: 27
		}, {
			lvl: 16,
			a: 16
		}, {
			lvl: 27,
			a: 29
		}, {
			lvl: 43,
			a: 18
		}, {
			lvl: 14,
			e: 44
		}],
		flavorText: "Due to their hybrid nature, Evolotuses look like flowers, sting like bees, and soar like Browls."
	},
	44: {
		ID: 44,
		name: "Prodraxis",
		R: 2,
		element: "storm",
		effects: [6, 48],
		life: "C+",
		power: "B",
		growth: "A-",
		curve: [{
			lvl: 1,
			a: 25
		}, {
			lvl: 4,
			a: 8
		}, {
			lvl: 8,
			a: 27
		}, {
			lvl: 18,
			a: 10
		}, {
			lvl: 29,
			a: 29
		}, {
			lvl: 47,
			a: 12
		}],
		flavorText: "It's rumored that the Prodraxis was an abandoned Ice Dragon baby that was raised by a pack of Snoots."
	},
	45: {
		ID: 45,
		name: "Flameger",
		element: "fire",
		effects: [3, 12, 51],
		life: "B",
		power: "C",
		growth: "A-",
		curve: [{
			lvl: 1,
			a: 1
		}, {
			lvl: 4,
			a: 25
		}, {
			lvl: 8,
			a: 3
		}, {
			lvl: 18,
			a: 27
		}, {
			lvl: 29,
			a: 5
		}, {
			lvl: 47,
			a: 29
		}],
		flavorText: "On the warmest summer days, Flamegers can be seen playing in the morning sun, glowing brightly."
	},
	46: {
		ID: 46,
		name: "Gnawdy",
		element: "water",
		effects: [0, 57, 54],
		life: "B-",
		power: "B",
		growth: "B",
		curve: [{
			lvl: 1,
			a: 7
		}, {
			lvl: 5,
			a: 26
		}, {
			lvl: 10,
			a: 9
		}, {
			lvl: 20,
			a: 28
		}, {
			lvl: 32,
			a: 11
		}, {
			lvl: 50,
			a: 30
		}, {
			lvl: 28,
			e: 47
		}],
		flavorText: "Unlike sharks, Gnawdys can leave water for short periods of time, hunting prey in and out of water."
	},
	47: {
		ID: 47,
		name: "Crookfang",
		R: 2,
		element: "water",
		effects: [0, 57, 54],
		life: "B",
		power: "B",
		growth: "C-",
		curve: [{
			lvl: 1,
			a: 7
		}, {
			lvl: 6,
			a: 26
		}, {
			lvl: 12,
			a: 9
		}, {
			lvl: 24,
			a: 28
		}, {
			lvl: 37,
			a: 11
		}, {
			lvl: 57,
			a: 30
		}],
		flavorText: "The jaws of a Crookfang are so sharp that they can cut steel, and most researchers avoid them completely."
	},
	48: {
		ID: 48,
		name: "Ashlet",
		element: "fire",
		effects: [3, 12, 51],
		life: "B-",
		power: "A",
		growth: "C",
		curve: [{
			lvl: 1,
			a: 2
		}, {
			lvl: 6,
			a: 26
		}, {
			lvl: 12,
			a: 4
		}, {
			lvl: 23,
			a: 28
		}, {
			lvl: 36,
			a: 6
		}, {
			lvl: 55,
			a: 30
		}, {
			lvl: 32,
			e: 49
		}],
		flavorText: "The feathers of an Ashlet are said to bring good luck, but unfortunately are too hot to touch."
	},
	49: {
		ID: 49,
		name: "Smoldash",
		R: 2,
		element: "fire",
		effects: [3, 12, 51],
		life: "B",
		power: "A",
		growth: "C-",
		curve: [{
			lvl: 1,
			a: 2
		}, {
			lvl: 6,
			a: 26
		}, {
			lvl: 12,
			a: 4
		}, {
			lvl: 24,
			a: 28
		}, {
			lvl: 37,
			a: 6
		}, {
			lvl: 57,
			a: 30
		}],
		flavorText: "The temperatures given off by the wings of a Smoldash are hot enough to boil water, and have been even known to melt some metals."
	},
	50: {
		ID: 50,
		name: "Arcticlaw",
		element: "ice",
		effects: [9, 45],
		life: "B",
		power: "A",
		growth: "C-",
		curve: [{
			lvl: 1,
			a: 20
		}, {
			lvl: 6,
			a: 8
		}, {
			lvl: 12,
			a: 22
		}, {
			lvl: 24,
			a: 10
		}, {
			lvl: 37,
			a: 24
		}, {
			lvl: 57,
			a: 12
		}, {
			lvl: 25,
			e: 51
		}],
		flavorText: "Arcticlaws are one of the most loyal and protective pets. If you can befriend one, that is."
	},
	51: {
		ID: 51,
		name: "Frostfang",
		R: 2,
		element: "ice",
		effects: [9, 45],
		life: "B",
		power: "A",
		growth: "C-",
		curve: [{
			lvl: 1,
			a: 20
		}, {
			lvl: 6,
			a: 8
		}, {
			lvl: 12,
			a: 22
		}, {
			lvl: 24,
			a: 10
		}, {
			lvl: 37,
			a: 24
		}, {
			lvl: 57,
			a: 12
		}],
		flavorText: "Frostfangs are so in touch with the cold that they can manipulate the ice to form stylish armor."
	},
	52: {
		ID: 52,
		name: "Saplette",
		element: "earth",
		effects: [6, 45],
		life: "B-",
		power: "C",
		growth: "B+",
		curve: [{
			lvl: 1,
			a: 13
		}, {
			lvl: 5,
			a: 7
		}, {
			lvl: 10,
			a: 15
		}, {
			lvl: 19,
			a: 9
		}, {
			lvl: 31,
			a: 17
		}, {
			lvl: 48,
			a: 11
		}, {
			lvl: 16,
			e: 53
		}],
		flavorText: "Since Saplettes can't move around, they develop strange personalities and senses of humor."
	},
	53: {
		ID: 53,
		name: "Arboreal",
		R: 2,
		element: "earth",
		effects: [6, 45],
		life: "B",
		power: "C",
		growth: "B",
		curve: [{
			lvl: 1,
			a: 13
		}, {
			lvl: 5,
			a: 7
		}, {
			lvl: 10,
			a: 15
		}, {
			lvl: 20,
			a: 9
		}, {
			lvl: 32,
			a: 17
		}, {
			lvl: 50,
			a: 11
		}, {
			lvl: 36,
			e: 54
		}],
		flavorText: "Arboreals grow much quicker than trees in the forest. They're also known to trip students in the forest with their long roots, just for fun."
	},
	54: {
		ID: 54,
		name: "Vinequeen",
		R: 5,
		element: "earth",
		effects: [6, 45],
		life: "B",
		power: "B",
		growth: "C",
		curve: [{
			lvl: 1,
			a: 13
		}, {
			lvl: 6,
			a: 8
		}, {
			lvl: 12,
			a: 15
		}, {
			lvl: 23,
			a: 10
		}, {
			lvl: 36,
			a: 17
		}, {
			lvl: 55,
			a: 12
		}],
		flavorText: "As they cannot move fast, Vinequeens rely on their wits to convince others to do their bidding."
	},
	55: {
		ID: 55,
		name: "Truckle",
		element: "earth",
		effects: [6, 45],
		life: "B",
		power: "B",
		growth: "B",
		curve: [{
			lvl: 1,
			a: 13
		}, {
			lvl: 5,
			a: 14
		}, {
			lvl: 10,
			a: 15
		}, {
			lvl: 20,
			a: 16
		}, {
			lvl: 32,
			a: 17
		}, {
			lvl: 50,
			a: 18
		}],
		flavorText: "Most people do not consider Truckles to be worthy opponents, but if you corner one, it will do anything to get past you."
	},
	56: {
		ID: 56,
		name: "Cloud Nibbler",
		element: "storm",
		effects: [6, 48],
		life: "B",
		power: "B",
		growth: "B",
		curve: [{
			lvl: 1,
			a: 25
		}, {
			lvl: 4,
			a: 14
		}, {
			lvl: 8,
			a: 27
		}, {
			lvl: 16,
			a: 16
		}, {
			lvl: 27,
			a: 29
		}, {
			lvl: 43,
			a: 18
		}, {
			lvl: 35,
			e: 57
		}],
		flavorText: "Due to their size and shape, Cloud Nibblers are often mistaken for balloons, floating among the clouds."
	},
	57: {
		ID: 57,
		name: "Cloud Gobbler",
		R: 2,
		element: "storm",
		effects: [6, 48],
		life: "A",
		power: "B",
		growth: "A+",
		curve: [{
			lvl: 1,
			a: 25
		}, {
			lvl: 4,
			a: 14
		}, {
			lvl: 8,
			a: 27
		}, {
			lvl: 16,
			a: 16
		}, {
			lvl: 25,
			a: 29
		}, {
			lvl: 34,
			a: 18
		}],
		flavorText: "Cloud Gobblers live off the moisture in the clouds, flying around with their mouth open, chomping on the open air."
	},
	58: {
		ID: 58,
		name: "Ivory Truckle",
		R: 5,
		element: "earth",
		effects: [6, 45],
		life: "B+",
		power: "B",
		growth: "B-",
		curve: [{
			lvl: 1,
			a: 13
		}, {
			lvl: 5,
			a: 26
		}, {
			lvl: 10,
			a: 15
		}, {
			lvl: 21,
			a: 28
		}, {
			lvl: 33,
			a: 17
		}, {
			lvl: 52,
			a: 30
		}],
		flavorText: "The Ivory Truckle is a rare sight in the forest... usually found only by the most skilled trackers."
	},
	59: {
		ID: 59,
		name: "TripTrop",
		element: "earth",
		effects: [6, 45],
		life: "B",
		power: "B",
		growth: "B",
		curve: [{
			lvl: 1,
			a: 13
		}, {
			lvl: 5,
			a: 14
		}, {
			lvl: 10,
			a: 15
		}, {
			lvl: 20,
			a: 16
		}, {
			lvl: 32,
			a: 17
		}, {
			lvl: 50,
			a: 18
		}, {
			lvl: 14,
			e: 60
		}],
		flavorText: "The sound of music in the forest usually indicates a Triptrop is nearby. They are nimble creatures, and love a good challenge."
	},
	60: {
		ID: 60,
		name: "ClipClop",
		R: 2,
		element: "earth",
		effects: [6, 45],
		life: "B+",
		power: "B",
		growth: "B-",
		curve: [{
			lvl: 1,
			a: 13
		}, {
			lvl: 5,
			a: 14
		}, {
			lvl: 10,
			a: 15
		}, {
			lvl: 21,
			a: 16
		}, {
			lvl: 33,
			a: 17
		}, {
			lvl: 52,
			a: 18
		}],
		flavorText: "Unlike Triptrops, the music of a Clipclop is unpleasant, and most wizards cannot stand to listen to it for too long."
	},
	61: {
		ID: 61,
		name: "Dreamlet",
		R: 5,
		element: "earth",
		effects: [6, 45],
		life: "B-",
		power: "B",
		growth: "C+",
		curve: [{
			lvl: 1,
			a: 13
		}, {
			lvl: 6,
			a: 26
		}, {
			lvl: 12,
			a: 9
		}, {
			lvl: 22,
			a: 10
		}, {
			lvl: 35,
			a: 17
		}, {
			lvl: 53,
			a: 30
		}],
		flavorText: "Dreamlets are small, intelligent and wiry critters, and are considered rarer than diamonds."
	},
	62: {
		ID: 62,
		name: "Ivory ClipClop",
		R: 5,
		element: "ice",
		effects: [9, 45],
		life: "A-",
		power: "B",
		growth: "B",
		curve: [{
			lvl: 1,
			a: 19
		}, {
			lvl: 5,
			a: 20
		}, {
			lvl: 10,
			a: 21
		}, {
			lvl: 20,
			a: 22
		}, {
			lvl: 32,
			a: 23
		}, {
			lvl: 50,
			a: 24
		}],
		flavorText: "In rare cases, a Clipclop is born with white fur instead of grey. These creatures are considered good luck in the forest."
	},
	63: {
		ID: 63,
		name: "Flame Neek",
		element: "fire",
		effects: [3, 12, 51],
		life: "B-",
		power: "B",
		growth: "A",
		curve: [{
			lvl: 1,
			a: 1
		}, {
			lvl: 4,
			a: 2
		}, {
			lvl: 8,
			a: 3
		}, {
			lvl: 17,
			a: 4
		}, {
			lvl: 28,
			a: 5
		}, {
			lvl: 45,
			a: 6
		}, {
			lvl: 12,
			e: 64
		}],
		flavorText: "A Flame Neek is born from small flames, such as flickering candles or dying campfires in the forest."
	},
	64: {
		ID: 64,
		name: "Flame Caller",
		R: 2,
		element: "fire",
		effects: [3, 12, 51],
		life: "B",
		power: "B",
		growth: "A-",
		curve: [{
			lvl: 1,
			a: 1
		}, {
			lvl: 4,
			a: 2
		}, {
			lvl: 8,
			a: 3
		}, {
			lvl: 18,
			a: 4
		}, {
			lvl: 29,
			a: 5
		}, {
			lvl: 47,
			a: 6
		}, {
			lvl: 24,
			e: 65
		}],
		flavorText: "Flame Callers have mouths but choose not to speak - instead concocting their own language in flame."
	},
	65: {
		ID: 65,
		name: "Flame Creator",
		R: 5,
		element: "fire",
		effects: [3, 12, 51],
		life: "B+",
		power: "B",
		growth: "B+",
		curve: [{
			lvl: 1,
			a: 1
		}, {
			lvl: 5,
			a: 2
		}, {
			lvl: 10,
			a: 3
		}, {
			lvl: 19,
			a: 4
		}, {
			lvl: 31,
			a: 5
		}, {
			lvl: 48,
			a: 6
		}],
		flavorText: "The staff of a Flame Creator is very ordinary, but the fire magic produced from it is legendary."
	},
	66: {
		ID: 66,
		name: "River Neek",
		element: "water",
		effects: [0, 57, 54],
		life: "B-",
		power: "B",
		growth: "A",
		curve: [{
			lvl: 1,
			a: 7
		}, {
			lvl: 4,
			a: 8
		}, {
			lvl: 8,
			a: 9
		}, {
			lvl: 17,
			a: 10
		}, {
			lvl: 28,
			a: 11
		}, {
			lvl: 45,
			a: 12
		}, {
			lvl: 12,
			e: 67
		}],
		flavorText: "A newborn River Neek will hide in the shallows of ponds and rivers, blowing bubbles and teasing small fish."
	},
	67: {
		ID: 67,
		name: "River Caller",
		R: 2,
		element: "water",
		effects: [0, 57, 54],
		life: "B",
		power: "B",
		growth: "A-",
		curve: [{
			lvl: 1,
			a: 7
		}, {
			lvl: 4,
			a: 8
		}, {
			lvl: 8,
			a: 9
		}, {
			lvl: 18,
			a: 10
		}, {
			lvl: 29,
			a: 11
		}, {
			lvl: 47,
			a: 12
		}, {
			lvl: 24,
			e: 68
		}],
		flavorText: "The bottoms of large lakes are commonly filled with River Callers, who hold parties from time to time with the fish."
	},
	68: {
		ID: 68,
		name: "River Creator",
		R: 5,
		element: "water",
		effects: [0, 57, 54],
		life: "B+",
		power: "B",
		growth: "B+",
		curve: [{
			lvl: 1,
			a: 7
		}, {
			lvl: 5,
			a: 8
		}, {
			lvl: 10,
			a: 9
		}, {
			lvl: 19,
			a: 10
		}, {
			lvl: 31,
			a: 11
		}, {
			lvl: 48,
			a: 12
		}],
		flavorText: "River Creators grow attached to small bodies of water, and will replenish them in times of drought."
	},
	69: {
		ID: 69,
		name: "Forest Neek",
		element: "earth",
		effects: [6, 45],
		life: "B-",
		power: "B",
		growth: "A",
		curve: [{
			lvl: 1,
			a: 13
		}, {
			lvl: 4,
			a: 14
		}, {
			lvl: 8,
			a: 15
		}, {
			lvl: 17,
			a: 16
		}, {
			lvl: 28,
			a: 17
		}, {
			lvl: 45,
			a: 18
		}, {
			lvl: 12,
			e: 70
		}],
		flavorText: "Once born, a Forest Neek hides in the leaves of the trees, dropping acorns on the heads of passing wizards below."
	},
	70: {
		ID: 70,
		name: "Forest Caller",
		R: 2,
		element: "earth",
		effects: [6, 45],
		life: "B",
		power: "B",
		growth: "A-",
		curve: [{
			lvl: 1,
			a: 13
		}, {
			lvl: 4,
			a: 14
		}, {
			lvl: 8,
			a: 15
		}, {
			lvl: 18,
			a: 16
		}, {
			lvl: 29,
			a: 17
		}, {
			lvl: 47,
			a: 18
		}, {
			lvl: 24,
			e: 71
		}],
		flavorText: "Large gusts of wind may signify the presence of Forest Callers, which have the ability to 'ride' the winds."
	},
	71: {
		ID: 71,
		name: "Forest Creator",
		R: 5,
		element: "earth",
		effects: [6, 45],
		life: "B+",
		power: "B",
		growth: "B+",
		curve: [{
			lvl: 1,
			a: 13
		}, {
			lvl: 5,
			a: 14
		}, {
			lvl: 10,
			a: 15
		}, {
			lvl: 19,
			a: 16
		}, {
			lvl: 31,
			a: 17
		}, {
			lvl: 48,
			a: 18
		}],
		flavorText: "Forest Creators are not particularly smart and have terrible memories - but are kindhearted and use their magic to help others."
	},
	72: {
		ID: 72,
		name: "Cloud Neek",
		element: "storm",
		effects: [6, 48],
		life: "B-",
		power: "B",
		growth: "A",
		curve: [{
			lvl: 1,
			a: 25
		}, {
			lvl: 4,
			a: 26
		}, {
			lvl: 8,
			a: 27
		}, {
			lvl: 17,
			a: 28
		}, {
			lvl: 28,
			a: 29
		}, {
			lvl: 45,
			a: 30
		}, {
			lvl: 12,
			e: 73
		}],
		flavorText: "Born from the clouds on warm days, the Cloud Neek will hide in bushes and create small winds, blowing off wizard's hats."
	},
	73: {
		ID: 73,
		name: "Cloud Caller",
		R: 2,
		element: "storm",
		effects: [6, 48],
		life: "B",
		power: "B",
		growth: "A-",
		curve: [{
			lvl: 1,
			a: 25
		}, {
			lvl: 4,
			a: 26
		}, {
			lvl: 8,
			a: 27
		}, {
			lvl: 18,
			a: 28
		}, {
			lvl: 29,
			a: 29
		}, {
			lvl: 47,
			a: 30
		}, {
			lvl: 24,
			e: 74
		}],
		flavorText: "Cloud Callers grow tired of the forests and plains quickly, and ascend to the clouds at an early age."
	},
	74: {
		ID: 74,
		name: "Cloud Creator",
		R: 5,
		element: "storm",
		effects: [6, 48],
		life: "B+",
		power: "B",
		growth: "B+",
		curve: [{
			lvl: 1,
			a: 25
		}, {
			lvl: 5,
			a: 26
		}, {
			lvl: 10,
			a: 27
		}, {
			lvl: 19,
			a: 28
		}, {
			lvl: 31,
			a: 29
		}, {
			lvl: 48,
			a: 30
		}],
		flavorText: "When bored, Cloud Creators will often create thunderstorms on clear days, just to hear the thunder boom."
	},
	75: {
		ID: 75,
		name: "Puck",
		element: "fire",
		effects: [3, 12, 51],
		life: "C+",
		power: "B",
		growth: "A",
		curve: [{
			lvl: 1,
			a: 1
		}, {
			lvl: 4,
			a: 2
		}, {
			lvl: 8,
			a: 3
		}, {
			lvl: 17,
			a: 4
		}, {
			lvl: 28,
			a: 5
		}, {
			lvl: 45,
			a: 6
		}, {
			lvl: 15,
			e: 76
		}],
		flavorText: "These small imps are known to imitate different animal sounds, throwing hunters off their trails."
	},
	76: {
		ID: 76,
		name: "Flaria",
		R: 2,
		element: "fire",
		effects: [3, 12, 51],
		life: "B+",
		power: "B",
		growth: "B",
		curve: [{
			lvl: 1,
			a: 1
		}, {
			lvl: 5,
			a: 2
		}, {
			lvl: 10,
			a: 3
		}, {
			lvl: 20,
			a: 4
		}, {
			lvl: 32,
			a: 5
		}, {
			lvl: 50,
			a: 6
		}],
		flavorText: "Flarias can turn into flames at any time, but only do so when they get hungry."
	},
	78: {
		ID: 78,
		name: "Rascal",
		element: "ice",
		effects: [9, 45],
		life: "C",
		power: "B",
		growth: "A",
		curve: [{
			lvl: 1,
			a: 19
		}, {
			lvl: 4,
			a: 20
		}, {
			lvl: 8,
			a: 21
		}, {
			lvl: 17,
			a: 22
		}, {
			lvl: 28,
			a: 23
		}, {
			lvl: 45,
			a: 24
		}, {
			lvl: 15,
			e: 79
		}],
		flavorText: "Snowy summer days means a Rascal is close, likely stealing the numbers off of people's houses."
	},
	79: {
		ID: 79,
		name: "Shardic",
		R: 2,
		element: "ice",
		effects: [9, 45],
		life: "B",
		power: "B",
		growth: "B",
		curve: [{
			lvl: 1,
			a: 19
		}, {
			lvl: 5,
			a: 20
		}, {
			lvl: 10,
			a: 21
		}, {
			lvl: 20,
			a: 22
		}, {
			lvl: 32,
			a: 23
		}, {
			lvl: 50,
			a: 24
		}, {
			lvl: 30,
			e: 80
		}],
		flavorText: "Shardics are known for hiding in many cold places, and have even been found in freezers."
	},
	80: {
		ID: 80,
		name: "Keeper",
		R: 5,
		element: "ice",
		effects: [9, 45],
		life: "A",
		power: "B",
		growth: "C",
		curve: [{
			lvl: 1,
			a: 19
		}, {
			lvl: 6,
			a: 8
		}, {
			lvl: 12,
			a: 21
		}, {
			lvl: 23,
			a: 10
		}, {
			lvl: 36,
			a: 23
		}, {
			lvl: 55,
			a: 12
		}],
		flavorText: "People often mistake Keepers for granite gargoyles, as they often sit motionless for days."
	},
	81: {
		ID: 81,
		name: "Scally",
		element: "earth",
		effects: [6, 45],
		life: "C+",
		power: "B",
		growth: "A",
		curve: [{
			lvl: 1,
			a: 13
		}, {
			lvl: 4,
			a: 14
		}, {
			lvl: 8,
			a: 15
		}, {
			lvl: 17,
			a: 16
		}, {
			lvl: 28,
			a: 17
		}, {
			lvl: 45,
			a: 18
		}, {
			lvl: 15,
			e: 82
		}],
		flavorText: "All Scallies are slow and always sleepy, but move fastest when it's time to eat."
	},
	82: {
		ID: 82,
		name: "Fissural",
		R: 2,
		element: "earth",
		effects: [6, 45],
		life: "B+",
		power: "B",
		growth: "B",
		curve: [{
			lvl: 1,
			a: 13
		}, {
			lvl: 5,
			a: 14
		}, {
			lvl: 10,
			a: 15
		}, {
			lvl: 20,
			a: 16
		}, {
			lvl: 32,
			a: 17
		}, {
			lvl: 50,
			a: 18
		}, {
			lvl: 30,
			e: 83
		}],
		flavorText: "Fissurals are picky eaters, and will only eat vegetables that are organically grown."
	},
	83: {
		ID: 83,
		name: "Sentinel",
		R: 5,
		element: "earth",
		effects: [6, 45],
		life: "A+",
		power: "B",
		growth: "C",
		curve: [{
			lvl: 1,
			a: 13
		}, {
			lvl: 6,
			a: 14
		}, {
			lvl: 12,
			a: 15
		}, {
			lvl: 23,
			a: 16
		}, {
			lvl: 36,
			a: 17
		}, {
			lvl: 55,
			a: 18
		}],
		flavorText: "People often mistake Sentinels for stone gargoyles, as they often sit motionless for days."
	},
	84: {
		ID: 84,
		name: "Hob",
		element: "storm",
		effects: [6, 48],
		life: "C",
		power: "B",
		growth: "A",
		curve: [{
			lvl: 1,
			a: 25
		}, {
			lvl: 4,
			a: 26
		}, {
			lvl: 8,
			a: 27
		}, {
			lvl: 17,
			a: 28
		}, {
			lvl: 28,
			a: 29
		}, {
			lvl: 45,
			a: 30
		}, {
			lvl: 15,
			e: 85
		}],
		flavorText: "Hobs are very mischievious creatures, and have the odd habit of moving around furniture."
	},
	85: {
		ID: 85,
		name: "Wick",
		R: 2,
		element: "storm",
		effects: [6, 48],
		life: "B",
		power: "B",
		growth: "B",
		curve: [{
			lvl: 1,
			a: 25
		}, {
			lvl: 5,
			a: 26
		}, {
			lvl: 10,
			a: 27
		}, {
			lvl: 20,
			a: 28
		}, {
			lvl: 32,
			a: 29
		}, {
			lvl: 50,
			a: 30
		}, {
			lvl: 30,
			e: 86
		}],
		flavorText: "Wicks cannot fly, but instead spend their time building artificial wings and flying machines."
	},
	86: {
		ID: 86,
		name: "Nebulite",
		R: 5,
		element: "storm",
		effects: [6, 48],
		life: "A",
		power: "B",
		growth: "C",
		curve: [{
			lvl: 1,
			a: 25
		}, {
			lvl: 6,
			a: 26
		}, {
			lvl: 12,
			a: 27
		}, {
			lvl: 23,
			a: 28
		}, {
			lvl: 36,
			a: 29
		}, {
			lvl: 55,
			a: 30
		}],
		flavorText: "People often mistake Nebulites for marble gargoyles, as they often sit motionless for days."
	},
	87: {
		ID: 87,
		name: "Squally",
		element: "ice",
		effects: [9, 45],
		life: "B",
		power: "B",
		growth: "B",
		curve: [{
			lvl: 1,
			a: 19
		}, {
			lvl: 5,
			a: 20
		}, {
			lvl: 10,
			a: 21
		}, {
			lvl: 20,
			a: 22
		}, {
			lvl: 32,
			a: 23
		}, {
			lvl: 50,
			a: 24
		}, {
			lvl: 15,
			e: 88
		}],
		flavorText: "Snowmen made by students often become enchanted, sometimes turning into Squallies."
	},
	88: {
		ID: 88,
		name: "Tempest",
		R: 2,
		element: "ice",
		effects: [9, 45],
		life: "B+",
		power: "B",
		growth: "C",
		curve: [{
			lvl: 1,
			a: 19
		}, {
			lvl: 6,
			a: 14
		}, {
			lvl: 12,
			a: 21
		}, {
			lvl: 23,
			a: 16
		}, {
			lvl: 36,
			a: 23
		}, {
			lvl: 55,
			a: 18
		}, {
			lvl: 30,
			e: 89
		}],
		flavorText: "Tempests love to play tricks, hiding as snowmen and taking student's hats."
	},
	89: {
		ID: 89,
		name: "Flurrious",
		R: 5,
		element: "ice",
		effects: [9, 45],
		life: "A",
		power: "B",
		growth: "D",
		curve: [{
			lvl: 1,
			a: 19
		}, {
			lvl: 7,
			a: 14
		}, {
			lvl: 14,
			a: 21
		}, {
			lvl: 26,
			a: 4
		}, {
			lvl: 40,
			a: 17
		}, {
			lvl: 60,
			a: 6
		}],
		flavorText: "Though they look mean, Flurrious are known for leading lost students down the mountain."
	},
	90: {
		ID: 90,
		name: "Cloaker",
		element: "storm",
		effects: [6, 48],
		life: "A-",
		power: "C",
		growth: "B",
		curve: [{
			lvl: 1,
			a: 25
		}, {
			lvl: 5,
			a: 26
		}, {
			lvl: 10,
			a: 27
		}, {
			lvl: 20,
			a: 28
		}, {
			lvl: 32,
			a: 29
		}, {
			lvl: 50,
			a: 30
		}, {
			lvl: 18,
			e: 91
		}],
		flavorText: "Cloakers are ghosts known to wear old clothing they find lying about, and grow attached to these rags."
	},
	91: {
		ID: 91,
		name: "Arbite",
		R: 2,
		element: "storm",
		effects: [6, 48],
		life: "A",
		power: "C",
		growth: "B",
		curve: [{
			lvl: 1,
			a: 25
		}, {
			lvl: 5,
			a: 26
		}, {
			lvl: 10,
			a: 27
		}, {
			lvl: 20,
			a: 28
		}, {
			lvl: 32,
			a: 29
		}, {
			lvl: 50,
			a: 30
		}],
		flavorText: "Contrary to popular belief, Arbites cannot fly through walls - and in fact are quite clumsy in the dark."
	},
	92: {
		ID: 92,
		name: "Shade",
		R: 5,
		element: "earth",
		effects: [6, 45],
		life: "A-",
		power: "C",
		growth: "B",
		curve: [{
			lvl: 1,
			a: 13
		}, {
			lvl: 5,
			a: 14
		}, {
			lvl: 10,
			a: 15
		}, {
			lvl: 20,
			a: 16
		}, {
			lvl: 32,
			a: 17
		}, {
			lvl: 50,
			a: 18
		}, {
			lvl: 18,
			e: 93
		}],
		flavorText: "Sometimes, a Cloaker chooses a cloak and bonds with it, making the Cloaker more powerful and becoming a Shade instead."
	},
	93: {
		ID: 93,
		name: "Spectral",
		R: 4,
		element: "earth",
		effects: [6, 45],
		life: "A",
		power: "C",
		growth: "B",
		curve: [{
			lvl: 1,
			a: 13
		}, {
			lvl: 5,
			a: 25
		}, {
			lvl: 10,
			a: 15
		}, {
			lvl: 20,
			a: 27
		}, {
			lvl: 32,
			a: 17
		}, {
			lvl: 50,
			a: 29
		}],
		flavorText: "Spectrals can often be seen flying at midnight, attracted to the moon like moths to a lightbulb."
	},
	94: {
		ID: 94,
		name: "Burnewt",
		element: "fire",
		effects: [3, 12, 51],
		life: "C-",
		power: "B",
		growth: "B+",
		curve: [{
			lvl: 1,
			a: 1
		}, {
			lvl: 5,
			a: 2
		}, {
			lvl: 10,
			a: 3
		}, {
			lvl: 19,
			a: 4
		}, {
			lvl: 31,
			a: 5
		}, {
			lvl: 48,
			a: 6
		}, {
			lvl: 20,
			e: 95
		}],
		flavorText: "Though slow-moving, the Burnewt can emit bursts of steam to ward off attackers, like a boiling teapot."
	},
	95: {
		ID: 95,
		name: "Singenewt",
		R: 2,
		element: "fire",
		effects: [3, 12, 51],
		life: "C",
		power: "B",
		growth: "B+",
		curve: [{
			lvl: 1,
			a: 1
		}, {
			lvl: 5,
			a: 2
		}, {
			lvl: 10,
			a: 3
		}, {
			lvl: 19,
			a: 4
		}, {
			lvl: 31,
			a: 5
		}, {
			lvl: 48,
			a: 6
		}, {
			lvl: 32,
			e: 96
		}],
		flavorText: "Over time, a Burnewt's body becomes hotter and hotter, changing it into a Singenewt."
	},
	96: {
		ID: 96,
		name: "Infernewt",
		R: 5,
		element: "fire",
		effects: [3, 12, 51],
		life: "C+",
		power: "B",
		growth: "C+",
		curve: [{
			lvl: 1,
			a: 1
		}, {
			lvl: 6,
			a: 26
		}, {
			lvl: 12,
			a: 3
		}, {
			lvl: 22,
			a: 28
		}, {
			lvl: 35,
			a: 5
		}, {
			lvl: 53,
			a: 30
		}, {
			lvl: 45,
			e: 97
		}],
		flavorText: "Infernewts are often mistaken for baby dragons in the mountains - but cannot fly, roar or breathe fire."
	},
	97: {
		ID: 97,
		name: "Embershed",
		R: 5,
		element: "fire",
		effects: [3, 12, 51],
		life: "A",
		power: "A",
		growth: "F-",
		curve: [{
			lvl: 1,
			a: 2
		}, {
			lvl: 9,
			a: 26
		}, {
			lvl: 18,
			a: 4
		}, {
			lvl: 33,
			a: 28
		}, {
			lvl: 49,
			a: 6
		}, {
			lvl: 72,
			a: 30
		}],
		flavorText: "Embersheds are rare in the mountains, as they spend most of their lives in caves, reading and perfecting many languages."
	},
	98: {
		ID: 98,
		name: "Mimic",
		R: 5,
		element: "water",
		effects: [0, 57, 54],
		life: "B+",
		power: "B",
		growth: "B-",
		curve: [{
			lvl: 1,
			a: 7
		}, {
			lvl: 5,
			a: 8
		}, {
			lvl: 10,
			a: 9
		}, {
			lvl: 21,
			a: 10
		}, {
			lvl: 33,
			a: 11
		}, {
			lvl: 52,
			a: 12
		}],
		flavorText: "Look out! Not all treasure chests are full of treasure... sometimes, a Mimic is hiding inside instead!"
	},
	99: {
		ID: 99,
		name: "Funkeel",
		element: "water",
		effects: [0, 57, 54],
		life: "B+",
		power: "B",
		growth: "B",
		curve: [{
			lvl: 1,
			a: 7
		}, {
			lvl: 5,
			a: 8
		}, {
			lvl: 10,
			a: 9
		}, {
			lvl: 20,
			a: 10
		}, {
			lvl: 32,
			a: 11
		}, {
			lvl: 50,
			a: 12
		}, {
			lvl: 14,
			e: 100
		}],
		flavorText: "This tiny serpent gives off a distinct glow as it moves underwater, tricking predators into believing it is a piece of metal."
	},
	100: {
		ID: 100,
		name: "Beneel",
		R: 2,
		element: "water",
		effects: [0, 57, 54],
		life: "A-",
		power: "B",
		growth: "B-",
		curve: [{
			lvl: 1,
			a: 7
		}, {
			lvl: 5,
			a: 8
		}, {
			lvl: 10,
			a: 9
		}, {
			lvl: 21,
			a: 10
		}, {
			lvl: 33,
			a: 11
		}, {
			lvl: 52,
			a: 12
		}, {
			lvl: 28,
			e: 101
		}],
		flavorText: "Funkeels grow quickly into Beneels, which swim to the depths of the ocean in order to grow larger and larger."
	},
	101: {
		ID: 101,
		name: "Fathom",
		R: 4,
		element: "water",
		effects: [0, 57, 54],
		life: "A",
		power: "B",
		growth: "C+",
		curve: [{
			lvl: 1,
			a: 7
		}, {
			lvl: 6,
			a: 8
		}, {
			lvl: 12,
			a: 9
		}, {
			lvl: 22,
			a: 10
		}, {
			lvl: 35,
			a: 11
		}, {
			lvl: 53,
			a: 12
		}],
		flavorText: "Fathoms are the largest known monster at the Academy. They rarely surface from the ocean depths, returning only to watch passing ships."
	},
	102: {
		ID: 102,
		name: "Squibble",
		element: "water",
		effects: [0, 57, 54],
		life: "B-",
		power: "B",
		growth: "A-",
		curve: [{
			lvl: 1,
			a: 7
		}, {
			lvl: 4,
			a: 8
		}, {
			lvl: 8,
			a: 9
		}, {
			lvl: 18,
			a: 10
		}, {
			lvl: 29,
			a: 11
		}, {
			lvl: 47,
			a: 12
		}, {
			lvl: 12,
			e: 103
		}],
		flavorText: "The gem on a Squibble's head is known to be good luck, and is often the target of fishermen."
	},
	103: {
		ID: 103,
		name: "Squabble",
		R: 2,
		element: "water",
		effects: [0, 57, 54],
		life: "B",
		power: "B",
		growth: "B+",
		curve: [{
			lvl: 1,
			a: 7
		}, {
			lvl: 5,
			a: 8
		}, {
			lvl: 10,
			a: 9
		}, {
			lvl: 19,
			a: 10
		}, {
			lvl: 31,
			a: 11
		}, {
			lvl: 48,
			a: 12
		}, {
			lvl: 24,
			e: 104
		}],
		flavorText: "Squabbles, unlike Squibbles, are known to challenge other Squabbles over territory and favorite sports teams."
	},
	104: {
		ID: 104,
		name: "Squarrel",
		R: 5,
		element: "water",
		effects: [0, 57, 54],
		life: "B+",
		power: "B",
		growth: "B-",
		curve: [{
			lvl: 1,
			a: 7
		}, {
			lvl: 5,
			a: 8
		}, {
			lvl: 10,
			a: 9
		}, {
			lvl: 21,
			a: 10
		}, {
			lvl: 33,
			a: 11
		}, {
			lvl: 52,
			a: 12
		}],
		flavorText: "A Squarrel spends Sundays squabbling with Squibbles and Saturdays skulking with Squabbles."
	},
	105: {
		ID: 105,
		name: "Trampel",
		member: !0,
		R: 2,
		element: "water",
		effects: [0, 57, 54],
		life: "B",
		power: "B",
		growth: "B-",
		curve: [{
			lvl: 1,
			a: 7
		}, {
			lvl: 5,
			a: 8
		}, {
			lvl: 10,
			a: 22
		}, {
			lvl: 21,
			a: 10
		}, {
			lvl: 33,
			a: 23
		}, {
			lvl: 52,
			a: 12
		}, {
			lvl: 40,
			e: 106
		}],
		flavorText: "Trampels are rumored to be extremely clumsy, tripping over their feet like puppies."
	},
	106: {
		ID: 106,
		name: "Stampeed",
		member: !0,
		R: 5,
		element: "water",
		effects: [0, 57, 54],
		life: "B+",
		power: "B",
		growth: "B-",
		curve: [{
			lvl: 1,
			a: 7
		}, {
			lvl: 5,
			a: 20
		}, {
			lvl: 10,
			a: 9
		}, {
			lvl: 21,
			a: 23
		}, {
			lvl: 33,
			a: 11
		}, {
			lvl: 52,
			a: 24
		}],
		flavorText: "A herd of Stampeeds is supposed to be so loud that you could hear it from over 5 miles away."
	},
	107: {
		ID: 107,
		name: "Pokkit",
		member: !0,
		R: 2,
		element: "earth",
		effects: [6, 45],
		life: "A",
		power: "C",
		growth: "B-",
		curve: [{
			lvl: 1,
			a: 13
		}, {
			lvl: 5,
			a: 8
		}, {
			lvl: 10,
			a: 15
		}, {
			lvl: 21,
			a: 10
		}, {
			lvl: 33,
			a: 11
		}, {
			lvl: 52,
			a: 18
		}, {
			lvl: 40,
			e: 108
		}],
		flavorText: "Pokkits are considered slow-moving and skittish, spending most of their time hiding in their shells."
	},
	108: {
		ID: 108,
		name: "Claustro",
		member: !0,
		R: 5,
		element: "earth",
		effects: [6, 45],
		life: "A+",
		power: "C-",
		growth: "B-",
		curve: [{
			lvl: 1,
			a: 13
		}, {
			lvl: 5,
			a: 7
		}, {
			lvl: 10,
			a: 15
		}, {
			lvl: 21,
			a: 11
		}, {
			lvl: 33,
			a: 17
		}, {
			lvl: 52,
			a: 12
		}],
		flavorText: "Unlike Pokkits, Claustros are thought to be aggressive, and will chase away trespassers for hours."
	},
	109: {
		ID: 109,
		name: "Pterrotell",
		member: !0,
		R: 2,
		element: "storm",
		effects: [6, 48],
		life: "C+",
		power: "A",
		growth: "B-",
		curve: [{
			lvl: 1,
			a: 25
		}, {
			lvl: 5,
			a: 26
		}, {
			lvl: 10,
			a: 31
		}, {
			lvl: 21,
			a: 28
		}, {
			lvl: 33,
			a: 35
		}, {
			lvl: 52,
			a: 30
		}, {
			lvl: 40,
			e: 110
		}],
		flavorText: "Millions of years ago the skies would be full of Pterrotells, in large flocks of up to 100."
	},
	110: {
		ID: 110,
		name: "Pterrocks",
		member: !0,
		R: 5,
		element: "storm",
		effects: [6, 48],
		life: "B+",
		power: "B",
		growth: "B-",
		curve: [{
			lvl: 1,
			a: 31
		}, {
			lvl: 5,
			a: 32
		}, {
			lvl: 10,
			a: 27
		}, {
			lvl: 21,
			a: 28
		}, {
			lvl: 33,
			a: 29
		}, {
			lvl: 52,
			a: 36
		}],
		flavorText: "A single flock of Pterrotells is said to have been led by a single Pterroks, who would hang back and shout orders."
	},
	111: {
		ID: 111,
		name: "Terromite",
		member: !0,
		R: 2,
		element: "fire",
		effects: [3, 12, 51],
		life: "B",
		power: "A",
		growth: "B-",
		curve: [{
			lvl: 1,
			a: 1
		}, {
			lvl: 21,
			a: 4
		}, {
			lvl: 33,
			a: 5
		}, {
			lvl: 52,
			a: 6
		}, {
			lvl: 62,
			a: 18
		}, {
			lvl: 72,
			a: 30
		}, {
			lvl: 40,
			e: 112
		}],
		flavorText: "Terromites left massive footprints behind, causing scientists to believe they were much larger than in reality."
	},
	112: {
		ID: 112,
		name: "Terrosaur",
		member: !0,
		R: 5,
		element: "fire",
		effects: [3, 12, 51],
		life: "C+",
		power: "A+",
		growth: "B-",
		curve: [{
			lvl: 1,
			a: 1
		}, {
			lvl: 21,
			a: 4
		}, {
			lvl: 33,
			a: 5
		}, {
			lvl: 52,
			a: 6
		}, {
			lvl: 62,
			a: 24
		}, {
			lvl: 72,
			a: 36
		}],
		flavorText: "Terrosaur has many nicknames, including 'King Dyno', 'Sharp Teeth' and 'Big Poppa T'."
	},
	113: {
		ID: 113,
		name: "Cogmite",
		element: "storm",
		effects: [6, 48],
		life: "B",
		power: "B",
		growth: "B",
		curve: [{
			lvl: 1,
			a: 25
		}, {
			lvl: 5,
			a: 26
		}, {
			lvl: 10,
			a: 27
		}, {
			lvl: 20,
			a: 28
		}, {
			lvl: 32,
			a: 29
		}, {
			lvl: 50,
			a: 30
		}, {
			lvl: 30,
			e: 114
		}],
		flavorText: "Cogmites are known to gather around large sources of electricity, at which point they all fall asleep. Academy experts call this phenomenon a 'slumber party'."
	},
	114: {
		ID: 114,
		name: "Gearsite",
		member: !0,
		R: 5,
		element: "storm",
		effects: [6, 48],
		life: "A",
		power: "C",
		growth: "B",
		curve: [{
			lvl: 1,
			a: 25
		}, {
			lvl: 5,
			a: 26
		}, {
			lvl: 10,
			a: 27
		}, {
			lvl: 20,
			a: 28
		}, {
			lvl: 32,
			a: 29
		}, {
			lvl: 50,
			a: 30
		}],
		flavorText: "A Gearsite can move its eyes in any direction, and can see for great distances. It is easily the most paranoid monster on the island."
	},
	115: {
		ID: 115,
		name: "Bitbot",
		element: "earth",
		effects: [6, 45],
		life: "C+",
		power: "B",
		growth: "A",
		curve: [{
			lvl: 1,
			a: 13
		}, {
			lvl: 4,
			a: 14
		}, {
			lvl: 8,
			a: 15
		}, {
			lvl: 17,
			a: 16
		}, {
			lvl: 28,
			a: 17
		}, {
			lvl: 45,
			a: 18
		}, {
			lvl: 15,
			e: 116
		}],
		flavorText: "The tiny Bitbot is very social, and tends to stay in large groups to protect itself from predators."
	},
	116: {
		ID: 116,
		name: "Bashbot",
		R: 2,
		element: "earth",
		effects: [6, 45],
		life: "A-",
		power: "C",
		growth: "B",
		curve: [{
			lvl: 1,
			a: 13
		}, {
			lvl: 5,
			a: 14
		}, {
			lvl: 10,
			a: 15
		}, {
			lvl: 20,
			a: 16
		}, {
			lvl: 32,
			a: 17
		}, {
			lvl: 50,
			a: 18
		}, {
			lvl: 28,
			e: 117
		}],
		flavorText: "Bashbots are ill-tempered, and easily annoyed. In fact, it is said that Bashbots rarely get along with one another as they are always arguing."
	},
	117: {
		ID: 117,
		name: "Batterbot",
		member: !0,
		R: 5,
		element: "earth",
		effects: [6, 45],
		life: "A+",
		power: "B",
		growth: "C",
		curve: [{
			lvl: 1,
			a: 13
		}, {
			lvl: 6,
			a: 14
		}, {
			lvl: 12,
			a: 15
		}, {
			lvl: 23,
			a: 16
		}, {
			lvl: 36,
			a: 17
		}, {
			lvl: 55,
			a: 18
		}],
		flavorText: "The massive Batterbot may be strong, but he is very slow and lazy. Most Batterbots wait around for something interesting to happen, and sleep the day away."
	},
	118: {
		ID: 118,
		name: "Fishbol",
		member: !0,
		R: 2,
		element: "water",
		effects: [0, 57, 54],
		life: "B-",
		power: "B",
		growth: "A-",
		curve: [{
			lvl: 1,
			a: 7
		}, {
			lvl: 4,
			a: 8
		}, {
			lvl: 8,
			a: 9
		}, {
			lvl: 18,
			a: 10
		}, {
			lvl: 29,
			a: 11
		}, {
			lvl: 47,
			a: 12
		}, {
			lvl: 26,
			e: 119
		}],
		flavorText: "The water inside the head of a Fishbol is used to cool its machinery, which can reach scalding temperatures."
	},
	119: {
		ID: 119,
		name: "Aquariot",
		member: !0,
		R: 5,
		element: "water",
		effects: [0, 57, 54],
		life: "B+",
		power: "B",
		growth: "B+",
		curve: [{
			lvl: 1,
			a: 7
		}, {
			lvl: 5,
			a: 8
		}, {
			lvl: 10,
			a: 9
		}, {
			lvl: 19,
			a: 10
		}, {
			lvl: 31,
			a: 11
		}, {
			lvl: 48,
			a: 12
		}],
		flavorText: "Aquariots are avid collectors, and it is not uncommon to see items floating around the water in their heads...including small fish!"
	},
	120: {
		ID: 120,
		name: "Aracute",
		R: 2,
		element: "fire",
		effects: [3, 12, 51],
		life: "C-",
		power: "B",
		growth: "B+",
		curve: [{
			lvl: 1,
			a: 1
		}, {
			lvl: 5,
			a: 2
		}, {
			lvl: 10,
			a: 3
		}, {
			lvl: 19,
			a: 4
		}, {
			lvl: 31,
			a: 5
		}, {
			lvl: 48,
			a: 6
		}, {
			lvl: 22,
			e: 121
		}],
		flavorText: "Aracutes prefer warm, dry places to live, and are often found living in the walls of old buildings. They emerge only to look for food and new housing, which is actually quite frequent."
	},
	121: {
		ID: 121,
		name: "Arachex",
		member: !0,
		R: 5,
		element: "fire",
		effects: [3, 12, 51],
		life: "A",
		power: "A",
		growth: "F-",
		curve: [{
			lvl: 1,
			a: 2
		}, {
			lvl: 9,
			a: 26
		}, {
			lvl: 18,
			a: 4
		}, {
			lvl: 33,
			a: 28
		}, {
			lvl: 49,
			a: 6
		}, {
			lvl: 72,
			a: 30
		}],
		flavorText: "Arachex are notoriously fast runners, but only for short distances. In fact, an arachex will only ever run for a maximum of 99.87542 meters before stopping. This makes it difficult to compete in track competitions."
	},
	122: {
		ID: 122,
		name: "Ice Neek",
		element: "ice",
		effects: [9, 45],
		life: "B-",
		power: "B",
		growth: "A",
		curve: [{
			lvl: 1,
			a: 19
		}, {
			lvl: 4,
			a: 20
		}, {
			lvl: 8,
			a: 21
		}, {
			lvl: 17,
			a: 22
		}, {
			lvl: 28,
			a: 23
		}, {
			lvl: 45,
			a: 24
		}, {
			lvl: 12,
			e: 123
		}],
		flavorText: "An Ice Neek is commonly found in places with low temperatures, but also has a strange curiosity towards fire."
	},
	123: {
		ID: 123,
		name: "Ice Caller",
		R: 2,
		element: "ice",
		effects: [9, 45],
		life: "B",
		power: "B",
		growth: "A-",
		curve: [{
			lvl: 1,
			a: 19
		}, {
			lvl: 4,
			a: 20
		}, {
			lvl: 8,
			a: 21
		}, {
			lvl: 18,
			a: 22
		}, {
			lvl: 29,
			a: 23
		}, {
			lvl: 47,
			a: 24
		}, {
			lvl: 24,
			e: 124
		}],
		flavorText: "Whenever a snowstorm is present, you can bet an Ice Caller is somewhere in the midst of it. It's rumored that they use these storms as a form of showering."
	},
	124: {
		ID: 124,
		name: "Ice Creator",
		R: 5,
		element: "ice",
		effects: [9, 45],
		life: "B+",
		power: "B",
		growth: "B+",
		curve: [{
			lvl: 1,
			a: 19
		}, {
			lvl: 5,
			a: 20
		}, {
			lvl: 10,
			a: 21
		}, {
			lvl: 19,
			a: 22
		}, {
			lvl: 31,
			a: 23
		}, {
			lvl: 48,
			a: 24
		}],
		flavorText: "An Ice Creator is a rare sight, found only in the coldest, deepest dungeons. They are fiercely territorial, often claiming entire dungeons for themselves."
	}
};
var Names = function () {
	function e() {}
	return e
}();
Names.createNameFromIndex = function (e, t, i, a) {
	var s = "male" === e ? Names.BOY_NAMES[t] : Names.GIRL_NAMES[t];
	return s += " " + Names.MIDDLE_NAMES[i], s += Names.LAST_NAMES[a].toLowerCase()
}, Names.generateName = function (e) {
	var t = "";
	t = "male" === e ? Names.BOY_NAMES[Math.floor(Math.random() * (Names.BOY_NAMES.length - 1))] : Names.GIRL_NAMES[Math.floor(Math.random() * (Names.GIRL_NAMES.length - 1))];
	var i = Names.MIDDLE_NAMES[Math.floor(Math.random() * (Names.MIDDLE_NAMES.length - 1))],
		a = Names.LAST_NAMES[Math.floor(Math.random() * (Names.LAST_NAMES.length - 1))].toLowerCase();
	return t + " " + i + a
}, Names.BOY_NAMES = ["Aaron", "Abdullah", "Abraham", "Adam", "Adrian", "Ahmad", "Ahmed", "Aidan", "Aiden", "Alan", "Albert", "Alejandro", "Alex", "Alexander", "Alexis", "Ali", "Alvin", "Andres", "Andrew", "Aneesh", "Angel", "Angelo", "Anthony", "Antonio", "Arthur", "Ashton", "Austin", "Ayden", "Benjamin", "Billy", "Blake", "Bobby", "Bort", "Braden", "Bradley", "Brady", "Brandon", "Brayden", "Brendan", "Brian", "Brody", "Bruce", "Bryan", "Bryce", "Bryson", "Caden", "Caleb", "Cameron", "Carl", "Carlos", "Carson", "Carter", "Cesar", "Charles", "Chase", "Christian", "Christopher", "Cody", "Colby", "Cole", "Colin", "Collin", "Colton", "Conner", "Connor", "Cooper", "Craig", "Cristian", "Dakota", "Dalton", "Damian", "Daniel", "Darien", "David", "Dennis", "Derek", "Devin", "Devon", "Diego", "Dominic", "Donald", "Donovan", "Douglas", "Dylan", "Edgar", "Eduardo", "Edward", "Edwin", "Eli", "Elias", "Elijah", "Emmanuel", "Eric", "Erick", "Erik", "Ethan", "Eugene", "Evan", "Fernando", "Francisco", "Frank", "Gabriel", "Gage", "Garrett", "Gary", "Gavin", "George", "Gerald", "Giovanni", "Grant", "Gregory", "Hammad", "Hamza", "Harold", "Hayden", "Hector", "Henry", "Howard", "Hunter", "Ian", "Ibrahim", "Isaac", "Isaiah", "Ivan", "Jack", "Jackson", "Jacob", "Jaden", "Jake", "Jalen", "James", "Jared", "Jason", "Javier", "Jayden", "Jeffrey", "Jeremiah", "Jeremy", "Jerry", "Jesse", "Jimothy", "Joe", "Joel", "John", "Johnathan", "Johnny", "Jonah", "Jonathan", "Jordan", "Jorge", "Jose", "Joseph", "Joshua", "Josiah", "Juan", "Julian", "Justin", "Kaden", "Kaleb", "Keith", "Kenneth", "Kevin", "Kian", "Kyle", "Landon", "Larry", "Lawrence", "Leonardo", "Levi", "Liam", "Logan", "Louis", "Lucas", "Luis", "Luke", "Malachi", "Malik", "Manuel", "Marco", "Marcus", "Mario", "Mark", "Martin", "Marvin", "Mason", "Matthew", "Max", "Maxwell", "Micah", "Michael", "Miguel", "Muhammad", "Nathan", "Nathaniel", "Nicholas", "Nicolas", "Noah", "Nolan", "Oliver", "Omar", "Oscar", "Owen", "Parker", "Patrick", "Paul", "Peter", "Peyton", "Philip", "Phillip", "Preston", "Ralph", "Raymond", "Ricardo", "Richard", "Riley", "Robert", "Roger", "Rohan", "Ronald", "Rory", "Roy", "Rupy", "Russell", "Ryan", "Samuel", "Scott", "Sean", "Sebastian", "Sergio", "Seth", "Shane", "Shawn", "Solomon", "Spencer", "Stephen", "Steve", "Steven", "Tanner", "Terry", "Thomas", "Timothy", "Travis", "Trenton", "Trevor", "Tristan", "Tyler", "Van", "Victor", "Vincent", "Walter", "Wasee", "Wayne", "Wesley", "William", "Wyatt", "Xavier", "Youssef", "Zachary"], Names.GIRL_NAMES = ["Aaliyah", "Abby", "Abigail", "Addison", "Adriana", "Adrianna", "Alana", "Alexa", "Alexandra", "Alexandria", "Alexia", "Alexis", "Alice", "Alicia", "Allison", "Alondra", "Alyssa", "Amanda", "Amber", "Amelia", "Amy", "Ana", "Andrea", "Angel", "Angela", "Angelica", "Angelina", "Ann", "Anna", "Ariana", "Arianna", "Ashley", "Ashlyn", "Aubrey", "Audrey", "Autumn", "Ava", "Avery", "Bailey", "Barbara", "Betty", "Beverly", "Bianca", "Breanna", "Brenda", "Briana", "Brianna", "Brittany", "Brooke", "Brooklyn", "Caitlin", "Caitlyn", "Camila", "Carol", "Caroline", "Carolyn", "Cassandra", "Cassidy", "Catherine", "Charlotte", "Chelsea", "Cheryl", "Cheyenne", "Chloe", "Christina", "Christine", "Claire", "Courtney", "Crystal", "Cynthia", "Daisy", "Daniela", "Danielle", "Deborah", "Debra", "Delaney", "Denise", "Destiny", "Diana", "Diane", "Donna", "Doris", "Dorothy", "Elizabeth", "Ella", "Ellen", "Ellie", "Emily", "Emma", "Erica", "Erin", "Eva", "Evelyn", "Faith", "Fatima", "Felicia", "Frances", "Gabriela", "Gabriella", "Gabrielle", "Genesis", "Gianna", "Giselle", "Gloria", "Grace", "Gracie", "Hailey", "Haley", "Hannah", "Heather", "Helen", "Hope", "Isabel", "Isabella", "Isabelle", "Jacqueline", "Jada", "Jade", "Jana", "Jane", "Janet", "Janice", "Jasmin", "Jasmine", "Jayla", "Jazmin", "Jean", "Jenna", "Jennifer", "Jessica", "Jillian", "Joan", "Jocelyn", "Jordan", "Jordyn", "Joyce", "Judith", "Judy", "Julia", "Juliana", "Julie", "Kaitlyn", "Karen", "Kate", "Katelyn", "Katherine", "Kathleen", "Kathryn", "Kathy", "Katie", "Kayla", "Kaylee", "Kelly", "Kelsey", "Kendall", "Kennedy", "Kiara", "Kimberly", "Kira", "Kylee", "Kylie", "Laura", "Lauren", "Layla", "Leah", "Leslie", "Liliana", "Lillian", "Lilly", "Lily", "Linda", "Lindsey", "Lisa", "Lori", "Louise", "Lucy", "Lydia", "Mackenzie", "Madeline", "Madelyn", "Madison", "Makayla", "Makenzie", "Margaret", "Maria", "Mariah", "Mariam", "Mariam", "Marie", "Marilyn", "Marissa", "Martha", "Mary", "Maya", "Mckenzie", "Megan", "Melanie", "Melissa", "Mia", "Michelle", "Mikayla", "Mildred", "Miranda", "Molly", "Morgan", "Mya", "Nancy", "Naomi", "Natalia", "Natalie", "Nevaeh", "Nichole", "Nicole", "Nur", "Olivia", "Paige", "Pamela", "Patricia", "Payton", "Peyton", "Rachel", "Reagan", "Rebecca", "Riley", "Rose", "Ruby", "Ruth", "Rylee", "Sabrina", "Sadie", "Salma", "Samantha", "Sandra", "Sara", "Sarah", "Savannah", "Serenity", "Sharon", "Shelby", "Shirley", "Sierra", "Skylar", "Sofia", "Sophia", "Sophie", "Stephanie", "Summer", "Susan", "Sydney", "Tammy", "Taylor", "Teresa", "Theresa", "Tiffany", "Trinity", "Valeria", "Valerie", "Vanessa", "Veronica", "Victoria", "Virginia", "Zoe", "Zoey"], Names.FIRST_NAMES = [], Names.MIDDLE_NAMES = ["Air", "Animal", "Battle", "Blue", "Bronze", "Clear", "Cloud", "Coin", "Daring", "Dark", "Day", "Diamond", "Divine", "Dragon", "Dream", "Earth", "Fable", "Fairy", "Fall", "Fancy", "Far", "Fire", "Flame", "Fog", "Forge", "Frost", "Fruit", "Garden", "Gear", "Ghost", "Giant", "Glass", "Gold", "Golden", "Good", "Green", "Heavy", "Hero", "Ice", "Illusion", "Iron", "Land", "Leaf", "Legend", "Life", "Lightning", "Maelstrom", "Magic", "Metal", "Monster", "Moon", "Mountain", "Myth", "Near", "Night", "Ocean", "Plant", "Quake", "Rain", "Red", "River", "Ruby", "Silver", "Sleep", "Soft", "Spell", "Spring", "Star", "Storm", "Strong", "Summer", "Swift", "Thunder", "Water", "White", "Wild", "Wind", "Winter", "Wish", "Wonder", "Yellow"], Names.LAST_NAMES = ["Blade", "Boots", "Boy", "Breath", "Brother", "Caller", "Cast", "Caster", "Catcher", "Crafter", "Dancer", "Dreamer", "Drifter", "Ear", "Eyes", "Follower", "Foot", "Friend", "Gem", "Girl", "Giver", "Hand", "Heart", "Helper", "Hunter", "Leader", "Legs", "Lemon", "Light", "Man", "Mask", "Master", "Nose", "Ore", "Pants", "Petal", "Prism", "Ring", "Runner", "Seed", "Shade", "Shadow", "Shard", "Shine", "Shirt", "Singer", "Sister", "Smith", "Song", "Spoon", "Staff", "Steel", "Strider", "Sword", "Tail", "Talon", "Tamer", "Thinker", "Torch", "Vault", "Voice", "Walker", "Wand", "Ward", "Whisper", "Winner", "Woman"], Prodigy.Control.Element = function (e, t, i, a) {
	Phaser.Group.call(this, e, t), Util.isDefined(i) && (this.x = i), Util.isDefined(a) && (this.y = a)
}, Prodigy.extends(Prodigy.Control.Element, Phaser.Group, {
	constructor: Prodigy.Control.Element,
	setRenderState: function (e, t) {
		this.renderOnly = e, this.tintElement = t, this.renderUpdate = !0
	},
	showTooltip: function (e, t) {
		if (Util.isDefined(this.tooltip) && (this.tooltip.destroy(), this.tooltip = null), Util.isDefined(e)) {
			this.tooltip = this.game.prodigy.create.element(this, t);
			var i = this.tooltip.add(this.game.prodigy.create.sprite(30, 0, "core", "tooltip"));
			i.alpha = .9, i.width = 300, i.height = 50, this.game.prodigy.create.font(this.tooltip, 90, 11, e, {
				width: 230,
				align: "center"
			}), i = this.tooltip.add(this.game.prodigy.create.sprite(0, 0, "icons", "type")), this.game.add.tween(i).to({
				x: 10
			}, 1e3, Phaser.Easing.Quadratic.InOut, !0, 0, Number.MAX_VALUE, !0)
		}
	},
	hasTooltip: function () {
		return Util.isDefined(this.tooltip)
	},
	highlight: function (e, t, i) {
		Util.isDefined(this.arrow) && (this.arrow.destroy(), this.arrow = null), e && (this.arrow = this.add(this.game.prodigy.create.sprite(0, 0, "icons", "help")), this.arrow.x = (t || 0) + Math.floor(this.width / 2), this.arrow.y = (i || 0) - this.arrow.height + 20, this.game.add.tween(this.arrow).to({
			y: this.arrow.y + 15
		}, 700, Phaser.Easing.Quadratic.InOut, !0, 0, Number.MAX_VALUE, !0))
	},
	isHighlighted: function () {
		return Util.isDefined(this.arrow)
	}
}), Prodigy.Control.Button = function (e, t, i, a, s, r, o) {
	Prodigy.Control.Element.call(this, e, t), this.x = i, this.y = a, this.isActive = !0, this.isPressed = !1, this.callback = o, this.sprite = this.game.prodigy.create.sprite(0, 0, s, r), this.add(this.sprite), this.sprite.inputEnabled = !0, this.sprite.events.onInputDown.add(this.onDown, this), this.sprite.events.onInputUp.add(this.onUp, this), this.sprite.events.onInputOver.add(this.onOver, this), this.sprite.events.onInputOut.add(this.onOut, this)
}, Prodigy.extends(Prodigy.Control.Button, Prodigy.Control.Element, {
	constructor: Prodigy.Control.Button,
	changeImage: function (e) {
		this.sprite.frameName = e
	},
	onDown: function () {
		this.isPressed = !0, this.isActive && (this.sprite.y = 0, this.game.prodigy.audio.playSFX("pop"), Util.isDefined(this.callback) && this.callback())
	},
	onUp: function () {
		this.isPressed = !1, this.isActive && (this.sprite.y = -3)
	},
	onOver: function () {
		this.isActive && (this.sprite.y = -3)
	},
	onOut: function () {
		this.isActive && (this.sprite.y = 0)
	},
	addCallback: function (e, t, i) {
		i ? this.sprite.events.onInputDown.addOnce(e, t) : this.sprite.events.onInputDown.add(e, t)
	},
	setActive: function () {
		this.isActive = !0, this.sprite.tint = 16777215
	},
	setInactive: function () {
		this.isActive = !1, this.sprite.tint = 5789784, this.sprite.y = 0
	},
	select: function () {
		this.sprite.tint = 7447253
	},
	deselect: function () {
		this.isActive = !0, this.sprite.tint = 16777215, this.sprite.y = 0
	},
	isActive: function () {
		return this.isActive
	}
}), Prodigy.Control.StackButton = function (e, t, i, a, s, r) {
	Prodigy.Control.Element.call(this, e, t), this.x = i, this.y = a, this.isActive = !0, this.callback = r, this.contents = this.game.prodigy.create.element(this, 0, 0);
	for (var o = !1, n = 0; n < s.length; n++) {
		var l = s[n];
		if (Util.isDefined(l.tag)) {
			var h = this.top = this.addImage(l.tag, l.x, l.y, l.w, l.h);
			o || (o = !0, h.inputEnabled = !0, h.events.onInputDown.add(this.onDown, this), h.events.onInputUp.add(this.onUp, this), h.events.onInputOver.add(this.onOver, this), h.events.onInputOut.add(this.onOut, this))
		} else Util.isDefined(l.text) && this.game.prodigy.create.font(this.contents, l.x || 0, l.y || 0, l.text, {
			width: 80,
			align: "center",
			size: Util.isDefined(l.size) ? l.size : 20
		})
	}
}, Prodigy.extends(Prodigy.Control.StackButton, Prodigy.Control.Element, {
	constructor: Prodigy.Control.StackButton,
	addImage: function (e, t, i, a, s) {
		var r = this.contents.add(this.game.prodigy.create.sprite(t || 0, i || 0, "icons", e));
		return Util.isDefined(a) && (r.width = a), Util.isDefined(s) && (r.height = s), r
	},
	enable: function (e) {
		Util.isDefined(this.top) && (this.top.tint = e ? 16777215 : 2236962), this.isActive = e
	},
	onDown: function () {
		this.isActive && (this.contents.y = 0, this.game.prodigy.audio.playSFX("pop"), Util.isDefined(this.callback) && this.callback())
	},
	onUp: function () {
		this.isActive && (this.contents.y = -3)
	},
	onOver: function () {
		this.isActive && (this.contents.y = -3)
	},
	onOut: function () {
		this.isActive && (this.contents.y = 0)
	},
	setActive: function () {
		this.isActive = !0
	},
	setInactive: function () {
		this.isActive = !1, this.contents.y = 0
	},
	select: function () {
		this.y = this.oldY || this.y, this.oldY = this.y, Util.isDefined(this.tween) && this.tween.stop(), this.tween = this.game.add.tween(this).to({
			y: this.y - 10
		}, 1e3, Phaser.Easing.Quadratic.InOut, !0, 0, Number.MAX_VALUE, !0)
	},
	deselect: function () {
		this.isActive = !0, Util.isDefined(this.tween) && (this.tween.stop(), this.tween = null), this.y = this.oldY || this.y
	}
}), Prodigy.Control.AdvButton = function (e, t, i, a, s, r) {
	if (Prodigy.Control.Element.call(this, e, t, i, a), this.isActive = !0, this.callback = r, this.content = this.game.prodigy.create.element(this), this.sprite = this.content.add(this.game.prodigy.create.sprite(0, 0, "core", "btn-core")), this.sprite.inputEnabled = !0, this.sprite.events.onInputDown.add(this.onDown, this), this.sprite.events.onInputUp.add(this.onUp, this), this.sprite.events.onInputOver.add(this.onOver, this), this.sprite.events.onInputOut.add(this.onOut, this), Util.isDefined(s.icon)) {
		var o = this.content.add(this.game.prodigy.create.sprite(0, 0, "icons", s.icon));
		o.x = Math.floor((this.sprite.width - o.width) / 2), o.y = Math.floor((this.sprite.height - o.height) / 2), o.alpha = .4
	}
	Util.isDefined(s.top) && this.game.prodigy.create.font(this.content, 5, 8, s.top, {
		size: 16,
		align: "center",
		width: this.sprite.width - 10
	}), Util.isDefined(s.bot) && this.game.prodigy.create.font(this.content, 5, this.sprite.height - 33, s.bot, {
		size: 16,
		align: "center",
		width: this.sprite.width - 10
	})
}, Prodigy.extends(Prodigy.Control.AdvButton, Prodigy.Control.Element, {
	constructor: Prodigy.Control.AdvButton,
	onDown: function () {
		this.isActive && (this.content.y = 0, this.game.prodigy.audio.playSFX("pop"), Util.isDefined(this.callback) && this.callback())
	},
	onUp: function () {
		this.isActive && (this.content.y = -3)
	},
	onOver: function () {
		this.isActive && (this.content.y = -3)
	},
	onOut: function () {
		this.isActive && (this.content.y = 0)
	},
	setActive: function (e) {
		this.isActive = e, this.sprite.tint = e ? 16777215 : 5789784, this.content.y = 0
	}
}), Prodigy.Control.PanelButton = function (e, t, i, a, s, r, o, n) {
	Prodigy.Control.Element.call(this, e, t, i, a), this.isActive = !0, this.callback = n, this.content = this.game.prodigy.create.element(this), this.btn = this.game.prodigy.create.panel(this.content, 0, 0, s, r, o), this.btn.setClickable(this.onDown.bind(this), this.onUp.bind(this), this.onOver.bind(this), this.onOut.bind(this))
}, Prodigy.extends(Prodigy.Control.PanelButton, Prodigy.Control.Element, {
	constructor: Prodigy.Control.PanelButton,
	onDown: function () {
		this.isActive && (this.content.y = 0, this.game.prodigy.audio.playSFX("pop"), Util.isDefined(this.callback) && this.callback())
	},
	onUp: function () {
		this.isActive && (this.content.y = -3)
	},
	onOver: function () {
		this.isActive && (this.content.y = -3)
	},
	onOut: function () {
		this.isActive && (this.content.y = 0)
	},
	setActive: function (e) {
		this.isActive = e, this.content.y = 0
	}
}), Prodigy.Control.Sprite = function (e, t, i, a, s, r) {
	Phaser.Sprite.call(this, e, t, i, a, s || 0), r && this.anchor.setTo(.5, 1)
}, Prodigy.extends(Prodigy.Control.Sprite, Phaser.Sprite, {
	constructor: Prodigy.Control.Sprite
}), Prodigy.Control.Menu = function (e, t, i, a) {
	this.menuID = i, this.style = Util.isDefined(a) ? a : {
		hideMenu: !0,
		hideContent: !0,
		tile: "bg-tile-brown"
	}, e.prodigy.open.menuOpen(!this.style.hideMenu), Prodigy.Control.Element.call(this, e, t), this.style.hideOverlay || (this.overlay = this.game.prodigy.create.sprite(0, 0, "core", "overlay"), this.overlay.width = this.game.world.width, this.overlay.height = this.game.world.height, this.overlay.alpha = .01, this.overlay.inputEnabled = !0, this.add(this.overlay)), this.isHidden = !1
}, Prodigy.extends(Prodigy.Control.Menu, Prodigy.Control.Element, {
	constructor: Prodigy.Control.Menu,
	hide: function (e) {
		e ? (this.isHidden = !0, this.visible = !1) : this.isHidden && (this.isHidden = !1, this.visible = !0)
	},
	setup: function () {
		this.loadComplete()
	},
	loadComplete: function () {
		this.alive && (Util.isDefined(this.spinner) && this.spinner.destroy(), this.menuSetup())
	},
	menuSetup: function () {
		Util.isDefined(this.style.open) && this.style.open(), this.bg = this.game.prodigy.create.element(this, 0, 0), this.style.tile && this.setBackgroundTile("core", this.style.tile, .25, .25, this.style.full), this.fg = this.game.prodigy.create.element(this, 0, 0), this.style.hideContent && (this.game.enableBackground(!1), this.game.enableContent(!1))
	},
	showFrame: function (e, t, i, a) {
		if (this.fg.add(new Phaser.TileSprite(this.game, 0, 0, this.game.world.width, 50, "core", "panel-mid")), this.fg.add(new Phaser.TileSprite(this.game, 0, 50, this.game.world.width, 50, "core", "panel-top2")), this.fg.add(new Phaser.TileSprite(this.game, 0, 620, this.game.world.width, 50, "core", "panel-top")), this.fg.add(new Phaser.TileSprite(this.game, 0, 670, this.game.world.width, 50, "core", "panel-mid")), Util.isDefined(e)) {
			this.fg.add(this.game.prodigy.create.sprite(30, 5, "icons", "icon-base"));
			var s = this.fg.add(this.game.prodigy.create.sprite(30, 5, "icons", e));
			s.x += Math.floor((80 - s.width) / 2), s.y += Math.floor((80 - s.height) / 2)
		}
		if (Util.isDefined(t) && (this.title = this.game.prodigy.create.font(this.fg, 125, 10, t, {
				font: "button",
				size: 36
			})), Util.isDefined(i)) {
			var r = this.game.prodigy.create.element(this.fg, 0, 5);
			this.btns = [];
			for (var o = 0; o < i.length; o++) {
				var n = i[o];
				r.add(this.game.prodigy.create.sprite(90 * o, 0, "icons", "icon-base-active")), this.btns[o] = this.game.prodigy.create.button(r, 90 * o, 0, "icons", n.icon, this.clickBtn.bind(this, o, this.btns, n.callback, n.title), !0), this.btns[o].x += Math.floor((80 - this.btns[o].width) / 2), this.btns[o].y += Math.floor((80 - this.btns[o].height) / 2), this.btns[o].oldY = this.btns[o].y
			}
			r.x = 1250 - r.width, Util.isDefined(a) && this.btns[a].onDown()
		}
	},
	clickBtn: function (e, t, i, a) {
		if (this.currentBtn !== e) {
			this.currentBtn = e, Util.isDefined(a) && Util.isDefined(this.title) && this.title.setText(a);
			for (var s = 0; s < t.length; s++) this.game.tweens.removeFrom(t[s], !1), t[s].y = t[s].oldY;
			this.game.add.tween(t[e]).to({
				y: t[e].y - 10
			}, 500, Phaser.Easing.Quadratic.Out).to({
				y: t[e].y
			}, 500, Phaser.Easing.Quadratic.In).loop().start(), i()
		}
	},
	showBtns: function (e, t) {
		if (Util.isDefined(t))
			for (var i = 0, a = t.length - 1; a >= 0; a--) t[a].y = 650, i += t[a].width, t[a].x = 1230 - i, i += 30;
		if (Util.isDefined(e))
			for (var i = 0, a = 0; a < e.length; a++) e[a].y = 650, e[a].x = 50 + i, i += e[a].width + 30
	},
	update: function () {
		Prodigy.Control.Element.prototype.update.call(this), this.setupComplete && this.menuUpdate()
	},
	menuUpdate: function () {
		Util.isDefined(this.bar) && (this.bar.tilePosition.x += this.barSpeedX, this.bar.tilePosition.y += this.barSpeedY)
	},
	close: function () {
		Util.isDefined(this.game) && (this.style.hideContent && (this.game.enableBackground(!0), this.game.enableContent(!0)), this.game.prodigy.open.menuOpen(!0), Util.isDefined(this.style.close) && this.style.close(), this.game.prodigy.open.close(this), this.destroy())
	},
	setBackgroundTile: function (e, t, i, a, s) {
		Util.isDefined(this.bar) && this.bar.destroy(), this.bg.removeAll(!0), this.bar = s ? new Phaser.TileSprite(this.game, 0, 0, this.game.world.width, this.game.world.height, e, t) : new Phaser.TileSprite(this.game, 0, 100, this.game.world.width, this.game.world.height - 200, e, t), this.bar.tilePosition.x = -6, this.bar.tilePosition.y = -20, this.bg.add(this.bar), this.barSpeedX = i || this.barSpeedX, this.barSpeedY = a || this.barSpeedY
	}
}), Prodigy.RenderMenu = function (e, t, i, a, s) {
	Prodigy.Control.Element.call(this, e, t, i, a), this._texture = s, this.game = e, this._bg = e.prodigy.create.element(this), this._texture.clear(), this._grp = new Phaser.Group(e), this._img = this.add(new Phaser.Image(e, 0, 0, this._texture)), this._img.inputEnabled = !0, this.page = 0
}, Prodigy.extends(Prodigy.RenderMenu, Prodigy.Control.Element, {
	constructor: Prodigy.RenderMenu,
	setActive: function (e) {
		this.visible = e, e && this.process(), this.disableModeSet || this.setMode(this.page || 0)
	},
	addTransparent: function () {
		var e = this._bg.add(this.game.prodigy.create.sprite(0, 0, "core", "overlay"));
		e.width = 1280, e.height = 720, e.alpha = .5
	},
	addBackground: function (e) {
		for (var t = 0; 32 > t; t++)
			for (var i = 0; 18 > i; i++) this._bg.add(new Phaser.Image(this.game, 40 * t, 40 * i, "core", e))
	},
	addPanel: function () {},
	createBaseSetup: function (e, t, i, a, s, r, o) {
		this.disableModeSet = r;
		var n = this.game.prodigy.create.element(this, (1280 - 40 * e) / 2, (720 - 40 * t) / 2);
		if (n.setRenderState(!0), this.game.prodigy.create.panel(n, 0, 0, e, t, i), Util.isDefined(s) && s.length > 0) this.game.prodigy.create.panel(n, 40, 40, 6 + 3 * s.length, 2, "banner");
		else if (Util.isDefined(o)) {
			var l = this.game.prodigy.create.panel(n, 40, 40, 18, 2, "banner");
			this.game.prodigy.create.font(l, 200, 15, o, {
				size: 36,
				font: "button"
			})
		}
		if (this.game.prodigy.create.button(this, n.x + 40 * (e - 1), n.y - 10, "icons", "close", this.close.bind(this)), this.buttons = [], Util.isDefined(s) && s.length > 0) {
			Util.isDefined(a) && (n.add(this.game.prodigy.create.sprite(80, -10, "icons", "menu-crest")), this.game.prodigy.create.font(n, 80, 70, a, {
				width: 140,
				align: "center"
			}));
			for (var h = 0; h < s.length; h++) this.buttons.push(this.game.prodigy.create.advButton(this, n.x + 240 + 120 * h, n.y + 30, s[h], this.setMode.bind(this, h)))
		}
		return n
	},
	setMode: function (e) {
		if (Util.isDefined(this.buttons))
			for (var t = 0; t < this.buttons.length; t++) this.buttons[t].setActive(e !== t)
	},
	startLoad: function (e, t) {
		this.game.prodigy.load.assets(e, t)
	},
	process: function () {
		this._texture.clear(), this._bg.visible = !0, this._texture.renderXY(this._bg, 0, 0, !0), this._bg.visible = !1;
		for (var e = 0; e < this.children.length; e++) {
			var t = this.children[e];
			t instanceof Prodigy.Control.Element && (t.tintElement && t.setAllChildren("tint", 10066329), t.renderOnly ? (t.visible = !0, this._texture.renderXY(t, t.x, t.y), t.visible = !1) : t.visible = !0)
		}
	},
	init: function (e) {
		e.add(this), this.process()
	},
	close: function (e) {
		this.game.prodigy.open.setActiveRenderMenu();
		try {
			Util.isDefined(this.onClose) && this.onClose(e)
		} catch (t) {}
		this.destroy()
	},
	create: function () {
		this.game.prodigy.open.setActiveRenderMenu(this), this.process()
	}
});
var Attack = function () {
	function e(e, t, i, a, s, r, o, n, l, h, d) {
		this.game = e, this.source = t, this.target = i, this.element = o, this.callback = l, this.atk = n, this.miss = h, this.mods = d, this.underLayer = this.game.prodigy.create.element(a, 0, 0), this.overLayer = this.game.prodigy.create.element(s, 0, 0), this.setup(), this.game.time.events.add(r + 1e3, this.complete, this)
	}
	return e.prototype.setup = function (e, t) {
		this.miss ? this.game.time.events.add(e, this.missed, this) : (Util.isDefined(e) && this.game.time.events.add(e, this.damage, this), Util.isDefined(t) && this.game.time.events.add(t, this.heal, this)), Util.isDefined(this.atk) && Util.isDefined(this.atk.name)
	}, e.prototype.damage = function () {
		console.log(this.mod);
		var e = Util.isDefined(this.mod) ? this.mod : 0;
		Util.isDefined(this.mods) && Util.isDefined(this.mods.dmgMod) && (e += this.mods.dmgMod);
		var t = this.game.prodigy.attacks.calculateDamage(this.atk, this.source.source, this.target.source, e);
		console.log("targetdamage " + t), this.target.source.changeCurrentHearts(-t);
		var i = t * this.game.prodigy.affixes.getThorns(this.target.source);
		console.log("thorns " + i), i < this.source.source.getCurrentHearts() ? this.source.source.changeCurrentHearts(-Math.floor(i)) : i = 0;
		var a = null,
			s = null,
			r = null,
			o = null;
		0 === t ? (a = "Resist", s = "effects/" + this.atk.element + "-immune") : this.game.prodigy.affixes.hasDamage(this.atk.element, this.source.source.getAffixes()) || this.game.prodigy.affixes.hasWeakness(this.atk.element, this.target.source.getAffixes()) ? (a = "Bonus Damage!", s = "effects/" + this.atk.element + "-damage") : this.game.prodigy.affixes.hasResist(this.atk.element, this.target.source.getAffixes()) && (a = "Resist", s = "effects/" + this.atk.element + "-resist"), i > 0 && (r = "Thorns", o = "effects/thorns"), this.display(this.target, a, s), this.display(this.source, r, o)
	}, e.prototype.display = function (e, t) {
		if (Util.isDefined(t)) {
			var i = this.game.prodigy.create.font(this.overLayer, e.x, e.y, t, {
				size: 40
			});
			i.x = e.x - i.width / 2, i.y -= 150, this.game.add.tween(i).to({
				y: "-100"
			}, 1300, Phaser.Easing.Quadratic.Out).to({
				alpha: 0
			}, 200, Phaser.Easing.Quadratic.Out).start()
		}
	}, e.prototype.missed = function () {
		var e = this.game.prodigy.affixes.getDodge() > 1 ? "Dodged!" : "MISS!",
			t = this.game.prodigy.affixes.getDodge() > 1 ? "effects/dodge" : null;
		this.display(this.target, e, t)
	}, e.prototype.heal = function () {
		console.log("heal " + this.game.prodigy.attacks.calculateDamage(this.atk, this.source.source, this.target.source) / 2), this.source.source.changeCurrentHearts(Math.max(0, Math.floor(this.game.prodigy.attacks.calculateDamage(this.atk, this.source.source, this.target.source) / 2)))
	}, e.prototype.showOverlay = function (e, t, i, a, s) {
		var r = e;
		this.overLayer.add(r), this.game.add.tween(r.tilePosition).to({
			x: i * t,
			y: a * t
		}, t, Phaser.Easing.Linear.None).delay(s).start(), this.game.add.tween(r).to({
			alpha: 0
		}, 100, Phaser.Easing.Linear.None).delay(s + t - 100).start()
	}, e.prototype.complete = function () {
		this.underLayer.destroy(), this.overLayer.destroy(), this.callback()
	}, e
}();
Attack.BX = 2e3, Attack.BY = 1e3, Prodigy.Control.ScrollBar = function (e, t, i, a, s, r) {
	Prodigy.Control.Element.call(this, e, t, i, a), this.page = 0, this.callback = r, this.height = s, this.maxY = 50 + s - 100, this.minY = 50, this.add(new Phaser.TileSprite(this.game, 0, 25, 50, s - 50, "core", "panel-side")), this.add(new Phaser.TileSprite(this.game, 50, 25, 50, s - 50, "core", "panel-side2")), this.scroll = this.add(this.game.prodigy.create.sprite(0, 50, "core", "btn-mini")), this.up = this.game.prodigy.create.textButton(this, 0, 0, {
		icon: "up",
		size: Prodigy.Control.TextButton.MINI
	}, this.click.bind(this, -1)), this.up.icon.x = 25, this.down = this.game.prodigy.create.textButton(this, 0, s - 50, {
		icon: "down",
		size: Prodigy.Control.TextButton.MINI
	}, this.click.bind(this, 1)), this.down.icon.x = 25
}, Prodigy.extends(Prodigy.Control.ScrollBar, Prodigy.Control.Element, {
	constructor: Prodigy.Control.ScrollBar,
	setPages: function (e, t) {
		this.page = t || 0, this.pages = e, this.diff = (this.height - 100 - 50) / Math.max(1, e - 1), this.click(0)
	},
	click: function (e) {
		this.page = this.page + e, this.page < 0 && (this.page = 0), this.page >= this.pages && (this.page = this.pages - 1), 0 === this.page ? this.up.setInactive() : this.up.setActive(), this.page === this.pages - 1 ? this.down.setInactive() : this.down.setActive(), this.scroll.y = 50 + this.diff * this.page, this.scroll.y < 50 && (this.scroll.y = 50), this.callback(this.page)
	}
}), Prodigy.Control.Slider = function (e, t, i, a, s, r, o) {
	Prodigy.Control.Element.call(this, e, t, i, a), this.len = s - 100, this.isVertical = r, o && (this.game.input.mouse.mouseWheelCallback = this.onScroll.bind(this)), this.bar = this.isVertical ? this.add(new Phaser.TileSprite(this.game, 50, 0, s, 50, "core", "slider")) : this.add(new Phaser.TileSprite(this.game, 0, 0, s, 50, "core", "slider")), this.bar.inputEnabled = !0, this.bar.events.onInputDown.add(this.barClick, this), this.lower = this.isVertical ? this.game.prodigy.create.button(this, 50, 0, "core", "arrow-btn-back", this.btnClick.bind(this, -1)) : this.game.prodigy.create.button(this, 0, 0, "core", "arrow-btn-back", this.btnClick.bind(this, -1, !0)), this.lower.setInactive(), this.higher = this.isVertical ? this.game.prodigy.create.button(this, 50, this.len + 50, "core", "arrow-btn-next", this.btnClick.bind(this, 1)) : this.game.prodigy.create.button(this, this.len + 50, 0, "core", "arrow-btn-next", this.btnClick.bind(this, 1, !0)), this.higher.setInactive(), this.isVertical && (this.bar.angle = 90, this.lower.angle = 90, this.higher.angle = 90);
	var n = this.isVertical ? new Phaser.Rectangle(0, 50, 50, this.len) : new Phaser.Rectangle(50, 0, this.len, 50);
	this.slide = this.isVertical ? this.add(this.game.prodigy.create.sprite(n.x, n.y, "core", "btn-white")) : this.add(this.game.prodigy.create.sprite(n.x, n.y, "core", "btn-white")), this.slide.anchor.setTo(this.isVertical ? 0 : .5, this.isVertical ? .5 : 0), this.slide.visible = !1, this.slide.inputEnabled = !0, this.slide.input.enableDrag(), this.slide.input.boundsRect = n, this.slide.events.onDragStop.add(this.onDragStop, this)
}, Prodigy.extends(Prodigy.Control.Slider, Prodigy.Control.Element, {
	constructor: Prodigy.Control.Slider,
	reset: function (e, t, i, a) {
		this.timeHeld = 0, this.isOver = !1, this.itemsPerPage = t || 1, this.items = e, this.callback = a, this.paging = 0 > i ? this.itemsPerPage : 1, i >= 0 ? (this.page = Math.max(0, i - t), this.pages = Math.max(1, this.items - this.itemsPerPage + 1)) : (this.page = 0, this.pages = Math.max(1, Math.ceil(this.items / this.itemsPerPage))), this.inc = this.pages > 1 ? (this.len - 50) / (this.pages - 1) : this.len - 50, this.slide.visible = this.pages > 1, this.btnClick(0, !0), this.callback(this.page * this.paging)
	},
	onDragStop: function () {
		var e = 0;
		e = this.isVertical ? Math.round((this.slide.y - 50 - 25) / this.inc) : Math.round((this.slide.x - 50 - 25) / this.inc), this.btnClick(e - this.page, !0)
	},
	barClick: function (e, t) {
		var i = 0;
		i = this.isVertical ? Math.round((t.y - this.bar.world.y - 50 - 25) / this.inc) : Math.round((t.x - this.bar.world.x - 50 - 25) / this.inc), this.btnClick(i - this.page, !0)
	},
	process: function () {
		this.game.input.mouse.mouseWheelCallback = this.onScroll.bind(this), this.callback(this.page * this.paging)
	},
	btnClick: function (e, t) {
		var i = this.page;
		this.page += e, this.page > this.pages - 1 && (this.page = this.pages - 1), this.page < 0 && (this.page = 0), 0 === this.page ? this.lower.setInactive() : this.lower.setActive(), this.page === this.pages - 1 ? this.higher.setInactive() : this.higher.setActive(), this.isVertical ? this.slide.y = 75 + Math.round(this.inc * this.page) : this.slide.x = 75 + Math.round(this.inc * this.page), i !== this.page && this.callback(this.page * this.paging), t || (this.timeHeld = this.game.time.now)
	},
	onScroll: function () {
		(Util.isDefined(this.game) && this.visible && this.isConfined && this.isOver || !this.isConfined) && this.btnClick(-Math.floor(this.game.input.mouse.wheelDelta), !0)
	}
}), Prodigy.Control.BitmapFont = function (e, t, i, a, s, r) {
	Phaser.Group.call(this, e, t), this.x = i, this.y = a, this.sprites = [], r = r || {}, this.boundsWidth = r.width || 1280, this.fontSize = r.size || 20, this.align = r.align, this.font = r.font || "general", this.fontName = "font-" + this.font, this.lineHeight = r.lineHeight, this.monoSpace = r.mono, this.iconOffsetY = r.iconOffsetY || 0, this.icons = [], Util.isDefined(s) && this.setText(s)
}, Prodigy.extends(Prodigy.Control.BitmapFont, Phaser.Group, {
	constructor: Prodigy.Control.BitmapFont,
	setText: function (e) {
		var t = 0,
			i = 0,
			a = 0,
			s = [];
		this.text = e;
		for (var r = 0, o = null, n = 0; n < this.sprites.length; n++) this.sprites[n].kill();
		for (var l = 0; l < e.length; l++) {
			var h = e.charCodeAt(l),
				d = null;
			if (91 !== h) {
				if (93 === h) d = o, o = null;
				else if (Util.isDefined(o)) {
					r++, o += e[l];
					continue
				}
				var n = l - r,
					p = this.monoSpace || 10;
				if (n >= this.sprites.length) {
					var c = this.game.prodigy.create.sprite(t, i, this.fontName);
					this.add(c), this.sprites.push(c)
				} else this.sprites[n].revive();
				if (this.sprites[n].x = t, this.sprites[n].y = i, Util.isDefined(d) ? ("icons" !== this.sprites[n].key && this.sprites[n].loadTexture("icons"), this.sprites[n].frameName = d, this.sprites[n].y += this.iconOffsetY) : (this.sprites[n].key !== this.fontName && this.sprites[n].loadTexture(this.fontName), 10 !== h && (this.sprites[n].frameName = h + "-" + this.fontSize)), 32 === h || l === e.length - 1 || 10 === h) {
					var u = this.lineHeight || this.fontSize + 5;
					if (t >= this.boundsWidth) {
						var g = t;
						t = 0, i += u;
						for (var m = a; n >= m; m++) this.sprites[m].x = t, this.sprites[m].y = i, "icons" === this.sprites[m].key && (this.sprites[m].y += (this.sprites[m].height - this.fontSize) / 2), t += this.monoSpace || this.sprites[m].width;
						s.push(g - t)
					} else 10 === h && (this.sprites[n].kill(), i += u, t = 0);
					a = n + 1, 32 === h && (t += p)
				}
				10 !== h && (t += this.monoSpace || this.sprites[n].width), l === e.length - 1 && s.push(t)
			} else r++, o = ""
		}
		if (this.lines = s.length, Util.isDefined(this.align) && "left" !== this.align)
			for (var y = -1, f = 0, l = -1, n = 0; n < this.sprites.length; n++) {
				var c = this.sprites[n];
				y !== c.y && (y = c.y, l++, Util.isDefined(s[l]) && ("center" === this.align ? f = Math.floor((this.boundsWidth - s[l]) / 2) : "right" === this.align && (f = Math.floor(this.boundsWidth - s[l])))), c.x += f
			}
	},
	addClickCallback: function (e, t, i) {
		var a = this.add(this.game.prodigy.create.sprite(0, 0, "core", "overlay-light"));
		a.width = t, a.height = i, a.alpha = 0, a.inputEnabled = !0, a.events.onInputDown.add(e)
	}
}), Prodigy.Control.InputField = function (e, t, i, a, s, r, o, n) {
	Prodigy.Control.Element.call(this, e, t);
	var l = l || "";
	this.input = document.createElement("input"), this.input.setAttribute("value", l), this.input.setAttribute("id", i), this.input.setAttribute("class", "game-input"), this.ID = "#" + i;
	var t = document.getElementById("external-ui");
	t.appendChild(this.input), this.canvas = $("#game-container canvas"), this.x = s, this.y = r, this.twidth = o, this.theight = n, this.createEvents()
}, Prodigy.Control.InputField.HEIGHT_SMALL = 30, Prodigy.Control.InputField.HEIGHT_MEDIUM = 45, Prodigy.Control.InputField.WIDTH_MEDIUM = 300, Prodigy.Control.InputField.WIDTH_LARGE = 450, Prodigy.extends(Prodigy.Control.InputField, Prodigy.Control.Element, {
	constructor: Prodigy.Control.InputField,
	createEvents: function () {
		this.allowEvents = !0, $(this.ID).on("focus", null, {
			game: this.game
		}, this.focus.bind(this, !0)), $(this.ID).on("focusout", null, {
			game: this.game
		}, this.focus.bind(this, !1))
	},
	focus: function (e) {
		this.allowEvents && (e ? this.game.input.keyboard.clearCaptures() : this.game.input.keyboard.addKeyCapture([Phaser.Keyboard.BACKSPACE]))
	},
	setFocus: function (e) {
		e && $(this.ID).focus()
	},
	clearEvents: function (e) {
		this.allowEvents = e
	},
	setAttribute: function (e, t) {
		this.input.setAttribute(e, t)
	},
	getValue: function () {
		return $(this.ID).val()
	},
	setValue: function (e) {
		$(this.ID).val(e)
	},
	hide: function (e) {
		this.visible = !1, $(this.ID).fadeOut(e), Util.isDefined(this.label) && (this.label.alpha = 0), $(this.ID).focusout()
	},
	show: function (e, t) {
		this.visible = !0, Util.isDefined(t) ? setTimeout(this.fadeIn.bind(this, e), t) : this.fadeIn(e)
	},
	fadeIn: function (e) {
		$(this.ID).fadeIn(e), Util.isDefined(this.label) && (this.label.alpha = 1)
	},
	setEnabled: function (e) {
		$(this.ID).attr("disabled", !e)
	},
	destroy: function () {
		$(this.ID).focusout(), $(this.ID).remove(), Prodigy.Control.Element.prototype.destroy.call(this)
	},
	getWidth: function () {
		return $(this.ID).width()
	},
	getHeight: function () {
		return $(this.ID).height()
	},
	setLabel: function (e, t, i, a) {
		var a = a || this.x + 10;
		Util.isDefined(this.label) ? this.label.setText(t) : this.label = this.game.prodigy.create.font(e, a, this.y - 30, t, {
			size: 20
		})
	},
	update: function () {
		Prodigy.Control.Element.prototype.update.call(this);
		var e = this.canvas.height() / this.game.world.height;
		$(this.ID).height(e * this.theight);
		var t = this.canvas.width() / this.game.world.width;
		$(this.ID).width(t * this.twidth);
		var i = e * this.y,
			a = t * this.x + parseInt($("#game-container canvas").css("margin-left")),
			s = e * this.theight / 2;
		$(this.ID).css({
			top: i,
			left: a,
			"font-size": s + "px"
		})
	}
}), Prodigy.Control.InputField.createInputField = function (e, t, i, a, s, r, o, n, l) {
	$("#" + i) && $("#" + i).remove();
	var l = l || "text",
		h = new Prodigy.Control.InputField(e, t, i, a, s, r, o, n);
	return h.setAttribute("type", l), h
}, Prodigy.Control.TextButton = function (e, t, i, a, s, r) {
	Prodigy.Control.Element.call(this, e, t), this.x = i, this.y = a, this.callback = r, this.btnGroup = this.game.prodigy.create.element(this, 0, 0), s = s || {};
	var o = s.size || Prodigy.Control.TextButton.SMALL,
		n = o === Prodigy.Control.TextButton.MED ? "btn-med" : o === Prodigy.Control.TextButton.TINY ? "btn-tiny" : o === Prodigy.Control.TextButton.MINI ? "btn-mini" : o === Prodigy.Control.TextButton.LG ? "btn-lg" : o === Prodigy.Control.TextButton.TALL ? "btn-tall" : o === Prodigy.Control.TextButton.GRADE ? "btn-grade" : "btn-small",
		l = s.text || "",
		h = 0,
		d = o - 85,
		p = s.icon;
	this.iconSide = s.iconSide, this.bg = this.game.prodigy.create.sprite(0, 0, "core", n), this.btnGroup.add(this.bg), p ? (this.icon = this.btnGroup.add(this.game.prodigy.create.sprite(0, 0, "icons", p)), this.setIcon(p), h = "right" === s.iconSide ? 10 : this.icon.width + 15, d = this.bg.width - 25 - this.icon.width) : (d = o - 20, h = 15), this.text = this.game.prodigy.create.font(this.btnGroup, h, 0, "" + l, {
		size: 36,
		font: "button",
		width: d,
		align: "center"
	}), this.bg.inputEnabled = !0, this.bg.events.onInputDown.add(this.mouseDown, this), this.bg.events.onInputUp.add(this.mouseUp, this), this.bg.events.onInputOver.add(this.mouseOver, this), this.bg.events.onInputOut.add(this.mouseOut, this), this.isActive = !0
}, Prodigy.Control.TextButton.TINY = 50, Prodigy.Control.TextButton.MINI = 100, Prodigy.Control.TextButton.SMALL = 200, Prodigy.Control.TextButton.MED = 300, Prodigy.Control.TextButton.LG = 350, Prodigy.Control.TextButton.TALL = 101, Prodigy.Control.TextButton.GRADE = 80, Prodigy.extends(Prodigy.Control.TextButton, Prodigy.Control.Element, {
	constructor: Prodigy.Control.TextButton,
	setActive: function () {
		this.isActive = !0, this.bg.tint = 16777215
	},
	setInactive: function () {
		this.isActive = !1, this.bg.tint = 5789784
	},
	mouseDown: function () {
		this.game.prodigy.audio.playSFX("pop"), Util.isDefined(this.callback) && this.isActive && this.callback(), this.btnGroup.y = 0
	},
	mouseUp: function () {
		this.btnGroup.y = -3
	},
	mouseOver: function () {
		this.btnGroup.y = -3
	},
	mouseOut: function () {
		this.btnGroup.y = 0
	},
	select: function () {
		this.selected = !0, this.bg.tint = 7447253
	},
	deselect: function () {
		this.selected = !1, this.bg.tint = 16777215
	},
	tintSelected: function () {
		this.icon && (this.icon.tint = 7447253)
	},
	tintActive: function () {
		this.icon && (this.icon.tint = 16777215)
	},
	setIcon: function (e) {
		this.icon.frameName = e, this.icon.x = "right" === this.iconSide ? this.bg.width - this.icon.width - 10 : 10, this.icon.y = -Math.floor((this.icon.height - 50) / 2), "btn-tall" === this.bg.frameName && (this.icon.x = Math.floor((100 - this.icon.width) / 2), this.icon.y = Math.floor((200 - this.icon.height) / 2))
	},
	setText: function (e) {
		this.text.setText(e)
	}
}), Prodigy.Control.TextButton.createNextButton = function (e, t, i, a, s) {
	return e.prodigy.create.textButton(t, i, a, {
		icon: "next",
		iconSide: "right",
		text: "next"
	}, s)
}, Prodigy.Control.TextButton.createBackButton = function (e, t, i, a, s) {
	return e.prodigy.create.textButton(t, i, a, {
		icon: "back",
		text: "back"
	}, s)
}, Prodigy.Control.TextButton.createCloseButton = function (e, t, i, a, s) {
	return e.prodigy.create.textButton(t, i, a, {
		icon: "close",
		text: "close"
	}, s)
}, Prodigy.Control.TextButton.createYesButton = function (e, t, i, a, s) {
	return e.prodigy.create.textButton(t, i, a, {
		icon: "yes",
		text: "yes"
	}, s)
}, Prodigy.Control.TextButton.createNoButton = function (e, t, i, a, s) {
	return e.prodigy.create.textButton(t, i, a, {
		icon: "close",
		text: "no"
	}, s)
}, Prodigy.Control.Panel = function (e, t, i, a, s, r, o, n) {
	Prodigy.Control.Element.call(this, e, t, i, a);
	var l = 0,
		h = 0,
		d = null;
	this._imgs = [], Util.isDefined(n) || (n = {});
	for (var p = 0; s > p; p++) {
		h = 0;
		for (var c = 0; r > c; c++) {
			var u = (o || "panel") + "-";
			u += n.hideLeft || 0 !== p || 0 !== c ? n.hideRight || p !== s - 1 || 0 !== c ? n.hideRight || p !== s - 1 || c !== r - 1 ? n.hideLeft || 0 !== p || c !== r - 1 ? n.hideLeft || 0 !== p ? n.hideRight || p !== s - 1 ? 0 === c ? "top" : c === r - 1 ? "top2" : "mid" : "side2" : "side" : "corner4" : "corner3" : "corner2" : "corner", d = this.add(new Phaser.Image(this.game, l, h, "core", u)), h += d.height, d.inputEnabled = !0, this._imgs.push(d)
		}
		l += d.width
	}
}, Prodigy.extends(Prodigy.Control.Panel, Prodigy.Control.Element, {
	constructor: Prodigy.Control.Panel,
	setClickable: function (e, t, i, a) {
		if (Util.isDefined(e))
			for (var s = 0; s < this._imgs.length; s++) e && this._imgs[s].events.onInputDown.add(e), t && this._imgs[s].events.onInputUp.add(t), i && this._imgs[s].events.onInputOver.add(i), a && this._imgs[s].events.onInputOut.add(a)
	}
}), Prodigy.Control.AutoComplete = function (e, t, i, a, s, r, o) {
	Prodigy.Control.Element.call(this, e, t), this.x = i, this.y = a, this.callback = o, this.current = "", this.suggestions = [];
	for (var n = 1; 10 >= n; n++) {
		var l = this.game.prodigy.create.element(this, 0, 30 * -n);
		l.bg = l.add(this.game.prodigy.create.sprite(0, 0, "core", "overlay")), l.bg.inputEnabled = !0, l.bg.events.onInputDown.add(this.selectItem.bind(this, l)), l.bg.width = s, l.bg.height = 30, l.bg.alpha = .75, l.text = this.game.prodigy.create.font(l, 10, 0, ""), this.suggestions.push(l), l.visible = !1
	}
	this.data = this.game.prodigy.chat.getPhrases(), this.input = new Prodigy.Control.InputField(e, this, "AC", null, 0, 0, s, r), this.input.input.onkeyup = this.search.bind(this)
}, Prodigy.extends(Prodigy.Control.AutoComplete, Prodigy.Control.Element, {
	constructor: Prodigy.Control.AutoComplete,
	selectItem: function (e) {
		var t = Util.isDefined(e) ? e.textID : null;
		Util.isDefined(this.callback) && this.callback(t)
	},
	search: function () {
		var e = this.input.getValue();
		this.results = e.length <= 0 ? [] : e.length < this.current.length || this.current.length <= 0 ? AutoComplete.match(e, this.data) : AutoComplete.match(e, this.results), this.current = e;
		for (var t = 0; t < this.suggestions.length; t++) {
			var i = this.suggestions[t];
			t < this.results.length ? (i.visible = !0, i.text.setText(this.results[t]), i.textID = this.game.prodigy.chat.getPhraseID(this.results[t])) : i.visible = !1
		}
	}
}), Prodigy.Control.AutoComplete.match = function (e, t) {
	var i = new RegExp(e.split("").join("\\w*").replace(/\W/, ""), "i");
	return t.filter(function (e) {
		return e.match(i) ? e : void 0
	})
}, Prodigy.Control.FillBar = function (e, t, i, a, s, r, o, n, l, h, d, p, c) {
	Prodigy.Control.Element.call(this, e, t, i, a), this.fillFunction = n, this.dir = o, this.onFill = c, this.setup(s, r, l, h, d, p)
}, Prodigy.extends(Prodigy.Control.FillBar, Prodigy.Control.Element, {
	constructor: Prodigy.Control.FillBar,
	setup: function (e, t, i, a, s, r) {
		this.removeAll(!0), this.back = this.add(this.game.prodigy.create.sprite(0, 0, "core", "overlay-small")), this.bar = this.add(this.game.prodigy.create.sprite(1, t - 1, "core", "overlay-light")), this.bar.anchor.setTo(0, 1), this.back.width = e, this.back.height = t, this.bar.width = e - 2, this.bar.height = t - 2, this.bar.tint = i || 16777215, this.bar.alpha = s, this.icon = this.game.prodigy.create.element(this, -Math.floor((80 - e) / 2), -60), Util.isDefined(a) && this.icon.add(this.game.prodigy.create.sprite(0, 0, "icons", a)), this.label = this.game.prodigy.create.font(this.icon, 0, 20, "", {
			size: 30,
			width: 80,
			align: "center"
		}), this.current = 0, this.target = 0, this.delay = 0, this.currentLevel = 0, r && (this.back.visible = !1), this.setBar()
	},
	setBar: function () {
		for (var e = 0, t = {
				target: 0
			}, i = 1, a = 0;;) {
			if (e = this.fillFunction(i), -1 === e.target) {
				this.current = this.target, a = 1;
				break
			}
			if (this.current < e.target) {
				a = (this.current - t.target) / (e.target - t.target);
				break
			}
			t = e, i++
		}
		0 === this.dir ? this.bar.width = Math.floor((this.back.width - 2) * a) : this.bar.height = Math.floor((this.back.height - 2) * a), this.label.setText(e.text), Util.isDefined(e.color) && (this.bar.tint = e.color), i > this.currentLevel ? (Util.isDefined(this.onFill) && this.onFill(i), this.game.add.tween(this.icon).to({
			y: -70
		}, 250, Phaser.Easing.Quadratic.Out).to({
			y: -60
		}, 250, Phaser.Easing.Quadratic.In).start()) : i < this.currentLevel && (Util.isDefined(this.onFill) && this.onFill(i), this.game.add.tween(this.icon).to({
			x: this.icon.x - 5
		}, 100, Phaser.Easing.Linear.None).to({
			x: this.icon.x + 5
		}, 100, Phaser.Easing.Linear.None).to({
			x: this.icon.x - 5
		}, 100, Phaser.Easing.Linear.None).to({
			x: this.icon.x
		}, 100, Phaser.Easing.Linear.None).start()), this.currentLevel = i
	},
	setValue: function (e) {
		this.current = this.target = e, this.setBar()
	},
	addValue: function (e, t, i) {
		return this.target += e, this.target < 0 && (this.target = 0), this.speed = t || 1, this.callback = i, this.target
	},
	getValue: function () {
		return this.current
	},
	getLevel: function () {
		return this.currentLevel
	},
	update: function () {
		Prodigy.Control.Element.prototype.update.call(this), this.current !== this.target ? (this.delay--, this.delay <= 0 && (this.delay = this.speed || 1, this.current < this.target ? this.current++ : this.current > this.target && this.current--, this.setBar())) : Util.isDefined(this.callback) && (this.callback(), this.callback = null)
	}
});
var DebugOverlay = function () {
		function e(e, t) {
			Prodigy.Control.Element.call(this, e, t), this.game.numBots = 0, this.game.numCreatureBots = 0, this.font = this.game.prodigy.create.font(this, 15, 15), this.add(this.font), this.name = Math.random(), i = this, setInterval(function () {
				if (Util.isDefined(i.font) && Util.isDefined(i.game)) {
					var e = (1e3 / s).toFixed(1),
						t = "FPS: " + e;
					t += "\nMouse X=" + i.game.input.x + ", Y=" + i.game.input.y, i.font.setText(t)
				}
			}, 250)
		}
		e.prototype = Object.create(Prodigy.Control.Element.prototype);
		var t, i, a = 20,
			s = 0,
			r = new Date;
		return e.prototype.update = function () {
			Prodigy.Control.Element.prototype.update.call(this);
			var e = (t = new Date) - r;
			s += (e - s) / a, r = t
		}, e
	}(),
	CatchPet = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 4500, "water", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this);
			var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "water-prison");
			this.overLayer.add(e), e.anchor.setTo(.5, .5), this.game.add.tween(e).to({
				x: this.target.x,
				alpha: .75
			}, 1, Phaser.Easing.Linear.None).to({}, 1e3, Phaser.Easing.Linear.None).to({
				x: this.source.x + 20
			}, 3e3, Phaser.Easing.Linear.None).start(), this.game.add.tween(e).to({
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).to({}, 1e3, Phaser.Easing.Linear.None).to({
				y: this.source.y - 50 - 100
			}, 600, Phaser.Easing.Quadratic.Out).to({
				y: this.source.y
			}, 600, Phaser.Easing.Quadratic.In).to({
				y: this.source.y - 50 - 75
			}, 600, Phaser.Easing.Quadratic.Out).to({
				y: this.source.y
			}, 600, Phaser.Easing.Quadratic.In).to({
				y: this.source.y - 50
			}, 600, Phaser.Easing.Quadratic.Out).start(), this.game.add.tween(e.scale).to({
				x: 4,
				y: 4
			}, 1, Phaser.Easing.Quadratic.Out).to({
				x: .25,
				y: .25
			}, 1e3, Phaser.Easing.Quadratic.Out).to({}, 3e3, Phaser.Easing.Linear.None).to({
				x: 0,
				y: 0
			}, 500, Phaser.Easing.Linear.None).start(), this.game.add.tween(this.target.scale).to({
				x: 0,
				y: 0
			}, 1e3, Phaser.Easing.Quadratic.Out).start()
		}, e
	}(),
	Absorb = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 4e3, "earth", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 900, 2600);
			for (var e = this.source.x < this.target.x ? -1 : 1, t = 0; 3 > t; t++) {
				var i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-circle-small");
				this.overLayer.add(i), i.anchor.setTo(.5, .5), i.alpha = .6, i.scale.x = i.scale.y = 5, this.game.add.tween(i).to({
					x: this.target.x,
					y: this.target.y
				}, 1, Phaser.Easing.Linear.None).to({}, 900, Phaser.Easing.Linear.None).to({
					alpha: 0
				}, 400, Phaser.Easing.Linear.None).start(), this.game.add.tween(i.scale).to({
					x: 0,
					y: 0
				}, 500, Phaser.Easing.Linear.None).delay(200 * t).to({}, 400 - 200 * t, Phaser.Easing.Linear.None).to({
					x: 5 + .5 * t,
					y: 5 + .5 * t
				}, 400, Phaser.Easing.Linear.None).start()
			}
			for (var a = 900, t = 0; 10 > t; t++)
				for (var s = Math.PI * Math.random(), r = .75 + .25 * Math.random(), o = Math.floor(200 * Math.cos(s) * r), n = Math.floor(200 * Math.sin(s) * r) * (Math.random() < .5 ? -1 : 1), l = 200 - o * e, h = 1500 - o * e, d = 800 - o * e, p = l + h - d, c = 0; 5 > c; c++) {
					var u = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", 0 === c ? "earth-leaf" : "core-circle-small");
					this.overLayer.add(u), u.anchor.setTo(.5, .5), u.scale.x = u.scale.y = Math.pow(.6, c), u.alpha = 0 === c ? 1 : .7;
					var g = Math.max(0, 100 * c);
					o * e >= 0 ? this.game.add.tween(u).to({
						x: this.target.x
					}, 1, Phaser.Easing.Linear.None).delay(g + a).to({
						x: this.source.x
					}, h, Phaser.Easing.Linear.None).start() : this.game.add.tween(u).to({
						x: this.target.x
					}, 1, Phaser.Easing.Linear.None).delay(g + a).to({
						x: this.target.x + o
					}, l, Phaser.Easing.Quadratic.Out).to({
						x: this.source.x
					}, h, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(u).to({
						y: this.target.y
					}, 1, Phaser.Easing.Linear.None).delay(g + a).to({
						y: this.target.y + n
					}, d, Phaser.Easing.Quadratic.Out).to({
						y: this.source.y
					}, p, Phaser.Easing.Quadratic.In).to({
						alpha: 0
					}, 50, Phaser.Easing.Linear.None).start()
				}
		}, e
	}(),
	BatterUp = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 2300, "wizard", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 1e3);
			var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-circle-small");
			this.underLayer.add(e), e.anchor.setTo(.5, .5), e.alpha = .6, e.scale.x = e.scale.y = 0, this.game.add.tween(e).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 500, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(e.scale).to({
				x: 0,
				y: 0
			}, 1, Phaser.Easing.Linear.None).to({
				x: 10,
				y: 5
			}, 500, Phaser.Easing.Linear.None).start();
			var t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-dome");
			this.overLayer.add(t), t.scale.x = t.scale.y = 0, t.alpha = .8, t.anchor.setTo(.5, .8), this.game.add.tween(t).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(t.scale).to({
				x: 3,
				y: 3
			}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(this.target).to({
				y: "-300"
			}, 1e3, Phaser.Easing.Quadratic.Out).to({
				y: "+300"
			}, 800, Phaser.Easing.Quadratic.In).to({
				y: "-50"
			}, 250, Phaser.Easing.Quadratic.Out).to({
				y: "+50"
			}, 250, Phaser.Easing.Quadratic.In).start();
			var i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-steam");
			this.underLayer.add(i), i.anchor.setTo(.5, .5), this.game.add.tween(i).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(1800).to({
				y: "-100",
				alpha: 0
			}, 250, Phaser.Easing.Quadratic.Out).start();
			for (var a = 100, s = (this.target.x - this.source.x) / a, r = (this.target.y - 300 - this.source.y) / a, o = 0; a > o; o++) {
				var n = (Math.random() < .25 ? "core-box-empty-" : "core-box-") + Math.floor(6 * Math.random()),
					l = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", n);
				l.anchor.setTo(.5, .5), l.scale.x = l.scale.y = 0, l.alpha = .8, this.overLayer.add(l);
				var h = Math.floor(1e3 * o / a),
					d = Math.floor(-20 + 40 * Math.random());
				this.game.add.tween(l).to({
					x: Math.floor(this.source.x + o * s),
					y: Math.floor(this.source.y - 50 + o * r + d)
				}, 1, Phaser.Easing.Linear.None).delay(h).to({
					alpha: 0
				}, 500, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(l.scale).to({
					x: 1,
					y: 1
				}, 500, Phaser.Easing.Linear.None).delay(h).start()
			}
			for (var o = 0; 3 > o; o++) {
				var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-circle-small");
				this.underLayer.add(e), e.anchor.setTo(.5, .5), e.alpha = .25, e.scale.x = e.scale.y = 0, this.game.add.tween(e).to({
					x: this.target.x,
					y: this.target.y - 300 - 50
				}, 1, Phaser.Easing.Linear.None).delay(1e3 + 100 * o).to({
					alpha: 0
				}, 500, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(e.scale).to({
					x: 0,
					y: 0
				}, 1, Phaser.Easing.Linear.None).delay(1e3 + 100 * o).to({
					x: 10,
					y: 10
				}, 500, Phaser.Easing.Linear.None).start()
			}
			for (var a = 50, o = 0; a > o; o++) {
				var n = (Math.random() < .25 ? "core-box-empty-" : "core-box-") + Math.floor(6 * Math.random()),
					l = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", n);
				l.anchor.setTo(.5, .5), l.scale.x = l.scale.y = 0, l.alpha = .8, this.overLayer.add(l);
				var p = 200 + Math.floor(200 * Math.random()),
					c = Math.random() * Math.PI * 2,
					s = Math.floor(this.target.x + p * Math.cos(c)),
					r = Math.floor(this.target.y + p * Math.sin(c)),
					u = 300 + Math.floor(300 * Math.random());
				this.game.add.tween(l).to({
					x: Math.floor(this.target.x),
					y: this.target.y - 350
				}, 1, Phaser.Easing.Linear.None).delay(1e3).to({
					x: s,
					y: -350 + r,
					alpha: 0
				}, u, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(l.scale).to({
					x: 1,
					y: 1
				}, u, Phaser.Easing.Linear.None).delay(1e3).start()
			}
		}, e
	}(),
	Blitz = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 5e3, "earth", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 4300);
			for (var e = this.source.x + (this.target.x - this.source.x) / 2, t = this.source.y - 300, i = 0; 50 > i; i++) {
				var a = Math.floor(3 * Math.random()),
					s = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", 0 === a ? "earth-leaf" : 1 === a ? "earth-mushroom" : "earth-mudball");
				this.overLayer.add(s), s.anchor.setTo(6, 6), s.scale.x = s.scale.y = 0 === a ? 1 : 1 === a ? .75 : .5, s.angle = Math.floor(360 * Math.random());
				var r = 200 + Math.floor(500 * Math.random()),
					o = Math.random() < .5 ? "+" : "-",
					n = 2e3 - Math.floor(2e3 * Math.random()),
					l = this.target.x - 100 + Math.floor(200 * Math.random()),
					h = this.target.y - (25 + Math.floor(25 * Math.random())),
					d = this.target.y + (25 + Math.floor(25 * Math.random()));
				this.game.add.tween(s).to({
					x: e,
					y: t
				}, 1, Phaser.Easing.Linear.None).to({
					angle: o + r
				}, 2e3, Phaser.Easing.Linear.None).to({
					angle: o + r / 2e3 * n
				}, n, Phaser.Easing.Linear.None).to({
					x: this.target.x
				}, 300, Phaser.Easing.Linear.None).to({
					x: l
				}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(s).to({
					y: t
				}, 1, Phaser.Easing.Linear.None).to({}, 2e3 + n, Phaser.Easing.Linear.None).to({
					y: this.target.y
				}, 300, Phaser.Easing.Linear.None).to({
					y: h
				}, 150, Phaser.Easing.Quadratic.Out).to({
					y: d
				}, 150, Phaser.Easing.Quadratic.In).start(), o = 1 + 3 * Math.random(), this.game.add.tween(s.anchor).to({
					x: o,
					y: o
				}, 2e3, Phaser.Easing.Linear.None).to({}, n, Phaser.Easing.Linear.None).to({
					x: .5,
					y: .5
				}, 300, Phaser.Easing.Linear.None).start()
			}
		}, e
	}(),
	Blizzard = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 7e3, "ice", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 6500);
			for (var e = this.source.x < this.target.x ? -50 : 1330, t = this.source.x < this.target.x ? 1330 : -50, i = 0; 200 > i; i++) {
				var a = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", i % 10 === 0 ? "ice-star" : "ice-snow");
				Math.random() < .5 ? this.overLayer.add(a) : this.underLayer.add(a), a.anchor.setTo(.5, .5), a.scale.x = a.scale.y = i % 10 === 0 ? .2 + .8 * Math.random() : 1, this.game.add.tween(a).to({
					x: e,
					y: Math.floor(720 * Math.random())
				}, 1, Phaser.Easing.Linear.None).delay(25 * i).to({
					x: t,
					angle: i % 10 === 0 ? 500 : 0
				}, 1500, Phaser.Easing.Linear.None).start()
			}
		}, e
	}(),
	Bolt = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 2500, "storm", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 2100);
			var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-lightning-0");
			e.animations.add("a", ["storm-lightning-0", "storm-lightning-1", "storm-lightning-2"], 30 + Math.floor(5 * Math.random()), !0, !1), e.animations.play("a"), e.anchor.setTo(.5, 1), this.overLayer.add(e), this.game.add.tween(e).to({
				x: this.target.x,
				y: 0
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x,
				y: this.target.y
			}, 100, Phaser.Easing.Linear.None).to({}, 2e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 100, Phaser.Easing.Linear.None).start();
			for (var t = 0; 30 > t; t++) {
				var i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "ice-snow");
				i.anchor.setTo(.5, .5), this.overLayer.add(i);
				var a = Math.floor(100 * Math.random()),
					s = Math.random() < .5 ? -1 : 1;
				this.game.add.tween(i).to({
					x: this.target.x
				}, 1, Phaser.Easing.Linear.None).delay(100 + 60 * t).to({
					x: this.target.x + s * a,
					alpha: 0
				}, 500, Phaser.Easing.Linear.None).start(), this.game.add.tween(i).to({
					y: this.target.y
				}, 1, Phaser.Easing.Linear.None).delay(100 + 60 * t).to({
					y: this.target.y - a / 2
				}, 250, Phaser.Easing.Quadratic.Out).to({
					y: this.target.y
				}, 250, Phaser.Easing.Quadratic.In).start()
			}
		}, e
	}(),
	Charclone = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 3e3, "fire", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 1700);
			var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-beam1");
			this.overLayer.add(e), e.alpha = .5, e.anchor.setTo(.5, 0), this.game.add.tween(e).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(1500).to({}, 500, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 500, Phaser.Easing.Linear.None).start(), e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-beam2"), this.overLayer.add(e), e.alpha = .5, e.anchor.setTo(.5, 1), this.game.add.tween(e).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(1500).start(), this.game.add.tween(e).to({
				height: 600
			}, 500, Phaser.Easing.Linear.None).delay(1500).to({
				alpha: 0
			}, 500, Phaser.Easing.Linear.None).start();
			var t = new Array;
			t.push(this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "fire-ball")), t.push(this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "fire-ball")), this.underLayer.add(t[0]), this.overLayer.add(t[1]), t[0].anchor.setTo(2.5, 2.5), t[0].angle = -45, t[1].anchor.setTo(2.5, 2.5), t[1].angle = 135;
			var i = new Array;
			i.push(this.game.add.tween(t[0])), i.push(this.game.add.tween(t[1])), i.push(this.game.add.tween(t[0]).to({
				y: this.target.y,
				x: this.target.x
			}, 1, Phaser.Easing.Linear.None).to({}, 1500, Phaser.Easing.Linear.None).to({
				y: -200
			}, 1e3, Phaser.Easing.Linear.None)), i.push(this.game.add.tween(t[1]).to({
				y: this.target.y,
				x: this.target.x
			}, 1, Phaser.Easing.Linear.None).to({}, 1500, Phaser.Easing.Linear.None).to({
				y: -200
			}, 1e3, Phaser.Easing.Linear.None));
			for (var a = 400, s = 0; 20 > s; s++) i[0].to({
				angle: -45
			}, 1, Phaser.Easing.Linear.None), i[0].to({
				angle: "+180"
			}, a, Phaser.Easing.Linear.None), i[1].to({
				angle: 135
			}, 1, Phaser.Easing.Linear.None), i[1].to({
				angle: "+180"
			}, a, Phaser.Easing.Linear.None), a > 200 && (a -= 100);
			for (var s = 0; s < i.length; s++) i[s].start()
		}, e
	}(),
	Cloudshot = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 2e3, "storm", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 1e3);
			var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-shot");
			e.anchor.setTo(.5, .5), e.scale.x = e.scale.y = this.source.x < this.target.x ? .5 : -.5, this.overLayer.add(e), this.game.add.tween(e).to({
				x: this.source.x,
				y: this.source.y - 100
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x
			}, 1e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start();
			var t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-head");
			t.alpha = .5, t.scale.x = this.source.x < this.target.x ? 1 : -1, t.anchor.setTo(.5, .5), this.overLayer.add(t), this.game.add.tween(t).to({
				x: this.source.x,
				y: this.source.y - 100
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x
			}, 1e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start(), t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-tail"), t.scale.x = 0, t.alpha = .5, t.anchor.setTo(1, .5), this.overLayer.add(t), this.game.add.tween(t).to({
				x: this.source.x + (this.source.x < this.target.x ? -42 : 42),
				y: this.source.y - 100
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x + (this.source.x < this.target.x ? -42 : 42)
			}, 1e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start(), this.game.add.tween(t.scale).to({
				x: this.source.x < this.target.x ? 1 : -1
			}, 500, Phaser.Easing.Linear.None).start();
			var i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-dome");
			this.overLayer.add(i), i.scale.x = i.scale.y = 0, i.alpha = .8, i.anchor.setTo(.5, .8), this.game.add.tween(i).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(1e3).to({
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(i.scale).to({
				x: 3,
				y: 3
			}, 300, Phaser.Easing.Linear.None).delay(1e3).start()
		}, e
	}(),
	Conjure = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 4e3, "wizard", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 2500);
			var e = ["earth-leaf", "water-bubble", "earth-mushroom", "earth-mudball", "fire-bomb", "ice-snowman-body", "ice-prison"],
				t = Math.floor(Math.random() * e.length);
			Util.isDefined(this.mods) && Util.isDefined(this.mods.seed) && this.mods.seed >= 0 && (t = Math.floor(Util.pseudoRandomNumber(this.mods.seed) * e.length)), this.mod = -3 + t;
			var i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", e[t]);
			i.anchor.setTo(.5, .5), i.scale.x = i.scale.y = 0, this.overLayer.add(i), this.game.add.tween(i).to({
				x: this.target.x
			}, 1, Phaser.Easing.Linear.None).delay(1e3).to({}, 1500, Phaser.Easing.Linear.None).to({
				x: this.target.x + 200,
				alpha: 0
			}, 1e3, Phaser.Easing.Linear.None).start(), this.game.add.tween(i).to({
				y: this.target.y - 350
			}, 1, Phaser.Easing.Linear.None).delay(1e3).to({}, 1e3, Phaser.Easing.Linear.None).to({
				y: this.target.y - 50
			}, 500, Phaser.Easing.Quadratic.In).to({
				y: this.target.y - 150
			}, 500, Phaser.Easing.Quadratic.Out).to({
				y: this.target.y
			}, 500, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(i.scale).to({
				x: 1,
				y: 1
			}, 1e3, Phaser.Easing.Quadratic.Out).delay(1e3).start();
			for (var a = 100, s = 0; a > s; s++) {
				var r = (Math.random() < .25 ? "core-box-empty-" : "core-box-") + Math.floor(6 * Math.random()),
					o = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", r);
				o.anchor.setTo(.5, .5), o.scale.x = o.scale.y = 0, o.alpha = .8, this.overLayer.add(o);
				var n = Math.floor(1500 * s / a),
					l = Math.floor(100 * Math.random()),
					h = Math.random() * Math.PI * 2,
					d = Math.floor(this.target.x + l * Math.cos(h)),
					p = Math.floor(this.target.y + l * Math.sin(h));
				this.game.add.tween(o).to({
					x: d,
					y: p - 350
				}, 1, Phaser.Easing.Linear.None).delay(n).to({
					alpha: 0
				}, 1500, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(o.scale).to({
					x: 1.5,
					y: 1.5
				}, 500, Phaser.Easing.Quadratic.Out).delay(n).to({
					x: 0,
					y: 0
				}, 1e3, Phaser.Easing.Quadratic.In).start()
			}
			var c = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-circle-small");
			this.underLayer.add(c), c.anchor.setTo(.5, .5), c.alpha = .25, c.scale.x = c.scale.y = 0, this.game.add.tween(c).to({
				x: this.target.x,
				y: this.target.y - 50
			}, 1, Phaser.Easing.Linear.None).delay(2500).to({
				alpha: 0
			}, 500, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(c.scale).to({
				x: 0,
				y: 0
			}, 1, Phaser.Easing.Linear.None).delay(2500).to({
				x: 10,
				y: 10
			}, 500, Phaser.Easing.Linear.None).start()
		}, e
	}(),
	Dragos = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 6e3, "fire", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 5e3), this.game.prodigy.effects.shake(0, 5e3, 3, "v"), this.game.prodigy.effects.shake(5e3, 500, 5);
			var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "fire-bomb");
			e.anchor.setTo(.5, 1), e.scale.x = e.scale.y = 5, this.overLayer.add(e), this.game.add.tween(e).to({
				y: 0,
				x: this.target.x
			}, 1, Phaser.Easing.Linear.None).delay(2e3).to({
				y: this.target.y
			}, 3e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 100, Phaser.Easing.Linear.None).start();
			for (var t = 0; 10 > t; t++) {
				var i = this.target.x + 200 - 400 * Math.random(),
					a = this.target.y + 200 - 400 * Math.random(),
					s = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-circle-small");
				s.anchor.setTo(.5, .5), s.scale.x = s.scale.y = 0, s.alpha = .75, this.underLayer.add(s), this.game.add.tween(s).to({
					y: a,
					x: i
				}, 1, Phaser.Easing.Linear.None).delay(500 * t).to({
					alpha: 0
				}, 500, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(s.scale).to({
					x: 1.4,
					y: .8
				}, 500, Phaser.Easing.Linear.None).delay(500 * t).start();
				var r = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "fire-ball");
				r.anchor.setTo(.5, .5), r.angle = -90, this.game.add.tween(r).to({
					y: a,
					x: i
				}, 1, Phaser.Easing.Linear.None).delay(500 * t).to({
					y: -50
				}, 1500, Phaser.Easing.Quadratic.In).to({
					alpha: 0
				}, 1, Phaser.Easing.Linear.None).start(), a < this.target.y ? this.underLayer.add(r) : this.overLayer.add(r)
			}
			var o = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-beam2");
			this.overLayer.add(o), o.alpha = 0, o.height = 720, o.width = 300, o.anchor.setTo(.5, 1), this.game.add.tween(o).to({
				x: this.target.x,
				y: 720
			}, 1, Phaser.Easing.Linear.None).to({
				alpha: 1,
				width: 500
			}, 5e3, Phaser.Easing.Linear.None).to({
				alpha: 0,
				width: 2e3
			}, 300, Phaser.Easing.Linear.None).start()
		}, e
	}(),
	EarthSprite = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 4e3, "earth", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 3500);
			var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "earth-spirit-2");
			this.overLayer.add(e), e.anchor.setTo(.5, .5), e.scale.x = this.target.x > this.source.x ? 1 : -1;
			var t = this.target.x > this.source.x ? 1 : -1;
			this.game.add.tween(e).to({
				x: this.target.x - 300 * t
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x + 300 * t
			}, 2e3, Phaser.Easing.Linear.None).to({}, 1e3, Phaser.Easing.Linear.None).to({
				x: this.target.x
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x + 400 * t
			}, 500, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(e).to({
				y: -100
			}, 1, Phaser.Easing.Linear.None).to({
				y: this.target.y
			}, 1e3, Phaser.Easing.Quadratic.Out).to({
				y: this.target.y - 200
			}, 1e3, Phaser.Easing.Quadratic.In).to({
				y: -200
			}, 1, Phaser.Easing.Linear.None).to({}, 1e3, Phaser.Easing.Linear.None).to({
				y: this.target.y
			}, 500, Phaser.Easing.Linear.None).start(), this.game.add.tween(this.target).to({}, 1001, Phaser.Easing.Linear.None).to({
				x: this.target.x + 300 * t
			}, 1e3, Phaser.Easing.Linear.None).to({}, 1e3, Phaser.Easing.Linear.None).to({
				x: this.target.x
			}, 1, Phaser.Easing.Linear.None).start(), this.game.add.tween(this.target).to({}, 1, Phaser.Easing.Linear.None).to({}, 1e3, Phaser.Easing.Quadratic.Out).to({
				y: this.target.y - 200
			}, 1e3, Phaser.Easing.Quadratic.In).to({
				y: -200
			}, 1, Phaser.Easing.Linear.None).to({}, 1e3, Phaser.Easing.Linear.None).to({
				y: this.target.y
			}, 500, Phaser.Easing.Linear.None).to({
				y: this.target.y - 50
			}, 250, Phaser.Easing.Quadratic.Out).to({
				y: this.target.y
			}, 250, Phaser.Easing.Quadratic.In).start();
			var i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-steam");
			this.underLayer.add(i), i.anchor.setTo(.5, .5), this.game.add.tween(i).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(3500).to({
				y: "-100",
				alpha: 0
			}, 250, Phaser.Easing.Quadratic.Out).start()
		}, e
	}(),
	Embers = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 4500, "fire", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 3100);
			for (var e = 0; 5 > e; e++) {
				var t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", e > 0 ? "fire-ball" : "fire-elemental");
				this.overLayer.add(t), t.anchor.setTo(.5, e > 0 ? .5 : 1), this.game.add.tween(t).to({
					y: this.source.y
				}, 1, Phaser.Easing.Quadratic.Out).delay(300 * e).to({
					y: this.source.y - 200
				}, 500, Phaser.Easing.Quadratic.Out).to({
					y: this.source.y
				}, 500, Phaser.Easing.Quadratic.In).to({
					y: this.source.y - 200
				}, 500, Phaser.Easing.Quadratic.Out).to({
					y: this.source.y
				}, 500, Phaser.Easing.Quadratic.In).start();
				var i = this.game.add.tween(t).to({
					x: this.source.x
				}, 1, Phaser.Easing.Quadratic.Out).delay(300 * e).to({
					x: this.target.x,
					angle: e > 0 ? 2e3 : 0
				}, 2e3, Phaser.Easing.Linear.None);
				e > 0 && i.to({
					alpha: 0
				}, 1, Phaser.Easing.Linear.None), 0 === e && (i.to({}, 1100, Phaser.Easing.Linear.None).to({
					alpha: 0
				}, 300, Phaser.Easing.Linear.None), this.game.add.tween(t.scale).to({
					x: 1.3,
					y: 1.3
				}, 100, Phaser.Easing.Linear.None).delay(2300).to({}, 200, Phaser.Easing.Linear.None).to({
					x: 1.6,
					y: 1.6
				}, 100, Phaser.Easing.Linear.None).to({}, 200, Phaser.Easing.Linear.None).to({
					x: 1.9,
					y: 1.9
				}, 100, Phaser.Easing.Linear.None).to({}, 200, Phaser.Easing.Linear.None).to({
					x: 4,
					y: 4
				}, 300, Phaser.Easing.Linear.None).start()), i.start()
			}
		}, e
	}(),
	Fireball = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 2e3, "fire", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 1e3);
			var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "fire-ball");
			e.anchor.setTo(.5, .5), e.scale.x = e.scale.y = this.source.x < this.target.x ? 1 : -1, this.overLayer.add(e), this.game.add.tween(e).to({
				x: this.source.x,
				y: this.source.y - 100
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x
			}, 1e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start();
			var t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-head");
			t.alpha = .5, t.scale.x = this.source.x < this.target.x ? 1 : -1, t.anchor.setTo(.5, .5), this.overLayer.add(t), this.game.add.tween(t).to({
				x: this.source.x,
				y: this.source.y - 100
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x
			}, 1e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start(), t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-tail"), t.scale.x = 0, t.alpha = .5, t.anchor.setTo(1, .5), this.overLayer.add(t), this.game.add.tween(t).to({
				x: this.source.x + (this.source.x < this.target.x ? -42 : 42),
				y: this.source.y - 100
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x + (this.source.x < this.target.x ? -42 : 42)
			}, 1e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start(), this.game.add.tween(t.scale).to({
				x: this.source.x < this.target.x ? 1 : -1
			}, 500, Phaser.Easing.Linear.None).start();
			var i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-dome");
			this.overLayer.add(i), i.scale.x = i.scale.y = 0, i.alpha = .8, i.anchor.setTo(.5, .8), this.game.add.tween(i).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(1e3).to({
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(i.scale).to({
				x: 3,
				y: 3
			}, 300, Phaser.Easing.Linear.None).delay(1e3).start()
		}, e
	}(),
	FireRain = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 4e3, "fire", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 3500);
			for (var e = 0; 15 > e; e++) {
				var t = this.target.x + 100 - 200 * Math.random(),
					i = this.target.y + 100 - 200 * Math.random(),
					a = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "fire-ball");
				a.anchor.setTo(.5, .5), a.angle = 90, this.game.add.tween(a).to({
					y: -50,
					x: t
				}, 1, Phaser.Easing.Linear.None).delay(200 * e).to({
					y: i
				}, 600, Phaser.Easing.Linear.None).to({
					alpha: 0
				}, 1, Phaser.Easing.Linear.None).delay(200 * e).start(), this.game.prodigy.effects.shake(200 * e + 600, 100, 3, "v");
				var s = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "fire-cloud");
				this.overLayer.add(s), s.anchor.setTo(.5, .5), this.game.add.tween(s).to({
					y: i,
					x: t
				}, 1, Phaser.Easing.Linear.None).delay(200 * e + 600).to({
					y: "-200",
					alpha: 0
				}, 300, Phaser.Easing.Quadratic.Out).start(), i < this.target.y ? (this.underLayer.add(a), this.underLayer.add(s)) : (this.overLayer.add(a), this.overLayer.add(s))
			}
		}, e
	}(),
	Fountain = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 6500, "water", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 6e3), this.game.prodigy.effects.shake(0, 1500, 3, "v");
			var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "water-whirl");
			this.underLayer.add(e), e.scale.x = e.scale.y = 0, e.anchor.setTo(.5, .5), this.game.add.tween(e).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).to({
				angle: -1e3
			}, 6e3, Phaser.Easing.Linear.None).start(), this.game.add.tween(e.scale).to({
				x: 1.5,
				y: 1.5
			}, 2e3, Phaser.Easing.Linear.None).to({}, 3e3, Phaser.Easing.Linear.None).to({
				x: 0,
				y: 0
			}, 1e3, Phaser.Easing.Linear.None).start(), this.game.add.tween(this.target.scale).to({
				x: -1
			}, 500, Phaser.Easing.Linear.None).delay(1e3).to({
				x: 1
			}, 500, Phaser.Easing.Linear.None).to({
				x: -.8
			}, 400, Phaser.Easing.Linear.None).to({
				x: .8
			}, 400, Phaser.Easing.Linear.None).to({
				x: -.6
			}, 300, Phaser.Easing.Linear.None).to({
				x: .6
			}, 300, Phaser.Easing.Linear.None).to({
				x: -.4
			}, 200, Phaser.Easing.Linear.None).to({
				x: .4
			}, 200, Phaser.Easing.Linear.None).to({
				x: -.2
			}, 100, Phaser.Easing.Linear.None).to({
				x: .2
			}, 100, Phaser.Easing.Linear.None).to({}, 1e3, Phaser.Easing.Linear.None).to({
				x: 1
			}, 500, Phaser.Easing.Linear.None).start(), this.game.add.tween(this.target.scale).to({
				y: 0
			}, 3e3, Phaser.Easing.Linear.None).delay(1e3).to({}, 1e3, Phaser.Easing.Linear.None).to({
				y: 1
			}, 200, Phaser.Easing.Linear.None).start(), this.game.add.tween(this.target).to({
				y: 0
			}, 500, Phaser.Easing.Quadratic.Out).delay(5e3).to({
				y: this.target.y
			}, 500, Phaser.Easing.Quadratic.In).to({
				y: "-50"
			}, 250, Phaser.Easing.Quadratic.Out).to({
				y: "+50"
			}, 250, Phaser.Easing.Quadratic.In).start();
			var t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-steam");
			this.underLayer.add(t), t.anchor.setTo(.5, .5), this.game.add.tween(t).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(6e3).to({
				y: "-100",
				alpha: 0
			}, 250, Phaser.Easing.Quadratic.Out).start()
		}, e
	}(),
	Geyser = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 2e3, "ice", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 1500), this.game.prodigy.effects.shake(0, 1500, 3, "v");
			for (var e = Math.floor(Math.abs(this.target.x - this.source.x) / 80) + 1, t = 1; e > t; t++) {
				ice = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "earth-mud-splash"), ice.anchor.setTo(.5, 1), ice.scale.y = 0, this.overLayer.add(ice);
				var i = this.source.x < this.target.x ? 1 : -1;
				this.game.add.tween(ice).to({
					x: this.source.x + 80 * t * i,
					y: this.source.y
				}, 1, Phaser.Easing.Linear.None).delay(1500 * t / e).start(), this.game.add.tween(ice.scale).to({
					y: 1
				}, 100, Phaser.Easing.Linear.None).delay(1500 * t / e).to({
					y: 0
				}, 1500, Phaser.Easing.Linear.None).delay(1500 * t / e).start()
			}
			this.game.prodigy.effects.shake(1500, 400, 15);
			var a = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-beam1");
			this.overLayer.add(a), a.alpha = .75, a.scale.x = a.scale.y = .5, a.anchor.setTo(.5, 0), this.game.add.tween(a).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(1500).to({}, 1e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 500, Phaser.Easing.Linear.None).start(), a = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-beam2"), this.overLayer.add(a), a.alpha = .75, a.scale.x = .5, a.anchor.setTo(.5, 1), this.game.add.tween(a).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(1500).start(), this.game.add.tween(a).to({
				height: 600
			}, 251, Phaser.Easing.Linear.None).delay(1500).to({}, 750, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 500, Phaser.Easing.Linear.None).start()
		}, e
	}(),
	GlacialShield = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 3500, "ice", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, null, 1500);
			var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-beam1");
			this.overLayer.add(e), e.alpha = .5, e.anchor.setTo(.5, 0), this.game.add.tween(e).to({
				x: this.source.x,
				y: this.source.y
			}, 1, Phaser.Easing.Linear.None).delay(1500).to({}, 500, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 500, Phaser.Easing.Linear.None).start(), e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-beam2"), this.overLayer.add(e), e.alpha = .5, e.anchor.setTo(.5, 1), this.game.add.tween(e).to({
				x: this.source.x,
				y: this.source.y
			}, 1, Phaser.Easing.Linear.None).delay(1500).start(), this.game.add.tween(e).to({
				height: 600
			}, 500, Phaser.Easing.Linear.None).delay(1500).to({
				alpha: 0
			}, 500, Phaser.Easing.Linear.None).start();
			for (var t = Math.PI / 8, i = -Math.PI / 6, a = this.source.x < this.target.x ? 1 : -1, s = 0; 4 > s; s++) {
				var r = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "ice-prison");
				this.overLayer.add(r), r.angle = 15, r.anchor.setTo(.5, .5);
				var o = Math.floor(this.source.x + 250 * a * Math.cos(i + t * s)),
					n = Math.floor(this.source.y + 250 * Math.sin(i + t * s));
				this.game.add.tween(r).to({
					x: o,
					y: -50
				}, 1, Phaser.Easing.Linear.None).delay(300 * s).to({
					y: n
				}, 200, Phaser.Easing.Linear.None).to({}, 2e3 - 300 * s, Phaser.Easing.Linear.None).to({
					alpha: 0
				}, 400, Phaser.Easing.Linear.None).start(), this.game.prodigy.effects.shake(300 * s + 200, 100, 5, "v")
			}
		}, e
	}(),
	IceCannon = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 3e3, "ice", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 1500);
			var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "ice-blast");
			e.anchor.setTo(.5, .5), e.scale.x = this.source.x < this.target.x ? 1 : -1, this.overLayer.add(e), this.game.add.tween(e).to({
				x: this.source.x,
				y: this.source.y - 100
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x
			}, 1500, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start();
			for (var t = Math.floor(Math.abs(this.target.x - this.source.x) / 50) + 1, i = 1; t > i; i++) {
				var a = t - 1 > i ? i % 2 + 1 : 3;
				e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "ice-shard" + a), e.anchor.setTo(.5, 1), e.scale.y = 0, this.overLayer.add(e);
				var s = this.source.x < this.target.x ? 1 : -1;
				this.game.add.tween(e).to({
					x: this.source.x + 50 * i * s,
					y: this.source.y
				}, 1, Phaser.Easing.Linear.None).delay(1500 * i / t).start(), this.game.add.tween(e.scale).to({
					y: 1
				}, 100, Phaser.Easing.Linear.None).delay(1500 * i / t).to({
					y: 0
				}, 1500, Phaser.Easing.Linear.None).delay(1500 * i / t).start()
			}
			var r = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-head");
			r.alpha = .5, r.scale.x = this.source.x < this.target.x ? 1 : -1, r.anchor.setTo(.5, .5), this.overLayer.add(r), this.game.add.tween(r).to({
				x: this.source.x + 5,
				y: this.source.y - 100
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x + 5
			}, 1500, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start(), r = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-tail"), r.scale.x = 0, r.alpha = .5, r.anchor.setTo(1, .5), this.overLayer.add(r), this.game.add.tween(r).to({
				x: this.source.x + 5 + (this.source.x < this.target.x ? -42 : 42),
				y: this.source.y - 100
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x + 5 + (this.source.x < this.target.x ? -42 : 42)
			}, 1500, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start(), this.game.add.tween(r.scale).to({
				x: this.source.x < this.target.x ? 1 : -1
			}, 800, Phaser.Easing.Linear.None).start();
			var o = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-dome");
			this.overLayer.add(o), o.scale.x = o.scale.y = 0, o.alpha = .8, o.anchor.setTo(.5, .8), this.game.add.tween(o).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(1500).to({
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(o.scale).to({
				x: 3,
				y: 3
			}, 300, Phaser.Easing.Linear.None).delay(1500).start()
		}, e
	}(),
	IcePrison = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 6e3, "ice", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 4100);
			for (var e = new Array, t = 0; 6 > t; t++) {
				var i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "ice-prison");
				this.overLayer.add(i), i.angle = 0, i.anchor.setTo(.5, .75), e.push(i)
			}
			for (var a = 1e3, t = 0; 6 > t; t++) this.game.prodigy.effects.shake(200 * t + a + 100, 100, 5, "v");
			this.game.add.tween(e[5]).to({
				x: this.target.x,
				y: -200
			}, 1, Phaser.Easing.Linear.None).delay(a).to({
				y: this.target.y
			}, 100, Phaser.Easing.Linear.None).to({}, a + 2e3, Phaser.Easing.Linear.None).to({
				x: this.target.x,
				y: -200,
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start(), e[4].angle = -45, this.game.add.tween(e[4]).to({
				x: this.target.x - 200,
				y: -200
			}, 1, Phaser.Easing.Linear.None).delay(a + 200).to({
				x: this.target.x - 50,
				y: this.target.y - 40
			}, 100, Phaser.Easing.Linear.None).to({}, a + 2e3 - 200, Phaser.Easing.Linear.None).to({
				x: this.target.x - 200,
				y: -200,
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start(), e[3].angle = 45, this.game.add.tween(e[3]).to({
				x: this.target.x + 200,
				y: -200
			}, 1, Phaser.Easing.Linear.None).delay(a + 400).to({
				x: this.target.x + 50,
				y: this.target.y - 40
			}, 100, Phaser.Easing.Linear.None).to({}, a + 2e3 - 400, Phaser.Easing.Linear.None).to({
				x: this.target.x + 200,
				y: -200,
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start(), e[2].angle = -20, this.game.add.tween(e[2]).to({
				x: this.target.x - 100,
				y: -200
			}, 1, Phaser.Easing.Linear.None).delay(a + 600).to({
				x: this.target.x - 25,
				y: this.target.y - 100
			}, 100, Phaser.Easing.Linear.None).to({}, a + 2e3 - 600, Phaser.Easing.Linear.None).to({
				x: this.target.x - 100,
				y: -200,
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start(), e[1].angle = 20, this.game.add.tween(e[1]).to({
				x: this.target.x + 100,
				y: -200
			}, 1, Phaser.Easing.Linear.None).delay(a + 800).to({
				x: this.target.x + 25,
				y: this.target.y - 100
			}, 100, Phaser.Easing.Linear.None).to({}, a + 2e3 - 800, Phaser.Easing.Linear.None).to({
				x: this.target.x + 100,
				y: -200,
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(e[0]).to({
				x: this.target.x,
				y: -200
			}, 1, Phaser.Easing.Linear.None).delay(a + 1e3).to({
				y: this.target.y - 150
			}, 100, Phaser.Easing.Linear.None).to({}, a + 2e3 - 1e3, Phaser.Easing.Linear.None).to({
				x: this.target.x,
				y: -200,
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start();
			for (var t = 0; 50 > t; t++) {
				var i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "ice-blast");
				this.overLayer.add(i), i.anchor.setTo(.5, .5), i.angle = this.source.x < this.target.x ? 45 : 135;
				var s = this.source.x < this.target.x ? -500 + Math.floor(500 * Math.random()) : 500 - Math.floor(500 * Math.random()),
					r = s + (this.source.x < this.target.x ? 400 : -400);
				this.game.add.tween(i).to({
					x: this.target.x + s,
					y: -50
				}, 1, Phaser.Easing.Linear.None).delay(50 * t).to({
					x: this.target.x + r,
					y: 800
				}, 500, Phaser.Easing.Linear.None).start()
			}
		}, e
	}(),
	IceToMeetYou = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 5e3, "ice", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 4100);
			for (var e = this.target.x < this.source.x ? -1 : 1, t = this.source.x + (this.target.x - this.source.x) / 2, i = this.source.y - 100, a = 0; 6 > a; a++) {
				var s = 100 + 65 * a,
					r = t + e * Math.floor(s * Math.cos(-Math.PI / 4)),
					o = i + Math.floor(s * Math.sin(-Math.PI / 4)),
					n = t + e * Math.floor(s * Math.cos(0)),
					l = i + Math.floor(s * Math.sin(0));
				h = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", 5 > a ? "ice-blast" : "ice-prison"), h.anchor.setTo(.5, .5), h.scale.x = h.scale.y = .5, h.alpha = 0, h.angle = 5 > a ? 90 : 0, this.overLayer.add(h), this.game.add.tween(h).to({
					x: t,
					y: i
				}, 1, Phaser.Easing.Linear.None).delay(500).to({
					x: r,
					y: o,
					alpha: 1
				}, 500, Phaser.Easing.Linear.None).to({}, 500 + 50 * a, Phaser.Easing.Linear.None).to({
					x: n,
					y: l
				}, 200, Phaser.Easing.Linear.None).to({}, 300, Phaser.Easing.Linear.None).to({
					x: r,
					y: o
				}, 300, Phaser.Easing.Linear.None).to({}, 300, Phaser.Easing.Linear.None).to({
					x: n,
					y: l
				}, 200, Phaser.Easing.Linear.None).to({}, 300, Phaser.Easing.Linear.None).to({
					x: r,
					y: o
				}, 300, Phaser.Easing.Linear.None).to({}, 300, Phaser.Easing.Linear.None).to({
					x: n,
					y: l
				}, 200, Phaser.Easing.Linear.None).to({}, 300, Phaser.Easing.Linear.None).start()
			}
			var h = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "ice-prison");
			h.anchor.setTo(.5, .5), h.alpha = 0, this.overLayer.add(h);
			for (var d = this.game.add.tween(h).to({
					x: t,
					y: i
				}, 1, Phaser.Easing.Linear.None).to({
					alpha: 1
				}, 500, Phaser.Easing.Linear.None), a = 0; 6 > a; a++) d.to({
				y: "+25"
			}, 250, Phaser.Easing.Quadratic.Out).to({
				y: "-25"
			}, 250, Phaser.Easing.Quadratic.In).to({
				y: "-25"
			}, 250, Phaser.Easing.Quadratic.Out).to({
				y: "+25"
			}, 250, Phaser.Easing.Quadratic.In);
			d.start(), h = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "ice-elemental"), h.anchor.setTo(.5, .5), h.alpha = 0, h.scale.y = 1.5, h.scale.x = 1.5 * e, this.overLayer.add(h);
			for (var p = this.game.add.tween(h).to({
					x: t,
					y: i - 100
				}, 1, Phaser.Easing.Linear.None).delay(250).to({
					alpha: 1
				}, 500, Phaser.Easing.Linear.None), a = 0; 6 > a; a++) p.to({
				y: "+25"
			}, 250, Phaser.Easing.Quadratic.Out).to({
				y: "-25"
			}, 250, Phaser.Easing.Quadratic.In).to({
				y: "-25"
			}, 250, Phaser.Easing.Quadratic.Out).to({
				y: "+25"
			}, 250, Phaser.Easing.Quadratic.In);
			p.start();
			var c = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-dome");
			this.overLayer.add(c), c.scale.x = c.scale.y = 0, c.alpha = .8, c.anchor.setTo(.5, .8), this.game.add.tween(c).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(1900).to({
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).to({
				alpha: .8
			}, 800, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).to({
				alpha: .8
			}, 800, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(c.scale).to({
				x: 3,
				y: 3
			}, 300, Phaser.Easing.Linear.None).delay(1900).to({
				x: 0,
				y: 0
			}, 800, Phaser.Easing.Linear.None).to({
				x: 3,
				y: 3
			}, 300, Phaser.Easing.Linear.None).to({
				x: 0,
				y: 0
			}, 800, Phaser.Easing.Linear.None).to({
				x: 3,
				y: 3
			}, 300, Phaser.Easing.Linear.None).start(), this.game.prodigy.effects.shake(1900, 100, 5, "v"), this.game.prodigy.effects.shake(3e3, 100, 5, "v"), this.game.prodigy.effects.shake(4100, 100, 5, "v")
		}, e
	}(),
	LeafWind = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 7e3, "earth", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 6500);
			for (var e = this.source.x < this.target.x ? -50 : 1330, t = this.source.x < this.target.x ? 1330 : -50, i = 0; 100 > i; i++) {
				var a = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "earth-leaf");
				Math.random() < .5 ? this.overLayer.add(a) : this.underLayer.add(a), a.anchor.setTo(Math.random(), Math.random()), this.game.add.tween(a).to({
					x: e,
					y: Math.floor(720 * Math.random())
				}, 1, Phaser.Easing.Linear.None).delay(50 * i).to({
					x: t,
					angle: 1e3
				}, 2e3, Phaser.Easing.Linear.None).start()
			}
		}, e
	}(),
	MagiShot = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 2e3, "wizard", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 1e3);
			for (var e = 100, t = (this.target.x - this.source.x) / e, i = 0; e > i; i++) {
				var a = (Math.random() < .25 ? "core-box-empty-" : "core-box-") + Math.floor(6 * Math.random()),
					s = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", a);
				s.anchor.setTo(.5, .5), s.scale.x = s.scale.y = 0, s.alpha = .8, this.overLayer.add(s);
				var r = Math.floor(1e3 * i / e),
					o = Math.floor(-20 + 40 * Math.random());
				this.game.add.tween(s).to({
					x: Math.floor(this.source.x + i * t),
					y: this.source.y - 50 + o
				}, 1, Phaser.Easing.Linear.None).delay(r).to({
					alpha: 0
				}, 500, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(s.scale).to({
					x: 1,
					y: 1
				}, 500, Phaser.Easing.Linear.None).delay(r).start()
			}
			for (var i = 0; 3 > i; i++) {
				var n = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-circle-small");
				this.underLayer.add(n), n.anchor.setTo(.5, .5), n.alpha = .25, n.scale.x = n.scale.y = 0, this.game.add.tween(n).to({
					x: this.target.x,
					y: this.target.y - 50
				}, 1, Phaser.Easing.Linear.None).delay(1e3 + 100 * i).to({
					alpha: 0
				}, 500, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(n.scale).to({
					x: 0,
					y: 0
				}, 1, Phaser.Easing.Linear.None).delay(1e3 + 100 * i).to({
					x: 10,
					y: 10
				}, 500, Phaser.Easing.Linear.None).start()
			}
			for (var e = 50, i = 0; e > i; i++) {
				var a = (Math.random() < .25 ? "core-box-empty-" : "core-box-") + Math.floor(6 * Math.random()),
					s = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", a);
				s.anchor.setTo(.5, .5), s.alpha = .8, this.overLayer.add(s);
				var l = 200 + Math.floor(200 * Math.random()),
					h = Math.random() * Math.PI * 2,
					t = Math.floor(this.target.x + l * Math.cos(h)),
					o = Math.floor(this.target.y + l * Math.sin(h)),
					d = 300 + Math.floor(300 * Math.random());
				this.game.add.tween(s).to({
					x: Math.floor(this.target.x),
					y: this.target.y - 50
				}, 1, Phaser.Easing.Linear.None).delay(1e3).to({
					x: t,
					y: -50 + o,
					alpha: 0
				}, d, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(s.scale).to({
					x: 1,
					y: 1
				}, d, Phaser.Easing.Linear.None).delay(1e3).start()
			}
		}, e
	}(),
	Mudball = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 2e3, "earth", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 1e3);
			var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "earth-mudball");
			e.anchor.setTo(.5, .5), e.scale.x = e.scale.y = .5, this.overLayer.add(e), this.game.add.tween(e).to({
				x: this.source.x,
				y: this.source.y - 100
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x
			}, 1e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start();
			var t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-head");
			t.alpha = .5, t.scale.x = this.source.x < this.target.x ? 1 : -1, t.anchor.setTo(.5, .5), this.overLayer.add(t), this.game.add.tween(t).to({
				x: this.source.x,
				y: this.source.y - 100
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x
			}, 1e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start(), t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-tail"), t.scale.x = 0, t.alpha = .5, t.anchor.setTo(1, .5), this.overLayer.add(t), this.game.add.tween(t).to({
				x: this.source.x + (this.source.x < this.target.x ? -42 : 42),
				y: this.source.y - 100
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x + (this.source.x < this.target.x ? -42 : 42)
			}, 1e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start(), this.game.add.tween(t.scale).to({
				x: this.source.x < this.target.x ? 1 : -1
			}, 500, Phaser.Easing.Linear.None).start();
			var i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-dome");
			this.overLayer.add(i), i.scale.x = i.scale.y = 0, i.alpha = .8, i.anchor.setTo(.5, .8), this.game.add.tween(i).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(1e3).to({
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(i.scale).to({
				x: 3,
				y: 3
			}, 300, Phaser.Easing.Linear.None).delay(1e3).start()
		}, e
	}(),
	Powerbeam = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 5e3, "wizard", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 4100);
			for (var e = this.target.x < this.source.x, t = 100, i = 0; t > i; i++) {
				var a = (Math.random() < .25 ? "core-box-empty-" : "core-box-") + Math.floor(6 * Math.random()),
					s = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", a);
				s.anchor.setTo(.5, .5), s.scale.x = s.scale.y = 0, s.alpha = .8, this.overLayer.add(s);
				var r = 200 + Math.floor(200 * Math.random()),
					o = Math.random() * Math.PI * 2,
					n = Math.floor(this.source.x + r * Math.cos(o)),
					l = Math.floor(this.source.y + r * Math.sin(o)),
					h = Math.floor(1e3 * i / t);
				this.game.add.tween(s).to({
					x: n,
					y: l - 50
				}, 1, Phaser.Easing.Linear.None).delay(h).to({
					x: this.source.x,
					y: this.source.y - 50
				}, 1e3, Phaser.Easing.Cubic.In).start(), this.game.add.tween(s.scale).to({
					x: 1.5,
					y: 1.5
				}, 400, Phaser.Easing.Quadratic.Out).delay(h).to({
					x: 0,
					y: 0
				}, 600, Phaser.Easing.Quadratic.In).start()
			}
			for (var i = 0; 3 > i; i++) {
				var d = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-circle-small");
				this.overLayer.add(d), d.anchor.setTo(.5, .5), d.alpha = .6, d.scale.x = d.scale.y = 0, this.game.add.tween(d).to({
					x: this.source.x,
					y: this.source.y - 50
				}, 1, Phaser.Easing.Linear.None).delay(2e3 + 200 * i).to({
					alpha: 0
				}, 500, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(d.scale).to({
					x: 0,
					y: 0
				}, 1, Phaser.Easing.Linear.None).delay(2e3 + 200 * i).to({
					x: 10,
					y: 10
				}, 500, Phaser.Easing.Linear.None).start()
			}
			var p = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-beam2");
			this.overLayer.add(p), p.alpha = .5, p.anchor.setTo(.5, 1), p.angle = 90, p.height = p.width = 0, this.game.add.tween(p).to({
				x: 0,
				y: this.source.y - 50
			}, 1, Phaser.Easing.Linear.None).delay(2e3).start(), this.game.add.tween(p).to({
				height: 1280,
				width: 300
			}, 100, Phaser.Easing.Linear.None).delay(2e3).to({}, 2e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 500, Phaser.Easing.Linear.None).start(), this.game.prodigy.effects.shake(2e3, 2e3), t = 100;
			for (var i = 0; t > i; i++) {
				var a = (Math.random() < .25 ? "core-box-empty-" : "core-box-") + Math.floor(6 * Math.random()),
					s = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", a);
				s.anchor.setTo(.5, .5), s.alpha = .8, this.overLayer.add(s);
				var l = this.game.rnd.integerInRange(-150, 150),
					h = 2e3 + Math.floor(2e3 * i / t);
				this.game.add.tween(s).to({
					x: e ? 1400 : 0,
					y: this.source.y - 50 + l
				}, 1, Phaser.Easing.Linear.None).delay(h).to({
					x: e ? -100 : 1400
				}, 500, Phaser.Easing.Linear.None).start()
			}
		}, e
	}(),
	Pummel = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 5500, "wizard", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 5e3);
			for (var e = 0; 9 > e; e++) {
				var t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-circle-small");
				this.underLayer.add(t), t.anchor.setTo(.5, .5), t.alpha = .6, t.scale.x = t.scale.y = 0, this.game.add.tween(t).to({
					x: this.target.x,
					y: this.target.y
				}, 1, Phaser.Easing.Linear.None).delay(500 * e).to({
					alpha: 0
				}, 500, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(t.scale).to({
					x: 0,
					y: 0
				}, 1, Phaser.Easing.Linear.None).delay(500 * e).to({
					x: 10,
					y: 5
				}, 500, Phaser.Easing.Linear.None).start()
			}
			for (var e = 0; 20 > e; e++) {
				var i = "core-box-" + Math.floor(6 * Math.random()),
					a = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", i);
				a.alpha = .75, a.anchor.setTo(.5, 0), a.height = 0, a.width = 80;
				var s = this.target.x + Math.floor(-200 + 400 * Math.random()),
					r = this.target.y + Math.floor(-200 + 400 * Math.random()),
					o = 1e3 + 200 * e;
				this.game.add.tween(a).to({
					x: s,
					y: 0
				}, 1, Phaser.Easing.Linear.None).delay(o).to({
					height: r
				}, 100, Phaser.Easing.Linear.None).to({
					alpha: 0
				}, 100, Phaser.Easing.Linear.None).start(), this.game.prodigy.effects.shake(o + 100, 100);
				var n = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-dome");
				this.overLayer.add(n), n.scale.x = n.scale.y = 0, n.alpha = .8, n.anchor.setTo(.5, .8), this.game.add.tween(n).to({
					x: s,
					y: r
				}, 1, Phaser.Easing.Linear.None).delay(o + 100).to({
					alpha: 0
				}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(n.scale).to({
					x: 3,
					y: 3
				}, 300, Phaser.Easing.Linear.None).delay(o + 100).start(), r < this.target.y ? (this.underLayer.add(a), this.underLayer.add(n)) : (this.overLayer.add(a), this.overLayer.add(n))
			}
		}, e
	}(),
	RainyDay = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 3500, "water", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 3e3);
			var e = new Phaser.TileSprite(this.game, 0, 0, 1280, 720, "attacks", "water-rain");
			this.showOverlay(e, 3e3, 5, 5, 0)
		}, e
	}(),
	Razorfire = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 3e3, "fire", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 2250);
			var e = new Array;
			e.push(this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "fire-bomb")), e.push(this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "fire-ring"));
			for (var t = this.source.x < this.target.x ? 1 : -1, i = 0; i < e.length; i++) this.overLayer.add(e[i]), e[i].anchor.setTo(.5, .5), e[i].scale.x = e[i].scale.y = 0, this.game.add.tween(e[i]).to({
				x: this.source.x
			}, 1, Phaser.Easing.Quadratic.Out).to({
				x: this.source.x + (this.target.x - this.source.x) / 2,
				angle: 100 * t
			}, 1e3, Phaser.Easing.Linear.None).to({
				angle: 4e3 * t
			}, 1e3, Phaser.Easing.Quadratic.In).to({
				x: this.target.x,
				angle: 4500 * t
			}, 250, Phaser.Easing.Linear.None).to({
				x: this.target.x + (this.target.x - this.source.x) / 2,
				angle: 5e3 * t,
				alpha: 0
			}, 250, Phaser.Easing.Linear.None).start(), this.game.add.tween(e[i]).to({
				y: this.source.y
			}, 1, Phaser.Easing.Quadratic.Out).to({
				y: this.source.y - 200
			}, 500, Phaser.Easing.Quadratic.Out).to({
				y: this.source.y
			}, 500, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(e[i].scale).to({
				x: 1 * -t,
				y: 1
			}, 1e3, Phaser.Easing.Quadratic.Out).start();
			for (var i = 0; 3 > i; i++) {
				var a = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "fire-cloud");
				this.overLayer.add(a), a.anchor.setTo(.5, .5), this.game.add.tween(a).to({
					x: this.target.x,
					y: this.target.y
				}, 1, Phaser.Easing.Quadratic.Out).delay(2250 + 80 * i).to({
					y: "-300",
					alpha: 0
				}, 500, Phaser.Easing.Quadratic.Out).start()
			}
			for (var i = 0; 10 > i; i++) {
				var a = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-cloud");
				this.underLayer.add(a), a.anchor.setTo(1 === t ? .75 : .25, .5);
				var s = this.source.x + (this.target.x - this.source.x) / 2;
				this.game.add.tween(a).to({
					x: s,
					y: this.target.y
				}, 1, Phaser.Easing.Quadratic.Out).delay(1e3 + 100 * i).to({
					x: s - 100 * t,
					y: "-100",
					alpha: 0
				}, 250, Phaser.Easing.Quadratic.Out).start()
			}
			var r = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-dome");
			this.overLayer.add(r), r.scale.x = r.scale.y = 0, r.alpha = .8, r.anchor.setTo(.5, .8), this.game.add.tween(r).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(2250).to({
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(r.scale).to({
				x: 3,
				y: 3
			}, 300, Phaser.Easing.Linear.None).delay(2250).start()
		}, e
	}(),
	Shocksphere = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 3500, "storm", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 2900);
			for (var e = 0; 2 > e; e++) {
				var t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-lightning-0");
				t.animations.add("a", ["storm-lightning-0", "storm-lightning-1", "storm-lightning-2"], 30 + Math.floor(5 * Math.random()), !0, !1), t.animations.play("a"), t.anchor.setTo(.5, 1), this.overLayer.add(t), t.scale.y = 0 === e ? 1 : -1, this.game.add.tween(t).to({
					x: this.target.x,
					y: 0 === e ? this.target.y - 50 - 82 : this.target.y - 50 + 82
				}, 1, Phaser.Easing.Linear.None).to({
					y: 0 === e ? "-82" : "+82"
				}, 400, Phaser.Easing.Quadratic.In).to({
					y: "-200"
				}, 2e3, Phaser.Easing.Linear.None).to({
					alpha: 0
				}, 1, Phaser.Easing.Linear.None).start()
			}
			var i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "water-prison");
			this.overLayer.add(i);
			var a = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-steam");
			this.underLayer.add(a), a.anchor.setTo(.5, .5), i.anchor.setTo(.5, .5), this.game.add.tween(i).to({
				x: this.target.x,
				y: this.target.y - 50,
				alpha: .75
			}, 1, Phaser.Easing.Linear.None).to({}, 400, Phaser.Easing.Linear.None).to({
				y: this.target.y - 250
			}, 2e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 100, Phaser.Easing.Linear.None).start(), this.game.add.tween(i.scale).to({
				x: 2,
				y: 2
			}, 400, Phaser.Easing.Quadratic.In).to({}, 2e3, Phaser.Easing.Linear.None).to({
				x: 5,
				y: 5
			}, 100, Phaser.Easing.Linear.None).start(), this.game.add.tween(this.target).to({
				y: "-200"
			}, 2e3, Phaser.Easing.Linear.None).delay(401).to({
				y: "+200"
			}, 500, Phaser.Easing.Quadratic.In).to({
				y: "-50"
			}, 250, Phaser.Easing.Quadratic.Out).to({
				y: "+50"
			}, 250, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(a).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(2901).to({
				y: "-100",
				alpha: 0
			}, 250, Phaser.Easing.Quadratic.Out).start()
		}, e
	}(),
	Snowman = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 5e3, "ice", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 4500);
			var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "ice-snowman-body");
			e.anchor.setTo(.5, 1), this.overLayer.add(e), this.game.add.tween(e).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(3e3).to({}, 1500, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 100, Phaser.Easing.Linear.None).start(), e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "ice-snowman-head"), e.anchor.setTo(.5, 1), e.scale.x = this.source.x < this.target.x ? -1 : 1, this.overLayer.add(e), this.game.add.tween(e).to({
				x: this.target.x,
				y: this.target.y - 100
			}, 1, Phaser.Easing.Linear.None).delay(3e3).to({}, 1500, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 100, Phaser.Easing.Linear.None).start(), e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "ice-snowman-body"), e.anchor.setTo(.5, .5), e.scale.x = e.scale.y = .25, this.overLayer.add(e), this.game.add.tween(e).to({
				x: this.source.x,
				y: this.source.y
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x,
				y: this.target.y - 168,
				angle: this.source.x < this.target.x ? 720 : -720
			}, 3e3, Phaser.Easing.Quadratic.Out).to({
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(e.scale).to({
				x: 2.5,
				y: 2.5
			}, 3e3, Phaser.Easing.Quadratic.Out).to({
				x: 5,
				y: 5
			}, 300, Phaser.Easing.Linear.None).start();
			var t = this.target.scale.x;
			this.game.add.tween(this.target.scale).to({
				x: 0,
				y: 0
			}, 1, Phaser.Easing.Linear.None).delay(3e3).to({}, 1500, Phaser.Easing.Linear.None).to({
				x: t,
				y: 1
			}, 200, Phaser.Easing.Linear.None).start();
			var i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-dome");
			this.overLayer.add(i), i.scale.x = i.scale.y = 0, i.alpha = .8, i.anchor.setTo(.5, .8), this.game.add.tween(i).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(4500).to({
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(i.scale).to({
				x: 3,
				y: 3
			}, 300, Phaser.Easing.Linear.None).delay(4500).start()
		}, e
	}(),
	StormComing = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 5e3, "storm", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 4500), this.game.prodigy.effects.shake(1500, 3e3, 3);
			var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-lightning-0");
			e.animations.add("a", ["storm-lightning-0", "storm-lightning-1", "storm-lightning-2"], 30, !0, !1), e.animations.play("a"), this.overLayer.add(e), e.anchor.setTo(.5, 1);
			var t = this.game.add.tween(e).to({
					x: this.target.x,
					y: 0
				}, 1, Phaser.Easing.Linear.None).delay(1500),
				i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-dome");
			this.overLayer.add(i), i.scale.x = i.scale.y = 0, i.alpha = .8, i.anchor.setTo(.5, .8);
			for (var a = this.game.add.tween(i), s = this.game.add.tween(i.scale), r = 0; 25 > r; r++) {
				var o = Math.floor(50 + 1180 * Math.random()),
					n = this.target.y + Math.floor(-50 + 300 * Math.random());
				t.to({
					x: o,
					y: 0
				}, 1, Phaser.Easing.Linear.None), t.to({
					y: n
				}, 99, Phaser.Easing.Linear.None), a.to({
					x: o,
					y: n,
					alpha: 1
				}, 1, Phaser.Easing.Linear.None), a.to({
					alpha: 0
				}, 99, Phaser.Easing.Linear.None), s.to({
					x: 0,
					y: 0
				}, 1, Phaser.Easing.Linear.None), s.to({
					x: 2,
					y: 2
				}, 99, Phaser.Easing.Linear.None)
			}
			t.to({
				x: Attack.BX,
				y: Attack.BY
			}, 1, Phaser.Easing.Linear.None), a.delay(1600).start(), s.delay(1600).start(), t.start();
			for (var l = 320, r = 0; 4 > r; r++) {
				var i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-cloud2");
				this.overLayer.add(i), i.scale.x = i.scale.y = 2.5, i.anchor.setTo(.5, 1), this.game.add.tween(i).to({
					x: 180 + r * l,
					y: 0
				}, 1, Phaser.Easing.Linear.None).to({
					y: 150
				}, 1500, Phaser.Easing.Quadratic.Out).to({}, 3e3, Phaser.Easing.Linear.None).to({
					alpha: 0
				}, 300, Phaser.Easing.Linear.None).start()
			}
			var h = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-titan");
			this.overLayer.add(h), h.anchor.setTo(.5, .5), h.alpha = .75, this.game.add.tween(h).to({
				x: 640,
				y: 360
			}, 1, Phaser.Easing.Linear.None).delay(1500).to({}, 3e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(h.scale).to({
				x: 2,
				y: 2
			}, 3e3, Phaser.Easing.Linear.None).delay(1500).to({
				x: 4,
				y: 4
			}, 300, Phaser.Easing.Linear.None).start()
		}, e
	}(),
	TempAttack = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 6e3, "ice", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 6e3), this.game.prodigy.effects.shake(4e3, 1500, 3, null), this.manager = this.game.plugins.add(Phaser.ParticleStorm);
			var e = {
				lifespan: 4e3,
				image: "attacks",
				frame: "ice-snow",
				ay: -.08,
				vx: {
					value: {
						min: -2,
						max: 2
					},
					control: [{
						x: 0,
						y: 1
					}, {
						x: 1,
						y: .1
					}]
				},
				vy: {
					value: 0,
					control: [{
						x: 0,
						y: 1
					}, {
						x: 1,
						y: .1
					}]
				}
			};
			this.manager.addData("snow", e), emitter = this.manager.createEmitter(), emitter.createGravityWell(this.target.x, this.target.y, 100), emitter.addToWorld(this.foreground), emitter.emit("snow", this.source.x + 40, this.source.y - 80, {
				repeat: 120,
				frequency: 10,
				total: 50
			})
		}, e
	}(),
	Thunderdome = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 5e3, "storm", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 4500);
			for (var e = 0; 2 > e; e++) {
				var t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-dome");
				this.overLayer.add(t), t.scale.x = t.scale.y = 0, t.alpha = .5, t.anchor.setTo(.5, .8), this.game.add.tween(t).to({
					x: this.target.x,
					y: this.target.y
				}, 1, Phaser.Easing.Linear.None).delay(150 * e).to({}, 4300, Phaser.Easing.Linear.None).to({
					alpha: 0
				}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(t.scale).to({
					x: 3,
					y: 3
				}, 4e3, Phaser.Easing.Linear.None).delay(150 * e).to({
					x: 1.5,
					y: 1.5
				}, 300, Phaser.Easing.Quadratic.Out).to({
					x: 4,
					y: 4
				}, 300, Phaser.Easing.Quadratic.In).start()
			}
			var i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-lightning-0");
			i.animations.add("a", ["storm-lightning-0", "storm-lightning-1", "storm-lightning-2"], 30, !0, !1), i.animations.play("a"), this.overLayer.add(i), i.anchor.setTo(.5, 1);
			for (var a = this.game.add.tween(i).to({
					x: this.target.x,
					y: 0
				}, 1, Phaser.Easing.Linear.None), e = 0; 30 > e; e++) {
				var s = 100 * e,
					r = 25e-5 * s * 300,
					o = Math.PI * Math.random(),
					n = this.target.x + r * Math.cos(o),
					l = this.target.y + r * Math.sin(o);
				l > this.target.y && (l = this.target.y - (l - this.target.y)), a.to({
					x: n,
					y: 0
				}, 1, Phaser.Easing.Linear.None), a.to({
					y: l
				}, 99, Phaser.Easing.Linear.None)
			}
			a.to({
				x: Attack.BX,
				y: Attack.BY
			}, 1, Phaser.Easing.Linear.None), a.start()
		}, e
	}(),
	Trinity = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 3e3, "storm", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 2e3);
			for (var e = 2 * Math.PI / 3, t = 0; 3 > t; t++) {
				var i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-lightning-0");
				i.animations.add("a", ["storm-lightning-0", "storm-lightning-1", "storm-lightning-2"], 30 + Math.floor(5 * Math.random()), !0, !1), i.animations.play("a"), i.anchor.setTo(.5, 1);
				var a = this.target.x + Math.floor(300 * Math.cos(-Math.PI / 4 + e * t)),
					s = this.target.y + Math.floor(300 * Math.sin(-Math.PI / 4 + e * t));
				s < this.target.y ? this.underLayer.add(i) : this.overLayer.add(i), this.game.add.tween(i).to({
					x: a,
					y: s
				}, 1, Phaser.Easing.Linear.None).to({
					x: this.target.x,
					y: this.target.y
				}, 2e3, Phaser.Easing.Quadratic.In).to({
					alpha: 0
				}, 1, Phaser.Easing.Linear.None).start()
			}
			for (var t = 0; 2 > t; t++) {
				var r = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-dome");
				this.overLayer.add(r), r.scale.x = r.scale.y = 0, r.alpha = .5, r.anchor.setTo(.5, .8), this.game.add.tween(r).to({
					x: this.target.x,
					y: this.target.y
				}, 1, Phaser.Easing.Linear.None).delay(2e3 + 150 * t).to({
					alpha: 0
				}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(r.scale).to({
					x: 4,
					y: 4
				}, 300, Phaser.Easing.Linear.None).delay(2e3 + 150 * t).start()
			}
		}, e
	}(),
	WaterBlast = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 2e3, "water", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 1e3);
			var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "water-bubble");
			e.anchor.setTo(.5, .5), this.overLayer.add(e), this.game.add.tween(e).to({
				x: this.source.x,
				y: this.source.y - 100
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x
			}, 1e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start();
			var t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-head");
			t.alpha = .5, t.scale.x = this.source.x < this.target.x ? 1 : -1, t.anchor.setTo(.5, .5), this.overLayer.add(t), this.game.add.tween(t).to({
				x: this.source.x,
				y: this.source.y - 100
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x
			}, 1e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start(), t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-tail"), t.scale.x = 0, t.alpha = .5, t.anchor.setTo(1, .5), this.overLayer.add(t), this.game.add.tween(t).to({
				x: this.source.x + (this.source.x < this.target.x ? -42 : 42),
				y: this.source.y - 100
			}, 1, Phaser.Easing.Linear.None).to({
				x: this.target.x + (this.source.x < this.target.x ? -42 : 42)
			}, 1e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start(), this.game.add.tween(t.scale).to({
				x: this.source.x < this.target.x ? 1 : -1
			}, 500, Phaser.Easing.Linear.None).start();
			var i = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-dome");
			this.overLayer.add(i), i.scale.x = i.scale.y = 0, i.alpha = .8, i.anchor.setTo(.5, .8), this.game.add.tween(i).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(1e3).to({
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).start(), this.game.add.tween(i.scale).to({
				x: 3,
				y: 3
			}, 300, Phaser.Easing.Linear.None).delay(1e3).start()
		}, e
	}(),
	WaterBomb = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 4e3, "water", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 3300);
			var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "water-bubble-big");
			this.overLayer.add(e), e.anchor.setTo(.5, .5), this.game.add.tween(e).to({
				x: this.target.x,
				y: -200
			}, 1, Phaser.Easing.Linear.None).to({
				y: 40
			}, 1500, Phaser.Easing.Quadratic.Out).to({
				y: this.target.y
			}, 1500, Phaser.Easing.Quadratic.In).to({
				alpha: 0
			}, 1, Phaser.Easing.Linear.None).start(), this.game.add.tween(e.scale).to({
				x: .5,
				y: 2
			}, 1500, Phaser.Easing.Quadratic.Out).to({
				x: 1.25,
				y: .75
			}, 300, Phaser.Easing.Quadratic.Out).to({
				x: .75,
				y: 1.25
			}, 300, Phaser.Easing.Quadratic.InOut).to({
				x: 1.25,
				y: .75
			}, 300, Phaser.Easing.Quadratic.InOut).to({
				x: .75,
				y: 1.25
			}, 300, Phaser.Easing.Quadratic.InOut).to({
				x: 1.25,
				y: .75
			}, 300, Phaser.Easing.Quadratic.InOut).start();
			var t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "water-splash");
			this.overLayer.add(t), t.anchor.setTo(.5, .8), this.game.add.tween(t).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(3e3).start(), this.game.add.tween(t.scale).to({
				x: 2,
				y: 0
			}, 1, Phaser.Easing.Linear.None).delay(3e3).to({
				y: 2
			}, 300, Phaser.Easing.Quadratic.Out).to({
				y: 0
			}, 300, Phaser.Easing.Quadratic.In).start()
		}, e
	}(),
	WaterBubble = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 4e3, "water", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 3e3);
			var e = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "water-prison");
			this.overLayer.add(e);
			var t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-steam");
			this.underLayer.add(t), t.anchor.setTo(.5, .5), e.anchor.setTo(.5, .5);
			this.game.add.tween(e).to({
				x: this.target.x,
				y: this.target.y - 50,
				alpha: .75
			}, 1, Phaser.Easing.Linear.None).to({}, 500, Phaser.Easing.Linear.None).to({
				y: this.target.y - 450
			}, 1500, Phaser.Easing.Quadratic.Out).to({
				alpha: 0
			}, 100, Phaser.Easing.Linear.None).start(), this.game.add.tween(e.scale).to({
				x: 2.5,
				y: 2.5
			}, 400, Phaser.Easing.Quadratic.In).to({
				x: 3,
				y: 3
			}, 400, Phaser.Easing.Quadratic.Out).to({
				x: 2.5,
				y: 2.5
			}, 400, Phaser.Easing.Quadratic.In).to({
				x: 3,
				y: 3
			}, 400, Phaser.Easing.Quadratic.Out).to({
				x: 2.5,
				y: 2.5
			}, 400, Phaser.Easing.Quadratic.In).to({
				x: 5,
				y: 5
			}, 100, Phaser.Easing.Linear.None).start(), this.game.add.tween(this.target).to({
				y: "-400"
			}, 1500, Phaser.Easing.Quadratic.Out).delay(501).to({
				y: "+400"
			}, 1e3, Phaser.Easing.Quadratic.In).to({
				y: "-50"
			}, 250, Phaser.Easing.Quadratic.Out).to({
				y: "+50"
			}, 250, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(t).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(3001).to({
				y: "-100",
				alpha: 0
			}, 250, Phaser.Easing.Quadratic.Out).start()
		}, e
	}(),
	Whirlwind = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 3e3, "earth", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 2e3);
			for (var e = 0; 100 > e; e++) {
				var t = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "earth-leaf");
				this.overLayer.add(t);
				var i = 4 + 2 * Math.random();
				t.anchor.setTo(i, i), t.scale.x = t.scale.y = 0, t.angle = Math.floor(360 * Math.random());
				var a = (Math.random() < .5 ? "+" : "-") + (200 + Math.floor(500 * Math.random())),
					s = 400 + Math.floor(200 * Math.random()),
					r = Math.random() * Math.PI * 2,
					o = Math.floor(this.target.x + s * Math.cos(r)),
					n = Math.floor(this.target.y + s * Math.sin(r));
				this.game.add.tween(t).to({
					x: this.target.x,
					y: this.target.y
				}, 1, Phaser.Easing.Linear.None).to({
					angle: a
				}, 2e3, Phaser.Easing.Linear.None).to({
					x: o,
					y: n,
					alpha: 0
				}, 300, Phaser.Easing.Quadratic.Out).start(), this.game.add.tween(t.anchor).to({
					x: .5,
					y: .5
				}, 500, Phaser.Easing.Linear.None).delay(1500).start(), this.game.add.tween(t.scale).to({
					x: 1,
					y: 1
				}, 250, Phaser.Easing.Linear.None).start()
			}
		}, e
	}(),
	Zero = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Attack.call(this, e, t, i, a, s, 6500, "wizard", r, o, n, l)
		}
		return e.prototype = Object.create(Attack.prototype), e.prototype.setup = function () {
			Attack.prototype.setup.call(this, 5e3);
			for (var e = Math.floor(this.source.x + (this.target.x - this.source.x) / 2), t = this.source.y - 250, i = 50, a = 0; i > a; a++) {
				var s = (Math.random() < .25 ? "core-box-empty-" : "core-box-") + Math.floor(6 * Math.random()),
					r = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", s);
				r.anchor.setTo(.5, .5), r.alpha = .8, this.overLayer.add(r);
				var o = Math.floor(4500 * a / i),
					n = Math.floor(-20 + 40 * Math.random());
				this.game.add.tween(r).to({
					x: this.source.x,
					y: this.source.y - 50 + n
				}, 1, Phaser.Easing.Linear.None).delay(o).to({
					x: e,
					y: t
				}, 500, Phaser.Easing.Linear.None).to({
					alpha: 0
				}, 1, Phaser.Easing.Linear.None).start()
			}
			for (var o = 0, a = 0; 12 > a; a++) {
				var l = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "core-circle-small");
				this.underLayer.add(l), l.anchor.setTo(.5, .5), l.alpha = .25, l.scale.x = l.scale.y = 20, this.game.add.tween(l).to({
					x: e,
					y: t
				}, 1, Phaser.Easing.Linear.None).delay(o).to({}, 800, Phaser.Easing.Linear.None).to({
					alpha: 0
				}, 1, Phaser.Easing.Linear.None).start(), this.game.add.tween(l.scale).to({
					x: 0,
					y: 0
				}, 800, Phaser.Easing.Linear.None).delay(o).start(), o += 500 - 20 * a
			}
			var l = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "ice-snowman-body");
			this.overLayer.add(l), l.anchor.setTo(.5, .5), l.alpha = .5, l.scale.x = l.scale.y = 0, this.game.add.tween(l).to({
				x: e,
				y: t
			}, 1, Phaser.Easing.Linear.None).to({}, 5e3, Phaser.Easing.Linear.None).to({
				alpha: 0
			}, 400, Phaser.Easing.Linear.None).start(), this.game.add.tween(l.scale).to({
				x: 4,
				y: 4
			}, 5e3, Phaser.Easing.Linear.None).to({
				x: 10,
				y: 10
			}, 400, Phaser.Easing.Linear.None).start();
			var h = this.game.prodigy.create.sprite(Attack.BX, Attack.BY, "attacks", "storm-steam");
			this.underLayer.add(h), h.anchor.setTo(.5, .5), this.game.add.tween(h).to({
				x: this.target.x,
				y: this.target.y
			}, 1, Phaser.Easing.Linear.None).delay(5400).to({
				y: "-100",
				alpha: 0
			}, 250, Phaser.Easing.Quadratic.Out).start(), this.game.add.tween(this.target).to({
				x: e
			}, 3e3, Phaser.Easing.Quadratic.In).to({}, 2e3, Phaser.Easing.Linear.None).to({
				x: this.target.x
			}, 200, Phaser.Easing.Linear.None).start(), this.game.add.tween(this.target).to({
				y: t + 50
			}, 1e3, Phaser.Easing.Quadratic.In).delay(2e3).to({}, 2e3, Phaser.Easing.Linear.None).to({
				y: this.target.y
			}, 200, Phaser.Easing.Linear.None).to({
				y: "-50"
			}, 250, Phaser.Easing.Quadratic.Out).to({
				y: "+50"
			}, 250, Phaser.Easing.Quadratic.In).start(), this.game.prodigy.effects.shake(0, 5e3, 3, "v"), this.game.prodigy.effects.shake(5e3, 1e3, 15)
		}, e
	}();
Prodigy.SkillNode = function (e) {
	this.ID = e.ID, this.difficulty = e.d, this.nFactor = e.n || 0, this.topic = e.t || "", this.questions = e.q, this.grade = 1, this.prereqs = [], this.next = [], this.correct = 0, this.incorrect = 0, this.time = 0, this.theta = null, this.decay = 0, this.lock = 0, this.incorrectT = 0, this.correctT = 0, this.previous = [], this.localLock = [], this.marked = !1, this.lastTime = 0
}, Prodigy.SkillNode.prototype = {
	constructor: Prodigy.SkillNode,
	init: function (e, t, i, a) {
		this.theta = e, this.decay = t, this.lock = i, this.lastTime = Util.isDefined(a) ? a : 9999, this.lock > 0 && this.setLocalLock(this.ID, !0)
	},
	getData: function () {
		var e = {};
		return e.ID = this.ID, e.decay = this.decay, e.theta = this.theta, e.correct = this.correct, e.incorrect = this.incorrect, e.time = this.time, e.lock = this.lock, this.time = this.correct = this.incorrect = 0, e
	},
	getTheta: function () {
		var e = this.theta - Math.max(0, this.decay - 3 * .6);
		return -3 > e && (e = -3), e > 3 && (e = 3), e
	},
	getNormalizedTheta: function () {
		var e = this.getTheta() + 3;
		return e / 6
	},
	isMastered: function () {
		return Util.isDefined(this.theta) && this.getTheta() >= 3
	},
	isStruggling: function () {
		return Util.isDefined(this.theta) && this.getTheta() < -1.8
	},
	isValid: function () {
		return !this.lock && this.localLock.length <= 0 && !this.isMastered()
	},
	isNew: function () {
		return !Util.isDefined(this.theta)
	},
	setLock: function (e) {
		this.updated = !0, this.lock = e, this.setLocalLock(this.ID, e)
	},
	setLocalLock: function (e, t) {
		for (var i = 0; i < this.next.length; i++) this.next[i].setLocalLock(e, t);
		this.ID !== e && (t && !Util.inArray(this.localLock, e) ? this.localLock.push(e) : t || Util.removeFromArray(e, this.localLock))
	},
	decrementLock: function () {
		this.lock > 0 && (this.lock--, 0 === this.lock && (this.theta = -2, this.setLock(0)), this.updated = !0)
	},
	decaySkill: function (e, t) {
		if (!(0 >= e)) {
			t || this.setDecay(e);
			for (var i = 0; i < this.prereqs.length; i++) this.prereqs[i].decaySkill(t ? e : e - .6)
		}
	},
	setDecay: function (e) {
		this.updated = !0, Util.isDefined(this.theta) && e > 0 && this.decay < 3 * .6 && this.decay + e >= 3 * .6 ? this.decay += e + 3 * .6 : Util.isDefined(this.theta) && 0 > e && this.decay >= 3 * .6 && this.decay + e <= 3 * .6 ? this.decay = 0 : this.decay += e, this.decay < 0 && (this.decay = 0), this.decay > 9 && (this.decay = 9), e > 0 && console.log("DECAY " + this.ID + " BY " + e + ": " + this.decay)
	},
	initNew: function (e) {
		this.theta = e ? 1 : -1, this.decay = 0
	},
	answerQuestion: function (e, t, i, a) {
		this.updated = !0, i > 600 && (i = 600), this.time += i || 0, t ? (this.correct++, this.correctT++, this.setDecay(-.6), this.theta = Math.min(3, this.theta + .6 + e)) : (this.incorrect++, this.incorrectT++, this.decaySkill(this.isStruggling() ? 1.2 : .6, !0), this.theta = Math.max(-3, this.theta - 1.2 - e)), !a && (this.incorrectT >= 3 || this.theta <= -3) && (this.incorrectT = 0, this.setLock(20), this.decaySkill(1.2, !0))
	}
}, Prodigy.SkillTree = function () {
	this.skills = [];
	for (var e = 0; e < Prodigy.SkillTree.data.length; e++) this.skills.push(new Prodigy.SkillNode(Prodigy.SkillTree.data[e]));
	for (var e = 0; e < Prodigy.SkillTree.data.length; e++)
		for (var t = Prodigy.SkillTree.data[e], i = this.skills[e], a = 0; a < t.prereqs.length; a++) {
			var s = this.getSkill(t.prereqs[a]);
			Util.isDefined(s) ? (i.prereqs.push(s), s.next.push(i)) : console.log(t.prereqs[a])
		}
	this.skills.sort(function (e, t) {
		return 1e3 * (e.difficulty - t.difficulty) + e.topic.localeCompare(t.topic)
	})
}, Prodigy.SkillTree.prototype = {
	constructor: Prodigy.SkillTree,
	init: function (e) {
		for (var t = 0; t < e.length; t++) {
			var i = e[t],
				a = this.getSkill(i.skillID);
			Util.isDefined(a) && a.init(i.theta, i.decay, i.lock, i.last_updated)
		}
	},
	getSkill: function (e) {
		for (var t = 0; t < this.skills.length; t++) {
			var i = this.skills[t];
			if (i.ID == e) return i
		}
		return null
	},
	getSkills: function (e) {
		for (var t = [], i = 0; i < this.skills.length; i++) {
			var a = this.skills[i];
			Util.inArray(e, a.ID) && t.push(a)
		}
		return t
	},
	isMastered: function (e) {
		for (var t = 0; t < this.skills.length; t++) {
			var i = this.skills[t];
			if (Util.inArray(e, i.ID) && !i.isMastered()) return !1
		}
		return !0
	},
	getUpdatedData: function () {
		for (var e = [], t = 0; t < this.skills.length; t++) {
			var i = this.skills[t];
			i.updated && i.marked && (i.updated = !1, e.push(i.getData()))
		}
		return e
	},
	decrementLocks: function () {
		for (var e = 0; e < this.skills.length; e++) this.skills[e].decrementLock()
	},
	setCurriculum: function (e, t) {
		for (var i = 0; i < this.skills.length; i++) {
			var a = this.skills[i];
			a.marked = !1, a.grade = -1
		}
		for (var s = 8; s >= 0; s--)
			for (var r = Prodigy.EducationSystem.getAlignedSkills(s, e, t), i = 0; i < r.length; i++) {
				var a = this.getSkill(r[i]);
				Util.isDefined(a) && (a.grade = s, a.marked = !0)
			}
	}
}, Prodigy.SkillTree.data = [{
	ID: 1267,
	t: "Counting",
	q: 50,
	d: -100,
	prereqs: []
}, {
	ID: 92,
	t: "Reading Numbers",
	q: 20,
	d: 100,
	prereqs: []
}, {
	ID: 93,
	t: "Reading Numbers",
	q: 20,
	d: 100,
	prereqs: []
}, {
	ID: 200,
	t: "Location",
	q: 28,
	d: 200,
	prereqs: []
}, {
	ID: 201,
	t: "Location",
	q: 28,
	d: 200,
	prereqs: []
}, {
	ID: 214,
	t: "Measurement ",
	q: 40,
	d: 200,
	prereqs: []
}, {
	ID: 231,
	t: "Counting",
	q: 30,
	d: 200,
	prereqs: []
}, {
	ID: 424,
	t: "Reading Numbers",
	q: 10,
	d: 200,
	prereqs: [93]
}, {
	ID: 425,
	t: "Reading Numbers",
	q: 10,
	d: 200,
	prereqs: [92, 424]
}, {
	ID: 426,
	t: "Counting",
	q: 50,
	d: 300,
	prereqs: [94]
}, {
	ID: 430,
	t: "Counting",
	q: 50,
	d: 300,
	prereqs: [426]
}, {
	ID: 435,
	t: "Reading Numbers",
	q: 50,
	d: 300,
	prereqs: [425]
}, {
	ID: 94,
	t: "Counting",
	q: 50,
	d: 300,
	prereqs: [231]
}, {
	ID: 1264,
	t: "Counting",
	q: 40,
	d: 300,
	prereqs: []
}, {
	ID: 1198,
	t: "Counting",
	q: 50,
	d: 300,
	prereqs: [1203]
}, {
	ID: 1203,
	t: "Counting",
	q: 50,
	d: 300,
	prereqs: [231]
}, {
	ID: 1259,
	t: "Counting",
	q: 50,
	d: 400,
	prereqs: [1264]
}, {
	ID: 95,
	t: "Counting",
	q: 50,
	d: 400,
	prereqs: [94]
}, {
	ID: 73,
	t: "Counting",
	q: 47,
	d: 400,
	prereqs: [426]
}, {
	ID: 96,
	t: "Counting",
	q: 50,
	d: 500,
	prereqs: [95]
}, {
	ID: 431,
	t: "Counting",
	q: 50,
	d: 500,
	prereqs: [427, 430]
}, {
	ID: 427,
	t: "Counting",
	q: 49,
	d: 500,
	prereqs: [73, 95]
}, {
	ID: 1252,
	t: "Reading Numbers",
	q: 50,
	d: 500,
	prereqs: [427]
}, {
	ID: 1199,
	t: "Counting",
	q: 50,
	d: 500,
	prereqs: [1198]
}, {
	ID: 1204,
	t: "Place Value",
	q: 50,
	d: 600,
	prereqs: []
}, {
	ID: 1205,
	t: "Place Value",
	q: 50,
	d: 600,
	prereqs: []
}, {
	ID: 428,
	t: "Counting",
	q: 20,
	d: 600,
	prereqs: [427, 96]
}, {
	ID: 432,
	t: "Counting",
	q: 50,
	d: 600,
	prereqs: [428, 431]
}, {
	ID: 97,
	t: "Counting",
	q: 50,
	d: 600,
	prereqs: [96]
}, {
	ID: 84,
	t: "Reading Numbers",
	q: 50,
	d: 600,
	prereqs: [1252]
}, {
	ID: 72,
	t: "Counting",
	q: 22,
	d: 700,
	prereqs: [97, 428]
}, {
	ID: 103,
	t: "Counting",
	q: 50,
	d: 700,
	prereqs: [97]
}, {
	ID: 185,
	t: "Place Value",
	q: 50,
	d: 700,
	prereqs: [349, 1205]
}, {
	ID: 158,
	t: "Counting",
	q: 50,
	d: 700,
	prereqs: [432]
}, {
	ID: 349,
	t: "Reading Numbers",
	q: 50,
	d: 700,
	prereqs: [1268]
}, {
	ID: 1200,
	t: "Counting",
	q: 50,
	d: 700,
	prereqs: [1199]
}, {
	ID: 1268,
	t: "Counting",
	q: 50,
	d: 700,
	prereqs: [1204]
}, {
	ID: 1273,
	t: "Place Value",
	q: 50,
	d: 800,
	prereqs: []
}, {
	ID: 389,
	t: "Counting",
	q: 50,
	d: 800,
	prereqs: [98]
}, {
	ID: 135,
	t: "Time",
	q: 24,
	d: 800,
	prereqs: []
}, {
	ID: 186,
	t: "Place Value",
	q: 50,
	d: 800,
	prereqs: [185]
}, {
	ID: 227,
	t: "Addition to 20",
	q: 33,
	d: 800,
	prereqs: [94]
}, {
	ID: 98,
	t: "Counting",
	q: 39,
	d: 800,
	prereqs: [103]
}, {
	ID: 74,
	t: "Counting",
	q: 34,
	d: 800,
	prereqs: [72, 98]
}, {
	ID: 434,
	t: "Counting",
	q: 32,
	d: 800,
	prereqs: [158, 72]
}, {
	ID: 460,
	t: "Word Problems",
	q: 40,
	d: 800,
	prereqs: [74]
}, {
	ID: 429,
	t: "Counting",
	q: 50,
	d: 900,
	prereqs: [103]
}, {
	ID: 470,
	t: "Time",
	q: 50,
	d: 900,
	prereqs: []
}, {
	ID: 475,
	t: "Time",
	q: 24,
	d: 900,
	prereqs: []
}, {
	ID: 75,
	t: "Patterning",
	q: 50,
	d: 900,
	prereqs: [429]
}, {
	ID: 50,
	t: "Addition to 20",
	q: 39,
	d: 900,
	prereqs: [227]
}, {
	ID: 90,
	t: "Comparing Numbers",
	q: 50,
	d: 900,
	prereqs: []
}, {
	ID: 109,
	t: "Ordering Numbers",
	q: 40,
	d: 900,
	prereqs: [92]
}, {
	ID: 148,
	t: "Ordering Numbers",
	q: 50,
	d: 900,
	prereqs: [103]
}, {
	ID: 149,
	t: "Ordering Numbers",
	q: 50,
	d: 900,
	prereqs: [148]
}, {
	ID: 176,
	t: "Counting",
	q: 50,
	d: 900,
	prereqs: [74]
}, {
	ID: 177,
	t: "Counting",
	q: 50,
	d: 900,
	prereqs: [74, 176]
}, {
	ID: 1256,
	t: "Counting",
	q: 50,
	d: 900,
	prereqs: [1268, 1259]
}, {
	ID: 1201,
	t: "Counting",
	q: 50,
	d: 900,
	prereqs: [1200]
}, {
	ID: 1220,
	t: "Comparing Numbers",
	q: 50,
	d: 1e3,
	prereqs: [439]
}, {
	ID: 1228,
	t: "Place Value",
	q: 46,
	d: 1e3,
	prereqs: [99, 1273]
}, {
	ID: 89,
	t: "Comparing Numbers",
	q: 50,
	d: 1e3,
	prereqs: [90]
}, {
	ID: 91,
	t: "Ordering Numbers",
	q: 50,
	d: 1e3,
	prereqs: [149]
}, {
	ID: 99,
	t: "Addition to 20",
	q: 47,
	d: 1e3,
	prereqs: [227]
}, {
	ID: 473,
	t: "Time",
	q: 50,
	d: 1e3,
	prereqs: [475, 470]
}, {
	ID: 436,
	t: "Ordering Numbers",
	q: 50,
	d: 1e3,
	prereqs: [148, 429, 1201]
}, {
	ID: 437,
	t: "Ordering Numbers",
	q: 50,
	d: 1e3,
	prereqs: [149, 436]
}, {
	ID: 439,
	t: "Comparing Numbers",
	q: 50,
	d: 1e3,
	prereqs: [90]
}, {
	ID: 443,
	t: "Comparing Numbers",
	q: 50,
	d: 1e3,
	prereqs: [439]
}, {
	ID: 444,
	t: "Comparing Numbers",
	q: 50,
	d: 1100,
	prereqs: [443, 440]
}, {
	ID: 445,
	t: "Ordering Numbers",
	q: 50,
	d: 1100,
	prereqs: [442]
}, {
	ID: 447,
	t: "Comparing Numbers",
	q: 50,
	d: 1100,
	prereqs: [443]
}, {
	ID: 440,
	t: "Comparing Numbers",
	q: 50,
	d: 1100,
	prereqs: [89, 439]
}, {
	ID: 441,
	t: "Ordering Numbers",
	q: 50,
	d: 1100,
	prereqs: [434]
}, {
	ID: 442,
	t: "Ordering Numbers",
	q: 50,
	d: 1100,
	prereqs: [437, 441]
}, {
	ID: 438,
	t: "Ordering Numbers",
	q: 50,
	d: 1100,
	prereqs: [91, 437]
}, {
	ID: 544,
	t: "Comparing Numbers",
	q: 50,
	d: 1100,
	prereqs: [439, 440, 1220]
}, {
	ID: 552,
	t: "Comparing Numbers",
	q: 50,
	d: 1100,
	prereqs: [444]
}, {
	ID: 3,
	t: "Addition to 20",
	q: 45,
	d: 1100,
	prereqs: [99]
}, {
	ID: 4,
	t: "Addition to 20",
	q: 90,
	d: 1100,
	prereqs: [50]
}, {
	ID: 181,
	t: "Patterning",
	q: 50,
	d: 1100,
	prereqs: [75]
}, {
	ID: 229,
	t: "Comparing Numbers",
	q: 50,
	d: 1100,
	prereqs: [89]
}, {
	ID: 391,
	t: "Comparing Numbers",
	q: 40,
	d: 1100,
	prereqs: [229, 91]
}, {
	ID: 1208,
	t: "Addition to 20",
	q: 50,
	d: 1100,
	prereqs: [4]
}, {
	ID: 1185,
	t: "Addition to 20",
	q: 50,
	d: 1200,
	prereqs: [1208]
}, {
	ID: 789,
	t: "Place Value",
	q: 50,
	d: 1200,
	prereqs: [186]
}, {
	ID: 399,
	t: "Word Problems",
	q: 50,
	d: 1200,
	prereqs: [237]
}, {
	ID: 237,
	t: "Comparing Numbers",
	q: 50,
	d: 1200,
	prereqs: [229, 440]
}, {
	ID: 232,
	t: "Subtraction to 20",
	q: 20,
	d: 1200,
	prereqs: [98]
}, {
	ID: 546,
	t: "Addition to 20",
	q: 42,
	d: 1200,
	prereqs: [3]
}, {
	ID: 448,
	t: "Comparing Numbers",
	q: 50,
	d: 1200,
	prereqs: [444]
}, {
	ID: 446,
	t: "Ordering Numbers",
	q: 50,
	d: 1200,
	prereqs: [441]
}, {
	ID: 477,
	t: "Time",
	q: 24,
	d: 1200,
	prereqs: [475]
}, {
	ID: 478,
	t: "Time",
	q: 50,
	d: 1200,
	prereqs: [470]
}, {
	ID: 479,
	t: "Time",
	q: 47,
	d: 1300,
	prereqs: [473, 477, 478]
}, {
	ID: 228,
	t: "Addition to 20",
	q: 50,
	d: 1300,
	prereqs: [3]
}, {
	ID: 136,
	t: "Addition to 20",
	q: 45,
	d: 1300,
	prereqs: [99]
}, {
	ID: 49,
	t: "Subtraction to 20",
	q: 45,
	d: 1300,
	prereqs: [232]
}, {
	ID: 400,
	t: "Word Problems",
	q: 50,
	d: 1300,
	prereqs: [4]
}, {
	ID: 392,
	t: "Addition to 20",
	q: 50,
	d: 1300,
	prereqs: [3]
}, {
	ID: 792,
	t: "Place Value",
	q: 50,
	d: 1300,
	prereqs: [186]
}, {
	ID: 1187,
	t: "Addition to 20",
	q: 50,
	d: 1300,
	prereqs: [1185]
}, {
	ID: 1207,
	t: "Subtraction to 20",
	q: 50,
	d: 1300,
	prereqs: [49]
}, {
	ID: 1265,
	t: "Addition to 20",
	q: 50,
	d: 1300,
	prereqs: [1185]
}, {
	ID: 1181,
	t: "Addition to 20",
	q: 50,
	d: 1400,
	prereqs: [136, 1187]
}, {
	ID: 1183,
	t: "Addition to 20",
	q: 50,
	d: 1400,
	prereqs: [391, 392, 1181]
}, {
	ID: 1186,
	t: "Subtraction to 20",
	q: 50,
	d: 1400,
	prereqs: [1207]
}, {
	ID: 401,
	t: "Word Problems",
	q: 50,
	d: 1400,
	prereqs: [49]
}, {
	ID: 59,
	t: "Place Value",
	q: 50,
	d: 1400,
	prereqs: []
}, {
	ID: 471,
	t: "Time",
	q: 50,
	d: 1400,
	prereqs: [478]
}, {
	ID: 476,
	t: "Time",
	q: 50,
	d: 1400,
	prereqs: [477]
}, {
	ID: 461,
	t: "Counting",
	q: 50,
	d: 1400,
	prereqs: [177, 1183]
}, {
	ID: 751,
	t: "Rounding",
	q: 50,
	d: 1400,
	prereqs: [59]
}, {
	ID: 474,
	t: "Time",
	q: 50,
	d: 1500,
	prereqs: [479, 476, 471]
}, {
	ID: 547,
	t: "Subtraction to 100",
	q: 44,
	d: 1500,
	prereqs: [543]
}, {
	ID: 549,
	t: "Mixed Operations",
	q: 50,
	d: 1500,
	prereqs: [543]
}, {
	ID: 543,
	t: "Mixed Operations",
	q: 50,
	d: 1500,
	prereqs: [6, 52]
}, {
	ID: 52,
	t: "Subtraction to 100",
	q: 45,
	d: 1500,
	prereqs: [49]
}, {
	ID: 6,
	t: "Addition to 100",
	q: 180,
	d: 1500,
	prereqs: [4, 185, 1223]
}, {
	ID: 393,
	t: "Subtraction to 20",
	q: 50,
	d: 1500,
	prereqs: [52]
}, {
	ID: 350,
	t: "Addition to 1000",
	q: 50,
	d: 1500,
	prereqs: [349, 348, 6]
}, {
	ID: 337,
	t: "Decimals: Place Value",
	q: 50,
	d: 1500,
	prereqs: []
}, {
	ID: 348,
	t: "Reading Numbers",
	q: 50,
	d: 1500,
	prereqs: []
}, {
	ID: 238,
	t: "Composing Numbers",
	q: 50,
	d: 1500,
	prereqs: [350]
}, {
	ID: 239,
	t: "Composing Numbers",
	q: 50,
	d: 1500,
	prereqs: [238]
}, {
	ID: 1188,
	t: "Subtraction to 20",
	q: 50,
	d: 1500,
	prereqs: [1186]
}, {
	ID: 1266,
	t: "Subtraction to 20",
	q: 50,
	d: 1500,
	prereqs: [1186]
}, {
	ID: 1269,
	t: "Addition to 20",
	q: 50,
	d: 1500,
	prereqs: [136]
}, {
	ID: 1223,
	t: "Addition to 100",
	q: 50,
	d: 1500,
	prereqs: [4]
}, {
	ID: 787,
	t: "Place Value",
	q: 50,
	d: 1500,
	prereqs: [789]
}, {
	ID: 1229,
	t: "Addition to 20",
	q: 50,
	d: 1600,
	prereqs: [1269]
}, {
	ID: 1240,
	t: "Reading Numbers",
	q: 50,
	d: 1600,
	prereqs: [435]
}, {
	ID: 1271,
	t: "Subtraction to 20",
	q: 50,
	d: 1600,
	prereqs: [1188]
}, {
	ID: 1272,
	t: "Addition to 20",
	q: 50,
	d: 1600,
	prereqs: [1269]
}, {
	ID: 1209,
	t: "Subtraction to 20",
	q: 50,
	d: 1600,
	prereqs: [453]
}, {
	ID: 1212,
	t: "Mixed Operations",
	q: 50,
	d: 1600,
	prereqs: [140]
}, {
	ID: 1213,
	t: "Mixed Operations",
	q: 50,
	d: 1600,
	prereqs: []
}, {
	ID: 138,
	t: "Subtraction to 20",
	q: 50,
	d: 1600,
	prereqs: [452, 49]
}, {
	ID: 140,
	t: "Mixed Operations",
	q: 48,
	d: 1600,
	prereqs: [136]
}, {
	ID: 215,
	t: "Data Relationships",
	q: 40,
	d: 1600,
	prereqs: []
}, {
	ID: 548,
	t: "Place Value",
	q: 50,
	d: 1600,
	prereqs: [545, 185]
}, {
	ID: 545,
	t: "Place Value",
	q: 50,
	d: 1600,
	prereqs: [543]
}, {
	ID: 452,
	t: "Subtraction",
	q: 50,
	d: 1600,
	prereqs: []
}, {
	ID: 453,
	t: "Subtraction",
	q: 50,
	d: 1600,
	prereqs: []
}, {
	ID: 451,
	t: "Addition",
	q: 50,
	d: 1700,
	prereqs: [136]
}, {
	ID: 137,
	t: "Subtraction to 20",
	q: 50,
	d: 1700,
	prereqs: [140, 1209]
}, {
	ID: 111,
	t: "Mixed Operations",
	q: 17,
	d: 1700,
	prereqs: [140]
}, {
	ID: 346,
	t: "Time",
	q: 50,
	d: 1700,
	prereqs: [135, 476]
}, {
	ID: 347,
	t: "Temperature",
	q: 50,
	d: 1700,
	prereqs: []
}, {
	ID: 1214,
	t: "Mixed Operations",
	q: 50,
	d: 1700,
	prereqs: [546]
}, {
	ID: 1215,
	t: "Mixed Operations",
	q: 50,
	d: 1700,
	prereqs: [1213]
}, {
	ID: 1189,
	t: "Addition to 20",
	q: 50,
	d: 1700,
	prereqs: [1181]
}, {
	ID: 1182,
	t: "Subtraction to 20",
	q: 50,
	d: 1700,
	prereqs: [138, 1271]
}, {
	ID: 1274,
	t: "Data Relationships",
	q: 50,
	d: 1700,
	prereqs: [215]
}, {
	ID: 1231,
	t: "Place Value",
	q: 50,
	d: 1700,
	prereqs: [1232]
}, {
	ID: 1232,
	t: "Place Value",
	q: 50,
	d: 1700,
	prereqs: [348]
}, {
	ID: 1234,
	t: "Addition to 20",
	q: 50,
	d: 1700,
	prereqs: [1229, 1272]
}, {
	ID: 847,
	t: "Place Value",
	q: 50,
	d: 1700,
	prereqs: [238]
}, {
	ID: 1230,
	t: "Subtraction to 20",
	q: 50,
	d: 1800,
	prereqs: [137]
}, {
	ID: 1254,
	t: "Mixed Operations",
	q: 50,
	d: 1800,
	prereqs: [1274]
}, {
	ID: 1190,
	t: "Subtraction to 20",
	q: 50,
	d: 1800,
	prereqs: [1182]
}, {
	ID: 1216,
	t: "Mixed Operations",
	q: 50,
	d: 1800,
	prereqs: [1214]
}, {
	ID: 1210,
	t: "Addition to 20",
	q: 50,
	d: 1800,
	prereqs: [451]
}, {
	ID: 87,
	t: "Subtraction to 20",
	q: 50,
	d: 1800,
	prereqs: [453, 1182]
}, {
	ID: 83,
	t: "Subtraction to 20",
	q: 50,
	d: 1900,
	prereqs: [52, 87]
}, {
	ID: 86,
	t: "Addition to 20",
	q: 50,
	d: 1900,
	prereqs: [451, 1181]
}, {
	ID: 107,
	t: "Composing Numbers",
	q: 59,
	d: 1900,
	prereqs: [3]
}, {
	ID: 108,
	t: "Composing Numbers",
	q: 60,
	d: 1900,
	prereqs: [52]
}, {
	ID: 143,
	t: "Place Value",
	q: 50,
	d: 1900,
	prereqs: [186]
}, {
	ID: 144,
	t: "Place Value",
	q: 50,
	d: 1900,
	prereqs: [186]
}, {
	ID: 146,
	t: "Rounding",
	q: 50,
	d: 1900,
	prereqs: [185, 59, 751]
}, {
	ID: 230,
	t: "Composing Numbers",
	q: 50,
	d: 1900,
	prereqs: [107, 108]
}, {
	ID: 390,
	t: "Word Problems",
	q: 50,
	d: 1900,
	prereqs: [1234, 1230]
}, {
	ID: 472,
	t: "Time",
	q: 50,
	d: 1900,
	prereqs: [471]
}, {
	ID: 668,
	t: "Data Relationships",
	q: 50,
	d: 1900,
	prereqs: [215]
}, {
	ID: 669,
	t: "Data Relationships",
	q: 50,
	d: 1900,
	prereqs: [1254]
}, {
	ID: 1184,
	t: "Subtraction to 20",
	q: 50,
	d: 1900,
	prereqs: [393, 391, 1182]
}, {
	ID: 1192,
	t: "Addition to 100",
	q: 50,
	d: 1900,
	prereqs: [1183]
}, {
	ID: 1253,
	t: "Addition to 100",
	q: 48,
	d: 1900,
	prereqs: [1215]
}, {
	ID: 1241,
	t: "Reading Numbers",
	q: 50,
	d: 1900,
	prereqs: [1240, 1231]
}, {
	ID: 1218,
	t: "Addition to 100",
	q: 50,
	d: 1900,
	prereqs: [1215]
}, {
	ID: 1275,
	t: "Subtraction to 100",
	q: 44,
	d: 1900,
	prereqs: [52]
}, {
	ID: 1211,
	t: "Addition to 100",
	q: 50,
	d: 2e3,
	prereqs: [1192]
}, {
	ID: 1217,
	t: "Subtraction to 100",
	q: 50,
	d: 2e3,
	prereqs: [1216, 1190]
}, {
	ID: 790,
	t: "Place Value",
	q: 50,
	d: 2e3,
	prereqs: [787]
}, {
	ID: 670,
	t: "Data Relationships",
	q: 50,
	d: 2e3,
	prereqs: [668]
}, {
	ID: 671,
	t: "Data Relationships",
	q: 50,
	d: 2e3,
	prereqs: [669]
}, {
	ID: 677,
	t: "Data Relationships",
	q: 50,
	d: 2e3,
	prereqs: []
}, {
	ID: 602,
	t: "Data Relationships",
	q: 50,
	d: 2e3,
	prereqs: [668]
}, {
	ID: 603,
	t: "Data Relationships",
	q: 50,
	d: 2e3,
	prereqs: [669]
}, {
	ID: 408,
	t: "Word Problems",
	q: 50,
	d: 2e3,
	prereqs: [144, 143]
}, {
	ID: 271,
	t: "Data Relationships",
	q: 50,
	d: 2e3,
	prereqs: [215]
}, {
	ID: 196,
	t: "2D Shapes",
	q: 20,
	d: 2e3,
	prereqs: []
}, {
	ID: 7,
	t: "Addition to 100",
	q: 143,
	d: 2e3,
	prereqs: [6]
}, {
	ID: 53,
	t: "Subtraction to 100",
	q: 45,
	d: 2e3,
	prereqs: [1275]
}, {
	ID: 60,
	t: "Composing Numbers",
	q: 50,
	d: 2100,
	prereqs: [230]
}, {
	ID: 31,
	t: "Multiplication Facts",
	q: 21,
	d: 2100,
	prereqs: [7]
}, {
	ID: 82,
	t: "Addition to 20",
	q: 50,
	d: 2100,
	prereqs: [4, 86]
}, {
	ID: 224,
	t: "2D Shapes",
	q: 40,
	d: 2100,
	prereqs: [196]
}, {
	ID: 164,
	t: "Addition to 100",
	q: 50,
	d: 2100,
	prereqs: [7, 549, 1218, 1253]
}, {
	ID: 165,
	t: "Subtraction to 100",
	q: 50,
	d: 2100,
	prereqs: [53]
}, {
	ID: 674,
	t: "Data Relationships",
	q: 50,
	d: 2100,
	prereqs: [676]
}, {
	ID: 675,
	t: "Data Relationships",
	q: 50,
	d: 2100,
	prereqs: [677]
}, {
	ID: 676,
	t: "Data Relationships",
	q: 50,
	d: 2100,
	prereqs: []
}, {
	ID: 726,
	t: "Data Relationships",
	q: 50,
	d: 2100,
	prereqs: [669]
}, {
	ID: 467,
	t: "Place Value",
	q: 50,
	d: 2100,
	prereqs: [144]
}, {
	ID: 791,
	t: "Place Value",
	q: 50,
	d: 2100,
	prereqs: [787]
}, {
	ID: 754,
	t: "Patterning",
	q: 50,
	d: 2100,
	prereqs: [75]
}, {
	ID: 1206,
	t: "Addition to 100",
	q: 50,
	d: 2100,
	prereqs: [1211]
}, {
	ID: 1224,
	t: "Addition to 100",
	q: 50,
	d: 2100,
	prereqs: [1223, 164]
}, {
	ID: 1227,
	t: "Addition to 100",
	q: 50,
	d: 2100,
	prereqs: [1224]
}, {
	ID: 1225,
	t: "Addition to 1000",
	q: 50,
	d: 2200,
	prereqs: [164]
}, {
	ID: 1219,
	t: "Subtraction to 100",
	q: 50,
	d: 2200,
	prereqs: [166]
}, {
	ID: 1202,
	t: "Addition to 100",
	q: 50,
	d: 2200,
	prereqs: [1206]
}, {
	ID: 1094,
	t: "Patterning",
	q: 50,
	d: 2200,
	prereqs: [754]
}, {
	ID: 772,
	t: "Multiplication",
	q: 45,
	d: 2200,
	prereqs: [7]
}, {
	ID: 831,
	t: "Addition to 1000",
	q: 50,
	d: 2200,
	prereqs: [164]
}, {
	ID: 834,
	t: "Subtraction to 100",
	q: 50,
	d: 2200,
	prereqs: [165]
}, {
	ID: 495,
	t: "Time",
	q: 50,
	d: 2200,
	prereqs: [346]
}, {
	ID: 496,
	t: "Angles",
	q: 33,
	d: 2200,
	prereqs: []
}, {
	ID: 752,
	t: "Rounding",
	q: 50,
	d: 2200,
	prereqs: [751]
}, {
	ID: 756,
	t: "Multiplication",
	q: 49,
	d: 2200,
	prereqs: [7]
}, {
	ID: 672,
	t: "Data Relationships",
	q: 50,
	d: 2200,
	prereqs: [670, 674]
}, {
	ID: 673,
	t: "Data Relationships",
	q: 50,
	d: 2200,
	prereqs: [671, 675]
}, {
	ID: 166,
	t: "Subtraction to 100",
	q: 50,
	d: 2200,
	prereqs: [165]
}, {
	ID: 197,
	t: "2D Shapes",
	q: 24,
	d: 2200,
	prereqs: []
}, {
	ID: 198,
	t: "2D Shapes",
	q: 48,
	d: 2200,
	prereqs: []
}, {
	ID: 101,
	t: "Patterning",
	q: 50,
	d: 2200,
	prereqs: [181]
}, {
	ID: 110,
	t: "Composing Numbers",
	q: 50,
	d: 2200,
	prereqs: [60]
}, {
	ID: 241,
	t: "Addition to 100",
	q: 50,
	d: 2200,
	prereqs: [164]
}, {
	ID: 395,
	t: "Word Problems",
	q: 50,
	d: 2200,
	prereqs: [241]
}, {
	ID: 396,
	t: "Word Problems",
	q: 50,
	d: 2200,
	prereqs: [166]
}, {
	ID: 345,
	t: "Money",
	q: 50,
	d: 2300,
	prereqs: []
}, {
	ID: 246,
	t: "Addition to 1000",
	q: 50,
	d: 2300,
	prereqs: [241, 1233]
}, {
	ID: 250,
	t: "Subtraction to 1000",
	q: 50,
	d: 2300,
	prereqs: [166, 1226]
}, {
	ID: 32,
	t: "Multiplication Facts",
	q: 19,
	d: 2300,
	prereqs: [756, 772]
}, {
	ID: 225,
	t: "2D Shapes",
	q: 50,
	d: 2300,
	prereqs: [198]
}, {
	ID: 216,
	t: "Measurement Relationships",
	q: 35,
	d: 2300,
	prereqs: []
}, {
	ID: 218,
	t: "Time",
	q: 25,
	d: 2300,
	prereqs: [495]
}, {
	ID: 222,
	t: "Data Relationships",
	q: 50,
	d: 2300,
	prereqs: []
}, {
	ID: 127,
	t: "Conversion",
	q: 25,
	d: 2300,
	prereqs: [186]
}, {
	ID: 692,
	t: "Data Relationships",
	q: 30,
	d: 2300,
	prereqs: [603]
}, {
	ID: 757,
	t: "Mixed Operations",
	q: 50,
	d: 2300,
	prereqs: [53]
}, {
	ID: 758,
	t: "Division",
	q: 49,
	d: 2300,
	prereqs: [53]
}, {
	ID: 728,
	t: "Data Relationships",
	q: 50,
	d: 2300,
	prereqs: [677]
}, {
	ID: 591,
	t: "Data Relationships",
	q: 50,
	d: 2300,
	prereqs: [222, 602]
}, {
	ID: 592,
	t: "Data Relationships",
	q: 50,
	d: 2300,
	prereqs: [222, 603]
}, {
	ID: 595,
	t: "Data Relationships",
	q: 50,
	d: 2300,
	prereqs: [597, 672]
}, {
	ID: 597,
	t: "Data Relationships",
	q: 50,
	d: 2300,
	prereqs: [602]
}, {
	ID: 598,
	t: "Data Relationships",
	q: 50,
	d: 2300,
	prereqs: [603]
}, {
	ID: 648,
	t: "Money",
	q: 12,
	d: 2300,
	prereqs: []
}, {
	ID: 550,
	t: "Addition to 1000",
	q: 50,
	d: 2300,
	prereqs: [241]
}, {
	ID: 556,
	t: "Rounding",
	q: 50,
	d: 2300,
	prereqs: [146, 752]
}, {
	ID: 457,
	t: "2D Shapes",
	q: 40,
	d: 2300,
	prereqs: [196]
}, {
	ID: 458,
	t: "2D Shapes",
	q: 35,
	d: 2300,
	prereqs: []
}, {
	ID: 486,
	t: "Angles",
	q: 50,
	d: 2300,
	prereqs: [496]
}, {
	ID: 449,
	t: "Reading Numbers",
	q: 50,
	d: 2300,
	prereqs: [1240]
}, {
	ID: 450,
	t: "Reading Numbers",
	q: 50,
	d: 2300,
	prereqs: [449]
}, {
	ID: 773,
	t: "Division",
	q: 45,
	d: 2300,
	prereqs: [53]
}, {
	ID: 1015,
	t: "Rounding",
	q: 50,
	d: 2300,
	prereqs: [752]
}, {
	ID: 1095,
	t: "Patterning",
	q: 50,
	d: 2300,
	prereqs: [1094]
}, {
	ID: 1197,
	t: "Subtraction to 100",
	q: 50,
	d: 2300,
	prereqs: [1184, 1219]
}, {
	ID: 1226,
	t: "Subtraction to 1000",
	q: 50,
	d: 2300,
	prereqs: [166]
}, {
	ID: 1233,
	t: "Addition to 1000",
	q: 50,
	d: 2300,
	prereqs: [1225]
}, {
	ID: 1251,
	t: "Patterning",
	q: 50,
	d: 2300,
	prereqs: [101]
}, {
	ID: 1237,
	t: "Addition to 1000",
	q: 50,
	d: 2400,
	prereqs: [777]
}, {
	ID: 1239,
	t: "Subtraction to 1000",
	q: 50,
	d: 2400,
	prereqs: [1226]
}, {
	ID: 1244,
	t: "Addition to 1000",
	q: 50,
	d: 2400,
	prereqs: [1237]
}, {
	ID: 1221,
	t: "Subtraction to 100",
	q: 50,
	d: 2400,
	prereqs: [1197]
}, {
	ID: 1280,
	t: "Data Relationships",
	q: 50,
	d: 2400,
	prereqs: [728]
}, {
	ID: 1281,
	t: "Mixed Operations",
	q: 50,
	d: 2400,
	prereqs: [1192, 1197]
}, {
	ID: 1089,
	t: "Place Value",
	q: 48,
	d: 2400,
	prereqs: [791]
}, {
	ID: 1073,
	t: "Place Value",
	q: 50,
	d: 2400,
	prereqs: [791]
}, {
	ID: 777,
	t: "Addition to 1000",
	q: 40,
	d: 2400,
	prereqs: [247]
}, {
	ID: 779,
	t: "Addition to 1000",
	q: 50,
	d: 2400,
	prereqs: [777]
}, {
	ID: 832,
	t: "Addition to 1,000,000",
	q: 50,
	d: 2400,
	prereqs: [242]
}, {
	ID: 788,
	t: "Place Value",
	q: 50,
	d: 2400,
	prereqs: [128, 789]
}, {
	ID: 454,
	t: "2D Shapes",
	q: 30,
	d: 2400,
	prereqs: [197, 457, 458]
}, {
	ID: 649,
	t: "Money",
	q: 50,
	d: 2400,
	prereqs: [648]
}, {
	ID: 612,
	t: "Angles",
	q: 42,
	d: 2400,
	prereqs: [486]
}, {
	ID: 614,
	t: "Data Relationships",
	q: 50,
	d: 2400,
	prereqs: [596]
}, {
	ID: 615,
	t: "Data Relationships",
	q: 30,
	d: 2400,
	prereqs: [603]
}, {
	ID: 596,
	t: "Data Relationships",
	q: 50,
	d: 2400,
	prereqs: [598, 673]
}, {
	ID: 600,
	t: "Data Relationships",
	q: 50,
	d: 2400,
	prereqs: [602]
}, {
	ID: 601,
	t: "Data Relationships",
	q: 50,
	d: 2400,
	prereqs: [603]
}, {
	ID: 607,
	t: "Money",
	q: 50,
	d: 2400,
	prereqs: [345]
}, {
	ID: 590,
	t: "Probability",
	q: 50,
	d: 2400,
	prereqs: []
}, {
	ID: 713,
	t: "Addition to 1000",
	q: 50,
	d: 2400,
	prereqs: [1244]
}, {
	ID: 735,
	t: "Patterning",
	q: 50,
	d: 2400,
	prereqs: [77, 754, 1095]
}, {
	ID: 736,
	t: "Patterning",
	q: 50,
	d: 2400,
	prereqs: [77, 754, 1095]
}, {
	ID: 693,
	t: "Data Relationships",
	q: 30,
	d: 2400,
	prereqs: [692]
}, {
	ID: 646,
	t: "Money",
	q: 50,
	d: 2400,
	prereqs: []
}, {
	ID: 128,
	t: "Conversion",
	q: 25,
	d: 2400,
	prereqs: [127, 143]
}, {
	ID: 174,
	t: "Patterning",
	q: 50,
	d: 2400,
	prereqs: [76]
}, {
	ID: 226,
	t: "2D Shapes",
	q: 50,
	d: 2400,
	prereqs: [198]
}, {
	ID: 233,
	t: "2D Shapes",
	q: 48,
	d: 2400,
	prereqs: []
}, {
	ID: 192,
	t: "Comparing Numbers",
	q: 50,
	d: 2400,
	prereqs: [447]
}, {
	ID: 193,
	t: "Comparing Numbers",
	q: 50,
	d: 2400,
	prereqs: [450, 448]
}, {
	ID: 33,
	t: "Multiplication Facts",
	q: 19,
	d: 2400,
	prereqs: [32]
}, {
	ID: 34,
	t: "Multiplication Facts",
	q: 19,
	d: 2400,
	prereqs: [33]
}, {
	ID: 35,
	t: "Multiplication Facts",
	q: 19,
	d: 2400,
	prereqs: [34]
}, {
	ID: 25,
	t: "Division Facts",
	q: 18,
	d: 2400,
	prereqs: [32, 33, 773, 757, 758]
}, {
	ID: 26,
	t: "Division Facts",
	q: 18,
	d: 2400,
	prereqs: [34, 35, 25]
}, {
	ID: 68,
	t: "Rounding",
	q: 50,
	d: 2400,
	prereqs: [146, 556]
}, {
	ID: 76,
	t: "Patterning",
	q: 56,
	d: 2400,
	prereqs: [77]
}, {
	ID: 77,
	t: "Patterning",
	q: 56,
	d: 2400,
	prereqs: [7, 53, 1251]
}, {
	ID: 251,
	t: "Subtraction to 1000",
	q: 50,
	d: 2400,
	prereqs: [250]
}, {
	ID: 247,
	t: "Addition to 1000",
	q: 50,
	d: 2400,
	prereqs: [246]
}, {
	ID: 130,
	t: "Place Value",
	q: 50,
	d: 2400,
	prereqs: [143]
}, {
	ID: 278,
	t: "Money",
	q: 50,
	d: 2400,
	prereqs: [345]
}, {
	ID: 398,
	t: "Word Problems",
	q: 50,
	d: 2400,
	prereqs: [396, 395]
}, {
	ID: 388,
	t: "2D Shapes",
	q: 50,
	d: 2500,
	prereqs: [197, 198]
}, {
	ID: 336,
	t: "Decimals: Place Value",
	q: 50,
	d: 2500,
	prereqs: []
}, {
	ID: 279,
	t: "Patterning",
	q: 50,
	d: 2500,
	prereqs: []
}, {
	ID: 313,
	t: "Mixed Operations",
	q: 50,
	d: 2500,
	prereqs: [68]
}, {
	ID: 242,
	t: "Addition to 1000",
	q: 50,
	d: 2500,
	prereqs: [713]
}, {
	ID: 269,
	t: "Patterning",
	q: 50,
	d: 2500,
	prereqs: [76, 279]
}, {
	ID: 248,
	t: "Subtraction to 1000",
	q: 50,
	d: 2500,
	prereqs: [251, 1239]
}, {
	ID: 51,
	t: "Rounding",
	q: 50,
	d: 2500,
	prereqs: [68]
}, {
	ID: 27,
	t: "Division Facts",
	q: 18,
	d: 2500,
	prereqs: [37, 36, 26]
}, {
	ID: 36,
	t: "Multiplication Facts",
	q: 19,
	d: 2500,
	prereqs: [35]
}, {
	ID: 37,
	t: "Multiplication Facts",
	q: 19,
	d: 2500,
	prereqs: [36]
}, {
	ID: 113,
	t: "Addition",
	q: 50,
	d: 2500,
	prereqs: [398]
}, {
	ID: 714,
	t: "Subtraction to 1000",
	q: 50,
	d: 2500,
	prereqs: [1236]
}, {
	ID: 588,
	t: "Probability",
	q: 50,
	d: 2500,
	prereqs: [590]
}, {
	ID: 583,
	t: "Patterning",
	q: 50,
	d: 2500,
	prereqs: [584]
}, {
	ID: 584,
	t: "Patterning",
	q: 50,
	d: 2500,
	prereqs: [76]
}, {
	ID: 593,
	t: "Data Relationships",
	q: 50,
	d: 2500,
	prereqs: [600]
}, {
	ID: 594,
	t: "Data Relationships",
	q: 50,
	d: 2500,
	prereqs: [601]
}, {
	ID: 455,
	t: "2D Shapes",
	q: 45,
	d: 2500,
	prereqs: [225, 233]
}, {
	ID: 833,
	t: "Addition to 1,000,000",
	q: 50,
	d: 2500,
	prereqs: [831, 832]
}, {
	ID: 785,
	t: "Subtraction to 1000",
	q: 50,
	d: 2500,
	prereqs: [778]
}, {
	ID: 793,
	t: "Rounding",
	q: 50,
	d: 2500,
	prereqs: [146, 1015]
}, {
	ID: 794,
	t: "Rounding",
	q: 50,
	d: 2500,
	prereqs: [68, 1015]
}, {
	ID: 795,
	t: "Rounding",
	q: 50,
	d: 2500,
	prereqs: [1015]
}, {
	ID: 796,
	t: "Rounding",
	q: 50,
	d: 2500,
	prereqs: [1015]
}, {
	ID: 778,
	t: "Subtraction to 1000",
	q: 40,
	d: 2500,
	prereqs: [248, 1245]
}, {
	ID: 712,
	t: "Patterning",
	q: 48,
	d: 2500,
	prereqs: [174]
}, {
	ID: 1028,
	t: "Patterning",
	q: 50,
	d: 2500,
	prereqs: [735]
}, {
	ID: 1029,
	t: "Patterning",
	q: 50,
	d: 2500,
	prereqs: [736]
}, {
	ID: 1030,
	t: "Patterning",
	q: 50,
	d: 2500,
	prereqs: []
}, {
	ID: 1031,
	t: "Patterning",
	q: 50,
	d: 2500,
	prereqs: []
}, {
	ID: 1270,
	t: "Data Relationships",
	q: 50,
	d: 2500,
	prereqs: [1280]
}, {
	ID: 1222,
	t: "Subtraction to 100",
	q: 50,
	d: 2500,
	prereqs: []
}, {
	ID: 1236,
	t: "Subtraction to 1000",
	q: 50,
	d: 2500,
	prereqs: [248]
}, {
	ID: 1245,
	t: "Subtraction to 1000",
	q: 50,
	d: 2500,
	prereqs: [714]
}, {
	ID: 1242,
	t: "Addition to 1000",
	q: 50,
	d: 2600,
	prereqs: [113]
}, {
	ID: 1243,
	t: "Subtraction to 1000",
	q: 50,
	d: 2600,
	prereqs: [778]
}, {
	ID: 1255,
	t: "Mixed Operations",
	q: 50,
	d: 2600,
	prereqs: [1251]
}, {
	ID: 1257,
	t: "Data Relationships",
	q: 30,
	d: 2600,
	prereqs: [693]
}, {
	ID: 1278,
	t: "Data Relationships",
	q: 50,
	d: 2600,
	prereqs: [1270]
}, {
	ID: 1194,
	t: "Mixed Operations",
	q: 50,
	d: 2600,
	prereqs: []
}, {
	ID: 1195,
	t: "Mixed Operations",
	q: 50,
	d: 2600,
	prereqs: []
}, {
	ID: 959,
	t: "Patterning",
	q: 50,
	d: 2600,
	prereqs: [279]
}, {
	ID: 960,
	t: "Patterning",
	q: 50,
	d: 2600,
	prereqs: [279, 1028, 1029, 1030, 1031]
}, {
	ID: 762,
	t: "Addition to 1000",
	q: 50,
	d: 2600,
	prereqs: [242]
}, {
	ID: 763,
	t: "Subtraction to 1000",
	q: 50,
	d: 2600,
	prereqs: [1243]
}, {
	ID: 835,
	t: "Subtraction to 1000",
	q: 50,
	d: 2600,
	prereqs: [248]
}, {
	ID: 840,
	t: "Conversion",
	q: 50,
	d: 2600,
	prereqs: []
}, {
	ID: 456,
	t: "2D Shapes",
	q: 40,
	d: 2600,
	prereqs: [226, 233]
}, {
	ID: 464,
	t: "2D Shapes",
	q: 40,
	d: 2600,
	prereqs: [454]
}, {
	ID: 480,
	t: "Patterning",
	q: 40,
	d: 2600,
	prereqs: [233]
}, {
	ID: 481,
	t: "Patterning",
	q: 40,
	d: 2600,
	prereqs: [480]
}, {
	ID: 555,
	t: "Mixed Operations",
	q: 50,
	d: 2600,
	prereqs: [40]
}, {
	ID: 567,
	t: "Rounding",
	q: 50,
	d: 2600,
	prereqs: [51]
}, {
	ID: 516,
	t: "Decimals",
	q: 50,
	d: 2600,
	prereqs: [192]
}, {
	ID: 517,
	t: "Decimals",
	q: 50,
	d: 2600,
	prereqs: [193]
}, {
	ID: 611,
	t: "Money",
	q: 50,
	d: 2600,
	prereqs: [607]
}, {
	ID: 38,
	t: "Multiplication Facts",
	q: 19,
	d: 2600,
	prereqs: [37]
}, {
	ID: 39,
	t: "Multiplication Facts",
	q: 19,
	d: 2600,
	prereqs: [38]
}, {
	ID: 40,
	t: "Multiplication Facts",
	q: 19,
	d: 2600,
	prereqs: [39]
}, {
	ID: 28,
	t: "Division Facts",
	q: 18,
	d: 2600,
	prereqs: [27, 38, 39]
}, {
	ID: 29,
	t: "Division Facts",
	q: 9,
	d: 2600,
	prereqs: [28, 40]
}, {
	ID: 194,
	t: "Decimals",
	q: 50,
	d: 2600,
	prereqs: [192]
}, {
	ID: 195,
	t: "Decimals",
	q: 50,
	d: 2600,
	prereqs: [193]
}, {
	ID: 187,
	t: "Money",
	q: 40,
	d: 2600,
	prereqs: [345]
}, {
	ID: 206,
	t: "Data Relationships",
	q: 50,
	d: 2600,
	prereqs: []
}, {
	ID: 211,
	t: "Angles",
	q: 50,
	d: 2600,
	prereqs: [486, 612]
}, {
	ID: 129,
	t: "Conversion",
	q: 25,
	d: 2600,
	prereqs: [788]
}, {
	ID: 139,
	t: "Money",
	q: 50,
	d: 2600,
	prereqs: [345, 278]
}, {
	ID: 152,
	t: "Time",
	q: 50,
	d: 2600,
	prereqs: [218, 216]
}, {
	ID: 249,
	t: "Subtraction to 1000",
	q: 50,
	d: 2600,
	prereqs: [763]
}, {
	ID: 240,
	t: "2D Shapes",
	q: 48,
	d: 2600,
	prereqs: [233]
}, {
	ID: 268,
	t: "Patterning",
	q: 50,
	d: 2600,
	prereqs: [269, 583]
}, {
	ID: 309,
	t: "Place Value",
	q: 50,
	d: 2600,
	prereqs: [337, 336]
}, {
	ID: 352,
	t: "Probability",
	q: 48,
	d: 2600,
	prereqs: [588]
}, {
	ID: 338,
	t: "Data Relationships",
	q: 50,
	d: 2700,
	prereqs: [206]
}, {
	ID: 344,
	t: "Money",
	q: 49,
	d: 2700,
	prereqs: [187]
}, {
	ID: 409,
	t: "Subtraction to 1000",
	q: 50,
	d: 2700,
	prereqs: [249, 1197]
}, {
	ID: 284,
	t: "2D Shapes",
	q: 50,
	d: 2700,
	prereqs: [456]
}, {
	ID: 243,
	t: "Addition to 1000",
	q: 50,
	d: 2700,
	prereqs: [762]
}, {
	ID: 153,
	t: "Time",
	q: 50,
	d: 2700,
	prereqs: [152]
}, {
	ID: 154,
	t: "Composing Numbers",
	q: 50,
	d: 2700,
	prereqs: [110]
}, {
	ID: 175,
	t: "Patterning",
	q: 50,
	d: 2700,
	prereqs: [243, 249, 1195, 1194]
}, {
	ID: 182,
	t: "Money",
	q: 50,
	d: 2700,
	prereqs: [139]
}, {
	ID: 212,
	t: "Angles",
	q: 50,
	d: 2700,
	prereqs: [211]
}, {
	ID: 208,
	t: "Mixed Operations",
	q: 50,
	d: 2700,
	prereqs: [243, 249]
}, {
	ID: 114,
	t: "Subtraction to 100",
	q: 50,
	d: 2700,
	prereqs: [248]
}, {
	ID: 605,
	t: "Money",
	q: 50,
	d: 2700,
	prereqs: [611, 344]
}, {
	ID: 589,
	t: "Probability",
	q: 50,
	d: 2700,
	prereqs: [352]
}, {
	ID: 704,
	t: "Multiplication",
	q: 45,
	d: 2700,
	prereqs: [555]
}, {
	ID: 647,
	t: "Money",
	q: 50,
	d: 2700,
	prereqs: [646]
}, {
	ID: 559,
	t: "Decimals: Comparing",
	q: 50,
	d: 2700,
	prereqs: [516, 517]
}, {
	ID: 482,
	t: "Patterning",
	q: 40,
	d: 2700,
	prereqs: [481]
}, {
	ID: 465,
	t: "Decimals: Comparing",
	q: 50,
	d: 2700,
	prereqs: [309, 194]
}, {
	ID: 466,
	t: "Decimals: Comparing",
	q: 50,
	d: 2700,
	prereqs: [309, 195]
}, {
	ID: 459,
	t: "2D Shapes",
	q: 40,
	d: 2700,
	prereqs: [233, 454]
}, {
	ID: 836,
	t: "Subtraction to 1,000,000",
	q: 50,
	d: 2700,
	prereqs: [834, 835]
}, {
	ID: 830,
	t: "Place Value",
	q: 50,
	d: 2700,
	prereqs: [238, 788]
}, {
	ID: 911,
	t: "Decimals: Subtraction",
	q: 50,
	d: 2700,
	prereqs: []
}, {
	ID: 761,
	t: "Division",
	q: 50,
	d: 2700,
	prereqs: [29]
}, {
	ID: 815,
	t: "Division",
	q: 50,
	d: 2700,
	prereqs: [29]
}, {
	ID: 805,
	t: "Decimals: Addition",
	q: 50,
	d: 2700,
	prereqs: []
}, {
	ID: 776,
	t: "Division",
	q: 50,
	d: 2700,
	prereqs: [29]
}, {
	ID: 1005,
	t: "Rational Numbers: Represent",
	q: 50,
	d: 2700,
	prereqs: []
}, {
	ID: 1096,
	t: "Patterning",
	q: 50,
	d: 2700,
	prereqs: [779, 785]
}, {
	ID: 1247,
	t: "Fractions",
	q: 16,
	d: 2700,
	prereqs: []
}, {
	ID: 1249,
	t: "Fractions",
	q: 22,
	d: 2800,
	prereqs: [1247]
}, {
	ID: 1235,
	t: "Mixed Operations",
	q: 50,
	d: 2800,
	prereqs: []
}, {
	ID: 1077,
	t: "Mixed Operations",
	q: 50,
	d: 2800,
	prereqs: [835, 243]
}, {
	ID: 1193,
	t: "Mixed Operations",
	q: 50,
	d: 2800,
	prereqs: [175]
}, {
	ID: 1191,
	t: "Mixed Operations",
	q: 50,
	d: 2800,
	prereqs: [175]
}, {
	ID: 813,
	t: "Decimals: Addition",
	q: 50,
	d: 2800,
	prereqs: []
}, {
	ID: 814,
	t: "Decimals: Subtraction",
	q: 50,
	d: 2800,
	prereqs: []
}, {
	ID: 806,
	t: "Division",
	q: 50,
	d: 2800,
	prereqs: [815]
}, {
	ID: 821,
	t: "Multiplication",
	q: 50,
	d: 2800,
	prereqs: [40]
}, {
	ID: 775,
	t: "Multiplication",
	q: 50,
	d: 2800,
	prereqs: [40]
}, {
	ID: 797,
	t: "Rounding",
	q: 50,
	d: 2800,
	prereqs: [795, 793, 794, 796]
}, {
	ID: 781,
	t: "Multiplication",
	q: 50,
	d: 2800,
	prereqs: [704]
}, {
	ID: 870,
	t: "Decimals: Addition",
	q: 50,
	d: 2800,
	prereqs: [64]
}, {
	ID: 871,
	t: "Decimals: Subtraction",
	q: 50,
	d: 2800,
	prereqs: [65]
}, {
	ID: 483,
	t: "Patterning",
	q: 40,
	d: 2800,
	prereqs: [480]
}, {
	ID: 484,
	t: "Patterning",
	q: 40,
	d: 2800,
	prereqs: [481, 483]
}, {
	ID: 566,
	t: "Rounding",
	q: 50,
	d: 2800,
	prereqs: [567]
}, {
	ID: 510,
	t: "Fractions: Division",
	q: 50,
	d: 2800,
	prereqs: []
}, {
	ID: 759,
	t: "Multiplication",
	q: 50,
	d: 2800,
	prereqs: []
}, {
	ID: 586,
	t: "Patterning",
	q: 50,
	d: 2800,
	prereqs: [268, 960, 959]
}, {
	ID: 587,
	t: "Patterning",
	q: 50,
	d: 2800,
	prereqs: [586]
}, {
	ID: 604,
	t: "Decimals: Place Value",
	q: 50,
	d: 2800,
	prereqs: [309, 830]
}, {
	ID: 650,
	t: "Money",
	q: 50,
	d: 2800,
	prereqs: [647]
}, {
	ID: 120,
	t: "Decimals: Addition",
	q: 50,
	d: 2800,
	prereqs: [195, 833]
}, {
	ID: 121,
	t: "Decimals: Subtraction",
	q: 50,
	d: 2800,
	prereqs: [836]
}, {
	ID: 123,
	t: "Conversion",
	q: 50,
	d: 2800,
	prereqs: [309]
}, {
	ID: 64,
	t: "Decimals: Addition",
	q: 50,
	d: 2800,
	prereqs: [120, 805, 813]
}, {
	ID: 65,
	t: "Decimals: Subtraction",
	q: 50,
	d: 2800,
	prereqs: [121, 814, 911]
}, {
	ID: 223,
	t: "Data Relationships",
	q: 48,
	d: 2800,
	prereqs: [222, 206, 338]
}, {
	ID: 178,
	t: "Mixed Operations",
	q: 50,
	d: 2800,
	prereqs: [175]
}, {
	ID: 161,
	t: "Time",
	q: 50,
	d: 2800,
	prereqs: [153]
}, {
	ID: 258,
	t: "Addition",
	q: 50,
	d: 2800,
	prereqs: [208]
}, {
	ID: 263,
	t: "Subtraction",
	q: 50,
	d: 2800,
	prereqs: [208]
}, {
	ID: 417,
	t: "Addition to 1000",
	q: 50,
	d: 2800,
	prereqs: [243, 1192]
}, {
	ID: 406,
	t: "Mixed Operations",
	q: 50,
	d: 2800,
	prereqs: [175]
}, {
	ID: 419,
	t: "Word Problems",
	q: 50,
	d: 2900,
	prereqs: [120, 121]
}, {
	ID: 421,
	t: "Time",
	q: 50,
	d: 2900,
	prereqs: [161]
}, {
	ID: 412,
	t: "Word Problems",
	q: 50,
	d: 2900,
	prereqs: [182]
}, {
	ID: 414,
	t: "Decimals: Mixed Operations",
	q: 50,
	d: 2900,
	prereqs: [65, 64]
}, {
	ID: 326,
	t: "Angles",
	q: 50,
	d: 2900,
	prereqs: [212]
}, {
	ID: 358,
	t: "Mixed Operations",
	q: 45,
	d: 2900,
	prereqs: []
}, {
	ID: 359,
	t: "Mixed Operations",
	q: 45,
	d: 2900,
	prereqs: [358, 40, 29]
}, {
	ID: 261,
	t: "Addition",
	q: 50,
	d: 2900,
	prereqs: [258]
}, {
	ID: 266,
	t: "Subtraction",
	q: 50,
	d: 2900,
	prereqs: [263]
}, {
	ID: 270,
	t: "Patterning",
	q: 50,
	d: 2900,
	prereqs: [268]
}, {
	ID: 272,
	t: "Patterning",
	q: 50,
	d: 2900,
	prereqs: [273]
}, {
	ID: 273,
	t: "Patterning",
	q: 50,
	d: 2900,
	prereqs: [233]
}, {
	ID: 281,
	t: "Mixed Operations",
	q: 50,
	d: 2900,
	prereqs: [282]
}, {
	ID: 282,
	t: "Mixed Operations",
	q: 50,
	d: 2900,
	prereqs: [462, 463]
}, {
	ID: 288,
	t: "Decimals: Addition",
	q: 50,
	d: 2900,
	prereqs: [64, 966]
}, {
	ID: 289,
	t: "Decimals: Subtraction",
	q: 50,
	d: 2900,
	prereqs: [65, 968]
}, {
	ID: 207,
	t: "Division",
	q: 50,
	d: 2900,
	prereqs: [806]
}, {
	ID: 621,
	t: "Patterning",
	q: 50,
	d: 2900,
	prereqs: [584]
}, {
	ID: 760,
	t: "Multiplication",
	q: 50,
	d: 2900,
	prereqs: [775]
}, {
	ID: 507,
	t: "Rational Numbers: Represent",
	q: 50,
	d: 2900,
	prereqs: [450, 1005]
}, {
	ID: 485,
	t: "Patterning",
	q: 40,
	d: 2900,
	prereqs: [482, 484]
}, {
	ID: 499,
	t: "Rational Numbers: Represent",
	q: 40,
	d: 2900,
	prereqs: [507, 1005]
}, {
	ID: 462,
	t: "Multiplication",
	q: 40,
	d: 2900,
	prereqs: [40]
}, {
	ID: 463,
	t: "Division",
	q: 45,
	d: 2900,
	prereqs: [29]
}, {
	ID: 812,
	t: "Multiplication",
	q: 50,
	d: 2900,
	prereqs: []
}, {
	ID: 808,
	t: "Multiplication",
	q: 50,
	d: 2900,
	prereqs: [821]
}, {
	ID: 999,
	t: "Rational Numbers: Comparing",
	q: 50,
	d: 2900,
	prereqs: []
}, {
	ID: 1003,
	t: "Expressions and Equations",
	q: 50,
	d: 2900,
	prereqs: []
}, {
	ID: 1035,
	t: "Time",
	q: 32,
	d: 2900,
	prereqs: []
}, {
	ID: 968,
	t: "Decimals: Subtraction",
	q: 50,
	d: 2900,
	prereqs: []
}, {
	ID: 966,
	t: "Decimals: Addition",
	q: 50,
	d: 2900,
	prereqs: []
}, {
	ID: 1076,
	t: "Decimals: Comparing",
	q: 50,
	d: 2900,
	prereqs: [559]
}, {
	ID: 1246,
	t: "Geometry",
	q: 23,
	d: 2900,
	prereqs: [1247]
}, {
	ID: 1248,
	t: "Geometry",
	q: 30,
	d: 3e3,
	prereqs: [1249, 1246]
}, {
	ID: 998,
	t: "Rational Numbers: Represent",
	q: 50,
	d: 3e3,
	prereqs: [507]
}, {
	ID: 969,
	t: "Decimals: Addition",
	q: 50,
	d: 3e3,
	prereqs: [288]
}, {
	ID: 970,
	t: "Decimals: Subtraction",
	q: 50,
	d: 3e3,
	prereqs: [289]
}, {
	ID: 971,
	t: "Decimals: Addition",
	q: 50,
	d: 3e3,
	prereqs: [288]
}, {
	ID: 972,
	t: "Decimals: Subtraction",
	q: 50,
	d: 3e3,
	prereqs: [289]
}, {
	ID: 909,
	t: "Numerical Expressions",
	q: 50,
	d: 3e3,
	prereqs: [358, 1003]
}, {
	ID: 1067,
	t: "Mixed Operations",
	q: 50,
	d: 3e3,
	prereqs: [462]
}, {
	ID: 1059,
	t: "Rational Numbers: Represent",
	q: 50,
	d: 3e3,
	prereqs: [999]
}, {
	ID: 1060,
	t: "Rational Numbers: Comparing",
	q: 50,
	d: 3e3,
	prereqs: [999]
}, {
	ID: 782,
	t: "Division",
	q: 50,
	d: 3e3,
	prereqs: [705]
}, {
	ID: 783,
	t: "Mixed Operations",
	q: 49,
	d: 3e3,
	prereqs: [705]
}, {
	ID: 784,
	t: "Mixed Operations",
	q: 50,
	d: 3e3,
	prereqs: [281]
}, {
	ID: 764,
	t: "Multiplication",
	q: 50,
	d: 3e3,
	prereqs: [179, 812]
}, {
	ID: 879,
	t: "Multiplication",
	q: 50,
	d: 3e3,
	prereqs: [462]
}, {
	ID: 500,
	t: "Rational Numbers: Comparing",
	q: 50,
	d: 3e3,
	prereqs: [507, 999]
}, {
	ID: 501,
	t: "Rational Numbers: Comparing",
	q: 50,
	d: 3e3,
	prereqs: [500, 999]
}, {
	ID: 503,
	t: "Rational Numbers: Comparing",
	q: 50,
	d: 3e3,
	prereqs: [501]
}, {
	ID: 514,
	t: "Integers",
	q: 40,
	d: 3e3,
	prereqs: [507]
}, {
	ID: 534,
	t: "Order of Operations",
	q: 50,
	d: 3e3,
	prereqs: [359, 538]
}, {
	ID: 538,
	t: "Order of Operations",
	q: 50,
	d: 3e3,
	prereqs: [358]
}, {
	ID: 705,
	t: "Division",
	q: 44,
	d: 3e3,
	prereqs: [704]
}, {
	ID: 706,
	t: "Multiplication",
	q: 50,
	d: 3e3,
	prereqs: [781]
}, {
	ID: 710,
	t: "Mixed Operations",
	q: 49,
	d: 3e3,
	prereqs: [783]
}, {
	ID: 620,
	t: "Patterning",
	q: 50,
	d: 3e3,
	prereqs: [621]
}, {
	ID: 179,
	t: "Multiplication",
	q: 50,
	d: 3e3,
	prereqs: [808]
}, {
	ID: 119,
	t: "Money",
	q: 50,
	d: 3e3,
	prereqs: [182]
}, {
	ID: 310,
	t: "Addition to 1,000,000",
	q: 50,
	d: 3e3,
	prereqs: [258]
}, {
	ID: 311,
	t: "Subtraction to 1,000,000",
	q: 50,
	d: 3e3,
	prereqs: [263]
}, {
	ID: 329,
	t: "Data Relationships",
	q: 50,
	d: 3e3,
	prereqs: [223]
}, {
	ID: 277,
	t: "Time",
	q: 50,
	d: 3e3,
	prereqs: []
}, {
	ID: 264,
	t: "Subtraction",
	q: 50,
	d: 3e3,
	prereqs: [266]
}, {
	ID: 259,
	t: "Addition",
	q: 50,
	d: 3e3,
	prereqs: [261]
}, {
	ID: 368,
	t: "Angles",
	q: 50,
	d: 3e3,
	prereqs: [326]
}, {
	ID: 351,
	t: "3D Shapes",
	q: 48,
	d: 3e3,
	prereqs: []
}, {
	ID: 382,
	t: "3D Shapes",
	q: 48,
	d: 3e3,
	prereqs: [351]
}, {
	ID: 383,
	t: "3D Shapes",
	q: 35,
	d: 3100,
	prereqs: [382, 459]
}, {
	ID: 384,
	t: "3D Shapes",
	q: 48,
	d: 3100,
	prereqs: [383]
}, {
	ID: 260,
	t: "Addition",
	q: 50,
	d: 3100,
	prereqs: [259]
}, {
	ID: 283,
	t: "Time",
	q: 46,
	d: 3100,
	prereqs: [1035]
}, {
	ID: 122,
	t: "Conversion",
	q: 50,
	d: 3100,
	prereqs: [129]
}, {
	ID: 180,
	t: "Mixed Operations",
	q: 50,
	d: 3100,
	prereqs: [179]
}, {
	ID: 183,
	t: "Mixed Operations",
	q: 50,
	d: 3100,
	prereqs: [40, 29]
}, {
	ID: 184,
	t: "Patterning",
	q: 50,
	d: 3100,
	prereqs: [40]
}, {
	ID: 205,
	t: "Mixed Operations",
	q: 50,
	d: 3100,
	prereqs: [184]
}, {
	ID: 213,
	t: "Measurement",
	q: 25,
	d: 3100,
	prereqs: []
}, {
	ID: 702,
	t: "Mixed Operations",
	q: 50,
	d: 3100,
	prereqs: [784]
}, {
	ID: 716,
	t: "Measurement",
	q: 50,
	d: 3100,
	prereqs: []
}, {
	ID: 707,
	t: "Multiplication",
	q: 50,
	d: 3100,
	prereqs: [706]
}, {
	ID: 708,
	t: "Division",
	q: 50,
	d: 3100,
	prereqs: [782]
}, {
	ID: 539,
	t: "Square Roots",
	q: 20,
	d: 3100,
	prereqs: [40]
}, {
	ID: 554,
	t: "Fractions: Represent",
	q: 32,
	d: 3100,
	prereqs: []
}, {
	ID: 557,
	t: "Fractions: Represent",
	q: 44,
	d: 3100,
	prereqs: [554, 1248, 1246]
}, {
	ID: 519,
	t: "Integers",
	q: 50,
	d: 3100,
	prereqs: [503]
}, {
	ID: 523,
	t: "Rational Numbers",
	q: 50,
	d: 3100,
	prereqs: [500]
}, {
	ID: 524,
	t: "Rational Numbers",
	q: 50,
	d: 3100,
	prereqs: [501]
}, {
	ID: 515,
	t: "Integers",
	q: 50,
	d: 3100,
	prereqs: [514]
}, {
	ID: 504,
	t: "Factors and Multiples",
	q: 50,
	d: 3100,
	prereqs: []
}, {
	ID: 505,
	t: "Factors and Multiples",
	q: 48,
	d: 3100,
	prereqs: [504]
}, {
	ID: 848,
	t: "Division",
	q: 50,
	d: 3100,
	prereqs: [207]
}, {
	ID: 852,
	t: "Mixed Operations",
	q: 50,
	d: 3100,
	prereqs: [409, 417, 406]
}, {
	ID: 771,
	t: "2D Shapes",
	q: 45,
	d: 3100,
	prereqs: [284]
}, {
	ID: 780,
	t: "Measurement",
	q: 50,
	d: 3100,
	prereqs: []
}, {
	ID: 1068,
	t: "Mixed Operations",
	q: 50,
	d: 3100,
	prereqs: [462, 784]
}, {
	ID: 910,
	t: "Numerical Expressions",
	q: 50,
	d: 3100,
	prereqs: [909]
}, {
	ID: 962,
	t: "Factors",
	q: 50,
	d: 3100,
	prereqs: [40, 207, 29]
}, {
	ID: 984,
	t: "Data Relationships",
	q: 50,
	d: 3100,
	prereqs: [329]
}, {
	ID: 985,
	t: "Data Relationships",
	q: 50,
	d: 3200,
	prereqs: [984]
}, {
	ID: 987,
	t: "Factors",
	q: 50,
	d: 3200,
	prereqs: [962]
}, {
	ID: 1046,
	t: "Probability",
	q: 25,
	d: 3200,
	prereqs: [329]
}, {
	ID: 1004,
	t: "Expressions and Equations",
	q: 50,
	d: 3200,
	prereqs: [1003]
}, {
	ID: 811,
	t: "Division",
	q: 50,
	d: 3200,
	prereqs: [29]
}, {
	ID: 801,
	t: "Measurement",
	q: 48,
	d: 3200,
	prereqs: [716, 213]
}, {
	ID: 853,
	t: "Mixed Operations",
	q: 50,
	d: 3200,
	prereqs: [852, 463, 462]
}, {
	ID: 532,
	t: "Square Roots",
	q: 50,
	d: 3200,
	prereqs: [539]
}, {
	ID: 542,
	t: "Place Value",
	q: 50,
	d: 3200,
	prereqs: [308]
}, {
	ID: 709,
	t: "Division",
	q: 50,
	d: 3200,
	prereqs: [708]
}, {
	ID: 711,
	t: "Multiplication",
	q: 48,
	d: 3200,
	prereqs: [707]
}, {
	ID: 753,
	t: "Fractions: Represent",
	q: 32,
	d: 3200,
	prereqs: [554, 557]
}, {
	ID: 730,
	t: "Fractions: Represent",
	q: 50,
	d: 3200,
	prereqs: [554, 557]
}, {
	ID: 622,
	t: "Patterning",
	q: 50,
	d: 3200,
	prereqs: [620]
}, {
	ID: 210,
	t: "2D Shapes",
	q: 50,
	d: 3200,
	prereqs: [771]
}, {
	ID: 220,
	t: "Measurement",
	q: 50,
	d: 3200,
	prereqs: [213]
}, {
	ID: 314,
	t: "Addition",
	q: 50,
	d: 3200,
	prereqs: [310]
}, {
	ID: 287,
	t: "Reading Numbers",
	q: 50,
	d: 3200,
	prereqs: [40, 29, 504, 962]
}, {
	ID: 308,
	t: "Place Value",
	q: 50,
	d: 3200,
	prereqs: [130]
}, {
	ID: 265,
	t: "Subtraction",
	q: 50,
	d: 3200,
	prereqs: [264]
}, {
	ID: 252,
	t: "2D Shapes",
	q: 50,
	d: 3200,
	prereqs: [284]
}, {
	ID: 253,
	t: "2D Shapes",
	q: 50,
	d: 3300,
	prereqs: [210, 252]
}, {
	ID: 254,
	t: "2D Shapes",
	q: 50,
	d: 3300,
	prereqs: [252]
}, {
	ID: 255,
	t: "2D Shapes",
	q: 50,
	d: 3300,
	prereqs: []
}, {
	ID: 312,
	t: "Decimals",
	q: 50,
	d: 3300,
	prereqs: [288, 289]
}, {
	ID: 285,
	t: "Factors",
	q: 50,
	d: 3300,
	prereqs: [287]
}, {
	ID: 221,
	t: "Measurement",
	q: 50,
	d: 3300,
	prereqs: [220]
}, {
	ID: 115,
	t: "Multiplication",
	q: 50,
	d: 3300,
	prereqs: [184]
}, {
	ID: 116,
	t: "Division",
	q: 50,
	d: 3300,
	prereqs: [811]
}, {
	ID: 62,
	t: "Decimals: Multiplication",
	q: 50,
	d: 3300,
	prereqs: [288]
}, {
	ID: 63,
	t: "Decimals: Division",
	q: 50,
	d: 3300,
	prereqs: [289]
}, {
	ID: 722,
	t: "Fractions: Represent",
	q: 45,
	d: 3300,
	prereqs: [730]
}, {
	ID: 718,
	t: "Fractions: Represent",
	q: 50,
	d: 3300,
	prereqs: []
}, {
	ID: 562,
	t: "Fractions: Addition and Subtraction",
	q: 50,
	d: 3300,
	prereqs: []
}, {
	ID: 563,
	t: "Fractions: Equivalent",
	q: 18,
	d: 3300,
	prereqs: [557]
}, {
	ID: 565,
	t: "Multiplication",
	q: 50,
	d: 3300,
	prereqs: [837]
}, {
	ID: 535,
	t: "Exponents: Rules",
	q: 50,
	d: 3300,
	prereqs: [534]
}, {
	ID: 536,
	t: "Exponents: Rules",
	q: 50,
	d: 3300,
	prereqs: [535]
}, {
	ID: 490,
	t: "Measurement",
	q: 50,
	d: 3300,
	prereqs: [180]
}, {
	ID: 487,
	t: "Measurement",
	q: 40,
	d: 3300,
	prereqs: [180, 716, 780]
}, {
	ID: 837,
	t: "Multiplication",
	q: 50,
	d: 3300,
	prereqs: [179]
}, {
	ID: 838,
	t: "Multiplication",
	q: 50,
	d: 3300,
	prereqs: [179]
}, {
	ID: 839,
	t: "Conversion",
	q: 50,
	d: 3300,
	prereqs: []
}, {
	ID: 841,
	t: "Conversion",
	q: 50,
	d: 3300,
	prereqs: [801]
}, {
	ID: 802,
	t: "Measurement",
	q: 40,
	d: 3300,
	prereqs: [716, 213]
}, {
	ID: 825,
	t: "Multiplication",
	q: 50,
	d: 3300,
	prereqs: [179]
}, {
	ID: 816,
	t: "Division",
	q: 50,
	d: 3300,
	prereqs: [815]
}, {
	ID: 767,
	t: "Fractions: Comparing",
	q: 50,
	d: 3300,
	prereqs: []
}, {
	ID: 1011,
	t: "Fractions: Comparing",
	q: 50,
	d: 3300,
	prereqs: []
}, {
	ID: 1054,
	t: "2D Shapes",
	q: 35,
	d: 3300,
	prereqs: []
}, {
	ID: 996,
	t: "Expressions and Equations",
	q: 50,
	d: 3300,
	prereqs: [1004]
}, {
	ID: 997,
	t: "Expressions and Equations",
	q: 50,
	d: 3300,
	prereqs: [910]
}, {
	ID: 973,
	t: "Exponents: Rules",
	q: 50,
	d: 3300,
	prereqs: [536]
}, {
	ID: 1279,
	t: "Data Relationships",
	q: 50,
	d: 3300,
	prereqs: [718, 1278]
}, {
	ID: 1159,
	t: "Data Relationships",
	q: 50,
	d: 3300,
	prereqs: [329]
}, {
	ID: 1160,
	t: "Variables, Expressions, and Equations",
	q: 50,
	d: 3300,
	prereqs: [910]
}, {
	ID: 1175,
	t: "Angles",
	q: 50,
	d: 3300,
	prereqs: [247, 243, 368]
}, {
	ID: 1180,
	t: "Fractions: Equivalent",
	q: 50,
	d: 3400,
	prereqs: []
}, {
	ID: 1104,
	t: "Fractions: Comparing",
	q: 50,
	d: 3400,
	prereqs: [1011]
}, {
	ID: 1141,
	t: "Measurement",
	q: 25,
	d: 3400,
	prereqs: [839]
}, {
	ID: 991,
	t: "Measurement",
	q: 36,
	d: 3400,
	prereqs: [840]
}, {
	ID: 922,
	t: "Fractions and Decimals",
	q: 50,
	d: 3400,
	prereqs: [563]
}, {
	ID: 1050,
	t: "2D Shapes",
	q: 50,
	d: 3400,
	prereqs: [253, 1054]
}, {
	ID: 1027,
	t: "Fractions: Represent",
	q: 50,
	d: 3400,
	prereqs: [718, 557]
}, {
	ID: 1043,
	t: "Variables, Expressions, and Equations",
	q: 50,
	d: 3400,
	prereqs: [996]
}, {
	ID: 1012,
	t: "3D Shapes",
	q: 18,
	d: 3400,
	prereqs: [383]
}, {
	ID: 770,
	t: "Area",
	q: 50,
	d: 3400,
	prereqs: [372]
}, {
	ID: 809,
	t: "Multiplication",
	q: 50,
	d: 3400,
	prereqs: [825, 838]
}, {
	ID: 807,
	t: "Division",
	q: 50,
	d: 3400,
	prereqs: [816]
}, {
	ID: 488,
	t: "Measurement",
	q: 50,
	d: 3400,
	prereqs: [487]
}, {
	ID: 509,
	t: "Ratios",
	q: 50,
	d: 3400,
	prereqs: []
}, {
	ID: 561,
	t: "Decimals: Represent",
	q: 50,
	d: 3400,
	prereqs: [563]
}, {
	ID: 719,
	t: "Fractions: Equivalent",
	q: 42,
	d: 3400,
	prereqs: []
}, {
	ID: 733,
	t: "Patterning",
	q: 50,
	d: 3400,
	prereqs: []
}, {
	ID: 613,
	t: "Data Relationships",
	q: 50,
	d: 3400,
	prereqs: [603]
}, {
	ID: 125,
	t: "Multiplication",
	q: 50,
	d: 3400,
	prereqs: [115, 116, 205]
}, {
	ID: 303,
	t: "Decimals: Mixed Operations",
	q: 50,
	d: 3400,
	prereqs: [62, 63]
}, {
	ID: 290,
	t: "Multiplication",
	q: 50,
	d: 3400,
	prereqs: [62, 63]
}, {
	ID: 256,
	t: "2D Shapes",
	q: 45,
	d: 3400,
	prereqs: [254]
}, {
	ID: 372,
	t: "2D Shapes",
	q: 50,
	d: 3400,
	prereqs: []
}, {
	ID: 335,
	t: "Patterning",
	q: 50,
	d: 3400,
	prereqs: [455, 253]
}, {
	ID: 363,
	t: "Unit Rates",
	q: 50,
	d: 3400,
	prereqs: []
}, {
	ID: 364,
	t: "Money",
	q: 50,
	d: 3500,
	prereqs: [312, 363]
}, {
	ID: 367,
	t: "2D Shapes",
	q: 50,
	d: 3500,
	prereqs: [372]
}, {
	ID: 327,
	t: "Conversion",
	q: 50,
	d: 3500,
	prereqs: [213, 839, 841]
}, {
	ID: 373,
	t: "2D Shapes",
	q: 50,
	d: 3500,
	prereqs: [367]
}, {
	ID: 374,
	t: "2D Shapes",
	q: 50,
	d: 3500,
	prereqs: [372]
}, {
	ID: 380,
	t: "2D Shapes",
	q: 50,
	d: 3500,
	prereqs: []
}, {
	ID: 415,
	t: "Word Problems",
	q: 40,
	d: 3500,
	prereqs: [162]
}, {
	ID: 416,
	t: "Word Problems",
	q: 50,
	d: 3500,
	prereqs: [163]
}, {
	ID: 257,
	t: "2D Shapes",
	q: 43,
	d: 3500,
	prereqs: [256]
}, {
	ID: 321,
	t: "Multiplication",
	q: 50,
	d: 3500,
	prereqs: [290, 303]
}, {
	ID: 325,
	t: "2D Shapes",
	q: 50,
	d: 3500,
	prereqs: [255]
}, {
	ID: 126,
	t: "Fractions",
	q: 50,
	d: 3500,
	prereqs: [183]
}, {
	ID: 162,
	t: "Division",
	q: 50,
	d: 3500,
	prereqs: [29, 207, 816, 807]
}, {
	ID: 163,
	t: "Multiplication",
	q: 50,
	d: 3500,
	prereqs: [179, 565, 764, 809]
}, {
	ID: 219,
	t: "Fractions",
	q: 30,
	d: 3500,
	prereqs: [62]
}, {
	ID: 734,
	t: "Fractions: Comparing",
	q: 33,
	d: 3500,
	prereqs: [1027, 1011]
}, {
	ID: 720,
	t: "Fractions: Equivalent",
	q: 42,
	d: 3500,
	prereqs: []
}, {
	ID: 560,
	t: "Fractions: Comparing",
	q: 50,
	d: 3500,
	prereqs: [558]
}, {
	ID: 558,
	t: "Fractions: Addition and Subtraction",
	q: 50,
	d: 3500,
	prereqs: [563, 562]
}, {
	ID: 537,
	t: "Decimals",
	q: 50,
	d: 3500,
	prereqs: [290, 303]
}, {
	ID: 506,
	t: "Ratios",
	q: 50,
	d: 3500,
	prereqs: [502]
}, {
	ID: 497,
	t: "Probability",
	q: 50,
	d: 3500,
	prereqs: [352]
}, {
	ID: 489,
	t: "Measurement",
	q: 20,
	d: 3500,
	prereqs: [488]
}, {
	ID: 491,
	t: "Measurement",
	q: 20,
	d: 3500,
	prereqs: [490]
}, {
	ID: 492,
	t: "Measurement",
	q: 40,
	d: 3500,
	prereqs: [488]
}, {
	ID: 493,
	t: "Measurement",
	q: 40,
	d: 3500,
	prereqs: [221]
}, {
	ID: 502,
	t: "Ratios",
	q: 50,
	d: 3500,
	prereqs: [504, 858]
}, {
	ID: 803,
	t: "Area",
	q: 50,
	d: 3500,
	prereqs: [770]
}, {
	ID: 798,
	t: "Data Relationships",
	q: 50,
	d: 3500,
	prereqs: [673, 671]
}, {
	ID: 799,
	t: "Data Relationships",
	q: 50,
	d: 3500,
	prereqs: [1279]
}, {
	ID: 843,
	t: "Conversion",
	q: 50,
	d: 3500,
	prereqs: [839, 1034]
}, {
	ID: 846,
	t: "Conversion",
	q: 50,
	d: 3500,
	prereqs: [840, 1033]
}, {
	ID: 858,
	t: "Ratios",
	q: 50,
	d: 3500,
	prereqs: [509]
}, {
	ID: 900,
	t: "Fractions: Addition and Subtraction",
	q: 50,
	d: 3500,
	prereqs: [722]
}, {
	ID: 1033,
	t: "Conversion",
	q: 50,
	d: 3500,
	prereqs: []
}, {
	ID: 1034,
	t: "Conversion",
	q: 50,
	d: 3500,
	prereqs: [327]
}, {
	ID: 1014,
	t: "Fractions and Decimals",
	q: 50,
	d: 3500,
	prereqs: [337, 1027]
}, {
	ID: 994,
	t: "Measurement",
	q: 20,
	d: 3500,
	prereqs: [1141]
}, {
	ID: 1105,
	t: "Fractions: Comparing",
	q: 50,
	d: 3500,
	prereqs: [1104]
}, {
	ID: 1178,
	t: "Fractions: Equivalent",
	q: 50,
	d: 3500,
	prereqs: [722, 1180]
}, {
	ID: 1153,
	t: "Measurement",
	q: 36,
	d: 3500,
	prereqs: [991]
}, {
	ID: 1109,
	t: "Decimals: Represent",
	q: 50,
	d: 3600,
	prereqs: [561]
}, {
	ID: 986,
	t: "Fractions: Addition and Subtraction",
	q: 50,
	d: 3600,
	prereqs: [900]
}, {
	ID: 925,
	t: "Fractions: Addition and Subtraction",
	q: 50,
	d: 3600,
	prereqs: [718, 733]
}, {
	ID: 927,
	t: "Fractions: Addition and Subtraction",
	q: 50,
	d: 3600,
	prereqs: [733, 718, 49]
}, {
	ID: 943,
	t: "Ratios",
	q: 50,
	d: 3600,
	prereqs: [502, 858]
}, {
	ID: 953,
	t: "Multiplication",
	q: 50,
	d: 3600,
	prereqs: [163]
}, {
	ID: 1023,
	t: "Ratios",
	q: 50,
	d: 3600,
	prereqs: [858]
}, {
	ID: 1032,
	t: "Conversion",
	q: 50,
	d: 3600,
	prereqs: [327, 801]
}, {
	ID: 1038,
	t: "2D Shapes",
	q: 20,
	d: 3600,
	prereqs: [373]
}, {
	ID: 1063,
	t: "Geometry",
	q: 50,
	d: 3600,
	prereqs: [284]
}, {
	ID: 901,
	t: "Fractions: Addition and Subtraction",
	q: 50,
	d: 3600,
	prereqs: [722]
}, {
	ID: 849,
	t: "Division",
	q: 50,
	d: 3600,
	prereqs: [848, 162]
}, {
	ID: 786,
	t: "Measurement",
	q: 50,
	d: 3600,
	prereqs: [801, 802]
}, {
	ID: 765,
	t: "Fractions: Equivalent",
	q: 39,
	d: 3600,
	prereqs: [719, 720]
}, {
	ID: 766,
	t: "Fractions: Equivalent",
	q: 39,
	d: 3600,
	prereqs: [719, 734, 765]
}, {
	ID: 755,
	t: "Measurement",
	q: 50,
	d: 3600,
	prereqs: [801, 802]
}, {
	ID: 829,
	t: "Multiplication",
	q: 50,
	d: 3600,
	prereqs: [163, 953]
}, {
	ID: 494,
	t: "Measurement",
	q: 40,
	d: 3600,
	prereqs: [327]
}, {
	ID: 508,
	t: "Ratios",
	q: 50,
	d: 3600,
	prereqs: []
}, {
	ID: 512,
	t: "2D Shapes",
	q: 50,
	d: 3600,
	prereqs: [326]
}, {
	ID: 522,
	t: "2D Shapes",
	q: 40,
	d: 3600,
	prereqs: []
}, {
	ID: 564,
	t: "Division",
	q: 50,
	d: 3600,
	prereqs: [162]
}, {
	ID: 531,
	t: "2D Shapes",
	q: 30,
	d: 3600,
	prereqs: [375]
}, {
	ID: 691,
	t: "Angles",
	q: 50,
	d: 3600,
	prereqs: [512, 1175]
}, {
	ID: 698,
	t: "Angles",
	q: 50,
	d: 3600,
	prereqs: [512]
}, {
	ID: 723,
	t: "Fractions: Equivalent",
	q: 39,
	d: 3600,
	prereqs: []
}, {
	ID: 715,
	t: "Fractions: Represent",
	q: 50,
	d: 3600,
	prereqs: [46, 722]
}, {
	ID: 623,
	t: "Conversion",
	q: 50,
	d: 3600,
	prereqs: [327, 843, 839, 1034]
}, {
	ID: 641,
	t: "Scientific Notation",
	q: 50,
	d: 3600,
	prereqs: [537]
}, {
	ID: 642,
	t: "Scientific Notation",
	q: 50,
	d: 3600,
	prereqs: [537]
}, {
	ID: 160,
	t: "Fractions: Comparing",
	q: 50,
	d: 3600,
	prereqs: [126, 46]
}, {
	ID: 46,
	t: "Fractions: Equivalent",
	q: 50,
	d: 3600,
	prereqs: [126, 560, 720, 723, 1178]
}, {
	ID: 117,
	t: "Patterning",
	q: 50,
	d: 3600,
	prereqs: [163, 162]
}, {
	ID: 124,
	t: "Conversion",
	q: 50,
	d: 3600,
	prereqs: [180, 839, 1034]
}, {
	ID: 381,
	t: "2D Shapes",
	q: 50,
	d: 3600,
	prereqs: [380]
}, {
	ID: 375,
	t: "2D Shapes",
	q: 50,
	d: 3600,
	prereqs: [367, 380]
}, {
	ID: 376,
	t: "Measurement",
	q: 50,
	d: 3600,
	prereqs: [369]
}, {
	ID: 369,
	t: "2D Shapes",
	q: 50,
	d: 3600,
	prereqs: [770]
}, {
	ID: 365,
	t: "Ratios",
	q: 44,
	d: 3700,
	prereqs: []
}, {
	ID: 353,
	t: "Fractions: Comparing",
	q: 50,
	d: 3700,
	prereqs: []
}, {
	ID: 354,
	t: "Fractions: Comparing",
	q: 50,
	d: 3700,
	prereqs: [160]
}, {
	ID: 330,
	t: "Data Relationships",
	q: 50,
	d: 3700,
	prereqs: [1159]
}, {
	ID: 331,
	t: "Variables, Expressions, and Equations",
	q: 50,
	d: 3700,
	prereqs: []
}, {
	ID: 332,
	t: "Variables, Expressions, and Equations",
	q: 50,
	d: 3700,
	prereqs: [331]
}, {
	ID: 333,
	t: "Variables, Expressions, and Equations",
	q: 50,
	d: 3700,
	prereqs: [332, 358, 910, 997, 1044, 1160]
}, {
	ID: 334,
	t: "Geometry",
	q: 50,
	d: 3700,
	prereqs: []
}, {
	ID: 305,
	t: "Decimals: Multiplication",
	q: 50,
	d: 3700,
	prereqs: [290]
}, {
	ID: 306,
	t: "Decimals: Division",
	q: 50,
	d: 3700,
	prereqs: [303]
}, {
	ID: 106,
	t: "Fractions and Decimals",
	q: 50,
	d: 3700,
	prereqs: [219, 561]
}, {
	ID: 640,
	t: "Scientific Notation",
	q: 50,
	d: 3700,
	prereqs: [641, 642]
}, {
	ID: 724,
	t: "Fractions: Equivalent",
	q: 39,
	d: 3700,
	prereqs: [46]
}, {
	ID: 721,
	t: "Fractions: Equivalent",
	q: 42,
	d: 3700,
	prereqs: [719]
}, {
	ID: 527,
	t: "Measurement",
	q: 50,
	d: 3700,
	prereqs: [327]
}, {
	ID: 529,
	t: "2D Shapes",
	q: 40,
	d: 3700,
	prereqs: []
}, {
	ID: 530,
	t: "2D Shapes",
	q: 30,
	d: 3700,
	prereqs: [1038]
}, {
	ID: 513,
	t: "Lines",
	q: 25,
	d: 3700,
	prereqs: [326]
}, {
	ID: 810,
	t: "Multiplication",
	q: 50,
	d: 3700,
	prereqs: [829]
}, {
	ID: 769,
	t: "2D Shapes",
	q: 50,
	d: 3700,
	prereqs: [381]
}, {
	ID: 850,
	t: "Division",
	q: 50,
	d: 3700,
	prereqs: [849, 162]
}, {
	ID: 844,
	t: "Conversion",
	q: 50,
	d: 3700,
	prereqs: [841, 490, 1032]
}, {
	ID: 897,
	t: "Fractions: Addition and Subtraction",
	q: 50,
	d: 3700,
	prereqs: [900]
}, {
	ID: 891,
	t: "Fractions: Multiplication",
	q: 50,
	d: 3700,
	prereqs: [40, 715]
}, {
	ID: 892,
	t: "Fractions: Equivalent",
	q: 50,
	d: 3700,
	prereqs: [40]
}, {
	ID: 1044,
	t: "Expressions and Equations",
	q: 50,
	d: 3700,
	prereqs: [997, 1160]
}, {
	ID: 1045,
	t: "3D Shapes",
	q: 18,
	d: 3700,
	prereqs: [351]
}, {
	ID: 1047,
	t: "3D Shapes",
	q: 18,
	d: 3700,
	prereqs: [351]
}, {
	ID: 1025,
	t: "Ratios",
	q: 50,
	d: 3700,
	prereqs: [943]
}, {
	ID: 1022,
	t: "Ratios",
	q: 50,
	d: 3700,
	prereqs: [1023, 943]
}, {
	ID: 934,
	t: "Mixed Operations",
	q: 50,
	d: 3700,
	prereqs: [462, 838, 849, 463]
}, {
	ID: 937,
	t: "Fractions: Addition and Subtraction",
	q: 50,
	d: 3700,
	prereqs: [901, 927]
}, {
	ID: 964,
	t: "Division",
	q: 50,
	d: 3700,
	prereqs: [849]
}, {
	ID: 965,
	t: "Division",
	q: 50,
	d: 3700,
	prereqs: []
}, {
	ID: 1106,
	t: "Conversion",
	q: 50,
	d: 3700,
	prereqs: [841, 839]
}, {
	ID: 1102,
	t: "Fractions: Equivalent",
	q: 50,
	d: 3700,
	prereqs: [724]
}, {
	ID: 1082,
	t: "Geometry",
	q: 50,
	d: 3700,
	prereqs: [1063]
}, {
	ID: 1122,
	t: "Conversion",
	q: 50,
	d: 3700,
	prereqs: [180, 303, 327]
}, {
	ID: 1123,
	t: "Conversion",
	q: 50,
	d: 3700,
	prereqs: [180, 303, 1153]
}, {
	ID: 1118,
	t: "Conversion",
	q: 50,
	d: 3700,
	prereqs: [180, 303, 124, 327, 994]
}, {
	ID: 1119,
	t: "Conversion",
	q: 50,
	d: 3700,
	prereqs: [840, 1033, 1153]
}, {
	ID: 1166,
	t: "Data Relationships",
	q: 50,
	d: 3700,
	prereqs: [799, 798]
}, {
	ID: 624,
	t: "Variables, Expressions, and Equations",
	q: 40,
	d: 3750,
	prereqs: [333]
}, {
	ID: 625,
	t: "Conversion",
	q: 50,
	d: 3800,
	prereqs: [489]
}, {
	ID: 626,
	t: "Conversion",
	q: 50,
	d: 3800,
	prereqs: [491, 844, 841, 1032]
}, {
	ID: 579,
	t: "Probability",
	q: 50,
	d: 3800,
	prereqs: []
}, {
	ID: 580,
	t: "Probability",
	q: 50,
	d: 3800,
	prereqs: [579]
}, {
	ID: 652,
	t: "Scientific Notation",
	q: 50,
	d: 3800,
	prereqs: [640]
}, {
	ID: 286,
	t: "Multiplication",
	q: 50,
	d: 3800,
	prereqs: [163, 810, 837]
}, {
	ID: 291,
	t: "Division",
	q: 50,
	d: 3800,
	prereqs: [851, 965, 963]
}, {
	ID: 318,
	t: "Multiplication",
	q: 50,
	d: 3800,
	prereqs: [286]
}, {
	ID: 360,
	t: "Fractions: Comparing",
	q: 50,
	d: 3800,
	prereqs: [160, 46]
}, {
	ID: 361,
	t: "Patterning",
	q: 40,
	d: 3800,
	prereqs: [328]
}, {
	ID: 362,
	t: "Patterning",
	q: 50,
	d: 3800,
	prereqs: [328]
}, {
	ID: 328,
	t: "Patterning",
	q: 40,
	d: 3800,
	prereqs: [279]
}, {
	ID: 339,
	t: "Variables, Expressions, and Equations",
	q: 48,
	d: 3800,
	prereqs: [333]
}, {
	ID: 1066,
	t: "2D Shapes",
	q: 50,
	d: 3800,
	prereqs: [375, 380]
}, {
	ID: 1103,
	t: "Fractions: Equivalent",
	q: 49,
	d: 3800,
	prereqs: [1102]
}, {
	ID: 1110,
	t: "Rounding",
	q: 50,
	d: 3800,
	prereqs: [1109]
}, {
	ID: 963,
	t: "Division",
	q: 50,
	d: 3800,
	prereqs: [965]
}, {
	ID: 961,
	t: "Division",
	q: 50,
	d: 3800,
	prereqs: [965, 849, 964]
}, {
	ID: 935,
	t: "Fractions: Addition and Subtraction",
	q: 50,
	d: 3800,
	prereqs: [925, 986]
}, {
	ID: 926,
	t: "Fractions: Comparing",
	q: 50,
	d: 3800,
	prereqs: [901, 927]
}, {
	ID: 915,
	t: "Decimals: Division",
	q: 50,
	d: 3800,
	prereqs: [306]
}, {
	ID: 1026,
	t: "Proportional Relationships",
	q: 40,
	d: 3800,
	prereqs: [1022]
}, {
	ID: 1009,
	t: "Ratios",
	q: 50,
	d: 3800,
	prereqs: [1022]
}, {
	ID: 1e3,
	t: "Exponents: Evaluate",
	q: 50,
	d: 3800,
	prereqs: [163, 973]
}, {
	ID: 1048,
	t: "Expressions and Equations",
	q: 50,
	d: 3800,
	prereqs: [1044]
}, {
	ID: 1052,
	t: "Geometry",
	q: 50,
	d: 3800,
	prereqs: [603, 602]
}, {
	ID: 1074,
	t: "Decimals: Represent",
	q: 50,
	d: 3800,
	prereqs: [561]
}, {
	ID: 912,
	t: "Decimals: Multiplication",
	q: 50,
	d: 3800,
	prereqs: [305]
}, {
	ID: 913,
	t: "Decimals: Division",
	q: 50,
	d: 3800,
	prereqs: [306]
}, {
	ID: 851,
	t: "Division",
	q: 50,
	d: 3800,
	prereqs: [849, 850]
}, {
	ID: 872,
	t: "Decimals: Multiplication",
	q: 50,
	d: 3800,
	prereqs: [305]
}, {
	ID: 859,
	t: "Data Relationships",
	q: 30,
	d: 3900,
	prereqs: [324]
}, {
	ID: 860,
	t: "Proportional Relationships",
	q: 50,
	d: 3900,
	prereqs: [324]
}, {
	ID: 861,
	t: "Proportional Relationships",
	q: 30,
	d: 3900,
	prereqs: [324]
}, {
	ID: 914,
	t: "Decimals: Multiplication",
	q: 50,
	d: 3900,
	prereqs: [912]
}, {
	ID: 890,
	t: "Fractions: Equivalent",
	q: 50,
	d: 3900,
	prereqs: [40, 724, 892]
}, {
	ID: 1075,
	t: "Proportional Relationships",
	q: 50,
	d: 3900,
	prereqs: [1026]
}, {
	ID: 1010,
	t: "Ratios",
	q: 50,
	d: 3900,
	prereqs: [1009]
}, {
	ID: 1016,
	t: "Decimals: Comparing",
	q: 50,
	d: 3900,
	prereqs: [1014, 1109]
}, {
	ID: 1021,
	t: "Fractions: Addition and Subtraction",
	q: 50,
	d: 3900,
	prereqs: [935]
}, {
	ID: 929,
	t: "Fractions: Multiplication",
	q: 50,
	d: 3900,
	prereqs: [897]
}, {
	ID: 939,
	t: "Fractions: Represent",
	q: 50,
	d: 3900,
	prereqs: [562, 897, 715]
}, {
	ID: 908,
	t: "Fractions: Multiplication",
	q: 50,
	d: 3900,
	prereqs: [897]
}, {
	ID: 952,
	t: "Fractions: Represent",
	q: 50,
	d: 3900,
	prereqs: [715, 897, 562]
}, {
	ID: 957,
	t: "Probability",
	q: 50,
	d: 3900,
	prereqs: [579]
}, {
	ID: 974,
	t: "Mixed Operations",
	q: 50,
	d: 3900,
	prereqs: [934, 417, 409]
}, {
	ID: 967,
	t: "Mixed Operations",
	q: 50,
	d: 3900,
	prereqs: [974]
}, {
	ID: 1120,
	t: "Conversion",
	q: 50,
	d: 3900,
	prereqs: [1119]
}, {
	ID: 1121,
	t: "Conversion",
	q: 50,
	d: 3900,
	prereqs: [1119, 994]
}, {
	ID: 1126,
	t: "Conversion",
	q: 50,
	d: 3900,
	prereqs: [1034, 1118]
}, {
	ID: 1127,
	t: "Conversion",
	q: 50,
	d: 3900,
	prereqs: [1032, 1122]
}, {
	ID: 1128,
	t: "Conversion",
	q: 50,
	d: 3900,
	prereqs: [1033, 1119]
}, {
	ID: 1129,
	t: "Geometry",
	q: 50,
	d: 3900,
	prereqs: [1052]
}, {
	ID: 1174,
	t: "Data Relationships",
	q: 50,
	d: 3900,
	prereqs: [1166]
}, {
	ID: 1149,
	t: "Data Relationships",
	q: 8,
	d: 3900,
	prereqs: [329, 985]
}, {
	ID: 341,
	t: "Conversion",
	q: 50,
	d: 3900,
	prereqs: [523]
}, {
	ID: 355,
	t: "Probability",
	q: 50,
	d: 3900,
	prereqs: [497]
}, {
	ID: 356,
	t: "Probability",
	q: 50,
	d: 3900,
	prereqs: [497]
}, {
	ID: 377,
	t: "Probability",
	q: 50,
	d: 3900,
	prereqs: [497]
}, {
	ID: 378,
	t: "Probability",
	q: 50,
	d: 3900,
	prereqs: [377, 957]
}, {
	ID: 387,
	t: "3D Shapes",
	q: 20,
	d: 3900,
	prereqs: [375, 351]
}, {
	ID: 385,
	t: "3D Shapes",
	q: 50,
	d: 3900,
	prereqs: [387]
}, {
	ID: 319,
	t: "Division",
	q: 50,
	d: 3900,
	prereqs: [291]
}, {
	ID: 315,
	t: "Multiplication",
	q: 50,
	d: 3900,
	prereqs: [318]
}, {
	ID: 324,
	t: "Unit Rates",
	q: 50,
	d: 3900,
	prereqs: [318, 319, 502, 125]
}, {
	ID: 653,
	t: "Scientific Notation",
	q: 50,
	d: 3900,
	prereqs: [652]
}, {
	ID: 654,
	t: "Scientific Notation",
	q: 40,
	d: 3900,
	prereqs: [652]
}, {
	ID: 701,
	t: "Pythagorean Theorem",
	q: 50,
	d: 3900,
	prereqs: [529]
}, {
	ID: 617,
	t: "Data Relationships",
	q: 50,
	d: 3900,
	prereqs: [330]
}, {
	ID: 528,
	t: "Patterning",
	q: 45,
	d: 3900,
	prereqs: [362, 361]
}, {
	ID: 520,
	t: "Patterning",
	q: 25,
	d: 3900,
	prereqs: [328]
}, {
	ID: 540,
	t: "Variables, Expressions, and Equations",
	q: 50,
	d: 3900,
	prereqs: [339]
}, {
	ID: 533,
	t: "Variables, Expressions, and Equations",
	q: 50,
	d: 4e3,
	prereqs: [339]
}, {
	ID: 521,
	t: "Decimals",
	q: 50,
	d: 4e3,
	prereqs: [305, 912, 975]
}, {
	ID: 518,
	t: "Decimals",
	q: 50,
	d: 4e3,
	prereqs: [306, 915]
}, {
	ID: 618,
	t: "Probability",
	q: 50,
	d: 4e3,
	prereqs: [356]
}, {
	ID: 619,
	t: "Probability",
	q: 50,
	d: 4e3,
	prereqs: [356]
}, {
	ID: 639,
	t: "Radicals",
	q: 22,
	d: 4e3,
	prereqs: []
}, {
	ID: 572,
	t: "Rational Numbers: Represent",
	q: 50,
	d: 4e3,
	prereqs: [582, 500]
}, {
	ID: 574,
	t: "Rational Numbers: Addition and Subtraction",
	q: 50,
	d: 4e3,
	prereqs: [572]
}, {
	ID: 582,
	t: "Rational Numbers: Represent",
	q: 50,
	d: 4e3,
	prereqs: [341]
}, {
	ID: 655,
	t: "Linear Expressions",
	q: 30,
	d: 4e3,
	prereqs: [861]
}, {
	ID: 660,
	t: "Linear Expressions",
	q: 50,
	d: 4e3,
	prereqs: [655, 860]
}, {
	ID: 685,
	t: "Functions",
	q: 21,
	d: 4e3,
	prereqs: []
}, {
	ID: 688,
	t: "Pythagorean Theorem",
	q: 50,
	d: 4e3,
	prereqs: [639, 529]
}, {
	ID: 322,
	t: "Decimals and Fractions",
	q: 50,
	d: 4e3,
	prereqs: [341]
}, {
	ID: 386,
	t: "3D Shapes",
	q: 20,
	d: 4e3,
	prereqs: [387]
}, {
	ID: 379,
	t: "Probability",
	q: 50,
	d: 4e3,
	prereqs: [377]
}, {
	ID: 357,
	t: "Probability",
	q: 50,
	d: 4e3,
	prereqs: [356]
}, {
	ID: 366,
	t: "3D Shapes",
	q: 50,
	d: 4e3,
	prereqs: [385]
}, {
	ID: 342,
	t: "Conversion",
	q: 50,
	d: 4e3,
	prereqs: []
}, {
	ID: 340,
	t: "Conversion",
	q: 50,
	d: 4e3,
	prereqs: []
}, {
	ID: 1157,
	t: "Patterning",
	q: 50,
	d: 4e3,
	prereqs: [1129]
}, {
	ID: 1158,
	t: "Patterning",
	q: 50,
	d: 4e3,
	prereqs: [1052]
}, {
	ID: 1165,
	t: "Proportional Relationships",
	q: 50,
	d: 4e3,
	prereqs: [324]
}, {
	ID: 1142,
	t: "Conversion",
	q: 50,
	d: 4e3,
	prereqs: [1118]
}, {
	ID: 1143,
	t: "Conversion",
	q: 50,
	d: 4e3,
	prereqs: [1121]
}, {
	ID: 1144,
	t: "Conversion",
	q: 50,
	d: 4e3,
	prereqs: [1122]
}, {
	ID: 1145,
	t: "Conversion",
	q: 50,
	d: 4e3,
	prereqs: [1119]
}, {
	ID: 1086,
	t: "Expressions and Equations",
	q: 48,
	d: 4e3,
	prereqs: [655]
}, {
	ID: 1277,
	t: "Unit Rates",
	q: 30,
	d: 4e3,
	prereqs: [655]
}, {
	ID: 989,
	t: "Measurement",
	q: 50,
	d: 4e3,
	prereqs: [769, 770]
}, {
	ID: 975,
	t: "Decimals: Multiplication",
	q: 50,
	d: 4e3,
	prereqs: [912]
}, {
	ID: 976,
	t: "Decimals: Multiplication",
	q: 50,
	d: 4e3,
	prereqs: [872, 521]
}, {
	ID: 1002,
	t: "Exponents: Evaluate",
	q: 50,
	d: 4e3,
	prereqs: [521, 1e3, 973]
}, {
	ID: 1006,
	t: "Probability",
	q: 50,
	d: 4e3,
	prereqs: [957]
}, {
	ID: 1007,
	t: "Probability",
	q: 50,
	d: 4e3,
	prereqs: [356]
}, {
	ID: 1008,
	t: "Probability",
	q: 50,
	d: 4e3,
	prereqs: [356]
}, {
	ID: 1055,
	t: "Expressions and Equations",
	q: 50,
	d: 4e3,
	prereqs: [997, 1160]
}, {
	ID: 1051,
	t: "Expressions and Equations",
	q: 50,
	d: 4e3,
	prereqs: []
}, {
	ID: 1049,
	t: "Expressions and Equations",
	q: 50,
	d: 4e3,
	prereqs: [1048]
}, {
	ID: 899,
	t: "Fractions: Multiplication",
	q: 50,
	d: 4e3,
	prereqs: [891, 908]
}, {
	ID: 894,
	t: "Fractions: Comparing",
	q: 50,
	d: 4e3,
	prereqs: [892]
}, {
	ID: 638,
	t: "Radicals",
	q: 22,
	d: 4050,
	prereqs: [532, 639]
}, {
	ID: 656,
	t: "Linear Expressions",
	q: 30,
	d: 4100,
	prereqs: [1277]
}, {
	ID: 699,
	t: "Pythagorean Theorem",
	q: 50,
	d: 4100,
	prereqs: [701]
}, {
	ID: 511,
	t: "Probability",
	q: 30,
	d: 4100,
	prereqs: [379]
}, {
	ID: 525,
	t: "Probability",
	q: 35,
	d: 4100,
	prereqs: [511, 357]
}, {
	ID: 541,
	t: "3D Shapes",
	q: 30,
	d: 4100,
	prereqs: [366]
}, {
	ID: 343,
	t: "Conversion",
	q: 50,
	d: 4100,
	prereqs: [341, 340, 342]
}, {
	ID: 323,
	t: "Decimals and Fractions",
	q: 50,
	d: 4100,
	prereqs: [106]
}, {
	ID: 316,
	t: "Fractions: Comparing",
	q: 50,
	d: 4100,
	prereqs: [354, 353, 560]
}, {
	ID: 320,
	t: "Fractions and Decimals",
	q: 50,
	d: 4100,
	prereqs: [323, 322, 922, 1016]
}, {
	ID: 888,
	t: "Fractions: Addition and Subtraction",
	q: 50,
	d: 4100,
	prereqs: [939, 952]
}, {
	ID: 889,
	t: "Fractions: Addition and Subtraction",
	q: 50,
	d: 4100,
	prereqs: [952, 939]
}, {
	ID: 864,
	t: "Proportional Relationships",
	q: 50,
	d: 4100,
	prereqs: [859]
}, {
	ID: 1056,
	t: "Geometry",
	q: 50,
	d: 4100,
	prereqs: [1052]
}, {
	ID: 1057,
	t: "Geometry",
	q: 50,
	d: 4100,
	prereqs: [1052, 1056]
}, {
	ID: 1017,
	t: "3D Shapes",
	q: 20,
	d: 4100,
	prereqs: [387, 1013]
}, {
	ID: 1013,
	t: "3D Shapes",
	q: 20,
	d: 4100,
	prereqs: [387, 1012]
}, {
	ID: 956,
	t: "Probability",
	q: 50,
	d: 4100,
	prereqs: [357]
}, {
	ID: 990,
	t: "Measurement",
	q: 50,
	d: 4100,
	prereqs: [803, 770, 769]
}, {
	ID: 995,
	t: "Decimals: Multiplication",
	q: 50,
	d: 4100,
	prereqs: [914, 976]
}, {
	ID: 1085,
	t: "Expressions and Equations",
	q: 34,
	d: 4100,
	prereqs: [660]
}, {
	ID: 1088,
	t: "Expressions and Equations",
	q: 48,
	d: 4100,
	prereqs: [655]
}, {
	ID: 1079,
	t: "Probability",
	q: 50,
	d: 4100,
	prereqs: [1006]
}, {
	ID: 1099,
	t: "Expressions and Equations",
	q: 50,
	d: 4100,
	prereqs: [1086]
}, {
	ID: 1116,
	t: "Functions",
	q: 48,
	d: 4100,
	prereqs: [655]
}, {
	ID: 1130,
	t: "Geometry",
	q: 50,
	d: 4100,
	prereqs: [1129]
}, {
	ID: 1163,
	t: "Variables, Expressions, and Equations",
	q: 50,
	d: 4100,
	prereqs: [1051]
}, {
	ID: 1164,
	t: "Proportional Relationships",
	q: 50,
	d: 4100,
	prereqs: [1165]
}, {
	ID: 1161,
	t: "Patterning",
	q: 50,
	d: 4100,
	prereqs: [328]
}, {
	ID: 1150,
	t: "Pythagorean Theorem",
	q: 50,
	d: 4100,
	prereqs: [688]
}, {
	ID: 1154,
	t: "Conversion",
	q: 36,
	d: 4100,
	prereqs: [1145, 1123]
}, {
	ID: 1148,
	t: "Conversion",
	q: 45,
	d: 4100,
	prereqs: [1121, 1118]
}, {
	ID: 1156,
	t: "Expressions and Equations",
	q: 50,
	d: 4100,
	prereqs: [974, 967]
}, {
	ID: 1162,
	t: "Variables, Expressions, and Equations",
	q: 50,
	d: 4200,
	prereqs: [1163]
}, {
	ID: 1179,
	t: "3D Shapes",
	q: 50,
	d: 4200,
	prereqs: [541]
}, {
	ID: 1177,
	t: "Statistics",
	q: 50,
	d: 4200,
	prereqs: [1079]
}, {
	ID: 1167,
	t: "Proportional Relationships",
	q: 50,
	d: 4200,
	prereqs: [1164]
}, {
	ID: 1172,
	t: "Patterning",
	q: 50,
	d: 4200,
	prereqs: [1052]
}, {
	ID: 1131,
	t: "Geometry",
	q: 50,
	d: 4200,
	prereqs: [1056, 1129]
}, {
	ID: 1101,
	t: "Expressions and Equations",
	q: 50,
	d: 4200,
	prereqs: [1116]
}, {
	ID: 1097,
	t: "Expressions and Equations",
	q: 50,
	d: 4200,
	prereqs: [1088]
}, {
	ID: 1098,
	t: "Expressions and Equations",
	q: 50,
	d: 4200,
	prereqs: [1085]
}, {
	ID: 983,
	t: "Probability",
	q: 50,
	d: 4200,
	prereqs: [525, 956]
}, {
	ID: 1018,
	t: "Proportional Relationships",
	q: 50,
	d: 4200,
	prereqs: [506, 526]
}, {
	ID: 1019,
	t: "Proportional Relationships",
	q: 50,
	d: 4200,
	prereqs: [1018]
}, {
	ID: 1024,
	t: "Rational Numbers: Addition and Subtraction",
	q: 50,
	d: 4200,
	prereqs: [573]
}, {
	ID: 1036,
	t: "Rational Numbers: Addition and Subtraction",
	q: 50,
	d: 4200,
	prereqs: [1024]
}, {
	ID: 1037,
	t: "Rational Numbers: Addition and Subtraction",
	q: 50,
	d: 4200,
	prereqs: [878]
}, {
	ID: 1064,
	t: "Geometry",
	q: 50,
	d: 4200,
	prereqs: [1013]
}, {
	ID: 880,
	t: "Data Relationships",
	q: 50,
	d: 4200,
	prereqs: [669, 1174]
}, {
	ID: 878,
	t: "Rational Numbers: Addition and Subtraction",
	q: 50,
	d: 4200,
	prereqs: [574]
}, {
	ID: 800,
	t: "Data Relationships",
	q: 50,
	d: 4200,
	prereqs: [669, 603, 610, 1174]
}, {
	ID: 571,
	t: "Rational Numbers: Multiplication and Division",
	q: 50,
	d: 4200,
	prereqs: [582]
}, {
	ID: 568,
	t: "Rational Numbers: Represent",
	q: 50,
	d: 4200,
	prereqs: [572]
}, {
	ID: 526,
	t: "Conversion",
	q: 40,
	d: 4200,
	prereqs: [343]
}, {
	ID: 658,
	t: "Linear Expressions",
	q: 30,
	d: 4200,
	prereqs: [656]
}, {
	ID: 661,
	t: "Linear Expressions",
	q: 50,
	d: 4200,
	prereqs: [1099]
}, {
	ID: 689,
	t: "Pythagorean Theorem",
	q: 50,
	d: 4200,
	prereqs: [688]
}, {
	ID: 681,
	t: "Functions",
	q: 50,
	d: 4200,
	prereqs: [624]
}, {
	ID: 610,
	t: "Fractions: Addition and Subtraction",
	q: 50,
	d: 4200,
	prereqs: [558, 901, 927]
}, {
	ID: 573,
	t: "Rational Numbers: Addition and Subtraction",
	q: 50,
	d: 4200,
	prereqs: [574]
}, {
	ID: 599,
	t: "Fractions: Addition and Subtraction",
	q: 50,
	d: 4200,
	prereqs: [558, 925, 986]
}, {
	ID: 608,
	t: "Fractions: Multiplication",
	q: 50,
	d: 4300,
	prereqs: [599, 891, 892]
}, {
	ID: 576,
	t: "Linear Expressions",
	q: 50,
	d: 4300,
	prereqs: [569]
}, {
	ID: 651,
	t: "Irrational Numbers",
	q: 50,
	d: 4300,
	prereqs: [572]
}, {
	ID: 694,
	t: "Data Relationships",
	q: 22,
	d: 4300,
	prereqs: [661]
}, {
	ID: 695,
	t: "Data Relationships",
	q: 22,
	d: 4300,
	prereqs: [660]
}, {
	ID: 659,
	t: "Linear Expressions",
	q: 30,
	d: 4300,
	prereqs: [658]
}, {
	ID: 700,
	t: "Pythagorean Theorem",
	q: 50,
	d: 4300,
	prereqs: [699]
}, {
	ID: 569,
	t: "Rational Numbers: Addition and Subtraction",
	q: 50,
	d: 4300,
	prereqs: [573, 878]
}, {
	ID: 804,
	t: "Data Relationships",
	q: 50,
	d: 4300,
	prereqs: [603, 669, 599]
}, {
	ID: 882,
	t: "Rational Numbers: Addition and Subtraction",
	q: 50,
	d: 4300,
	prereqs: [573]
}, {
	ID: 902,
	t: "Rational Numbers: Addition and Subtraction",
	q: 50,
	d: 4300,
	prereqs: [878]
}, {
	ID: 865,
	t: "Proportional Relationships",
	q: 30,
	d: 4300,
	prereqs: [1101, 1097]
}, {
	ID: 863,
	t: "Proportional Relationships",
	q: 50,
	d: 4300,
	prereqs: [1098]
}, {
	ID: 854,
	t: "Fractions: Addition and Subtraction",
	q: 50,
	d: 4300,
	prereqs: [610, 599, 927]
}, {
	ID: 855,
	t: "Fractions: Addition and Subtraction",
	q: 50,
	d: 4300,
	prereqs: [599, 610, 897]
}, {
	ID: 977,
	t: "Proportional Relationships",
	q: 50,
	d: 4300,
	prereqs: [506, 526, 1018, 1019]
}, {
	ID: 916,
	t: "Fractions: Addition and Subtraction",
	q: 50,
	d: 4300,
	prereqs: [599, 888]
}, {
	ID: 917,
	t: "Fractions: Addition and Subtraction",
	q: 50,
	d: 4300,
	prereqs: [610, 889, 888]
}, {
	ID: 1080,
	t: "Probability",
	q: 50,
	d: 4300,
	prereqs: [983]
}, {
	ID: 1087,
	t: "Expressions and Equations",
	q: 48,
	d: 4300,
	prereqs: [865]
}, {
	ID: 1090,
	t: "Fractions: Addition and Subtraction",
	q: 50,
	d: 4300,
	prereqs: [599]
}, {
	ID: 1091,
	t: "Fractions: Addition and Subtraction",
	q: 50,
	d: 4300,
	prereqs: [610]
}, {
	ID: 1170,
	t: "Proportional Relationships",
	q: 50,
	d: 4300,
	prereqs: [1167]
}, {
	ID: 1171,
	t: "Ratios",
	q: 50,
	d: 4400,
	prereqs: [1025]
}, {
	ID: 1176,
	t: "Statistics",
	q: 50,
	d: 4400,
	prereqs: [1177]
}, {
	ID: 1155,
	t: "Measurement",
	q: 50,
	d: 4400,
	prereqs: [609]
}, {
	ID: 1092,
	t: "Fractions: Comparing",
	q: 50,
	d: 4400,
	prereqs: [608]
}, {
	ID: 1093,
	t: "Fractions: Comparing",
	q: 50,
	d: 4400,
	prereqs: [609]
}, {
	ID: 1078,
	t: "3D Shapes",
	q: 32,
	d: 4400,
	prereqs: [385, 609]
}, {
	ID: 1100,
	t: "Expressions and Equations",
	q: 50,
	d: 4400,
	prereqs: [1087]
}, {
	ID: 1146,
	t: "Geometry",
	q: 50,
	d: 4400,
	prereqs: [1147]
}, {
	ID: 1147,
	t: "Geometry",
	q: 50,
	d: 4400,
	prereqs: [1056]
}, {
	ID: 1276,
	t: "Unit Rates",
	q: 30,
	d: 4400,
	prereqs: [659]
}, {
	ID: 1065,
	t: "Exponents: Evaluate",
	q: 50,
	d: 4400,
	prereqs: [1e3, 1002, 1001]
}, {
	ID: 1058,
	t: "Geometry",
	q: 50,
	d: 4400,
	prereqs: [1056, 1130]
}, {
	ID: 1001,
	t: "Exponents: Evaluate",
	q: 50,
	d: 4400,
	prereqs: [609, 1002, 973]
}, {
	ID: 866,
	t: "Proportional Relationships",
	q: 50,
	d: 4400,
	prereqs: [977]
}, {
	ID: 874,
	t: "Fractions: Multiplication",
	q: 50,
	d: 4400,
	prereqs: [608, 891, 892, 899, 929]
}, {
	ID: 903,
	t: "Rational Numbers: Addition and Subtraction",
	q: 50,
	d: 4400,
	prereqs: [902]
}, {
	ID: 905,
	t: "Rational Numbers: Addition and Subtraction",
	q: 50,
	d: 4400,
	prereqs: [882]
}, {
	ID: 883,
	t: "Rational Numbers: Multiplication and Division",
	q: 50,
	d: 4400,
	prereqs: [571]
}, {
	ID: 881,
	t: "Data Relationships",
	q: 50,
	d: 4400,
	prereqs: [804, 608]
}, {
	ID: 876,
	t: "Fractions: Division",
	q: 50,
	d: 4400,
	prereqs: [608]
}, {
	ID: 817,
	t: "Exponents: Rules",
	q: 50,
	d: 4400,
	prereqs: [819]
}, {
	ID: 818,
	t: "Exponents: Rules",
	q: 50,
	d: 4400,
	prereqs: [819]
}, {
	ID: 819,
	t: "Exponents: Rules",
	q: 50,
	d: 4400,
	prereqs: [535]
}, {
	ID: 820,
	t: "Exponents: Rules",
	q: 50,
	d: 4400,
	prereqs: [819]
}, {
	ID: 570,
	t: "Rational Numbers: Multiplication and Division",
	q: 50,
	d: 4400,
	prereqs: [571]
}, {
	ID: 696,
	t: "Data Relationships",
	q: 22,
	d: 4400,
	prereqs: [694]
}, {
	ID: 697,
	t: "Data Relationships",
	q: 22,
	d: 4400,
	prereqs: [695]
}, {
	ID: 690,
	t: "Pythagorean Theorem",
	q: 50,
	d: 4400,
	prereqs: [689]
}, {
	ID: 644,
	t: "Irrational Numbers",
	q: 50,
	d: 4400,
	prereqs: [638, 645]
}, {
	ID: 645,
	t: "Irrational Numbers",
	q: 50,
	d: 4400,
	prereqs: [651]
}, {
	ID: 577,
	t: "Linear Expressions",
	q: 50,
	d: 4400,
	prereqs: [576]
}, {
	ID: 609,
	t: "Fractions: Multiplication",
	q: 50,
	d: 4400,
	prereqs: [608]
}, {
	ID: 606,
	t: "Fractions: Division",
	q: 50,
	d: 4400,
	prereqs: [610, 608, 908]
}, {
	ID: 578,
	t: "Linear Expressions",
	q: 50,
	d: 4500,
	prereqs: [577]
}, {
	ID: 643,
	t: "Irrational Numbers",
	q: 30,
	d: 4500,
	prereqs: [644]
}, {
	ID: 629,
	t: "Exponents: Rules",
	q: 50,
	d: 4500,
	prereqs: [818, 631]
}, {
	ID: 630,
	t: "Exponents: Rules",
	q: 50,
	d: 4500,
	prereqs: [631, 817]
}, {
	ID: 631,
	t: "Exponents: Rules",
	q: 50,
	d: 4500,
	prereqs: [819]
}, {
	ID: 632,
	t: "Exponents: Rules",
	q: 50,
	d: 4500,
	prereqs: [631, 820]
}, {
	ID: 877,
	t: "Fractions: Division",
	q: 50,
	d: 4500,
	prereqs: [606, 876]
}, {
	ID: 886,
	t: "Rational Numbers: Multiplication and Division",
	q: 50,
	d: 4500,
	prereqs: [883]
}, {
	ID: 887,
	t: "Rational Numbers: Multiplication and Division",
	q: 50,
	d: 4500,
	prereqs: [570]
}, {
	ID: 904,
	t: "Rational Numbers: Addition and Subtraction",
	q: 50,
	d: 4500,
	prereqs: [905]
}, {
	ID: 896,
	t: "Rational Numbers: Multiplication and Division",
	q: 50,
	d: 4500,
	prereqs: [887]
}, {
	ID: 875,
	t: "Fractions: Division",
	q: 50,
	d: 4500,
	prereqs: [606, 876]
}, {
	ID: 873,
	t: "Fractions: Multiplication",
	q: 50,
	d: 4500,
	prereqs: [609, 890]
}, {
	ID: 1020,
	t: "Proportional Relationships",
	q: 50,
	d: 4500,
	prereqs: [1018, 1019]
}, {
	ID: 1069,
	t: "Data Relationships",
	q: 50,
	d: 4500,
	prereqs: [669]
}, {
	ID: 1070,
	t: "Data Relationships",
	q: 50,
	d: 4500,
	prereqs: [799]
}, {
	ID: 1071,
	t: "Data Relationships",
	q: 30,
	d: 4500,
	prereqs: [1257]
}, {
	ID: 918,
	t: "Fractions: Addition and Subtraction",
	q: 50,
	d: 4500,
	prereqs: [599, 610]
}, {
	ID: 919,
	t: "Fractions: Multiplication",
	q: 50,
	d: 4500,
	prereqs: [609]
}, {
	ID: 923,
	t: "Fractions: Multiplication",
	q: 50,
	d: 4500,
	prereqs: [609]
}, {
	ID: 930,
	t: "Fractions: Division",
	q: 50,
	d: 4500,
	prereqs: [606]
}, {
	ID: 931,
	t: "Fractions: Division",
	q: 50,
	d: 4500,
	prereqs: [876]
}, {
	ID: 932,
	t: "Data Relationships",
	q: 50,
	d: 4500,
	prereqs: [881, 606, 599]
}, {
	ID: 978,
	t: "Proportional Relationships",
	q: 50,
	d: 4500,
	prereqs: []
}, {
	ID: 1114,
	t: "Linear Expressions",
	q: 50,
	d: 4500,
	prereqs: []
}, {
	ID: 1151,
	t: "Pythagorean Theorem",
	q: 50,
	d: 4500,
	prereqs: [690]
}, {
	ID: 1173,
	t: "Fractions: Comparing",
	q: 50,
	d: 4500,
	prereqs: [1092, 923]
}, {
	ID: 1168,
	t: "Proportional Relationships",
	q: 50,
	d: 4500,
	prereqs: [866]
}, {
	ID: 1152,
	t: "Pythagorean Theorem",
	q: 50,
	d: 4600,
	prereqs: [1151]
}, {
	ID: 1132,
	t: "Geometry",
	q: 50,
	d: 4600,
	prereqs: [1147, 1131]
}, {
	ID: 979,
	t: "Proportional Relationships",
	q: 50,
	d: 4600,
	prereqs: [978, 1168]
}, {
	ID: 955,
	t: "Variables, Expressions, and Equations",
	q: 50,
	d: 4600,
	prereqs: [885, 533, 1162]
}, {
	ID: 928,
	t: "Fractions: Division",
	q: 50,
	d: 4600,
	prereqs: [930]
}, {
	ID: 924,
	t: "Fractions: Division",
	q: 50,
	d: 4600,
	prereqs: [931]
}, {
	ID: 920,
	t: "Fractions: Multiplication",
	q: 50,
	d: 4600,
	prereqs: [873, 609, 919]
}, {
	ID: 951,
	t: "Fractions: Division",
	q: 47,
	d: 4600,
	prereqs: [875]
}, {
	ID: 945,
	t: "Fractions: Division",
	q: 50,
	d: 4600,
	prereqs: [875]
}, {
	ID: 948,
	t: "Fractions: Division",
	q: 47,
	d: 4600,
	prereqs: [875]
}, {
	ID: 949,
	t: "Variables, Expressions, and Equations",
	q: 50,
	d: 4600,
	prereqs: [885, 533]
}, {
	ID: 936,
	t: "Fractions: Addition and Subtraction",
	q: 50,
	d: 4600,
	prereqs: [916, 917, 918, 888, 889]
}, {
	ID: 1061,
	t: "Geometry",
	q: 50,
	d: 4600,
	prereqs: [1058]
}, {
	ID: 856,
	t: "Unit Rates",
	q: 50,
	d: 4600,
	prereqs: [570, 571, 1170]
}, {
	ID: 895,
	t: "Rational Numbers: Multiplication and Division",
	q: 50,
	d: 4600,
	prereqs: [885]
}, {
	ID: 893,
	t: "Rational Numbers: Multiplication and Division",
	q: 50,
	d: 4600,
	prereqs: [887]
}, {
	ID: 885,
	t: "Rational Numbers: Multiplication and Division",
	q: 50,
	d: 4600,
	prereqs: [886]
}, {
	ID: 822,
	t: "Exponents: Rules",
	q: 50,
	d: 4600,
	prereqs: [818, 820, 819, 817]
}, {
	ID: 823,
	t: "Exponents: Evaluate",
	q: 40,
	d: 4600,
	prereqs: [826, 630]
}, {
	ID: 824,
	t: "Exponents: Evaluate",
	q: 50,
	d: 4600,
	prereqs: [629, 826]
}, {
	ID: 826,
	t: "Exponents: Evaluate",
	q: 40,
	d: 4600,
	prereqs: [631]
}, {
	ID: 827,
	t: "Exponents: Evaluate",
	q: 50,
	d: 4600,
	prereqs: [826, 632]
}, {
	ID: 663,
	t: "Linear Expressions",
	q: 50,
	d: 4600,
	prereqs: [578]
}, {
	ID: 684,
	t: "Functions",
	q: 50,
	d: 4600,
	prereqs: [1114]
}, {
	ID: 664,
	t: "Linear Expressions",
	q: 42,
	d: 4700,
	prereqs: [663]
}, {
	ID: 662,
	t: "Linear Expressions",
	q: 50,
	d: 4700,
	prereqs: [663]
}, {
	ID: 628,
	t: "Exponents: Rules",
	q: 50,
	d: 4700,
	prereqs: [630, 631, 632, 629]
}, {
	ID: 634,
	t: "Exponents: Evaluate",
	q: 40,
	d: 4700,
	prereqs: [826]
}, {
	ID: 635,
	t: "Exponents: Evaluate",
	q: 50,
	d: 4700,
	prereqs: [634, 827]
}, {
	ID: 636,
	t: "Exponents: Evaluate",
	q: 50,
	d: 4700,
	prereqs: [824, 634]
}, {
	ID: 637,
	t: "Exponents: Evaluate",
	q: 40,
	d: 4700,
	prereqs: [634, 823]
}, {
	ID: 898,
	t: "Rational Numbers: Multiplication and Division",
	q: 50,
	d: 4700,
	prereqs: [885]
}, {
	ID: 907,
	t: "Rational Numbers: Multiplication and Division",
	q: 50,
	d: 4700,
	prereqs: [893]
}, {
	ID: 857,
	t: "Unit Rates",
	q: 50,
	d: 4700,
	prereqs: [856]
}, {
	ID: 867,
	t: "Proportional Relationships",
	q: 50,
	d: 4700,
	prereqs: [979]
}, {
	ID: 1053,
	t: "Geometry",
	q: 50,
	d: 4700,
	prereqs: [1061]
}, {
	ID: 944,
	t: "Variables, Expressions, and Equations",
	q: 50,
	d: 4700,
	prereqs: [949]
}, {
	ID: 950,
	t: "Variables, Expressions, and Equations",
	q: 50,
	d: 4700,
	prereqs: [955]
}, {
	ID: 946,
	t: "Fractions: Division",
	q: 50,
	d: 4700,
	prereqs: [609, 606]
}, {
	ID: 1107,
	t: "Geometry",
	q: 50,
	d: 4700,
	prereqs: [1061]
}, {
	ID: 1260,
	t: "Data Relationships",
	q: 30,
	d: 4700,
	prereqs: [1071]
}, {
	ID: 1115,
	t: "Functions",
	q: 50,
	d: 4800,
	prereqs: [664]
}, {
	ID: 1124,
	t: "Geometry",
	q: 50,
	d: 4800,
	prereqs: [1053]
}, {
	ID: 1125,
	t: "Geometry",
	q: 50,
	d: 4800,
	prereqs: [1107]
}, {
	ID: 947,
	t: "Variables, Expressions, and Equations",
	q: 50,
	d: 4800,
	prereqs: [944]
}, {
	ID: 954,
	t: "Variables, Expressions, and Equations",
	q: 50,
	d: 4800,
	prereqs: [950]
}, {
	ID: 981,
	t: "Proportional Relationships",
	q: 50,
	d: 4800,
	prereqs: [867]
}, {
	ID: 1062,
	t: "Geometry",
	q: 50,
	d: 4800,
	prereqs: [1053]
}, {
	ID: 906,
	t: "Rational Numbers: Multiplication and Division",
	q: 50,
	d: 4800,
	prereqs: [907]
}, {
	ID: 828,
	t: "Exponents: Evaluate",
	q: 50,
	d: 4800,
	prereqs: [824, 827, 826, 823]
}, {
	ID: 581,
	t: "Unit Rates",
	q: 50,
	d: 4800,
	prereqs: [857]
}, {
	ID: 665,
	t: "Linear Expressions",
	q: 42,
	d: 4800,
	prereqs: [664, 684, 685]
}, {
	ID: 666,
	t: "Linear Expressions",
	q: 36,
	d: 4800,
	prereqs: [664]
}, {
	ID: 686,
	t: "Functions",
	q: 40,
	d: 4800,
	prereqs: [1115]
}, {
	ID: 679,
	t: "Linear Expressions",
	q: 27,
	d: 4900,
	prereqs: [665]
}, {
	ID: 680,
	t: "Linear Expressions",
	q: 30,
	d: 4900,
	prereqs: [666]
}, {
	ID: 633,
	t: "Exponents: Evaluate",
	q: 50,
	d: 4900,
	prereqs: [628, 634, 637, 636, 635]
}, {
	ID: 884,
	t: "Rational Numbers: Multiplication and Division",
	q: 50,
	d: 4900,
	prereqs: [885]
}, {
	ID: 1042,
	t: "Proportional Relationships",
	q: 50,
	d: 4900,
	prereqs: [581]
}, {
	ID: 1039,
	t: "Unit Rates",
	q: 50,
	d: 4900,
	prereqs: [581]
}, {
	ID: 1040,
	t: "Unit Rates",
	q: 50,
	d: 4900,
	prereqs: [581]
}, {
	ID: 980,
	t: "Proportional Relationships",
	q: 50,
	d: 4900,
	prereqs: [981]
}, {
	ID: 941,
	t: "Rational Numbers: Mixed Operations",
	q: 50,
	d: 4900,
	prereqs: [906, 898]
}, {
	ID: 1134,
	t: "Geometry",
	q: 50,
	d: 4900,
	prereqs: [1125]
}, {
	ID: 1135,
	t: "Geometry",
	q: 50,
	d: 4900,
	prereqs: [1124]
}, {
	ID: 1139,
	t: "Geometry",
	q: 50,
	d: 4900,
	prereqs: [1062]
}, {
	ID: 1108,
	t: "Expressions and Equations",
	q: 48,
	d: 4900,
	prereqs: [660, 686]
}, {
	ID: 1081,
	t: "Geometry",
	q: 50,
	d: 4900,
	prereqs: [1062]
}, {
	ID: 1169,
	t: "Proportional Relationships",
	q: 50,
	d: 4900,
	prereqs: [981]
}, {
	ID: 1111,
	t: "Expressions and Equations",
	q: 50,
	d: 5e3,
	prereqs: [1108]
}, {
	ID: 1140,
	t: "Geometry",
	q: 50,
	d: 5e3,
	prereqs: [1135]
}, {
	ID: 1138,
	t: "Geometry",
	q: 50,
	d: 5e3,
	prereqs: [1139]
}, {
	ID: 1136,
	t: "Geometry",
	q: 50,
	d: 5e3,
	prereqs: [1081]
}, {
	ID: 942,
	t: "Linear Expressions",
	q: 50,
	d: 5e3,
	prereqs: [884]
}, {
	ID: 940,
	t: "Rational Numbers: Mixed Operations",
	q: 50,
	d: 5e3,
	prereqs: [941]
}, {
	ID: 1041,
	t: "Unit Rates",
	q: 50,
	d: 5e3,
	prereqs: [1039]
}, {
	ID: 868,
	t: "Proportional Relationships",
	q: 50,
	d: 5e3,
	prereqs: [980, 1169]
}, {
	ID: 982,
	t: "Proportional Relationships",
	q: 50,
	d: 5100,
	prereqs: [868]
}, {
	ID: 1137,
	t: "Geometry",
	q: 50,
	d: 5100,
	prereqs: [1138]
}, {
	ID: 1113,
	t: "Expressions and Equations",
	q: 48,
	d: 5100,
	prereqs: [667, 681]
}, {
	ID: 1083,
	t: "Geometry",
	q: 50,
	d: 5100,
	prereqs: [1136]
}, {
	ID: 682,
	t: "Functions",
	q: 40,
	d: 5100,
	prereqs: [1111]
}, {
	ID: 667,
	t: "Linear Expressions",
	q: 40,
	d: 5100,
	prereqs: [682]
}, {
	ID: 687,
	t: "Functions",
	q: 40,
	d: 5200,
	prereqs: [667]
}, {
	ID: 1112,
	t: "Expressions and Equations",
	q: 50,
	d: 5200,
	prereqs: [1113]
}, {
	ID: 1133,
	t: "Geometry",
	q: 50,
	d: 5200,
	prereqs: [1083]
}, {
	ID: 869,
	t: "Proportional Relationships",
	q: 50,
	d: 5200,
	prereqs: [982]
}, {
	ID: 1084,
	t: "Geometry",
	q: 31,
	d: 5300,
	prereqs: [665, 666, 687]
}, {
	ID: 683,
	t: "Functions",
	q: 40,
	d: 5300,
	prereqs: [1112]
}, {
	ID: 678,
	t: "Linear Expressions",
	q: 40,
	d: 5400,
	prereqs: [1084]
}], Prodigy.SkillTree.TREES = {
	1: {
		3: [1265],
		4: [1185],
		6: [1224],
		7: [1224],
		25: [],
		26: [],
		27: [],
		28: [38, 39],
		29: [40],
		31: [555],
		32: [555],
		33: [555],
		34: [555],
		35: [555],
		36: [555],
		37: [555],
		38: [555],
		46: [1103],
		49: [232],
		50: [1265],
		51: [59],
		52: [1186],
		59: [],
		64: [805],
		65: [911],
		68: [128],
		72: [],
		73: [],
		74: [],
		76: [77],
		77: [1217, 1218],
		82: [1189],
		83: [1190],
		86: [1208],
		87: [1186, 1207],
		89: [],
		90: [],
		91: [94],
		94: [],
		95: [94],
		96: [94],
		97: [96],
		98: [],
		103: [94, 95, 96, 97],
		107: [1187],
		108: [1188],
		109: [92],
		111: [49, 50],
		113: [714],
		114: [714],
		116: [773],
		120: [713],
		124: [62],
		126: [1180],
		127: [847],
		128: [127],
		129: [127],
		130: [128],
		136: [50],
		137: [50],
		138: [50],
		140: [50, 49],
		143: [186, 1232],
		144: [1232, 186],
		146: [751],
		148: [],
		149: [],
		154: [186],
		158: [],
		160: [1011],
		162: [816],
		163: [825],
		164: [1224],
		165: [1217],
		166: [1217],
		174: [712],
		175: [1244, 1245],
		176: [],
		177: [],
		178: [1224, 1217],
		179: [808],
		182: [241, 166],
		185: [1231],
		186: [185],
		187: [345],
		194: [1016],
		195: [1016],
		196: [224],
		197: [224],
		198: [197],
		205: [704],
		215: [231],
		218: [495],
		224: [231],
		225: [226],
		227: [231],
		228: [1187],
		229: [89, 90],
		230: [1186, 1185],
		231: [92, 93],
		232: [231, 98],
		233: [197],
		237: [],
		240: [454],
		241: [1224],
		242: [713],
		243: [713],
		246: [713],
		247: [713],
		248: [714],
		249: [1245],
		250: [714],
		251: [714],
		252: [210],
		256: [255, 257],
		259: [258],
		260: [258],
		261: [258],
		264: [263],
		265: [263],
		266: [263],
		268: [712],
		269: [270],
		270: [1095],
		272: [273],
		273: [284],
		277: [],
		283: [],
		284: [455],
		285: [287],
		286: [810],
		288: [966],
		291: [963],
		318: [321],
		322: [320],
		323: [320],
		329: [338, 206, 591],
		332: [305, 306],
		334: [1052],
		339: [331],
		344: [345],
		348: [1232],
		349: [1232],
		350: [1232],
		351: [384],
		353: [560],
		354: [560],
		355: [356],
		359: [358],
		360: [890],
		361: [328],
		362: [361],
		364: [363],
		366: [372],
		367: [372],
		369: [373],
		372: [373],
		374: [373],
		375: [373],
		376: [373],
		378: [377],
		379: [377],
		381: [380],
		382: [351],
		384: [],
		385: [372],
		386: [1013],
		387: [1013],
		388: [196, 197],
		389: [3, 103],
		390: [1187, 1186],
		391: [],
		395: [1211],
		396: [1219],
		398: [1211, 1219],
		399: [],
		400: [3],
		401: [136],
		406: [713, 714],
		408: [185],
		409: [714],
		412: [182],
		414: [911, 805],
		415: [162],
		416: [163],
		417: [713],
		419: [120, 121],
		424: [93],
		425: [92],
		426: [],
		427: [],
		428: [],
		429: [426, 427, 428, 72],
		430: [],
		431: [],
		432: [],
		434: [],
		436: [],
		437: [],
		438: [94],
		439: [],
		440: [],
		441: [186],
		442: [186],
		443: [185],
		444: [185],
		445: [128],
		446: [128],
		447: [128],
		448: [128],
		451: [4, 1208],
		452: [1207],
		453: [1186],
		454: [233],
		455: [456],
		457: [454],
		458: [454],
		459: [457, 458],
		460: [429],
		462: [707],
		463: [709],
		465: [1076],
		466: [1076],
		467: [128],
		473: [470],
		475: [470],
		476: [471],
		477: [478],
		479: [478],
		480: [226],
		481: [226],
		482: [226],
		483: [480],
		484: [483],
		485: [484],
		489: [180],
		490: [180],
		491: [180],
		497: [1103],
		500: [998],
		501: [998],
		503: [519],
		507: [998],
		512: [1054],
		515: [514],
		516: [1016],
		517: [1016],
		519: [998],
		523: [341],
		524: [341],
		525: [357],
		528: [359],
		529: [535],
		530: [535],
		531: [1038],
		533: [538, 341],
		534: [538],
		540: [534],
		541: [530],
		543: [72, 74],
		544: [],
		546: [50],
		547: [74],
		548: [545],
		549: [1233, 1239],
		550: [241],
		552: [185],
		559: [516, 517],
		562: [925],
		567: [1109],
		583: [712],
		584: [],
		586: [754, 1094],
		587: [1094, 754],
		589: [352],
		591: [602],
		592: [603],
		593: [600],
		594: [601],
		595: [602],
		596: [603],
		597: [602],
		598: [603],
		599: [925],
		600: [602],
		601: [603],
		605: [344],
		607: [345],
		610: [927],
		611: [345],
		612: [486],
		618: [356],
		619: [356],
		620: [621],
		621: [613],
		622: [620],
		623: [1126],
		624: [331],
		626: [1127],
		672: [676, 53],
		673: [53, 677],
		674: [676],
		675: [677],
		702: [758],
		704: [781],
		705: [758],
		706: [781],
		707: [706],
		708: [783],
		713: [1233],
		714: [1239],
		716: [713],
		721: [724],
		723: [753, 766],
		724: [723, 718, 1178],
		728: [677],
		730: [1178],
		735: [733],
		736: [733],
		754: [1095],
		759: [756],
		760: [756],
		762: [1244],
		763: [1245],
		765: [719],
		766: [1027, 765],
		767: [722],
		769: [380],
		770: [380],
		772: [756],
		773: [758],
		775: [781],
		777: [713],
		778: [714],
		780: [714],
		781: [756],
		785: [],
		786: [756],
		788: [830],
		790: [789],
		791: [789],
		792: [789],
		805: [713],
		806: [815],
		807: [816],
		808: [821],
		809: [825],
		810: [829],
		813: [805],
		814: [911],
		816: [815],
		825: [821],
		830: [787],
		832: [713],
		835: [714],
		838: [821],
		839: [62],
		841: [180],
		843: [180],
		849: [816],
		852: [1217, 1218],
		854: [927],
		855: [925],
		859: [1165],
		861: [1165],
		864: [859, 863],
		865: [863, 861],
		866: [340],
		867: [979],
		868: [981],
		869: [982],
		870: [805],
		871: [911],
		873: [946],
		874: [606],
		876: [609],
		888: [927, 925],
		892: [890],
		911: [714],
		918: [927, 925],
		919: [946],
		920: [606],
		924: [876],
		926: [927, 925],
		928: [606],
		935: [925],
		939: [952],
		946: [609],
		961: [964],
		963: [965],
		967: [974],
		973: [535],
		974: [997],
		977: [340],
		978: [866],
		979: [866],
		980: [868],
		981: [866],
		982: [980],
		995: [521],
		1011: [939],
		1013: [372],
		1014: [922, 563],
		1016: [1014],
		1017: [372],
		1020: [869],
		1021: [927, 925],
		1028: [241],
		1029: [166],
		1030: [710],
		1031: [710],
		1034: [62],
		1044: [1048],
		1048: [113, 114, 115, 116],
		1054: [211, 326],
		1055: [974],
		1056: [998],
		1060: [998],
		1066: [769],
		1073: [789],
		1076: [1109],
		1077: [714, 713],
		1081: [1062, 1061, 1053],
		1083: [1081, 1136],
		1090: [925],
		1091: [927],
		1094: [712],
		1095: [733, 77],
		1096: [1244, 1245],
		1102: [1103],
		1103: [723],
		1104: [723],
		1105: [1011],
		1107: [1061],
		1124: [1053],
		1125: [1061],
		1130: [1052],
		1133: [1083],
		1134: [1061],
		1135: [1053],
		1137: [1062],
		1138: [1062],
		1139: [1062],
		1140: [1053],
		1155: [609],
		1157: [613],
		1158: [613],
		1161: [621],
		1172: [1157],
		1178: [1180],
		1181: [1187],
		1182: [1188],
		1186: [98],
		1187: [1185],
		1188: [1186],
		1189: [1185],
		1190: [1186],
		1191: [1207],
		1192: [1211],
		1193: [1186],
		1194: [1207],
		1195: [1208],
		1197: [1219],
		1202: [1211],
		1206: [1202],
		1207: [1188, 1186],
		1208: [1187],
		1209: [1188, 1186],
		1210: [1187, 1189],
		1211: [1218],
		1212: [1185, 1186],
		1213: [1217],
		1214: [1218],
		1215: [1213],
		1216: [1214],
		1217: [],
		1218: [],
		1219: [1217],
		1221: [1219],
		1222: [1221],
		1224: [545, 4, 1187],
		1227: [1224, 543],
		1228: [1185],
		1231: [1232],
		1233: [158, 185],
		1235: [1237, 1236],
		1236: [1245],
		1237: [1244],
		1239: [177],
		1242: [1244],
		1243: [1245],
		1246: [1248],
		1247: [1249],
		1248: [1249],
		1251: [1186, 1185],
		1254: [1274, 1217],
		1255: [269],
		1265: [231],
		1266: [231],
		1269: [1265],
		1270: [],
		1271: [232],
		1272: [1265],
		1278: [],
		1279: [],
		1280: [677],
		1281: [1224, 1217],
		1282: [],
		1283: [],
		1284: [],
		1285: [],
		1286: [],
		1287: [],
		1288: [],
		1289: [],
		1290: [555],
		1291: [555],
		1292: [555],
		1293: [555],
		1294: [555],
		1295: [555],
		1296: [555],
		1305: [],
		1306: [],
		1307: [],
		1308: [],
		1309: [],
		1310: [],
		1311: [],
		1312: [],
		1316: [],
		1317: [],
		1319: [],
		1323: [],
		1324: [],
		1325: [],
		1326: [],
		1327: [],
		1328: [],
		1329: [],
		1330: [],
		1331: [],
		1332: [],
		1333: [],
		1334: [],
		1335: [],
		1336: [],
		1337: [],
		1338: [],
		1340: [],
		1341: [],
		1344: [],
		1345: [],
		1346: [],
		1348: [],
		1349: [97],
		1350: [],
		1351: [],
		1352: [],
		1353: []
	},
	2: {
		4: [1187],
		25: [32, 33],
		26: [34, 35],
		27: [36, 37],
		28: [38, 39],
		29: [40],
		31: [555],
		32: [555],
		33: [555],
		34: [555],
		35: [555],
		36: [555],
		37: [555],
		38: [555],
		39: [555],
		40: [555],
		46: [1178],
		49: [232],
		52: [1186],
		60: [],
		64: [805],
		65: [911],
		68: [752],
		76: [712],
		82: [1181, 1189],
		83: [1182],
		84: [1252],
		86: [1208],
		87: [1207, 1186],
		89: [],
		90: [],
		91: [],
		107: [1187],
		108: [1188],
		110: [1228],
		111: [49],
		115: [756],
		116: [758],
		124: [180],
		127: [185],
		140: [49],
		146: [751],
		148: [],
		149: [],
		154: [186],
		158: [],
		160: [767],
		162: [849],
		166: [1217],
		174: [712],
		175: [714, 713],
		180: [812, 811],
		182: [714, 713],
		184: [710],
		185: [1231],
		186: [185],
		196: [224],
		197: [224],
		198: [197],
		207: [848],
		215: [231],
		223: [1149],
		224: [231],
		227: [231],
		228: [1187],
		229: [],
		230: [1186, 1185],
		231: [92, 93],
		232: [231, 98],
		237: [440, 439],
		238: [1204],
		239: [1228],
		240: [454],
		242: [713],
		243: [713],
		246: [713],
		247: [713],
		248: [714],
		249: [714],
		250: [714],
		251: [714],
		252: [210],
		268: [279],
		270: [279],
		271: [40],
		283: [1035, 974],
		285: [287],
		286: [829],
		287: [],
		288: [966],
		289: [968],
		291: [963],
		306: [291],
		316: [894],
		320: [1014],
		327: [839, 841],
		329: [1149],
		330: [223],
		331: [961],
		332: [305, 306],
		333: [1049],
		334: [1130],
		339: [333],
		355: [957],
		359: [358],
		363: [324],
		366: [385],
		367: [372],
		378: [957, 582],
		379: [957],
		385: [825],
		386: [383, 387],
		387: [372],
		388: [196, 197],
		389: [1201],
		391: [436, 437, 148, 149],
		392: [1229],
		393: [1230],
		409: [311],
		414: [65],
		417: [243],
		432: [],
		436: [237],
		437: [237],
		438: [1198],
		439: [1201, 98],
		440: [98, 1201],
		443: [185],
		444: [185],
		449: [789],
		457: [454],
		458: [454],
		459: [457, 458],
		462: [707],
		465: [1016],
		466: [1016],
		473: [470],
		474: [471],
		475: [470],
		476: [471],
		499: [507],
		500: [999],
		501: [999],
		502: [509],
		503: [999],
		506: [502],
		507: [998],
		508: [502],
		511: [957],
		525: [957],
		540: [333],
		543: [1204],
		545: [],
		547: [543, 1275],
		548: [60],
		552: [185],
		554: [753],
		556: [752],
		557: [753],
		558: [563],
		559: [1016],
		560: [894],
		562: [986],
		564: [851],
		565: [837],
		569: [882, 878],
		570: [896],
		571: [895],
		576: [1036, 1037],
		579: [580],
		581: [857],
		583: [279],
		584: [279],
		586: [279],
		587: [279],
		595: [602],
		596: [603],
		597: [602],
		598: [603],
		599: [1090],
		606: [609],
		610: [1091],
		628: [822],
		629: [818, 819],
		630: [817],
		631: [819],
		632: [820],
		633: [822],
		634: [819],
		635: [820],
		636: [818, 819],
		637: [817],
		638: [536],
		639: [638],
		640: [642],
		641: [535, 303],
		642: [641],
		643: [644],
		644: [638],
		645: [644],
		646: [647],
		647: [648],
		649: [647],
		650: [647],
		652: [641],
		653: [817],
		654: [818],
		658: [1277],
		659: [1277],
		660: [1097],
		661: [1086],
		662: [663],
		664: [681],
		665: [663],
		666: [663],
		667: [1098],
		670: [668, 1186, 1187],
		671: [669, 1187, 1186],
		672: [676, 53],
		673: [53, 677],
		674: [676],
		675: [677],
		678: [665, 1100],
		679: [665],
		680: [665],
		682: [1097],
		683: [665, 681],
		684: [1114],
		685: [684],
		688: [701],
		689: [699],
		690: [700],
		694: [1097],
		695: [1097],
		696: [1086],
		697: [1115],
		699: [701],
		700: [699],
		701: [535],
		704: [756],
		705: [758],
		706: [781],
		707: [706],
		708: [782],
		709: [708],
		710: [783],
		713: [1231],
		714: [1231],
		716: [713],
		718: [722],
		719: [720],
		721: [1180],
		724: [1180],
		726: [603],
		728: [677],
		730: [720],
		733: [75],
		734: [1027],
		735: [733],
		736: [733],
		751: [],
		753: [1246],
		754: [1095],
		755: [758],
		758: [756],
		759: [756],
		760: [756],
		761: [758],
		762: [713],
		763: [714],
		765: [734],
		766: [721],
		772: [756],
		773: [758],
		775: [781],
		776: [782],
		777: [713],
		780: [714],
		781: [756],
		782: [758],
		783: [183],
		786: [756],
		787: [789],
		788: [789],
		790: [789],
		791: [789],
		792: [789],
		793: [751],
		794: [752],
		797: [788, 847],
		800: [901],
		801: [713],
		802: [713],
		804: [900],
		806: [815],
		807: [816],
		808: [821],
		809: [825],
		810: [829],
		813: [911],
		814: [805],
		822: [818, 817, 819, 820],
		823: [817],
		824: [818, 819],
		826: [819],
		827: [820],
		828: [822],
		830: [789],
		832: [713],
		834: [714],
		835: [714],
		843: [839],
		844: [841],
		846: [840],
		847: [789],
		851: [850],
		852: [1028, 1029],
		854: [610],
		855: [610],
		858: [509],
		863: [1075],
		864: [997],
		865: [997],
		866: [506],
		867: [866],
		868: [981],
		869: [982],
		870: [805],
		871: [911],
		873: [609],
		875: [608],
		876: [609],
		877: [609],
		878: [582, 1037],
		880: [916],
		881: [608],
		882: [1036, 582],
		883: [895],
		884: [895],
		885: [895, 896],
		886: [895],
		887: [896, 895],
		888: [952],
		889: [952],
		891: [908],
		892: [1178],
		893: [896],
		894: [890],
		895: [582],
		896: [582],
		897: [986],
		898: [895],
		899: [908],
		902: [1037, 582],
		903: [1037, 582],
		904: [582, 1036],
		905: [582, 1036],
		906: [896],
		907: [896],
		918: [599, 610],
		919: [609],
		920: [609],
		924: [876, 931],
		925: [900],
		926: [1011, 927, 925],
		928: [606, 930],
		929: [908],
		930: [606],
		931: [876],
		932: [599, 606, 609],
		935: [925],
		936: [916, 917],
		937: [927],
		939: [952],
		940: [896, 895],
		941: [895, 896],
		942: [576, 577],
		943: [502],
		944: [949],
		945: [510],
		946: [510],
		947: [949],
		948: [945],
		949: [582, 895],
		950: [955],
		951: [510],
		954: [955],
		955: [895, 582],
		956: [511],
		959: [279],
		960: [279],
		961: [964],
		962: [40],
		963: [965],
		969: [289],
		970: [288],
		971: [288],
		972: [288],
		973: [535],
		976: [975],
		977: [506],
		978: [866],
		979: [866],
		980: [868],
		981: [866],
		982: [980],
		983: [957],
		984: [223],
		985: [223],
		986: [900],
		987: [962],
		988: [962],
		991: [840, 974],
		993: [1035, 974],
		994: [974],
		995: [975],
		996: [711],
		997: [909],
		1004: [711],
		1006: [957],
		1007: [379],
		1008: [957],
		1009: [506],
		1010: [506],
		1011: [894],
		1012: [1045],
		1013: [1017],
		1014: [561],
		1015: [793, 795, 794],
		1016: [1014],
		1021: [901, 900],
		1022: [502],
		1023: [502],
		1024: [1036],
		1025: [506],
		1026: [861],
		1027: [718],
		1028: [243],
		1029: [249],
		1030: [565],
		1031: [564],
		1032: [841],
		1033: [840],
		1034: [839],
		1036: [573],
		1037: [573],
		1041: [324],
		1042: [506],
		1043: [577, 578, 576],
		1044: [1049],
		1048: [1049],
		1051: [1049],
		1055: [997, 1048],
		1059: [999],
		1060: [999],
		1075: [864, 865],
		1078: [385],
		1079: [957],
		1080: [957],
		1081: [1062, 1053, 1061],
		1083: [1081, 1136],
		1085: [1115],
		1087: [1088],
		1094: [712],
		1095: [733, 77],
		1096: [713, 714],
		1098: [1115],
		1099: [1086],
		1100: [1097],
		1102: [719],
		1103: [719],
		1107: [1061],
		1108: [1115],
		1110: [566, 567, 51],
		1111: [1115],
		1112: [1097],
		1113: [1088],
		1118: [180],
		1122: [180],
		1123: [180],
		1124: [1053],
		1125: [1061],
		1126: [180],
		1130: [1129, 1052],
		1132: [1146],
		1133: [1083],
		1134: [1061],
		1135: [1053],
		1137: [1062],
		1138: [1062],
		1139: [1062],
		1140: [1053],
		1141: [934],
		1142: [1118, 1073],
		1146: [1056],
		1147: [1056],
		1148: [1118, 1121],
		1150: [701],
		1151: [701],
		1152: [1151],
		1153: [846, 840],
		1154: [1119, 1123],
		1159: [223],
		1160: [909],
		1162: [1163],
		1164: [1165],
		1165: [324],
		1167: [324],
		1168: [1019],
		1169: [1018],
		1170: [324],
		1172: [1157, 1158],
		1179: [541],
		1180: [720],
		1181: [1187],
		1182: [1188],
		1183: [1229],
		1184: [1230],
		1185: [1203],
		1186: [98],
		1187: [1185],
		1188: [1186],
		1189: [1185],
		1190: [1186],
		1191: [1194],
		1192: [1211],
		1193: [1195],
		1194: [1193, 1185],
		1195: [1186],
		1196: [1204],
		1197: [1219],
		1198: [],
		1199: [1198],
		1200: [1198],
		1201: [1198, 1199, 1200],
		1202: [1211],
		1203: [],
		1204: [231],
		1205: [],
		1206: [1202],
		1207: [1188],
		1208: [1187],
		1209: [1188],
		1210: [1187],
		1211: [1218],
		1212: [1186, 1185],
		1213: [1217],
		1214: [1218],
		1215: [1213],
		1216: [1214],
		1219: [1217],
		1220: [237],
		1221: [1219],
		1222: [1221],
		1223: [1187, 1204],
		1224: [1204, 1187],
		1227: [543, 1224],
		1228: [1187],
		1229: [1187],
		1230: [1188],
		1231: [1232],
		1232: [238],
		1233: [1225],
		1234: [1229, 228],
		1236: [1245],
		1237: [1244],
		1241: [127],
		1242: [1244],
		1243: [1245],
		1246: [1248],
		1247: [1249],
		1248: [1249],
		1250: [240, 457, 458],
		1251: [1185, 1186],
		1254: [1188],
		1256: [1259],
		1259: [231],
		1264: [231],
		1265: [1259, 1264],
		1266: [98],
		1267: [98, 1201],
		1268: [1204],
		1269: [1265],
		1270: [],
		1271: [1266],
		1272: [1265],
		1279: [1027],
		1280: [677],
		1281: [1211, 1219],
		1286: [],
		1287: [],
		1288: [],
		1289: [],
		1305: [1268],
		1306: [],
		1307: [],
		1308: [],
		1309: [],
		1310: [],
		1311: [],
		1312: [],
		1316: [],
		1334: [],
		1338: [1268],
		1342: [],
		1343: [],
		1344: [],
		1345: [],
		1348: [1204],
		1350: [1204],
		1351: [1204],
		1352: [1204]
	},
	3: {
		4: [1187],
		25: [32, 33],
		26: [34, 35],
		27: [36, 37],
		28: [38, 39],
		29: [40],
		31: [555],
		32: [555],
		33: [555],
		34: [555],
		35: [555],
		36: [555],
		37: [555],
		38: [555],
		39: [555],
		40: [555],
		46: [1178],
		49: [232],
		52: [1186],
		60: [],
		64: [805],
		65: [911],
		68: [752],
		76: [712],
		82: [1181, 1189],
		83: [1182],
		84: [1252],
		86: [1208],
		87: [1207, 1186],
		89: [],
		90: [],
		91: [],
		107: [1187],
		108: [1188],
		110: [1228],
		111: [49],
		115: [756],
		116: [758],
		124: [180],
		127: [185],
		140: [49],
		146: [751],
		148: [],
		149: [],
		154: [186],
		158: [],
		160: [767],
		162: [849],
		166: [1217],
		174: [712],
		175: [714, 713],
		180: [812, 811],
		182: [714, 713],
		184: [710],
		185: [1231],
		186: [185],
		196: [224],
		197: [224],
		198: [197],
		207: [848],
		215: [231],
		223: [1149],
		224: [231],
		227: [231],
		228: [1187],
		229: [],
		230: [1186, 1185],
		231: [92, 93],
		232: [231, 98],
		237: [440, 439],
		238: [1204],
		239: [1228],
		240: [454],
		242: [713],
		243: [713],
		246: [713],
		247: [713],
		248: [714],
		249: [714],
		250: [714],
		251: [714],
		252: [210],
		268: [279],
		270: [279],
		271: [40],
		283: [1035, 974],
		285: [287],
		286: [829],
		287: [],
		288: [966],
		289: [968],
		291: [963],
		306: [291],
		316: [894],
		320: [1014],
		327: [839, 841],
		329: [1149],
		330: [223],
		331: [961],
		332: [305, 306],
		333: [1049],
		334: [1130],
		339: [333],
		355: [957],
		359: [358],
		363: [324],
		366: [385],
		367: [372],
		378: [957, 582],
		379: [957],
		385: [825],
		386: [383, 387],
		387: [372],
		388: [196, 197],
		389: [1201],
		391: [436, 437, 148, 149],
		392: [1229],
		393: [1230],
		409: [311],
		414: [65],
		417: [243],
		432: [],
		436: [237],
		437: [237],
		438: [1198],
		439: [1201, 98],
		440: [98, 1201],
		443: [185],
		444: [185],
		449: [789],
		457: [454],
		458: [454],
		459: [457, 458],
		462: [707],
		465: [1016],
		466: [1016],
		473: [470],
		474: [471],
		475: [470],
		476: [471],
		499: [507],
		500: [999],
		501: [999],
		502: [509],
		503: [999],
		506: [502],
		507: [998],
		508: [502],
		511: [957],
		525: [957],
		540: [333],
		543: [1204],
		545: [],
		547: [543, 1275],
		548: [60],
		552: [185],
		554: [753],
		556: [752],
		557: [753],
		558: [563],
		559: [1016],
		560: [894],
		562: [986],
		564: [851],
		565: [837],
		569: [882, 878],
		570: [896],
		571: [895],
		576: [1036, 1037],
		579: [580],
		581: [857],
		583: [279],
		584: [279],
		586: [279],
		587: [279],
		595: [602],
		596: [603],
		597: [602],
		598: [603],
		599: [1090],
		606: [609],
		610: [1091],
		628: [822],
		629: [818, 819],
		630: [817],
		631: [819],
		632: [820],
		633: [822],
		634: [819],
		635: [820],
		636: [818, 819],
		637: [817],
		638: [536],
		639: [638],
		640: [642],
		641: [535, 303],
		642: [641],
		643: [644],
		644: [638],
		645: [644],
		646: [647],
		647: [648],
		649: [647],
		650: [647],
		652: [641],
		653: [817],
		654: [818],
		658: [1277],
		659: [1277],
		660: [1097],
		661: [1086],
		662: [663],
		664: [681],
		665: [663],
		666: [663],
		667: [1098],
		670: [668, 1186, 1187],
		671: [669, 1187, 1186],
		672: [676, 53],
		673: [53, 677],
		674: [676],
		675: [677],
		678: [665, 1100],
		679: [665],
		680: [665],
		682: [1097],
		683: [665, 681],
		684: [1114],
		685: [684],
		688: [701],
		689: [699],
		690: [700],
		694: [1097],
		695: [1097],
		696: [1086],
		697: [1115],
		699: [701],
		700: [699],
		701: [535],
		704: [756],
		705: [758],
		706: [781],
		707: [706],
		708: [782],
		709: [708],
		710: [783],
		713: [1231],
		714: [1231],
		716: [713],
		718: [722],
		719: [720],
		721: [1180],
		724: [1180],
		726: [603],
		728: [677],
		730: [720],
		733: [75],
		734: [1027],
		735: [733],
		736: [733],
		751: [],
		753: [1246],
		754: [1095],
		755: [758],
		758: [756],
		759: [756],
		760: [756],
		761: [758],
		762: [713],
		763: [714],
		765: [734],
		766: [721],
		772: [756],
		773: [758],
		775: [781],
		776: [782],
		777: [713],
		780: [714],
		781: [756],
		782: [758],
		783: [183],
		786: [756],
		787: [789],
		788: [789],
		790: [789],
		791: [789],
		792: [789],
		793: [751],
		794: [752],
		797: [788, 847],
		800: [901],
		801: [713],
		802: [713],
		804: [900],
		806: [815],
		807: [816],
		808: [821],
		809: [825],
		810: [829],
		813: [911],
		814: [805],
		822: [818, 817, 819, 820],
		823: [817],
		824: [818, 819],
		826: [819],
		827: [820],
		828: [822],
		830: [789],
		832: [713],
		834: [714],
		835: [714],
		843: [839],
		844: [841],
		846: [840],
		847: [789],
		851: [850],
		852: [1028, 1029],
		854: [610],
		855: [610],
		858: [509],
		863: [1075],
		864: [997],
		865: [997],
		866: [506],
		867: [866],
		868: [981],
		869: [982],
		870: [805],
		871: [911],
		873: [609],
		875: [608],
		876: [609],
		877: [609],
		878: [582, 1037],
		880: [916],
		881: [608],
		882: [1036, 582],
		883: [895],
		884: [895],
		885: [895, 896],
		886: [895],
		887: [896, 895],
		888: [952],
		889: [952],
		891: [908],
		892: [1178],
		893: [896],
		894: [890],
		895: [582],
		896: [582],
		897: [986],
		898: [895],
		899: [908],
		902: [1037, 582],
		903: [1037, 582],
		904: [582, 1036],
		905: [582, 1036],
		906: [896],
		907: [896],
		918: [599, 610],
		919: [609],
		920: [609],
		924: [876, 931],
		925: [900],
		926: [1011, 927, 925],
		928: [606, 930],
		929: [908],
		930: [606],
		931: [876],
		932: [599, 606, 609],
		935: [925],
		936: [916, 917],
		937: [927],
		939: [952],
		940: [896, 895],
		941: [895, 896],
		942: [576, 577],
		943: [502],
		944: [949],
		945: [510],
		946: [510],
		947: [949],
		948: [945],
		949: [582, 895],
		950: [955],
		951: [510],
		954: [955],
		955: [895, 582],
		956: [511],
		959: [279],
		960: [279],
		961: [964],
		962: [40],
		963: [965],
		969: [289],
		970: [288],
		971: [288],
		972: [288],
		973: [535],
		976: [975],
		977: [506],
		978: [866],
		979: [866],
		980: [868],
		981: [866],
		982: [980],
		983: [957],
		984: [223],
		985: [223],
		986: [900],
		987: [962],
		988: [962],
		991: [840, 974],
		993: [1035, 974],
		994: [974],
		995: [975],
		996: [711],
		997: [909],
		1004: [711],
		1006: [957],
		1007: [379],
		1008: [957],
		1009: [506],
		1010: [506],
		1011: [894],
		1012: [1045],
		1013: [1017],
		1014: [561],
		1015: [793, 795, 794],
		1016: [1014],
		1021: [901, 900],
		1022: [502],
		1023: [502],
		1024: [1036],
		1025: [506],
		1026: [861],
		1027: [718],
		1028: [243],
		1029: [249],
		1030: [565],
		1031: [564],
		1032: [841],
		1033: [840],
		1034: [839],
		1036: [573],
		1037: [573],
		1041: [324],
		1042: [506],
		1043: [577, 578, 576],
		1044: [1049],
		1048: [1049],
		1051: [1049],
		1055: [997, 1048],
		1059: [999],
		1060: [999],
		1075: [864, 865],
		1078: [385],
		1079: [957],
		1080: [957],
		1081: [1062, 1053, 1061],
		1083: [1081, 1136],
		1085: [1115],
		1087: [1088],
		1094: [712],
		1095: [733, 77],
		1096: [713, 714],
		1098: [1115],
		1099: [1086],
		1100: [1097],
		1102: [719],
		1103: [719],
		1107: [1061],
		1108: [1115],
		1110: [566, 567, 51],
		1111: [1115],
		1112: [1097],
		1113: [1088],
		1118: [180],
		1122: [180],
		1123: [180],
		1124: [1053],
		1125: [1061],
		1126: [180],
		1130: [1129, 1052],
		1132: [1146],
		1133: [1083],
		1134: [1061],
		1135: [1053],
		1137: [1062],
		1138: [1062],
		1139: [1062],
		1140: [1053],
		1141: [934],
		1142: [1118, 1073],
		1146: [1056],
		1147: [1056],
		1148: [1118, 1121],
		1150: [701],
		1151: [701],
		1152: [1151],
		1153: [846, 840],
		1154: [1119, 1123],
		1159: [223],
		1160: [909],
		1162: [1163],
		1164: [1165],
		1165: [324],
		1167: [324],
		1168: [1019],
		1169: [1018],
		1170: [324],
		1172: [1157, 1158],
		1179: [541],
		1180: [720],
		1181: [1187],
		1182: [1188],
		1183: [1229],
		1184: [1230],
		1185: [1203],
		1186: [98],
		1187: [1185],
		1188: [1186],
		1189: [1185],
		1190: [1186],
		1191: [1194],
		1192: [1211],
		1193: [1195],
		1194: [1193, 1185],
		1195: [1186],
		1196: [1204],
		1197: [1219],
		1198: [],
		1199: [1198],
		1200: [1198],
		1201: [1198, 1199, 1200],
		1202: [1211],
		1203: [],
		1204: [231],
		1205: [],
		1206: [1202],
		1207: [1188],
		1208: [1187],
		1209: [1188],
		1210: [1187],
		1211: [1218],
		1212: [1186, 1185],
		1213: [1217],
		1214: [1218],
		1215: [1213],
		1216: [1214],
		1219: [1217],
		1220: [237],
		1221: [1219],
		1222: [1221],
		1223: [1187, 1204],
		1224: [1204, 1187],
		1227: [543, 1224],
		1228: [1187],
		1229: [1187],
		1230: [1188],
		1231: [1232],
		1232: [238],
		1233: [1225],
		1234: [1229, 228],
		1236: [1245],
		1237: [1244],
		1241: [127],
		1242: [1244],
		1243: [1245],
		1246: [1248],
		1247: [1249],
		1248: [1249],
		1250: [240, 457, 458],
		1251: [1185, 1186],
		1254: [1188],
		1256: [1259],
		1259: [231],
		1264: [231],
		1265: [1259, 1264],
		1266: [98],
		1267: [98, 1201],
		1268: [1204],
		1269: [1265],
		1270: [],
		1271: [1266],
		1272: [1265],
		1279: [1027],
		1280: [677],
		1281: [1211, 1219],
		1286: [],
		1287: [],
		1288: [],
		1289: [],
		1305: [1268],
		1306: [],
		1307: [],
		1308: [],
		1309: [],
		1310: [],
		1311: [],
		1312: [],
		1316: [],
		1334: [],
		1338: [1268],
		1342: [],
		1343: [],
		1344: [],
		1345: [],
		1348: [1204],
		1350: [1204],
		1351: [1204],
		1352: [1204]
	},
	4: {
		4: [1187],
		25: [32, 33],
		26: [35, 34],
		27: [36, 37],
		28: [38, 39],
		29: [40],
		46: [1178],
		49: [232],
		50: [1265],
		52: [1186],
		60: [],
		64: [805],
		65: [911],
		68: [752],
		73: [1203],
		82: [1189, 1181],
		83: [1182],
		84: [1252],
		86: [1208],
		87: [1186, 1207],
		99: [1224],
		111: [49],
		115: [756],
		116: [758],
		122: [787],
		124: [180],
		126: [1011],
		127: [185],
		146: [751],
		154: [186],
		162: [849],
		166: [1217],
		185: [1231],
		186: [185],
		192: [1016],
		193: [1016],
		194: [1016],
		195: [1016],
		196: [224],
		197: [224],
		198: [197],
		207: [848],
		218: [495],
		224: [231],
		227: [231],
		228: [1187],
		232: [231],
		237: [439, 440],
		238: [1204],
		242: [713],
		243: [713],
		246: [713],
		247: [713],
		248: [714],
		249: [714],
		250: [714],
		251: [714],
		252: [210],
		268: [117],
		285: [287],
		291: [963],
		306: [291],
		316: [894],
		327: [839, 841],
		331: [961],
		333: [1049],
		334: [1130],
		339: [333],
		351: [384],
		359: [358],
		363: [324],
		366: [385],
		367: [372],
		375: [367, 380],
		380: [831],
		381: [380],
		382: [351],
		385: [825],
		392: [1229],
		393: [1230],
		417: [243],
		436: [237],
		437: [237],
		438: [1198],
		439: [1201],
		440: [1201],
		441: [444],
		442: [443],
		443: [185],
		444: [185],
		445: [447],
		446: [448],
		447: [128, 1231],
		448: [128, 1231],
		451: [1187, 1188],
		452: [1188, 1187],
		453: [1187, 1188],
		457: [454],
		458: [454],
		462: [707],
		465: [1016],
		466: [1016],
		473: [470],
		475: [470],
		499: [507],
		502: [509],
		506: [502],
		507: [998],
		508: [502],
		540: [333],
		543: [1204],
		554: [753],
		557: [753],
		559: [1016],
		560: [894],
		562: [986],
		564: [851],
		565: [837],
		569: [882, 878],
		570: [896],
		571: [895],
		581: [857],
		595: [602],
		596: [603],
		597: [602],
		598: [603],
		599: [1090],
		610: [1091],
		641: [303],
		642: [641],
		643: [644],
		658: [1277],
		659: [1277],
		660: [1097],
		661: [1086],
		682: [1097],
		688: [701],
		689: [699],
		690: [700],
		694: [1097],
		695: [1097],
		696: [1086],
		697: [1115],
		699: [701],
		700: [699],
		704: [756],
		705: [758],
		706: [781],
		707: [706],
		708: [782],
		709: [708],
		710: [783],
		713: [1231],
		714: [1231],
		716: [713],
		719: [720],
		721: [1180],
		724: [1180],
		730: [720],
		734: [1027],
		735: [733],
		736: [733],
		753: [1246],
		755: [758],
		758: [756],
		759: [756],
		760: [756],
		761: [758],
		762: [713],
		763: [714],
		765: [734],
		766: [721],
		772: [756],
		773: [758],
		775: [781],
		776: [782],
		777: [713],
		780: [714],
		781: [756],
		782: [758],
		783: [183],
		786: [756],
		787: [789],
		788: [789, 130],
		790: [789],
		791: [789],
		792: [789],
		793: [751],
		794: [752],
		797: [788, 847],
		801: [713],
		802: [713],
		806: [815],
		807: [816],
		808: [821],
		809: [825],
		813: [911],
		814: [805],
		830: [789, 130],
		832: [713],
		834: [714],
		835: [714],
		843: [839],
		844: [841],
		846: [840],
		847: [789],
		851: [850],
		854: [610],
		855: [610],
		863: [1075],
		864: [997],
		865: [997],
		866: [506],
		867: [866],
		868: [981],
		869: [982],
		870: [805],
		871: [911],
		875: [608],
		878: [1037],
		882: [1036],
		883: [895],
		884: [895],
		885: [896, 895],
		886: [895],
		887: [896, 895],
		888: [952],
		889: [952],
		891: [908],
		892: [1178],
		893: [896],
		894: [890],
		897: [986],
		898: [895],
		899: [908],
		902: [1037],
		903: [1037],
		904: [1036],
		905: [1036],
		906: [896],
		907: [896],
		918: [610, 599],
		924: [876],
		925: [900],
		926: [925, 1011, 927],
		928: [606],
		929: [908],
		935: [925],
		937: [927],
		939: [952],
		940: [896, 895],
		941: [896, 895],
		943: [502],
		960: [269],
		961: [964],
		962: [40],
		963: [965],
		977: [506],
		978: [866],
		979: [866],
		980: [868],
		981: [866],
		982: [980],
		983: [957],
		986: [900],
		991: [840, 974],
		994: [974],
		996: [711],
		997: [909],
		1004: [711],
		1006: [957],
		1008: [957],
		1009: [506],
		1010: [506],
		1011: [894],
		1013: [1017],
		1015: [793, 794, 795],
		1016: [1014],
		1021: [900, 901],
		1027: [718],
		1028: [243],
		1029: [249],
		1030: [565],
		1031: [564],
		1032: [841],
		1033: [840],
		1034: [839],
		1036: [573],
		1037: [573],
		1041: [324],
		1042: [506],
		1044: [1049],
		1048: [1049],
		1051: [1049],
		1054: [211, 212, 326],
		1075: [865, 864],
		1081: [1062, 1061, 1053],
		1083: [1081, 1136],
		1085: [1115],
		1087: [1088],
		1095: [733],
		1096: [713, 714],
		1098: [1115],
		1099: [1086],
		1100: [1097],
		1102: [719],
		1103: [719],
		1107: [1061],
		1108: [1115],
		1110: [567, 51],
		1111: [1115],
		1112: [1097],
		1113: [1088],
		1118: [180],
		1122: [180],
		1123: [180],
		1124: [1053],
		1125: [1061],
		1126: [180],
		1130: [1129, 1052],
		1132: [1146],
		1134: [1061],
		1135: [1053],
		1137: [1062],
		1138: [1062],
		1139: [1062],
		1140: [1053],
		1141: [934],
		1142: [1118, 1073],
		1146: [1056],
		1147: [1056],
		1148: [1118, 1121],
		1150: [701],
		1151: [701],
		1152: [1151],
		1153: [840, 846],
		1154: [1123, 1119],
		1162: [1163],
		1164: [1165],
		1165: [324],
		1167: [324],
		1168: [1019],
		1169: [1018],
		1170: [324],
		1172: [1157, 1158],
		1179: [541],
		1180: [720],
		1181: [1187],
		1182: [1188],
		1183: [1229],
		1184: [1230],
		1185: [1203],
		1187: [1185],
		1188: [1186],
		1189: [1185, 178],
		1190: [1186, 178],
		1191: [1194],
		1192: [1211],
		1193: [1195],
		1194: [1193, 1185],
		1195: [1186],
		1196: [1204],
		1197: [1219],
		1199: [1198],
		1200: [1198],
		1201: [1200, 1198, 1199],
		1202: [1211],
		1204: [231],
		1205: [],
		1206: [1202],
		1207: [1188],
		1208: [1187],
		1209: [1188],
		1210: [1187],
		1211: [1218],
		1212: [1186, 1185],
		1213: [1217],
		1214: [1218],
		1215: [1213],
		1216: [1214],
		1219: [1217],
		1221: [1219],
		1222: [1221],
		1224: [1187, 1204],
		1227: [1224, 543],
		1229: [1187],
		1230: [1188],
		1231: [1232],
		1232: [238],
		1233: [1225],
		1234: [1229, 228],
		1236: [1245],
		1237: [1244],
		1240: [435],
		1241: [127],
		1242: [1244],
		1243: [1245],
		1246: [1248],
		1247: [1249],
		1248: [1249],
		1254: [1188],
		1256: [1259],
		1259: [231],
		1264: [231],
		1265: [1264, 1259],
		1269: [1265],
		1270: [],
		1271: [1266],
		1272: [1265],
		1279: [1027],
		1281: [1211, 1219],
		1350: [1204],
		1351: [1204]
	}
}, Prodigy.EducationSystem = function (e) {
	this.game = e, this.nullGrade = !0, this.init()
}, Prodigy.EducationSystem.prototype = {
	constructor: Prodigy.EducationSystem,
	init: function (e) {
		if (console.log(e), this.skillTree = new Prodigy.SkillTree, this.algorithms = [], Util.isDefined(e)) {
			if (e.sub = Util.isDefined(e.sub) ? e.sub : 0, e.country = e.country || 1, e.grade ? (this.nullGrade = !1, this.setCurriculum(e.grade, e.country, e.sub, e.chosenGrade, e.curriculumOverride)) : this.setCurriculum(1, 1, 0, 1, e.curriculumOverride), Util.isDefined(e.skills) && e.skills.length > 0 && (this.skillTree.init(e.skills), this.isNew = !1), Util.isDefined(e.placementTestID) && !Util.isDefined(e.curriculumOverride) && this.algorithms.push(new Prodigy.PlacementSkillSelection(this.game, this.skillTree, e.country, e.sub, e.chosenGrade, e.placementTestID, e.currentSkill, e.momentum)), Util.isDefined(e.plans) && this.algorithms.push(new Prodigy.PlannerSkillSelection(this.game, this.skillTree, e.grade || 1, e.chosenGrade || 1, Prodigy.EducationSystem.MAP[e.country].name, Prodigy.EducationSystem.MAP[e.country].sub[e.sub], e.plans)), Util.isDefined(e.homework) && e.homework.length > 0)
				for (var t = e.homework.length - 1; t >= 0; t--) this.algorithms.push(new Prodigy.HomeworkSkillSelection(this.game, this.skillTree, e.homework[t]))
		} else this.setCurriculum(1, 1, 0, 1)
	},
	setCurriculum: function (e, t, i, a, s) {
		if (i = Util.isDefined(i) ? i : 0, t = t || 1, i = Prodigy.EducationSystem.MAP[t].sub[i], t = Prodigy.EducationSystem.MAP[t].name, Util.isDefined(s)) {
			var r = Prodigy.EducationSystem.curriculums[s];
			Util.isDefined(r) && (e = r.grade, t = r.country, i = r.sub)
		}
		this.algorithms[0] = new Prodigy.SkillSelection(this.game, this.skillTree, e || 1, t || 1, i || 0, a || 1)
	},
	getUpdatedData: function () {
		for (var e = 0; e < this.algorithms.length; e++) this.algorithms[e].updated && this.algorithms[e].save();
		return this.skillTree.getUpdatedData()
	},
	selectSkill: function () {
		for (var e = this.algorithms[this.algorithms.length - 1], t = e.selectSkill(); e.isComplete() || !Util.isDefined(t);) this.algorithms.splice(this.algorithms.length - 1, 1), e = this.algorithms[this.algorithms.length - 1], t = e.selectSkill();
		return t.isNew() && t.initNew(e.fastTrack), t
	},
	selectQuestion: function () {
		return this.algorithms[this.algorithms.length - 1].selectQuestion()
	},
	answerQuestion: function (e, t) {
		console.log("\nANSWER QUESTION " + e), this.algorithms[this.algorithms.length - 1].answerQuestion(e, t)
	}
}, Prodigy.EducationSystem.MAP = {
	1: {
		name: "Canada",
		sub: {
			0: "Ontario"
		}
	},
	2: {
		name: "United States",
		sub: {
			0: "Common Core",
			1: "Florida",
			2: "Texas"
		}
	}
}, Prodigy.EducationSystem.curriculums = {
	1: {
		ID: 1,
		grade: 1,
		sub: "Ontario",
		country: "Canada",
		skills: [92, 93, 231, 214, 94, 1264, 1259, 95, 96, 97, 103, 98, 227, 389, 135, 475, 109, 470, 90, 148, 149, 50, 89, 473, 91, 391, 3, 229, 4, 1208, 546, 1185, 232, 49, 392, 136, 1187, 228, 1265, 1181, 1186, 1183, 1188, 1266, 1269, 393, 1271, 1272, 1209, 1212, 138, 140, 215, 1182, 111, 137, 1210, 390, 1184, 107, 108, 230, 196, 224, 197, 198, 225, 1251, 226, 388, 480, 481, 482, 1247, 1249]
	},
	2: {
		ID: 2,
		grade: 2,
		sub: "Ontario",
		country: "Canada",
		skills: [425, 424, 201, 200, 426, 73, 427, 428, 72, 74, 460, 75, 429, 439, 437, 436, 1228, 1208, 440, 4, 438, 544, 399, 478, 477, 237, 400, 479, 1207, 401, 59, 6, 52, 543, 547, 1213, 545, 548, 452, 453, 1209, 1212, 451, 1214, 1215, 1189, 1190, 1216, 87, 1210, 1218, 83, 1192, 86, 53, 7, 1217, 677, 1211, 1206, 1224, 1227, 674, 675, 676, 82, 164, 165, 60, 110, 241, 166, 395, 396, 672, 673, 1202, 1219, 1197, 458, 457, 77, 76, 454, 233, 398, 1221, 1222, 455, 456, 555, 1194, 1195, 459, 484, 483, 1191, 1193, 485]
	},
	3: {
		ID: 3,
		grade: 3,
		sub: "Ontario",
		country: "Canada",
		skills: [430, 435, 431, 432, 158, 185, 349, 434, 186, 1273, 1256, 176, 177, 443, 444, 441, 442, 552, 751, 471, 476, 461, 59, 348, 549, 350, 347, 346, 1274, 1231, 1232, 1254, 87, 143, 144, 146, 83, 86, 1275, 408, 602, 603, 754, 82, 164, 31, 165, 1224, 1227, 241, 166, 496, 1094, 1095, 1233, 595, 597, 598, 550, 591, 592, 457, 458, 222, 32, 246, 250, 486, 345, 728, 1280, 1281, 607, 1244, 1237, 251, 247, 33, 34, 35, 25, 26, 174, 77, 454, 278, 590, 777, 600, 601, 596, 1239, 735, 736, 612, 779, 713, 832, 714, 712, 785, 588, 593, 594, 583, 584, 279, 269, 27, 36, 37, 242, 248, 778, 1236, 1245, 1270, 1278, 611, 1255, 1242, 1243, 249, 187, 38, 464, 240, 268, 352, 456, 763, 835, 762, 1096, 605, 284, 589, 154, 175, 409, 459, 243, 344, 1235, 178, 417, 586, 587, 406, 272, 282, 281, 270, 273, 1246, 1248, 351, 277, 382, 383, 384, 283, 780, 852, 716, 213, 210, 252, 220, 221, 487, 255, 733, 380, 381]
	},
	4: {
		ID: 4,
		grade: 4,
		sub: "Ontario",
		country: "Canada",
		skills: [445, 447, 181, 446, 448, 751, 847, 472, 31, 164, 165, 467, 166, 756, 772, 752, 241, 495, 218, 127, 216, 32, 773, 757, 758, 556, 25, 26, 33, 34, 35, 128, 68, 130, 36, 37, 27, 1028, 1029, 1030, 1031, 959, 960, 206, 28, 29, 39, 40, 38, 129, 139, 208, 182, 761, 776, 704, 815, 821, 797, 759, 806, 775, 781, 120, 121, 412, 760, 419, 462, 463, 808, 764, 705, 710, 706, 782, 783, 784, 179, 205, 183, 180, 184, 702, 708, 707, 848, 853, 709, 711, 753, 801, 252, 210, 254, 490, 802, 253, 255, 722, 718, 767, 1279, 841, 719, 1027, 488, 256, 219, 126, 257, 489, 491, 720, 843, 734, 765, 766, 715, 755, 786, 721, 1045, 1047, 934]
	},
	5: {
		ID: 5,
		grade: 5,
		sub: "Ontario",
		country: "Canada",
		skills: [449, 192, 193, 113, 51, 152, 194, 195, 211, 516, 517, 338, 153, 114, 212, 559, 805, 911, 813, 814, 161, 123, 223, 258, 263, 120, 64, 121, 65, 1077, 870, 871, 1035, 326, 261, 266, 421, 414, 879, 264, 259, 119, 329, 1068, 260, 122, 265, 730, 1011, 1054, 997, 563, 816, 825, 838, 839, 115, 116, 62, 63, 125, 922, 807, 809, 770, 1104, 1180, 1050, 1034, 1105, 1178, 803, 492, 493, 415, 416, 1014, 497, 163, 162, 160, 46, 124, 849, 723, 512, 724, 1044, 1102, 769, 106, 1103, 1066, 1048, 1016, 939, 952, 967, 974, 989, 1055, 990]
	},
	6: {
		ID: 6,
		grade: 6,
		sub: "Ontario",
		country: "Canada",
		skills: [789, 792, 787, 337, 790, 791, 450, 614, 615, 1073, 1089, 788, 336, 313, 309, 567, 466, 465, 830, 621, 1076, 966, 968, 358, 288, 289, 326, 311, 368, 310, 329, 969, 970, 971, 972, 620, 622, 287, 314, 308, 285, 565, 312, 841, 1012, 363, 372, 290, 303, 561, 613, 335, 373, 374, 325, 364, 560, 367, 327, 321, 375, 369, 564, 376, 1109, 1032, 953, 623, 829, 810, 964, 965, 1106, 934, 334, 330, 305, 306, 353, 354, 333, 332, 331, 624, 625, 626, 961, 963, 1052, 328, 286, 291, 318, 361, 362, 360, 339, 341, 378, 355, 617, 315, 324, 385, 387, 319, 356, 377, 1126, 1127, 1129, 1157, 1158, 894, 340, 342, 386, 366, 618, 619, 357, 379, 316, 1013, 1017, 1161, 1130, 1172]
	},
	8: {
		ID: 8,
		grade: 1,
		sub: "Common Core",
		country: "United States",
		skills: [1267, 92, 93, 231, 1198, 1203, 1264, 1259, 1199, 1204, 1205, 1200, 1268, 1273, 389, 98, 227, 470, 475, 1201, 90, 148, 149, 1256, 1228, 1220, 89, 91, 473, 436, 439, 437, 440, 438, 4, 391, 229, 1208, 546, 1185, 237, 232, 49, 228, 136, 1187, 1207, 392, 1265, 1181, 1186, 1183, 1188, 547, 393, 238, 239, 543, 1266, 1269, 1223, 1209, 1229, 1212, 1271, 1272, 545, 548, 138, 140, 215, 137, 111, 1182, 1274, 1234, 1230, 1254, 1210, 87, 86, 83, 107, 108, 230, 668, 669, 1184, 1275, 670, 671, 196, 60, 82, 224, 1224, 1227, 110, 197, 198, 225, 1251, 388, 1194, 1195, 1247, 1249, 1191, 1193]
	},
	9: {
		ID: 9,
		grade: 2,
		sub: "Common Core",
		country: "United States",
		skills: [1252, 84, 432, 158, 185, 186, 177, 99, 443, 444, 552, 461, 476, 471, 6, 52, 474, 238, 239, 549, 1213, 1240, 1231, 1232, 1214, 1215, 1189, 1190, 1216, 87, 83, 1218, 1192, 86, 1241, 1253, 1211, 677, 1217, 7, 53, 60, 164, 165, 82, 674, 675, 676, 1206, 1202, 1225, 1219, 672, 673, 241, 166, 110, 246, 250, 457, 458, 127, 550, 728, 1197, 1226, 1233, 648, 649, 1280, 1281, 713, 646, 1244, 1237, 1239, 1221, 454, 247, 251, 242, 248, 1222, 1236, 1245, 1270, 1278, 1255, 1242, 1243, 249, 240, 243, 154, 409, 459, 647, 1235, 417, 1246, 1248, 213]
	},
	10: {
		ID: 10,
		grade: 3,
		sub: "Common Core",
		country: "United States",
		skills: [75, 751, 472, 146, 271, 602, 603, 726, 31, 754, 752, 756, 772, 1094, 1095, 773, 757, 758, 32, 595, 597, 598, 556, 596, 33, 25, 34, 35, 26, 77, 76, 174, 735, 736, 777, 779, 713, 785, 778, 36, 37, 27, 712, 714, 38, 39, 28, 40, 29, 555, 762, 763, 761, 1096, 776, 175, 704, 161, 406, 775, 781, 759, 760, 462, 463, 421, 282, 281, 705, 706, 710, 764, 782, 783, 784, 780, 771, 707, 708, 716, 557, 183, 554, 702, 184, 210, 252, 730, 709, 711, 753, 801, 802, 1279, 722, 767, 718, 253, 116, 115, 256, 719, 733, 770, 1180, 1027, 1104, 1105, 803, 734, 720, 257, 327, 160, 715, 786, 723, 755, 765, 766, 724, 769, 1102, 1106, 1103, 315]
	},
	11: {
		ID: 11,
		grade: 4,
		sub: "Common Core",
		country: "United States",
		skills: [789, 792, 787, 847, 790, 791, 164, 165, 241, 166, 831, 834, 1015, 449, 246, 250, 247, 251, 68, 788, 278, 832, 833, 1028, 1029, 1030, 1031, 793, 794, 795, 796, 583, 584, 279, 242, 248, 268, 249, 959, 960, 835, 840, 836, 243, 466, 465, 559, 182, 409, 830, 797, 586, 587, 417, 650, 1035, 207, 462, 463, 282, 281, 270, 311, 310, 179, 1067, 879, 852, 848, 1068, 962, 283, 287, 987, 853, 837, 838, 839, 841, 1011, 1175, 1054, 285, 255, 565, 562, 563, 561, 1050, 1141, 991, 922, 846, 900, 843, 994, 1014, 1153, 1178, 1033, 1034, 325, 560, 558, 798, 799, 163, 162, 327, 46, 564, 1032, 849, 901, 925, 927, 986, 934, 897, 891, 892, 850, 844, 937, 1166, 721, 106, 1066, 851, 926, 935, 929, 908, 890, 1016, 1021, 939, 952, 967, 974, 989, 894, 899, 888, 889, 990, 316, 320, 800, 804]
	},
	12: {
		ID: 12,
		grade: 5,
		sub: "Common Core",
		country: "United States",
		skills: [337, 233, 1073, 1089, 51, 336, 240, 567, 284, 805, 815, 911, 870, 871, 813, 814, 821, 806, 604, 566, 120, 121, 64, 65, 1077, 812, 1076, 358, 359, 414, 808, 909, 910, 180, 811, 825, 816, 62, 63, 303, 809, 807, 798, 799, 829, 124, 953, 1109, 1118, 1119, 1122, 1123, 1166, 334, 810, 305, 306, 362, 286, 291, 328, 872, 912, 913, 915, 1110, 1052, 1074, 1126, 1127, 1128, 1129, 1120, 1121, 1174, 914, 385, 366, 1157, 1158, 1142, 1143, 1144, 1145, 1148, 1154, 1156, 1130, 1161, 1172, 599, 880, 610, 854, 855, 916, 917, 608, 1090, 1091, 1092, 1093, 1155, 609, 606, 881, 876, 874, 875, 873, 877, 918, 919, 923, 930, 931, 932, 1173, 936, 924, 928, 920]
	},
	13: {
		ID: 13,
		grade: 6,
		sub: "Common Core",
		country: "United States",
		skills: [1005, 120, 121, 64, 65, 510, 288, 289, 499, 507, 966, 968, 999, 1003, 998, 969, 970, 971, 972, 500, 501, 503, 1059, 1060, 505, 504, 314, 1004, 996, 997, 973, 535, 536, 1160, 363, 1012, 303, 509, 502, 506, 376, 943, 508, 332, 331, 305, 306, 334, 333, 964, 965, 1044, 1045, 1047, 1048, 1e3, 961, 963, 339, 291, 315, 385, 324, 1149, 1165, 366, 975, 976, 1002, 1049, 1051, 1055, 1056, 1057, 995, 1163, 1164, 864, 1013, 1017, 1018, 1019, 1131, 1162, 1167, 1170, 865, 1146, 1147, 1065, 1171, 1078, 1058, 1001, 1168, 1069, 1070, 1071, 1020, 1132, 948, 951, 945, 946, 1169]
	},
	16: {
		ID: 16,
		grade: 7,
		sub: "Ontario",
		country: "Canada",
		skills: [507, 358, 359, 500, 501, 514, 998, 1060, 962, 519, 505, 504, 1046, 987, 1160, 562, 997, 558, 900, 901, 925, 927, 1063, 986, 494, 513, 332, 331, 353, 354, 891, 892, 897, 1082, 1118, 1122, 1123, 1074, 935, 926, 360, 859, 861, 520, 908, 890, 929, 1021, 521, 518, 899, 1165, 322, 323, 320, 888, 889, 864, 511, 1164, 995, 1056, 1057, 1131, 599, 610, 1167, 865, 854, 855, 863, 1090, 1091, 1146, 1147, 876, 877, 918, 1132]
	},
	17: {
		ID: 17,
		grade: 8,
		sub: "Ontario",
		country: "Canada",
		skills: [693, 1257, 503, 538, 534, 515, 539, 523, 524, 542, 532, 535, 536, 973, 1175, 537, 531, 1038, 529, 530, 341, 528, 540, 357, 533, 342, 340, 1006, 688, 1079, 541, 525, 1150, 599, 610, 526, 689, 854, 855, 977, 608, 609, 690, 866, 606, 874, 876, 1092, 1093, 1155, 919, 873, 978, 1020, 979, 920, 924, 928, 1061, 1053, 1107, 946, 867, 981, 1124, 1062, 1125, 1134, 1135, 1081, 980, 1139, 1140, 1138, 1136, 868, 1137, 1083, 982, 1133, 869]
	},
	19: {
		ID: 19,
		grade: 1,
		sub: "Florida",
		country: "United States",
		skills: [92, 93, 231, 214, 1198, 1203, 435, 1264, 1259, 1199, 1204, 1205, 1200, 389, 227, 98, 1273, 1256, 1201, 470, 475, 473, 437, 436, 439, 1220, 99, 1228, 1208, 4, 438, 440, 391, 544, 546, 237, 232, 1185, 1207, 1265, 136, 392, 49, 228, 1187, 1181, 1183, 1186, 1269, 1266, 1188, 1223, 543, 547, 6, 393, 238, 239, 52, 140, 138, 545, 548, 1271, 1272, 1212, 1229, 1209, 1234, 1274, 1182, 137, 111, 87, 1254, 1230, 1210, 1275, 86, 107, 230, 108, 83, 1184, 196, 7, 53, 60, 82, 224, 1224, 1227, 164, 241, 197, 198, 101, 110, 225, 1251, 388, 1194, 1195, 1247, 175, 1191, 1193, 1249]
	},
	20: {
		ID: 20,
		grade: 2,
		sub: "Florida",
		country: "United States",
		skills: [435, 1252, 84, 432, 158, 185, 227, 186, 177, 443, 439, 99, 440, 444, 552, 232, 49, 461, 471, 476, 474, 52, 549, 238, 239, 6, 1213, 1240, 1231, 1232, 1214, 1215, 1189, 346, 1190, 1216, 87, 86, 83, 1218, 1192, 1241, 1253, 1211, 1217, 53, 7, 82, 60, 164, 165, 1206, 1202, 1219, 166, 241, 110, 395, 396, 1225, 1226, 1233, 728, 127, 550, 1197, 457, 458, 246, 250, 251, 247, 454, 1221, 398, 1239, 1280, 1281, 1270, 1222, 242, 248, 249, 240, 1278, 459, 243, 154, 1246, 1248, 213, 1279]
	},
	21: {
		ID: 21,
		grade: 3,
		sub: "Florida",
		country: "United States",
		skills: [75, 751, 146, 271, 602, 603, 31, 754, 1094, 756, 772, 752, 773, 758, 597, 598, 595, 32, 556, 1095, 735, 736, 713, 174, 77, 76, 33, 34, 35, 25, 26, 596, 779, 777, 712, 785, 27, 36, 37, 778, 714, 762, 38, 39, 40, 28, 29, 555, 763, 175, 776, 704, 761, 775, 759, 161, 406, 781, 281, 462, 463, 421, 282, 760, 706, 705, 710, 264, 259, 764, 782, 783, 784, 183, 554, 557, 780, 184, 707, 716, 702, 771, 708, 1068, 730, 709, 753, 711, 801, 252, 210, 253, 802, 115, 116, 722, 767, 718, 770, 719, 1180, 1104, 1027, 733, 256, 257, 803, 327, 321, 1014, 1105, 720, 734, 765, 766, 715, 723, 46, 160, 786, 755, 724, 1102, 769, 721, 1103, 1066, 315, 316]
	},
	22: {
		ID: 22,
		grade: 4,
		sub: "Florida",
		country: "United States",
		skills: [789, 792, 787, 847, 790, 791, 164, 165, 166, 241, 496, 831, 834, 246, 250, 449, 1015, 68, 251, 247, 832, 788, 833, 793, 794, 795, 796, 583, 584, 248, 242, 279, 1028, 1029, 1030, 1031, 959, 960, 268, 249, 835, 840, 836, 559, 243, 465, 466, 212, 830, 797, 586, 587, 207, 270, 462, 463, 282, 1035, 879, 310, 311, 179, 283, 848, 852, 962, 987, 853, 287, 285, 255, 841, 837, 838, 839, 565, 562, 563, 1054, 1011, 1175, 1141, 1050, 922, 561, 558, 560, 843, 325, 327, 163, 162, 798, 799, 846, 900, 1033, 1034, 994, 1014, 1178, 1032, 986, 901, 925, 927, 46, 160, 849, 564, 850, 844, 106, 513, 897, 892, 937, 934, 891, 1106, 1166, 935, 926, 851, 890, 939, 908, 929, 952, 967, 974, 1174, 1016, 1021, 1142, 1143, 1144, 1145, 989, 899, 894, 990, 888, 889, 316, 320, 800, 804]
	},
	23: {
		ID: 23,
		grade: 5,
		sub: "Florida",
		country: "United States",
		skills: [337, 1073, 1089, 51, 336, 567, 465, 466, 805, 815, 911, 870, 871, 806, 813, 814, 821, 604, 566, 120, 121, 64, 65, 1077, 812, 1076, 414, 207, 358, 359, 808, 179, 909, 910, 180, 811, 825, 816, 62, 63, 303, 809, 807, 991, 1153, 798, 799, 163, 162, 124, 829, 953, 1109, 1122, 1123, 1118, 1119, 334, 810, 305, 306, 291, 286, 328, 362, 872, 912, 913, 1074, 1110, 1052, 915, 1120, 1121, 1126, 1127, 1128, 1129, 914, 520, 385, 366, 1157, 1158, 1161, 1154, 1148, 1156, 1130, 1172, 599, 610, 880, 800, 608, 854, 855, 1090, 1091, 916, 917, 1092, 1093, 1155, 606, 881, 876, 874, 609, 875, 873, 877, 918, 919, 923, 930, 931, 932, 936, 924, 928, 920]
	},
	24: {
		ID: 24,
		grade: 6,
		sub: "Florida",
		country: "United States",
		skills: [1005, 120, 121, 64, 65, 510, 499, 507, 288, 289, 207, 966, 968, 999, 1003, 998, 969, 970, 971, 972, 500, 501, 503, 1059, 1060, 505, 504, 314, 1004, 996, 997, 973, 1159, 1160, 1012, 303, 509, 502, 506, 162, 376, 943, 508, 334, 333, 305, 306, 332, 331, 964, 965, 1044, 1045, 1047, 1048, 1e3, 961, 963, 291, 339, 385, 324, 315, 1149, 1165, 975, 976, 1002, 1049, 1051, 1055, 366, 1056, 1057, 995, 864, 1163, 1164, 1013, 1017, 1018, 1019, 1162, 1131, 1167, 865, 1170, 1171, 1146, 1147, 1065, 1058, 1001, 1069, 1070, 1071, 1020, 1168, 1132, 948, 951, 945, 946, 1169]
	},
	25: {
		ID: 25,
		grade: 1,
		sub: "Texas",
		country: "United States",
		skills: [231, 1198, 1203, 1264, 1259, 73, 1199, 1204, 1205, 1200, 227, 1273, 1256, 50, 90, 149, 148, 1201, 470, 475, 473, 437, 436, 91, 89, 439, 99, 4, 440, 438, 229, 1208, 1185, 546, 237, 232, 392, 228, 49, 136, 1187, 1207, 1265, 1186, 1181, 1183, 543, 1188, 393, 1266, 1269, 1271, 1272, 1212, 1229, 452, 453, 138, 1209, 1182, 451, 137, 111, 1234, 1274, 1230, 1254, 87, 1210, 1184, 83, 86, 196, 224, 82, 60, 197, 198, 225, 226, 1194, 1195, 1247, 1249, 1191, 1193, 351, 382, 384]
	},
	26: {
		ID: 26,
		grade: 2,
		sub: "Texas",
		country: "United States",
		skills: [435, 1252, 84, 185, 186, 443, 444, 442, 441, 476, 549, 52, 238, 1213, 1240, 1231, 1232, 1214, 1215, 1189, 346, 1190, 1216, 1218, 1241, 1192, 472, 1275, 1211, 1217, 53, 164, 165, 31, 1224, 1227, 1206, 1202, 1225, 1219, 166, 241, 127, 32, 1226, 1197, 458, 457, 728, 1280, 1281, 454, 233, 1221, 33, 34, 35, 25, 26, 27, 36, 37, 1222, 455, 456, 38, 39, 40, 28, 29, 409, 154, 406, 178, 417, 351, 382, 384]
	},
	27: {
		ID: 27,
		grade: 3,
		sub: "Texas",
		country: "United States",
		skills: [445, 447, 448, 446, 751, 146, 602, 603, 31, 495, 756, 772, 752, 757, 758, 1233, 773, 597, 598, 218, 595, 32, 250, 246, 247, 251, 68, 33, 34, 35, 25, 26, 596, 128, 779, 1239, 1244, 1237, 777, 713, 714, 778, 1236, 1245, 785, 27, 36, 37, 248, 242, 249, 38, 39, 40, 28, 29, 1242, 1243, 763, 762, 776, 704, 761, 1096, 243, 781, 775, 759, 1235, 1246, 760, 462, 463, 782, 783, 784, 179, 351, 382, 705, 710, 706, 1248, 702, 708, 771, 707, 716, 384, 554, 557, 780, 183, 801, 210, 252, 709, 753, 730, 767, 718, 254, 253, 802, 116, 115, 256, 770, 1027, 1104, 1180, 1105, 734, 257, 380, 803, 126, 46, 786, 755, 375, 723, 765, 766, 724, 1102, 769, 1103]
	},
	28: {
		ID: 28,
		grade: 4,
		sub: "Texas",
		country: "United States",
		skills: [789, 792, 787, 847, 790, 791, 467, 831, 834, 1094, 1095, 1015, 735, 736, 1073, 1089, 832, 788, 192, 193, 68, 130, 313, 269, 793, 794, 795, 796, 833, 1028, 1029, 1030, 1031, 840, 959, 960, 835, 268, 211, 194, 195, 1255, 212, 836, 911, 559, 805, 815, 830, 821, 870, 871, 806, 813, 814, 604, 797, 120, 121, 64, 65, 207, 326, 808, 1035, 368, 180, 122, 1068, 848, 962, 542, 562, 565, 767, 837, 838, 839, 1011, 841, 1175, 1054, 733, 1050, 1141, 991, 922, 719, 720, 560, 219, 163, 162, 327, 325, 367, 380, 1014, 843, 846, 900, 994, 1178, 1153, 1033, 1034, 1032, 1109, 901, 849, 986, 925, 927, 381, 375, 117, 46, 564, 721, 106, 353, 354, 331, 333, 513, 937, 934, 850, 844, 897, 892, 1118, 1119, 1106, 1122, 1123, 1074, 1066, 851, 935, 926, 328, 952, 939, 908, 967, 974, 890, 1120, 1121, 1016, 1021, 1142, 1143, 1144, 1145, 894, 989, 990, 888, 889, 316]
	},
	29: {
		ID: 29,
		grade: 5,
		sub: "Texas",
		country: "United States",
		skills: [51, 313, 309, 516, 517, 567, 465, 466, 358, 359, 1076, 909, 910, 287, 285, 312, 816, 825, 303, 807, 809, 558, 327, 162, 163, 124, 117, 375, 953, 891, 964, 965, 1044, 334, 305, 306, 333, 331, 291, 339, 328, 1048, 961, 963, 1052, 1110, 872, 912, 913, 915, 914, 908, 929, 385, 540, 1126, 1127, 1128, 1129, 1157, 1158, 366, 899, 1049, 1161, 1130, 1148, 1154, 1172, 599, 610, 608, 1090, 1091, 854, 855, 876, 1092, 606, 1155, 877, 875, 918, 924, 928]
	},
	30: {
		ID: 30,
		grade: 6,
		sub: "Texas",
		country: "United States",
		skills: [1270, 1278, 358, 359, 499, 507, 534, 538, 514, 329, 998, 515, 711, 314, 1004, 996, 997, 1159, 1279, 363, 372, 509, 502, 506, 373, 374, 367, 376, 508, 943, 691, 698, 1044, 1166, 330, 334, 1048, 1174, 1129, 1075, 315, 324, 341, 342, 340, 1051, 1056, 1057, 1163, 343, 864, 571, 526, 568, 1131, 1162, 1092, 1093, 570, 883, 1146, 1147, 1173, 1069, 1070, 1071, 896, 886, 887, 893, 895, 1132, 885, 907, 906, 884]
	},
	35: {
		ID: 35,
		grade: 7,
		sub: "Common Core",
		country: "United States",
		skills: [223, 329, 515, 383, 984, 985, 1046, 1159, 1043, 372, 509, 858, 367, 502, 506, 531, 1023, 1038, 1025, 1022, 530, 330, 579, 580, 1026, 1009, 1010, 957, 1075, 355, 378, 387, 385, 859, 860, 861, 366, 386, 379, 582, 572, 574, 1006, 1007, 1008, 956, 1079, 525, 511, 864, 878, 573, 568, 571, 1064, 1024, 1036, 1037, 983, 977, 1080, 569, 576, 882, 865, 863, 902, 903, 905, 866, 883, 577, 570, 578, 886, 887, 904, 896, 978, 979, 885, 955, 949, 893, 895, 856, 857, 867, 950, 944, 907, 898, 906, 947, 954, 581, 981, 980, 1042, 1039, 1040, 941, 884, 868, 942, 940, 1041, 982, 869]
	},
	36: {
		ID: 36,
		grade: 7,
		sub: "Florida",
		country: "United States",
		skills: [223, 507, 329, 515, 383, 984, 985, 1046, 1043, 372, 363, 509, 502, 506, 367, 858, 531, 1038, 1023, 1022, 1025, 530, 330, 579, 580, 1026, 1009, 1010, 957, 1075, 324, 355, 378, 385, 859, 860, 861, 387, 386, 366, 379, 582, 572, 574, 1006, 1007, 1008, 956, 1079, 525, 511, 541, 864, 878, 573, 568, 571, 1036, 1037, 983, 1024, 1064, 977, 1080, 569, 576, 882, 865, 863, 902, 903, 905, 866, 883, 577, 570, 578, 904, 896, 886, 887, 978, 979, 955, 949, 893, 895, 885, 856, 857, 867, 898, 907, 944, 950, 954, 981, 947, 906, 581, 941, 884, 980, 1042, 1039, 1040, 1041, 868, 942, 940, 982, 869]
	},
	37: {
		ID: 37,
		grade: 8,
		sub: "Common Core",
		country: "United States",
		skills: [692, 693, 1257, 535, 536, 698, 691, 1063, 641, 642, 640, 1082, 652, 653, 654, 540, 701, 685, 688, 1086, 655, 660, 639, 1277, 638, 656, 1088, 699, 541, 1150, 1099, 1085, 1116, 1101, 1177, 1179, 1097, 1098, 689, 658, 661, 681, 651, 659, 694, 695, 1087, 700, 696, 697, 690, 817, 818, 819, 820, 644, 645, 1276, 1176, 1100, 1151, 1114, 643, 629, 630, 631, 632, 663, 684, 822, 823, 824, 826, 827, 1061, 1152, 1260, 1107, 1053, 662, 664, 634, 635, 636, 637, 628, 665, 666, 1062, 828, 686, 1124, 1125, 1115, 1139, 1134, 1135, 1108, 1081, 679, 680, 633, 1111, 1136, 1140, 1138, 1137, 1113, 682, 667, 1083, 687, 1112, 1133, 1084, 683, 678]
	},
	38: {
		ID: 38,
		grade: 8,
		sub: "Florida",
		country: "United States",
		skills: [692, 693, 1257, 535, 536, 698, 1063, 641, 642, 691, 640, 1082, 652, 653, 654, 701, 540, 1086, 655, 639, 660, 688, 685, 1277, 638, 656, 1085, 1088, 1099, 541, 699, 1150, 1116, 1101, 1177, 1179, 658, 1097, 1098, 689, 661, 681, 694, 695, 651, 1087, 659, 700, 696, 697, 690, 1100, 645, 644, 1176, 1276, 1151, 1114, 629, 630, 631, 632, 643, 1061, 663, 684, 1152, 1260, 1107, 662, 664, 634, 635, 636, 637, 628, 1053, 665, 666, 1062, 686, 1124, 1125, 1115, 1134, 1135, 1108, 1139, 633, 679, 680, 1081, 1140, 1111, 1136, 1138, 1113, 1137, 1083, 667, 682, 687, 1112, 1133, 683, 1084, 678]
	},
	40: {
		ID: 40,
		grade: 7,
		sub: "Texas",
		country: "United States",
		skills: [515, 363, 509, 1012, 1038, 1009, 1048, 1010, 957, 859, 860, 861, 324, 1006, 1007, 1008, 1049, 1165, 1163, 1164, 1013, 1017, 956, 864, 571, 573, 878, 1018, 1019, 983, 1036, 1037, 1167, 1162, 1170, 977, 882, 902, 569, 865, 863, 866, 570, 903, 905, 883, 886, 887, 904, 896, 978, 1020, 1069, 1070, 1071, 1168, 979, 885, 893, 895, 856, 857, 867, 898, 907, 981, 906, 581, 884, 941, 980, 1042, 1039, 1040, 1169, 1041, 940, 868, 982, 869]
	},
	41: {
		ID: 41,
		grade: 8,
		sub: "Texas",
		country: "United States",
		skills: [692, 693, 1257, 1063, 691, 698, 522, 641, 642, 701, 1086, 655, 660, 688, 1277, 1150, 1099, 1085, 1116, 656, 541, 1088, 699, 1097, 1098, 658, 689, 661, 1101, 1179, 659, 1087, 700, 694, 695, 696, 697, 644, 690, 1276, 1100, 1151, 643, 663, 1152, 1061, 1053, 1107, 664, 686, 1124, 1125, 1115, 1062, 1139, 1134, 1135, 1108, 1081, 1111, 1136, 1140, 1138, 1137, 1113, 1083, 682, 687, 1112, 1084]
	}
}, Prodigy.EducationSystem.curriculums2 = {
	1: {
		ID: 1,
		grade: 1,
		sub: "Ontario",
		country: "Canada",
		locationID: "1",
		skills: [{
			ID: 92,
			d: 100,
			q: 20,
			t: "Reading Numbers"
		}, {
			ID: 93,
			d: 100,
			q: 20,
			t: "Reading Numbers"
		}, {
			ID: 214,
			d: 100,
			q: 40,
			t: "Measurement "
		}, {
			ID: 226,
			d: 200,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 135,
			d: 200,
			q: 24,
			t: "Time"
		}, {
			ID: 109,
			d: 200,
			q: 40,
			t: "Ordering Numbers"
		}, {
			ID: 231,
			d: 200,
			q: 30,
			t: "Counting"
		}, {
			ID: 1264,
			d: 200,
			q: 40,
			t: "Counting"
		}, {
			ID: 1259,
			d: 200,
			q: 50,
			t: "Counting"
		}, {
			ID: 1265,
			d: 300,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 225,
			d: 300,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 227,
			d: 300,
			q: 33,
			t: "Addition to 20"
		}, {
			ID: 94,
			d: 400,
			q: 50,
			t: "Counting"
		}, {
			ID: 224,
			d: 500,
			q: 40,
			t: "2D Shapes"
		}, {
			ID: 136,
			d: 600,
			q: 45,
			t: "Addition to 20"
		}, {
			ID: 197,
			d: 600,
			q: 24,
			t: "2D Shapes"
		}, {
			ID: 3,
			d: 600,
			q: 45,
			t: "Addition to 20"
		}, {
			ID: 50,
			d: 600,
			q: 39,
			t: "Addition to 20"
		}, {
			ID: 546,
			d: 600,
			q: 42,
			t: "Addition to 20"
		}, {
			ID: 95,
			d: 700,
			q: 50,
			t: "Counting"
		}, {
			ID: 96,
			d: 800,
			q: 50,
			t: "Counting"
		}, {
			ID: 97,
			d: 800,
			q: 50,
			t: "Counting"
		}, {
			ID: 91,
			d: 800,
			q: 50,
			t: "Ordering Numbers"
		}, {
			ID: 215,
			d: 800,
			q: 40,
			t: "Data Relationships"
		}, {
			ID: 196,
			d: 800,
			q: 20,
			t: "2D Shapes"
		}, {
			ID: 1185,
			d: 900,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 98,
			d: 900,
			q: 39,
			t: "Counting"
		}, {
			ID: 103,
			d: 900,
			q: 50,
			t: "Counting"
		}, {
			ID: 107,
			d: 1e3,
			q: 59,
			t: "Composing Numbers"
		}, {
			ID: 89,
			d: 1e3,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 90,
			d: 1e3,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 198,
			d: 1e3,
			q: 48,
			t: "2D Shapes"
		}, {
			ID: 1187,
			d: 1e3,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 388,
			d: 1e3,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 389,
			d: 1100,
			q: 50,
			t: "Counting"
		}, {
			ID: 1269,
			d: 1100,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 148,
			d: 1100,
			q: 50,
			t: "Ordering Numbers"
		}, {
			ID: 149,
			d: 1100,
			q: 50,
			t: "Ordering Numbers"
		}, {
			ID: 229,
			d: 1100,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 4,
			d: 1100,
			q: 90,
			t: "Addition to 20"
		}, {
			ID: 1272,
			d: 1200,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1266,
			d: 1200,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 1208,
			d: 1200,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 232,
			d: 1200,
			q: 20,
			t: "Subtraction to 20"
		}, {
			ID: 1271,
			d: 1300,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 49,
			d: 1300,
			q: 45,
			t: "Subtraction to 20"
		}, {
			ID: 111,
			d: 1400,
			q: 17,
			t: "Mixed Operations"
		}, {
			ID: 138,
			d: 1400,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 137,
			d: 1400,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 140,
			d: 1400,
			q: 48,
			t: "Mixed Operations"
		}, {
			ID: 108,
			d: 1500,
			q: 60,
			t: "Composing Numbers"
		}, {
			ID: 1186,
			d: 1500,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 391,
			d: 1500,
			q: 40,
			t: "Comparing Numbers"
		}, {
			ID: 1188,
			d: 1500,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 1212,
			d: 1600,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1251,
			d: 1600,
			q: 50,
			t: "Patterning"
		}, {
			ID: 230,
			d: 1600,
			q: 50,
			t: "Composing Numbers"
		}, {
			ID: 1210,
			d: 1700,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1181,
			d: 1700,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1247,
			d: 1700,
			q: 16,
			t: "Fractions"
		}, {
			ID: 1249,
			d: 1700,
			q: 22,
			t: "Fractions"
		}, {
			ID: 390,
			d: 1800,
			q: 50,
			t: "Word Problems"
		}, {
			ID: 1182,
			d: 1800,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 1209,
			d: 1800,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 228,
			d: 1800,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 393,
			d: 2e3,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 470,
			d: 2e3,
			q: 50,
			t: "Time"
		}, {
			ID: 1183,
			d: 2e3,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1184,
			d: 2e3,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 392,
			d: 2e3,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 473,
			d: 2e3,
			q: 50,
			t: "Time"
		}, {
			ID: 475,
			d: 2e3,
			q: 24,
			t: "Time"
		}, {
			ID: 481,
			d: 2200,
			q: 40,
			t: "Patterning"
		}, {
			ID: 482,
			d: 2200,
			q: 40,
			t: "Patterning"
		}, {
			ID: 480,
			d: 2300,
			q: 40,
			t: "Patterning"
		}]
	},
	2: {
		ID: 2,
		grade: 2,
		sub: "Ontario",
		country: "Canada",
		locationID: "1",
		skills: [{
			ID: 4,
			d: 1100,
			q: 90,
			t: "Addition to 20"
		}, {
			ID: 1207,
			d: 1600,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 1189,
			d: 1700,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1190,
			d: 1700,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 87,
			d: 1700,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 82,
			d: 1700,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 83,
			d: 1900,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 201,
			d: 2500,
			q: 28,
			t: "Location"
		}, {
			ID: 200,
			d: 2500,
			q: 28,
			t: "Location"
		}, {
			ID: 424,
			d: 2500,
			q: 10,
			t: "Reading Numbers"
		}, {
			ID: 425,
			d: 2500,
			q: 10,
			t: "Reading Numbers"
		}, {
			ID: 456,
			d: 2600,
			q: 40,
			t: "2D Shapes"
		}, {
			ID: 455,
			d: 2700,
			q: 45,
			t: "2D Shapes"
		}, {
			ID: 426,
			d: 2700,
			q: 50,
			t: "Counting"
		}, {
			ID: 233,
			d: 2700,
			q: 48,
			t: "2D Shapes"
		}, {
			ID: 86,
			d: 2700,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1208,
			d: 2700,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1210,
			d: 2800,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1195,
			d: 2800,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1193,
			d: 2800,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 400,
			d: 2800,
			q: 50,
			t: "Word Problems"
		}, {
			ID: 59,
			d: 2800,
			q: 50,
			t: "Place Value"
		}, {
			ID: 73,
			d: 2800,
			q: 47,
			t: "Counting"
		}, {
			ID: 427,
			d: 2800,
			q: 49,
			t: "Counting"
		}, {
			ID: 451,
			d: 2800,
			q: 50,
			t: "Addition"
		}, {
			ID: 454,
			d: 2800,
			q: 30,
			t: "2D Shapes"
		}, {
			ID: 72,
			d: 2900,
			q: 22,
			t: "Counting"
		}, {
			ID: 428,
			d: 2900,
			q: 20,
			t: "Counting"
		}, {
			ID: 429,
			d: 3e3,
			q: 50,
			t: "Counting"
		}, {
			ID: 75,
			d: 3e3,
			q: 50,
			t: "Patterning"
		}, {
			ID: 74,
			d: 3e3,
			q: 34,
			t: "Counting"
		}, {
			ID: 543,
			d: 3e3,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 545,
			d: 3e3,
			q: 50,
			t: "Place Value"
		}, {
			ID: 457,
			d: 3e3,
			q: 40,
			t: "2D Shapes"
		}, {
			ID: 458,
			d: 3e3,
			q: 35,
			t: "2D Shapes"
		}, {
			ID: 440,
			d: 3100,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 439,
			d: 3100,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 544,
			d: 3200,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 164,
			d: 3200,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 237,
			d: 3200,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 436,
			d: 3300,
			q: 50,
			t: "Ordering Numbers"
		}, {
			ID: 437,
			d: 3300,
			q: 50,
			t: "Ordering Numbers"
		}, {
			ID: 438,
			d: 3300,
			q: 50,
			t: "Ordering Numbers"
		}, {
			ID: 401,
			d: 3300,
			q: 50,
			t: "Word Problems"
		}, {
			ID: 452,
			d: 3400,
			q: 50,
			t: "Subtraction"
		}, {
			ID: 460,
			d: 3400,
			q: 40,
			t: "Word Problems"
		}, {
			ID: 399,
			d: 3400,
			q: 50,
			t: "Word Problems"
		}, {
			ID: 241,
			d: 3400,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 1194,
			d: 3400,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1191,
			d: 3400,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1209,
			d: 3400,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 1228,
			d: 3400,
			q: 46,
			t: "Place Value"
		}, {
			ID: 453,
			d: 3500,
			q: 50,
			t: "Subtraction"
		}, {
			ID: 548,
			d: 3600,
			q: 50,
			t: "Place Value"
		}, {
			ID: 52,
			d: 3600,
			q: 45,
			t: "Subtraction to 100"
		}, {
			ID: 53,
			d: 3600,
			q: 45,
			t: "Subtraction to 100"
		}, {
			ID: 60,
			d: 3700,
			q: 50,
			t: "Composing Numbers"
		}, {
			ID: 1212,
			d: 3700,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 110,
			d: 3800,
			q: 50,
			t: "Composing Numbers"
		}, {
			ID: 677,
			d: 3800,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 676,
			d: 3800,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 674,
			d: 3900,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 675,
			d: 3900,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 673,
			d: 4e3,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 672,
			d: 4e3,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 459,
			d: 4e3,
			q: 40,
			t: "2D Shapes"
		}, {
			ID: 479,
			d: 4300,
			q: 47,
			t: "Time"
		}, {
			ID: 478,
			d: 4300,
			q: 50,
			t: "Time"
		}, {
			ID: 1218,
			d: 4300,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 1224,
			d: 4300,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 477,
			d: 4400,
			q: 24,
			t: "Time"
		}, {
			ID: 6,
			d: 4400,
			q: 180,
			t: "Addition to 100"
		}, {
			ID: 7,
			d: 4500,
			q: 143,
			t: "Addition to 100"
		}, {
			ID: 1227,
			d: 4500,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 1217,
			d: 4600,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 165,
			d: 4700,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 166,
			d: 4800,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 547,
			d: 4800,
			q: 44,
			t: "Subtraction to 100"
		}, {
			ID: 1213,
			d: 4900,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1214,
			d: 4900,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1215,
			d: 4900,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1216,
			d: 4900,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1211,
			d: 5e3,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 77,
			d: 5e3,
			q: 56,
			t: "Patterning"
		}, {
			ID: 76,
			d: 5100,
			q: 56,
			t: "Patterning"
		}, {
			ID: 395,
			d: 5100,
			q: 50,
			t: "Word Problems"
		}, {
			ID: 1202,
			d: 5100,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 1192,
			d: 5100,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 1219,
			d: 5100,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 1221,
			d: 5200,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 1222,
			d: 5200,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 1197,
			d: 5200,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 1206,
			d: 5200,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 396,
			d: 5200,
			q: 50,
			t: "Word Problems"
		}, {
			ID: 398,
			d: 5400,
			q: 50,
			t: "Word Problems"
		}, {
			ID: 484,
			d: 5500,
			q: 40,
			t: "Patterning"
		}, {
			ID: 483,
			d: 5500,
			q: 40,
			t: "Patterning"
		}, {
			ID: 485,
			d: 5600,
			q: 40,
			t: "Patterning"
		}, {
			ID: 555,
			d: 6200,
			q: 50,
			t: "Mixed Operations"
		}]
	},
	3: {
		ID: 3,
		grade: 3,
		sub: "Ontario",
		country: "Canada",
		locationID: "1",
		skills: [{
			ID: 1256,
			d: 500,
			q: 50,
			t: "Counting"
		}, {
			ID: 1273,
			d: 600,
			q: 50,
			t: "Place Value"
		}, {
			ID: 86,
			d: 1600,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 82,
			d: 1700,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 87,
			d: 1700,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 83,
			d: 1900,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 435,
			d: 2e3,
			q: 50,
			t: "Reading Numbers"
		}, {
			ID: 456,
			d: 2600,
			q: 40,
			t: "2D Shapes"
		}, {
			ID: 454,
			d: 2800,
			q: 30,
			t: "2D Shapes"
		}, {
			ID: 431,
			d: 2900,
			q: 50,
			t: "Counting"
		}, {
			ID: 432,
			d: 2900,
			q: 50,
			t: "Counting"
		}, {
			ID: 158,
			d: 2900,
			q: 50,
			t: "Counting"
		}, {
			ID: 430,
			d: 2900,
			q: 50,
			t: "Counting"
		}, {
			ID: 177,
			d: 3e3,
			q: 50,
			t: "Counting"
		}, {
			ID: 434,
			d: 3e3,
			q: 32,
			t: "Counting"
		}, {
			ID: 457,
			d: 3e3,
			q: 40,
			t: "2D Shapes"
		}, {
			ID: 458,
			d: 3e3,
			q: 35,
			t: "2D Shapes"
		}, {
			ID: 1275,
			d: 3e3,
			q: 44,
			t: "Subtraction to 100"
		}, {
			ID: 1224,
			d: 3200,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 164,
			d: 3200,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 1227,
			d: 3300,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 461,
			d: 3400,
			q: 50,
			t: "Counting"
		}, {
			ID: 241,
			d: 3400,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 1231,
			d: 3500,
			q: 50,
			t: "Place Value"
		}, {
			ID: 1232,
			d: 3500,
			q: 50,
			t: "Place Value"
		}, {
			ID: 176,
			d: 3600,
			q: 50,
			t: "Counting"
		}, {
			ID: 349,
			d: 3600,
			q: 50,
			t: "Reading Numbers"
		}, {
			ID: 348,
			d: 3700,
			q: 50,
			t: "Reading Numbers"
		}, {
			ID: 185,
			d: 3800,
			q: 50,
			t: "Place Value"
		}, {
			ID: 443,
			d: 3800,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 444,
			d: 3800,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 552,
			d: 3900,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 459,
			d: 4e3,
			q: 40,
			t: "2D Shapes"
		}, {
			ID: 728,
			d: 4e3,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 186,
			d: 4e3,
			q: 50,
			t: "Place Value"
		}, {
			ID: 143,
			d: 4e3,
			q: 50,
			t: "Place Value"
		}, {
			ID: 144,
			d: 4e3,
			q: 50,
			t: "Place Value"
		}, {
			ID: 408,
			d: 4e3,
			q: 50,
			t: "Word Problems"
		}, {
			ID: 350,
			d: 4e3,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 1280,
			d: 4e3,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 1278,
			d: 4100,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 1270,
			d: 4100,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 441,
			d: 4100,
			q: 50,
			t: "Ordering Numbers"
		}, {
			ID: 442,
			d: 4100,
			q: 50,
			t: "Ordering Numbers"
		}, {
			ID: 550,
			d: 4200,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 154,
			d: 4200,
			q: 50,
			t: "Composing Numbers"
		}, {
			ID: 213,
			d: 4300,
			q: 25,
			t: "Measurement"
		}, {
			ID: 346,
			d: 4300,
			q: 50,
			t: "Time"
		}, {
			ID: 471,
			d: 4300,
			q: 50,
			t: "Time"
		}, {
			ID: 476,
			d: 4400,
			q: 50,
			t: "Time"
		}, {
			ID: 487,
			d: 4400,
			q: 40,
			t: "Measurement"
		}, {
			ID: 277,
			d: 4500,
			q: 50,
			t: "Time"
		}, {
			ID: 283,
			d: 4500,
			q: 46,
			t: "Time"
		}, {
			ID: 178,
			d: 4600,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 165,
			d: 4700,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 1281,
			d: 4700,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 166,
			d: 4800,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 77,
			d: 5e3,
			q: 56,
			t: "Patterning"
		}, {
			ID: 852,
			d: 5300,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 751,
			d: 6400,
			q: 50,
			t: "Rounding"
		}, {
			ID: 713,
			d: 6500,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 714,
			d: 6500,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 1233,
			d: 6500,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 549,
			d: 6500,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 464,
			d: 6500,
			q: 40,
			t: "2D Shapes"
		}, {
			ID: 210,
			d: 6500,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 31,
			d: 6500,
			q: 21,
			t: "Multiplication Facts"
		}, {
			ID: 284,
			d: 6500,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 279,
			d: 6500,
			q: 50,
			t: "Patterning"
		}, {
			ID: 273,
			d: 6500,
			q: 50,
			t: "Patterning"
		}, {
			ID: 252,
			d: 6500,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 347,
			d: 6500,
			q: 50,
			t: "Temperature"
		}, {
			ID: 1274,
			d: 6500,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 1239,
			d: 6500,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 1254,
			d: 6600,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1237,
			d: 6600,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 1244,
			d: 6600,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 272,
			d: 6600,
			q: 50,
			t: "Patterning"
		}, {
			ID: 146,
			d: 6600,
			q: 50,
			t: "Rounding"
		}, {
			ID: 222,
			d: 6600,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 486,
			d: 6600,
			q: 50,
			t: "Angles"
		}, {
			ID: 584,
			d: 6600,
			q: 50,
			t: "Patterning"
		}, {
			ID: 591,
			d: 6600,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 592,
			d: 6600,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 777,
			d: 6600,
			q: 40,
			t: "Addition to 1000"
		}, {
			ID: 597,
			d: 6600,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 602,
			d: 6600,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 603,
			d: 6600,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 598,
			d: 6600,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 596,
			d: 6700,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 733,
			d: 6700,
			q: 50,
			t: "Patterning"
		}, {
			ID: 612,
			d: 6700,
			q: 42,
			t: "Angles"
		}, {
			ID: 762,
			d: 6700,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 595,
			d: 6700,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 496,
			d: 6700,
			q: 33,
			t: "Angles"
		}, {
			ID: 220,
			d: 6700,
			q: 50,
			t: "Measurement"
		}, {
			ID: 221,
			d: 6700,
			q: 50,
			t: "Measurement"
		}, {
			ID: 246,
			d: 6700,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 384,
			d: 6700,
			q: 48,
			t: "3D Shapes"
		}, {
			ID: 1242,
			d: 6700,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 1236,
			d: 6800,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 1245,
			d: 6800,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 1246,
			d: 6800,
			q: 23,
			t: "Geometry"
		}, {
			ID: 1248,
			d: 6800,
			q: 30,
			t: "Geometry"
		}, {
			ID: 382,
			d: 6800,
			q: 48,
			t: "3D Shapes"
		}, {
			ID: 383,
			d: 6800,
			q: 35,
			t: "3D Shapes"
		}, {
			ID: 351,
			d: 6800,
			q: 48,
			t: "3D Shapes"
		}, {
			ID: 255,
			d: 6800,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 268,
			d: 6800,
			q: 50,
			t: "Patterning"
		}, {
			ID: 240,
			d: 6800,
			q: 48,
			t: "2D Shapes"
		}, {
			ID: 242,
			d: 6800,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 27,
			d: 6800,
			q: 18,
			t: "Division Facts"
		}, {
			ID: 25,
			d: 6800,
			q: 18,
			t: "Division Facts"
		}, {
			ID: 26,
			d: 6800,
			q: 18,
			t: "Division Facts"
		}, {
			ID: 593,
			d: 6800,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 594,
			d: 6800,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 778,
			d: 6800,
			q: 40,
			t: "Subtraction to 1000"
		}, {
			ID: 779,
			d: 6800,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 1095,
			d: 6800,
			q: 50,
			t: "Patterning"
		}, {
			ID: 712,
			d: 6800,
			q: 48,
			t: "Patterning"
		}, {
			ID: 601,
			d: 6800,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 600,
			d: 6800,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 763,
			d: 6900,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 716,
			d: 6900,
			q: 50,
			t: "Measurement"
		}, {
			ID: 583,
			d: 6900,
			q: 50,
			t: "Patterning"
		}, {
			ID: 174,
			d: 6900,
			q: 50,
			t: "Patterning"
		}, {
			ID: 247,
			d: 6900,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 250,
			d: 6900,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 380,
			d: 6900,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 381,
			d: 7e3,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 345,
			d: 7e3,
			q: 50,
			t: "Money"
		}, {
			ID: 243,
			d: 7e3,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 270,
			d: 7e3,
			q: 50,
			t: "Patterning"
		}, {
			ID: 248,
			d: 7e3,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 590,
			d: 7e3,
			q: 50,
			t: "Probability"
		}, {
			ID: 417,
			d: 7e3,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 754,
			d: 7e3,
			q: 50,
			t: "Patterning"
		}, {
			ID: 1235,
			d: 7e3,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1094,
			d: 7e3,
			q: 50,
			t: "Patterning"
		}, {
			ID: 785,
			d: 7e3,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 1243,
			d: 7e3,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 1255,
			d: 7100,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 607,
			d: 7100,
			q: 50,
			t: "Money"
		}, {
			ID: 780,
			d: 7100,
			q: 50,
			t: "Measurement"
		}, {
			ID: 588,
			d: 7100,
			q: 50,
			t: "Probability"
		}, {
			ID: 344,
			d: 7100,
			q: 49,
			t: "Money"
		}, {
			ID: 251,
			d: 7100,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 269,
			d: 7100,
			q: 50,
			t: "Patterning"
		}, {
			ID: 406,
			d: 7100,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 352,
			d: 7200,
			q: 48,
			t: "Probability"
		}, {
			ID: 249,
			d: 7200,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 175,
			d: 7200,
			q: 50,
			t: "Patterning"
		}, {
			ID: 736,
			d: 7200,
			q: 50,
			t: "Patterning"
		}, {
			ID: 735,
			d: 7200,
			q: 50,
			t: "Patterning"
		}, {
			ID: 611,
			d: 7200,
			q: 50,
			t: "Money"
		}, {
			ID: 605,
			d: 7300,
			q: 50,
			t: "Money"
		}, {
			ID: 835,
			d: 7300,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 832,
			d: 7300,
			q: 50,
			t: "Addition to 1,000,000"
		}, {
			ID: 1096,
			d: 7300,
			q: 50,
			t: "Patterning"
		}, {
			ID: 586,
			d: 7300,
			q: 50,
			t: "Patterning"
		}, {
			ID: 587,
			d: 7300,
			q: 50,
			t: "Patterning"
		}, {
			ID: 589,
			d: 7300,
			q: 50,
			t: "Probability"
		}, {
			ID: 409,
			d: 7300,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 187,
			d: 7300,
			q: 40,
			t: "Money"
		}, {
			ID: 278,
			d: 7300,
			q: 50,
			t: "Money"
		}, {
			ID: 282,
			d: 7400,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 281,
			d: 7500,
			q: 50,
			t: "Mixed Operations"
		}]
	},
	4: {
		ID: 4,
		grade: 4,
		sub: "Ontario",
		country: "Canada",
		locationID: "1",
		skills: [{
			ID: 164,
			d: 3200,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 241,
			d: 3400,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 165,
			d: 4700,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 166,
			d: 4800,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 31,
			d: 8500,
			q: 21,
			t: "Multiplication Facts"
		}, {
			ID: 32,
			d: 8500,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 33,
			d: 8500,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 34,
			d: 8500,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 35,
			d: 8500,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 36,
			d: 8500,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 253,
			d: 8500,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 254,
			d: 8500,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 472,
			d: 8500,
			q: 50,
			t: "Time"
		}, {
			ID: 847,
			d: 8500,
			q: 50,
			t: "Place Value"
		}, {
			ID: 495,
			d: 8600,
			q: 50,
			t: "Time"
		}, {
			ID: 252,
			d: 8600,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 37,
			d: 8600,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 38,
			d: 8600,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 39,
			d: 8600,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 40,
			d: 8600,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 127,
			d: 8600,
			q: 25,
			t: "Conversion"
		}, {
			ID: 210,
			d: 8600,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 218,
			d: 8700,
			q: 25,
			t: "Time"
		}, {
			ID: 255,
			d: 8700,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 257,
			d: 8700,
			q: 43,
			t: "2D Shapes"
		}, {
			ID: 556,
			d: 8700,
			q: 50,
			t: "Rounding"
		}, {
			ID: 756,
			d: 8700,
			q: 49,
			t: "Multiplication"
		}, {
			ID: 764,
			d: 8700,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 772,
			d: 8700,
			q: 45,
			t: "Multiplication"
		}, {
			ID: 1028,
			d: 8700,
			q: 50,
			t: "Patterning"
		}, {
			ID: 1029,
			d: 8700,
			q: 50,
			t: "Patterning"
		}, {
			ID: 759,
			d: 8800,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 256,
			d: 8800,
			q: 45,
			t: "2D Shapes"
		}, {
			ID: 128,
			d: 8800,
			q: 25,
			t: "Conversion"
		}, {
			ID: 26,
			d: 8800,
			q: 18,
			t: "Division Facts"
		}, {
			ID: 25,
			d: 8800,
			q: 18,
			t: "Division Facts"
		}, {
			ID: 27,
			d: 8800,
			q: 18,
			t: "Division Facts"
		}, {
			ID: 28,
			d: 8900,
			q: 18,
			t: "Division Facts"
		}, {
			ID: 29,
			d: 8900,
			q: 9,
			t: "Division Facts"
		}, {
			ID: 129,
			d: 8900,
			q: 25,
			t: "Conversion"
		}, {
			ID: 447,
			d: 8900,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 448,
			d: 8900,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 760,
			d: 8900,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 781,
			d: 8900,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 797,
			d: 8900,
			q: 50,
			t: "Rounding"
		}, {
			ID: 1045,
			d: 8900,
			q: 18,
			t: "3D Shapes"
		}, {
			ID: 1047,
			d: 8900,
			q: 18,
			t: "3D Shapes"
		}, {
			ID: 773,
			d: 9e3,
			q: 45,
			t: "Division"
		}, {
			ID: 775,
			d: 9e3,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 758,
			d: 9e3,
			q: 49,
			t: "Division"
		}, {
			ID: 467,
			d: 9e3,
			q: 50,
			t: "Place Value"
		}, {
			ID: 704,
			d: 9e3,
			q: 45,
			t: "Multiplication"
		}, {
			ID: 705,
			d: 9e3,
			q: 44,
			t: "Division"
		}, {
			ID: 715,
			d: 9e3,
			q: 50,
			t: "Fractions: Represent"
		}, {
			ID: 718,
			d: 9e3,
			q: 50,
			t: "Fractions: Represent"
		}, {
			ID: 722,
			d: 9e3,
			q: 45,
			t: "Fractions: Represent"
		}, {
			ID: 753,
			d: 9e3,
			q: 32,
			t: "Fractions: Represent"
		}, {
			ID: 130,
			d: 9e3,
			q: 50,
			t: "Place Value"
		}, {
			ID: 68,
			d: 9e3,
			q: 50,
			t: "Rounding"
		}, {
			ID: 446,
			d: 9100,
			q: 50,
			t: "Ordering Numbers"
		}, {
			ID: 445,
			d: 9100,
			q: 50,
			t: "Ordering Numbers"
		}, {
			ID: 761,
			d: 9100,
			q: 50,
			t: "Division"
		}, {
			ID: 782,
			d: 9100,
			q: 50,
			t: "Division"
		}, {
			ID: 1027,
			d: 9100,
			q: 50,
			t: "Fractions: Represent"
		}, {
			ID: 767,
			d: 9200,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 734,
			d: 9200,
			q: 33,
			t: "Fractions: Comparing"
		}, {
			ID: 709,
			d: 9200,
			q: 50,
			t: "Division"
		}, {
			ID: 706,
			d: 9200,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 707,
			d: 9200,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 208,
			d: 9200,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 184,
			d: 9300,
			q: 50,
			t: "Patterning"
		}, {
			ID: 183,
			d: 9300,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 719,
			d: 9300,
			q: 42,
			t: "Fractions: Equivalent"
		}, {
			ID: 720,
			d: 9300,
			q: 42,
			t: "Fractions: Equivalent"
		}, {
			ID: 710,
			d: 9300,
			q: 49,
			t: "Mixed Operations"
		}, {
			ID: 776,
			d: 9300,
			q: 50,
			t: "Division"
		}, {
			ID: 801,
			d: 9400,
			q: 48,
			t: "Measurement"
		}, {
			ID: 802,
			d: 9400,
			q: 40,
			t: "Measurement"
		}, {
			ID: 1030,
			d: 9400,
			q: 50,
			t: "Patterning"
		}, {
			ID: 1031,
			d: 9400,
			q: 50,
			t: "Patterning"
		}, {
			ID: 180,
			d: 9400,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 206,
			d: 9500,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 216,
			d: 9500,
			q: 35,
			t: "Measurement Relationships"
		}, {
			ID: 755,
			d: 9500,
			q: 50,
			t: "Measurement"
		}, {
			ID: 708,
			d: 9500,
			q: 50,
			t: "Division"
		}, {
			ID: 488,
			d: 9500,
			q: 50,
			t: "Measurement"
		}, {
			ID: 491,
			d: 9500,
			q: 20,
			t: "Measurement"
		}, {
			ID: 489,
			d: 9500,
			q: 20,
			t: "Measurement"
		}, {
			ID: 490,
			d: 9500,
			q: 50,
			t: "Measurement"
		}, {
			ID: 786,
			d: 9500,
			q: 50,
			t: "Measurement"
		}, {
			ID: 959,
			d: 9500,
			q: 50,
			t: "Patterning"
		}, {
			ID: 841,
			d: 9500,
			q: 50,
			t: "Conversion"
		}, {
			ID: 843,
			d: 9500,
			q: 50,
			t: "Conversion"
		}, {
			ID: 766,
			d: 9500,
			q: 39,
			t: "Fractions: Equivalent"
		}, {
			ID: 783,
			d: 9500,
			q: 49,
			t: "Mixed Operations"
		}, {
			ID: 765,
			d: 9500,
			q: 39,
			t: "Fractions: Equivalent"
		}, {
			ID: 934,
			d: 9600,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 960,
			d: 9600,
			q: 50,
			t: "Patterning"
		}, {
			ID: 462,
			d: 9600,
			q: 40,
			t: "Multiplication"
		}, {
			ID: 463,
			d: 9600,
			q: 45,
			t: "Division"
		}, {
			ID: 126,
			d: 9600,
			q: 50,
			t: "Fractions"
		}, {
			ID: 205,
			d: 9600,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 181,
			d: 9700,
			q: 50,
			t: "Patterning"
		}, {
			ID: 219,
			d: 9700,
			q: 30,
			t: "Fractions"
		}, {
			ID: 711,
			d: 9700,
			q: 48,
			t: "Multiplication"
		}, {
			ID: 757,
			d: 9700,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1279,
			d: 9700,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 821,
			d: 9800,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 784,
			d: 9800,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 120,
			d: 9800,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 139,
			d: 9800,
			q: 50,
			t: "Money"
		}, {
			ID: 121,
			d: 9900,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 182,
			d: 9900,
			q: 50,
			t: "Money"
		}, {
			ID: 702,
			d: 9900,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 808,
			d: 9900,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 815,
			d: 1e4,
			q: 50,
			t: "Division"
		}, {
			ID: 412,
			d: 1e4,
			q: 50,
			t: "Word Problems"
		}, {
			ID: 419,
			d: 1e4,
			q: 50,
			t: "Word Problems"
		}, {
			ID: 179,
			d: 1e4,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 806,
			d: 10100,
			q: 50,
			t: "Division"
		}, {
			ID: 853,
			d: 10100,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 848,
			d: 10200,
			q: 50,
			t: "Division"
		}]
	},
	5: {
		ID: 5,
		grade: 5,
		sub: "Ontario",
		country: "Canada",
		locationID: "1",
		skills: [{
			ID: 1180,
			d: 9400,
			q: 50,
			t: "Fractions: Equivalent"
		}, {
			ID: 989,
			d: 11e3,
			q: 50,
			t: "Measurement"
		}, {
			ID: 1035,
			d: 11e3,
			q: 32,
			t: "Time"
		}, {
			ID: 51,
			d: 11e3,
			q: 50,
			t: "Rounding"
		}, {
			ID: 223,
			d: 11e3,
			q: 48,
			t: "Data Relationships"
		}, {
			ID: 258,
			d: 11e3,
			q: 50,
			t: "Addition"
		}, {
			ID: 212,
			d: 11e3,
			q: 50,
			t: "Angles"
		}, {
			ID: 211,
			d: 11e3,
			q: 50,
			t: "Angles"
		}, {
			ID: 263,
			d: 11e3,
			q: 50,
			t: "Subtraction"
		}, {
			ID: 449,
			d: 11e3,
			q: 50,
			t: "Reading Numbers"
		}, {
			ID: 326,
			d: 11e3,
			q: 50,
			t: "Angles"
		}, {
			ID: 338,
			d: 11e3,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 266,
			d: 11100,
			q: 50,
			t: "Subtraction"
		}, {
			ID: 261,
			d: 11100,
			q: 50,
			t: "Addition"
		}, {
			ID: 1050,
			d: 11100,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 990,
			d: 11100,
			q: 50,
			t: "Measurement"
		}, {
			ID: 1054,
			d: 11100,
			q: 35,
			t: "2D Shapes"
		}, {
			ID: 1068,
			d: 11200,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 329,
			d: 11200,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 512,
			d: 11200,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 803,
			d: 11200,
			q: 50,
			t: "Area"
		}, {
			ID: 260,
			d: 11200,
			q: 50,
			t: "Addition"
		}, {
			ID: 259,
			d: 11200,
			q: 50,
			t: "Addition"
		}, {
			ID: 153,
			d: 11200,
			q: 50,
			t: "Time"
		}, {
			ID: 119,
			d: 11200,
			q: 50,
			t: "Money"
		}, {
			ID: 122,
			d: 11200,
			q: 50,
			t: "Conversion"
		}, {
			ID: 120,
			d: 11200,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 121,
			d: 11200,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 152,
			d: 11200,
			q: 50,
			t: "Time"
		}, {
			ID: 113,
			d: 11300,
			q: 50,
			t: "Addition"
		}, {
			ID: 161,
			d: 11300,
			q: 50,
			t: "Time"
		}, {
			ID: 264,
			d: 11300,
			q: 50,
			t: "Subtraction"
		}, {
			ID: 805,
			d: 11300,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 769,
			d: 11300,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 265,
			d: 11300,
			q: 50,
			t: "Subtraction"
		}, {
			ID: 879,
			d: 11300,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 770,
			d: 11400,
			q: 50,
			t: "Area"
		}, {
			ID: 816,
			d: 11400,
			q: 50,
			t: "Division"
		}, {
			ID: 825,
			d: 11400,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 813,
			d: 11400,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 421,
			d: 11400,
			q: 50,
			t: "Time"
		}, {
			ID: 114,
			d: 11400,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 64,
			d: 11400,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 414,
			d: 11500,
			q: 50,
			t: "Decimals: Mixed Operations"
		}, {
			ID: 723,
			d: 11500,
			q: 39,
			t: "Fractions: Equivalent"
		}, {
			ID: 849,
			d: 11500,
			q: 50,
			t: "Division"
		}, {
			ID: 807,
			d: 11500,
			q: 50,
			t: "Division"
		}, {
			ID: 809,
			d: 11500,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 870,
			d: 11500,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 838,
			d: 11500,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 911,
			d: 11500,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 1077,
			d: 11500,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1066,
			d: 11500,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 1178,
			d: 11600,
			q: 50,
			t: "Fractions: Equivalent"
		}, {
			ID: 563,
			d: 11600,
			q: 18,
			t: "Fractions: Equivalent"
		}, {
			ID: 814,
			d: 11600,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 730,
			d: 11600,
			q: 50,
			t: "Fractions: Represent"
		}, {
			ID: 162,
			d: 11600,
			q: 50,
			t: "Division"
		}, {
			ID: 65,
			d: 11600,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 163,
			d: 11600,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 125,
			d: 11700,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 63,
			d: 11700,
			q: 50,
			t: "Decimals: Division"
		}, {
			ID: 62,
			d: 11700,
			q: 50,
			t: "Decimals: Multiplication"
		}, {
			ID: 415,
			d: 11700,
			q: 40,
			t: "Word Problems"
		}, {
			ID: 724,
			d: 11700,
			q: 39,
			t: "Fractions: Equivalent"
		}, {
			ID: 416,
			d: 11700,
			q: 50,
			t: "Word Problems"
		}, {
			ID: 493,
			d: 11700,
			q: 40,
			t: "Measurement"
		}, {
			ID: 492,
			d: 11700,
			q: 40,
			t: "Measurement"
		}, {
			ID: 871,
			d: 11700,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 839,
			d: 11800,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1034,
			d: 11800,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1104,
			d: 11800,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 115,
			d: 11800,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 116,
			d: 11800,
			q: 50,
			t: "Division"
		}, {
			ID: 124,
			d: 11900,
			q: 50,
			t: "Conversion"
		}, {
			ID: 952,
			d: 11900,
			q: 50,
			t: "Fractions: Represent"
		}, {
			ID: 721,
			d: 11900,
			q: 42,
			t: "Fractions: Equivalent"
		}, {
			ID: 1103,
			d: 11900,
			q: 49,
			t: "Fractions: Equivalent"
		}, {
			ID: 1048,
			d: 11900,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 922,
			d: 12e3,
			q: 50,
			t: "Fractions and Decimals"
		}, {
			ID: 939,
			d: 12e3,
			q: 50,
			t: "Fractions: Represent"
		}, {
			ID: 1044,
			d: 12e3,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 497,
			d: 12e3,
			q: 50,
			t: "Probability"
		}, {
			ID: 967,
			d: 12100,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 106,
			d: 12100,
			q: 50,
			t: "Fractions and Decimals"
		}, {
			ID: 974,
			d: 12100,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1011,
			d: 12100,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 997,
			d: 12100,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1014,
			d: 12200,
			q: 50,
			t: "Fractions and Decimals"
		}, {
			ID: 1055,
			d: 12200,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1016,
			d: 12300,
			q: 50,
			t: "Decimals: Comparing"
		}, {
			ID: 516,
			d: 12300,
			q: 50,
			t: "Decimals"
		}, {
			ID: 517,
			d: 12300,
			q: 50,
			t: "Decimals"
		}, {
			ID: 559,
			d: 12400,
			q: 50,
			t: "Decimals: Comparing"
		}, {
			ID: 1105,
			d: 12400,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 160,
			d: 12500,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 195,
			d: 12500,
			q: 50,
			t: "Decimals"
		}, {
			ID: 194,
			d: 12500,
			q: 50,
			t: "Decimals"
		}, {
			ID: 123,
			d: 12600,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1102,
			d: 12600,
			q: 50,
			t: "Fractions: Equivalent"
		}, {
			ID: 46,
			d: 12700,
			q: 50,
			t: "Fractions: Equivalent"
		}, {
			ID: 192,
			d: 12700,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 193,
			d: 12700,
			q: 50,
			t: "Comparing Numbers"
		}]
	},
	6: {
		ID: 6,
		grade: 6,
		sub: "Ontario",
		country: "Canada",
		locationID: "1",
		skills: [{
			ID: 450,
			d: 13e3,
			q: 50,
			t: "Reading Numbers"
		}, {
			ID: 614,
			d: 13e3,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 308,
			d: 13100,
			q: 50,
			t: "Place Value"
		}, {
			ID: 787,
			d: 13100,
			q: 50,
			t: "Place Value"
		}, {
			ID: 789,
			d: 13100,
			q: 50,
			t: "Place Value"
		}, {
			ID: 841,
			d: 13200,
			q: 50,
			t: "Conversion"
		}, {
			ID: 792,
			d: 13200,
			q: 50,
			t: "Place Value"
		}, {
			ID: 830,
			d: 13200,
			q: 50,
			t: "Place Value"
		}, {
			ID: 1106,
			d: 13200,
			q: 50,
			t: "Conversion"
		}, {
			ID: 309,
			d: 13200,
			q: 50,
			t: "Place Value"
		}, {
			ID: 327,
			d: 13200,
			q: 50,
			t: "Conversion"
		}, {
			ID: 336,
			d: 13200,
			q: 50,
			t: "Decimals: Place Value"
		}, {
			ID: 337,
			d: 13200,
			q: 50,
			t: "Decimals: Place Value"
		}, {
			ID: 373,
			d: 13200,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 374,
			d: 13300,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 375,
			d: 13300,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 376,
			d: 13300,
			q: 50,
			t: "Measurement"
		}, {
			ID: 372,
			d: 13300,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 1073,
			d: 13300,
			q: 50,
			t: "Place Value"
		}, {
			ID: 1032,
			d: 13300,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1109,
			d: 13300,
			q: 50,
			t: "Decimals: Represent"
		}, {
			ID: 791,
			d: 13300,
			q: 50,
			t: "Place Value"
		}, {
			ID: 567,
			d: 13300,
			q: 50,
			t: "Rounding"
		}, {
			ID: 790,
			d: 13300,
			q: 50,
			t: "Place Value"
		}, {
			ID: 788,
			d: 13400,
			q: 50,
			t: "Place Value"
		}, {
			ID: 1126,
			d: 13400,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1127,
			d: 13400,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1076,
			d: 13400,
			q: 50,
			t: "Decimals: Comparing"
		}, {
			ID: 1012,
			d: 13400,
			q: 18,
			t: "3D Shapes"
		}, {
			ID: 615,
			d: 13400,
			q: 30,
			t: "Data Relationships"
		}, {
			ID: 465,
			d: 13400,
			q: 50,
			t: "Decimals: Comparing"
		}, {
			ID: 466,
			d: 13400,
			q: 50,
			t: "Decimals: Comparing"
		}, {
			ID: 369,
			d: 13400,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 367,
			d: 13400,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 385,
			d: 13500,
			q: 50,
			t: "3D Shapes"
		}, {
			ID: 312,
			d: 13500,
			q: 50,
			t: "Decimals"
		}, {
			ID: 313,
			d: 13500,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1089,
			d: 13500,
			q: 48,
			t: "Place Value"
		}, {
			ID: 966,
			d: 13500,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 626,
			d: 13500,
			q: 50,
			t: "Conversion"
		}, {
			ID: 625,
			d: 13500,
			q: 50,
			t: "Conversion"
		}, {
			ID: 623,
			d: 13500,
			q: 50,
			t: "Conversion"
		}, {
			ID: 968,
			d: 13600,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 310,
			d: 13600,
			q: 50,
			t: "Addition to 1,000,000"
		}, {
			ID: 288,
			d: 13600,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 366,
			d: 13600,
			q: 50,
			t: "3D Shapes"
		}, {
			ID: 289,
			d: 13700,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 311,
			d: 13700,
			q: 50,
			t: "Subtraction to 1,000,000"
		}, {
			ID: 321,
			d: 13800,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 969,
			d: 13800,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 1017,
			d: 13800,
			q: 20,
			t: "3D Shapes"
		}, {
			ID: 970,
			d: 13800,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 1013,
			d: 13800,
			q: 20,
			t: "3D Shapes"
		}, {
			ID: 971,
			d: 13900,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 972,
			d: 13900,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 318,
			d: 13900,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 387,
			d: 13900,
			q: 20,
			t: "3D Shapes"
		}, {
			ID: 561,
			d: 14e3,
			q: 50,
			t: "Decimals: Represent"
		}, {
			ID: 386,
			d: 14e3,
			q: 20,
			t: "3D Shapes"
		}, {
			ID: 565,
			d: 14e3,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 368,
			d: 14e3,
			q: 50,
			t: "Angles"
		}, {
			ID: 324,
			d: 14e3,
			q: 50,
			t: "Unit Rates"
		}, {
			ID: 325,
			d: 14e3,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 319,
			d: 14e3,
			q: 50,
			t: "Division"
		}, {
			ID: 330,
			d: 14e3,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 564,
			d: 14100,
			q: 50,
			t: "Division"
		}, {
			ID: 617,
			d: 14100,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 953,
			d: 14100,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 964,
			d: 14200,
			q: 50,
			t: "Division"
		}, {
			ID: 829,
			d: 14200,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 810,
			d: 14300,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 961,
			d: 14300,
			q: 50,
			t: "Division"
		}, {
			ID: 965,
			d: 14400,
			q: 50,
			t: "Division"
		}, {
			ID: 286,
			d: 14400,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 335,
			d: 14500,
			q: 50,
			t: "Patterning"
		}, {
			ID: 328,
			d: 14500,
			q: 40,
			t: "Patterning"
		}, {
			ID: 963,
			d: 14500,
			q: 50,
			t: "Division"
		}, {
			ID: 934,
			d: 14500,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1052,
			d: 14500,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1129,
			d: 14500,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1130,
			d: 14600,
			q: 50,
			t: "Geometry"
		}, {
			ID: 361,
			d: 14600,
			q: 40,
			t: "Patterning"
		}, {
			ID: 613,
			d: 14600,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 334,
			d: 14600,
			q: 50,
			t: "Geometry"
		}, {
			ID: 290,
			d: 14600,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 303,
			d: 14600,
			q: 50,
			t: "Decimals: Mixed Operations"
		}, {
			ID: 291,
			d: 14600,
			q: 50,
			t: "Division"
		}, {
			ID: 305,
			d: 14700,
			q: 50,
			t: "Decimals: Multiplication"
		}, {
			ID: 362,
			d: 14700,
			q: 50,
			t: "Patterning"
		}, {
			ID: 1157,
			d: 14700,
			q: 50,
			t: "Patterning"
		}, {
			ID: 1158,
			d: 14700,
			q: 50,
			t: "Patterning"
		}, {
			ID: 621,
			d: 14700,
			q: 50,
			t: "Patterning"
		}, {
			ID: 620,
			d: 14800,
			q: 50,
			t: "Patterning"
		}, {
			ID: 1161,
			d: 14800,
			q: 50,
			t: "Patterning"
		}, {
			ID: 1172,
			d: 14800,
			q: 50,
			t: "Patterning"
		}, {
			ID: 360,
			d: 14800,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 377,
			d: 14800,
			q: 50,
			t: "Probability"
		}, {
			ID: 560,
			d: 14800,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 306,
			d: 14800,
			q: 50,
			t: "Decimals: Division"
		}, {
			ID: 316,
			d: 14800,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 356,
			d: 14900,
			q: 50,
			t: "Probability"
		}, {
			ID: 331,
			d: 14900,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 332,
			d: 14900,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 622,
			d: 14900,
			q: 50,
			t: "Patterning"
		}, {
			ID: 894,
			d: 14900,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 624,
			d: 15e3,
			q: 40,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 333,
			d: 15e3,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 353,
			d: 15e3,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 354,
			d: 15e3,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 339,
			d: 15e3,
			q: 48,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 379,
			d: 15e3,
			q: 50,
			t: "Probability"
		}, {
			ID: 619,
			d: 15e3,
			q: 50,
			t: "Probability"
		}, {
			ID: 618,
			d: 15e3,
			q: 50,
			t: "Probability"
		}, {
			ID: 363,
			d: 15e3,
			q: 50,
			t: "Unit Rates"
		}, {
			ID: 364,
			d: 15100,
			q: 50,
			t: "Money"
		}, {
			ID: 378,
			d: 15100,
			q: 50,
			t: "Probability"
		}, {
			ID: 355,
			d: 15100,
			q: 50,
			t: "Probability"
		}, {
			ID: 315,
			d: 15100,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 314,
			d: 15100,
			q: 50,
			t: "Addition"
		}, {
			ID: 287,
			d: 15200,
			q: 50,
			t: "Reading Numbers"
		}, {
			ID: 285,
			d: 15300,
			q: 50,
			t: "Factors"
		}, {
			ID: 357,
			d: 17e3,
			q: 50,
			t: "Probability"
		}]
	},
	8: {
		ID: 8,
		grade: 1,
		sub: "Common Core",
		country: "United States",
		locationID: "2",
		skills: [{
			ID: 92,
			d: 100,
			q: 20,
			t: "Reading Numbers"
		}, {
			ID: 93,
			d: 100,
			q: 20,
			t: "Reading Numbers"
		}, {
			ID: 231,
			d: 200,
			q: 30,
			t: "Counting"
		}, {
			ID: 227,
			d: 300,
			q: 33,
			t: "Addition to 20"
		}, {
			ID: 225,
			d: 300,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 1259,
			d: 300,
			q: 50,
			t: "Counting"
		}, {
			ID: 1264,
			d: 300,
			q: 40,
			t: "Counting"
		}, {
			ID: 1273,
			d: 300,
			q: 50,
			t: "Place Value"
		}, {
			ID: 1198,
			d: 400,
			q: 50,
			t: "Counting"
		}, {
			ID: 1204,
			d: 400,
			q: 50,
			t: "Place Value"
		}, {
			ID: 1203,
			d: 400,
			q: 50,
			t: "Counting"
		}, {
			ID: 224,
			d: 500,
			q: 40,
			t: "2D Shapes"
		}, {
			ID: 1205,
			d: 500,
			q: 50,
			t: "Place Value"
		}, {
			ID: 1265,
			d: 500,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1256,
			d: 500,
			q: 50,
			t: "Counting"
		}, {
			ID: 1268,
			d: 600,
			q: 50,
			t: "Counting"
		}, {
			ID: 1269,
			d: 600,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 136,
			d: 600,
			q: 45,
			t: "Addition to 20"
		}, {
			ID: 197,
			d: 600,
			q: 24,
			t: "2D Shapes"
		}, {
			ID: 545,
			d: 600,
			q: 50,
			t: "Place Value"
		}, {
			ID: 546,
			d: 600,
			q: 42,
			t: "Addition to 20"
		}, {
			ID: 1272,
			d: 700,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1199,
			d: 700,
			q: 50,
			t: "Counting"
		}, {
			ID: 1200,
			d: 800,
			q: 50,
			t: "Counting"
		}, {
			ID: 1274,
			d: 800,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 438,
			d: 800,
			q: 50,
			t: "Ordering Numbers"
		}, {
			ID: 238,
			d: 800,
			q: 50,
			t: "Composing Numbers"
		}, {
			ID: 215,
			d: 800,
			q: 40,
			t: "Data Relationships"
		}, {
			ID: 196,
			d: 800,
			q: 20,
			t: "2D Shapes"
		}, {
			ID: 98,
			d: 900,
			q: 39,
			t: "Counting"
		}, {
			ID: 1185,
			d: 900,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1201,
			d: 900,
			q: 50,
			t: "Counting"
		}, {
			ID: 1267,
			d: 1e3,
			q: 50,
			t: "Counting"
		}, {
			ID: 1187,
			d: 1e3,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 388,
			d: 1e3,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 543,
			d: 1e3,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 107,
			d: 1e3,
			q: 59,
			t: "Composing Numbers"
		}, {
			ID: 89,
			d: 1e3,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 90,
			d: 1e3,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 91,
			d: 1e3,
			q: 50,
			t: "Ordering Numbers"
		}, {
			ID: 198,
			d: 1e3,
			q: 48,
			t: "2D Shapes"
		}, {
			ID: 229,
			d: 1e3,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 389,
			d: 1100,
			q: 50,
			t: "Counting"
		}, {
			ID: 148,
			d: 1100,
			q: 50,
			t: "Ordering Numbers"
		}, {
			ID: 149,
			d: 1100,
			q: 50,
			t: "Ordering Numbers"
		}, {
			ID: 237,
			d: 1200,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 232,
			d: 1200,
			q: 20,
			t: "Subtraction to 20"
		}, {
			ID: 668,
			d: 1200,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 439,
			d: 1200,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 440,
			d: 1200,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 1208,
			d: 1200,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 669,
			d: 1200,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 1275,
			d: 1200,
			q: 44,
			t: "Subtraction to 100"
		}, {
			ID: 1266,
			d: 1200,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 1220,
			d: 1200,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 1271,
			d: 1300,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 436,
			d: 1300,
			q: 50,
			t: "Ordering Numbers"
		}, {
			ID: 547,
			d: 1300,
			q: 44,
			t: "Subtraction to 100"
		}, {
			ID: 437,
			d: 1300,
			q: 50,
			t: "Ordering Numbers"
		}, {
			ID: 49,
			d: 1300,
			q: 45,
			t: "Subtraction to 20"
		}, {
			ID: 138,
			d: 1400,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 140,
			d: 1400,
			q: 48,
			t: "Mixed Operations"
		}, {
			ID: 111,
			d: 1400,
			q: 17,
			t: "Mixed Operations"
		}, {
			ID: 137,
			d: 1400,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 391,
			d: 1500,
			q: 40,
			t: "Comparing Numbers"
		}, {
			ID: 108,
			d: 1500,
			q: 60,
			t: "Composing Numbers"
		}, {
			ID: 1186,
			d: 1500,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 1188,
			d: 1500,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 1207,
			d: 1500,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 1212,
			d: 1600,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1251,
			d: 1600,
			q: 50,
			t: "Patterning"
		}, {
			ID: 1195,
			d: 1600,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1193,
			d: 1600,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 86,
			d: 1600,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 230,
			d: 1600,
			q: 50,
			t: "Composing Numbers"
		}, {
			ID: 87,
			d: 1700,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 1194,
			d: 1700,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1181,
			d: 1700,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1191,
			d: 1700,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1228,
			d: 1700,
			q: 46,
			t: "Place Value"
		}, {
			ID: 1210,
			d: 1700,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1247,
			d: 1700,
			q: 16,
			t: "Fractions"
		}, {
			ID: 1249,
			d: 1700,
			q: 22,
			t: "Fractions"
		}, {
			ID: 1254,
			d: 1800,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1182,
			d: 1800,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 1209,
			d: 1800,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 4,
			d: 1800,
			q: 90,
			t: "Addition to 20"
		}, {
			ID: 60,
			d: 1800,
			q: 50,
			t: "Composing Numbers"
		}, {
			ID: 228,
			d: 1800,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 239,
			d: 1900,
			q: 50,
			t: "Composing Numbers"
		}, {
			ID: 83,
			d: 1900,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 548,
			d: 1900,
			q: 50,
			t: "Place Value"
		}, {
			ID: 1230,
			d: 1900,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 1229,
			d: 1900,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 470,
			d: 2e3,
			q: 50,
			t: "Time"
		}, {
			ID: 475,
			d: 2e3,
			q: 24,
			t: "Time"
		}, {
			ID: 393,
			d: 2e3,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 473,
			d: 2e3,
			q: 50,
			t: "Time"
		}, {
			ID: 392,
			d: 2e3,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 670,
			d: 2e3,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 671,
			d: 2e3,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 1183,
			d: 2e3,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1184,
			d: 2e3,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 110,
			d: 2e3,
			q: 50,
			t: "Composing Numbers"
		}, {
			ID: 1234,
			d: 2100,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1223,
			d: 2100,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 1224,
			d: 2200,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 1227,
			d: 2400,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 82,
			d: 2800,
			q: 50,
			t: "Addition to 20"
		}]
	},
	9: {
		ID: 9,
		grade: 2,
		sub: "Common Core",
		country: "United States",
		locationID: "2",
		skills: [{
			ID: 213,
			d: 0,
			q: 25,
			t: "Measurement"
		}, {
			ID: 1189,
			d: 2600,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1252,
			d: 2600,
			q: 50,
			t: "Reading Numbers"
		}, {
			ID: 84,
			d: 2700,
			q: 50,
			t: "Reading Numbers"
		}, {
			ID: 86,
			d: 2700,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1240,
			d: 2700,
			q: 50,
			t: "Reading Numbers"
		}, {
			ID: 82,
			d: 2800,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 454,
			d: 2800,
			q: 30,
			t: "2D Shapes"
		}, {
			ID: 158,
			d: 2900,
			q: 50,
			t: "Counting"
		}, {
			ID: 432,
			d: 2900,
			q: 50,
			t: "Counting"
		}, {
			ID: 177,
			d: 3e3,
			q: 50,
			t: "Counting"
		}, {
			ID: 457,
			d: 3e3,
			q: 40,
			t: "2D Shapes"
		}, {
			ID: 458,
			d: 3e3,
			q: 35,
			t: "2D Shapes"
		}, {
			ID: 1255,
			d: 3200,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 83,
			d: 3400,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 461,
			d: 3400,
			q: 50,
			t: "Counting"
		}, {
			ID: 1190,
			d: 3400,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 52,
			d: 3600,
			q: 45,
			t: "Subtraction to 100"
		}, {
			ID: 53,
			d: 3600,
			q: 45,
			t: "Subtraction to 100"
		}, {
			ID: 87,
			d: 3600,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 60,
			d: 3700,
			q: 50,
			t: "Composing Numbers"
		}, {
			ID: 676,
			d: 3800,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 648,
			d: 3800,
			q: 12,
			t: "Money"
		}, {
			ID: 240,
			d: 3800,
			q: 48,
			t: "2D Shapes"
		}, {
			ID: 110,
			d: 3800,
			q: 50,
			t: "Composing Numbers"
		}, {
			ID: 677,
			d: 3800,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 1232,
			d: 3800,
			q: 50,
			t: "Place Value"
		}, {
			ID: 1231,
			d: 3800,
			q: 50,
			t: "Place Value"
		}, {
			ID: 443,
			d: 3900,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 674,
			d: 3900,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 444,
			d: 3900,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 675,
			d: 3900,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 552,
			d: 3900,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 185,
			d: 3900,
			q: 50,
			t: "Place Value"
		}, {
			ID: 459,
			d: 4e3,
			q: 40,
			t: "2D Shapes"
		}, {
			ID: 186,
			d: 4e3,
			q: 50,
			t: "Place Value"
		}, {
			ID: 673,
			d: 4e3,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 127,
			d: 4e3,
			q: 25,
			t: "Conversion"
		}, {
			ID: 672,
			d: 4e3,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 728,
			d: 4e3,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 1280,
			d: 4e3,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 1270,
			d: 4100,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 1278,
			d: 4100,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 1241,
			d: 4100,
			q: 50,
			t: "Reading Numbers"
		}, {
			ID: 154,
			d: 4200,
			q: 50,
			t: "Composing Numbers"
		}, {
			ID: 471,
			d: 4300,
			q: 50,
			t: "Time"
		}, {
			ID: 474,
			d: 4300,
			q: 50,
			t: "Time"
		}, {
			ID: 1218,
			d: 4300,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 647,
			d: 4300,
			q: 50,
			t: "Money"
		}, {
			ID: 646,
			d: 4400,
			q: 50,
			t: "Money"
		}, {
			ID: 476,
			d: 4400,
			q: 50,
			t: "Time"
		}, {
			ID: 649,
			d: 4400,
			q: 50,
			t: "Money"
		}, {
			ID: 1217,
			d: 4600,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 1253,
			d: 4700,
			q: 48,
			t: "Addition to 100"
		}, {
			ID: 165,
			d: 4700,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 166,
			d: 4800,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 1213,
			d: 4900,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1214,
			d: 4900,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1215,
			d: 4900,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1216,
			d: 4900,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1211,
			d: 5e3,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 1219,
			d: 5100,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 1192,
			d: 5100,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 1202,
			d: 5100,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 1197,
			d: 5200,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 1206,
			d: 5200,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 1221,
			d: 5200,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 1222,
			d: 5200,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 1281,
			d: 5200,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1225,
			d: 5400,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 1233,
			d: 5500,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 1244,
			d: 5600,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 1237,
			d: 5600,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 1239,
			d: 5700,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 1245,
			d: 5700,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 1242,
			d: 5700,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 1236,
			d: 5700,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 1226,
			d: 5700,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 1246,
			d: 5800,
			q: 23,
			t: "Geometry"
		}, {
			ID: 1248,
			d: 5800,
			q: 30,
			t: "Geometry"
		}, {
			ID: 1235,
			d: 6e3,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1243,
			d: 6e3,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 417,
			d: 9e3,
			q: 50,
			t: "Addition to 1000"
		}]
	},
	10: {
		ID: 10,
		grade: 3,
		sub: "Common Core",
		country: "United States",
		locationID: "2",
		skills: [{
			ID: 713,
			d: 3900,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 555,
			d: 6500,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 31,
			d: 6500,
			q: 21,
			t: "Multiplication Facts"
		}, {
			ID: 32,
			d: 6500,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 33,
			d: 6500,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 34,
			d: 6500,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 35,
			d: 6500,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 36,
			d: 6500,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 75,
			d: 6500,
			q: 50,
			t: "Patterning"
		}, {
			ID: 210,
			d: 6500,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 253,
			d: 6500,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 252,
			d: 6500,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 751,
			d: 6500,
			q: 50,
			t: "Rounding"
		}, {
			ID: 771,
			d: 6500,
			q: 45,
			t: "2D Shapes"
		}, {
			ID: 777,
			d: 6600,
			q: 40,
			t: "Addition to 1000"
		}, {
			ID: 256,
			d: 6600,
			q: 45,
			t: "2D Shapes"
		}, {
			ID: 146,
			d: 6600,
			q: 50,
			t: "Rounding"
		}, {
			ID: 37,
			d: 6600,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 38,
			d: 6600,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 39,
			d: 6600,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 40,
			d: 6600,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 597,
			d: 6600,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 602,
			d: 6600,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 598,
			d: 6600,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 603,
			d: 6600,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 595,
			d: 6700,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 596,
			d: 6700,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 714,
			d: 6700,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 726,
			d: 6700,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 733,
			d: 6700,
			q: 50,
			t: "Patterning"
		}, {
			ID: 77,
			d: 6700,
			q: 56,
			t: "Patterning"
		}, {
			ID: 257,
			d: 6700,
			q: 43,
			t: "2D Shapes"
		}, {
			ID: 764,
			d: 6700,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 772,
			d: 6700,
			q: 45,
			t: "Multiplication"
		}, {
			ID: 752,
			d: 6700,
			q: 50,
			t: "Rounding"
		}, {
			ID: 756,
			d: 6700,
			q: 49,
			t: "Multiplication"
		}, {
			ID: 762,
			d: 6700,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 759,
			d: 6800,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 778,
			d: 6800,
			q: 40,
			t: "Subtraction to 1000"
		}, {
			ID: 779,
			d: 6800,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 1095,
			d: 6800,
			q: 50,
			t: "Patterning"
		}, {
			ID: 271,
			d: 6800,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 25,
			d: 6800,
			q: 18,
			t: "Division Facts"
		}, {
			ID: 26,
			d: 6800,
			q: 18,
			t: "Division Facts"
		}, {
			ID: 27,
			d: 6800,
			q: 18,
			t: "Division Facts"
		}, {
			ID: 712,
			d: 6800,
			q: 48,
			t: "Patterning"
		}, {
			ID: 704,
			d: 6800,
			q: 45,
			t: "Multiplication"
		}, {
			ID: 556,
			d: 6800,
			q: 50,
			t: "Rounding"
		}, {
			ID: 716,
			d: 6900,
			q: 50,
			t: "Measurement"
		}, {
			ID: 28,
			d: 6900,
			q: 18,
			t: "Division Facts"
		}, {
			ID: 29,
			d: 6900,
			q: 9,
			t: "Division Facts"
		}, {
			ID: 76,
			d: 6900,
			q: 56,
			t: "Patterning"
		}, {
			ID: 115,
			d: 6900,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 174,
			d: 6900,
			q: 50,
			t: "Patterning"
		}, {
			ID: 781,
			d: 6900,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 763,
			d: 6900,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 760,
			d: 6900,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 758,
			d: 7e3,
			q: 49,
			t: "Division"
		}, {
			ID: 753,
			d: 7e3,
			q: 32,
			t: "Fractions: Represent"
		}, {
			ID: 754,
			d: 7e3,
			q: 50,
			t: "Patterning"
		}, {
			ID: 773,
			d: 7e3,
			q: 45,
			t: "Division"
		}, {
			ID: 775,
			d: 7e3,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 770,
			d: 7e3,
			q: 50,
			t: "Area"
		}, {
			ID: 785,
			d: 7e3,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 1094,
			d: 7e3,
			q: 50,
			t: "Patterning"
		}, {
			ID: 462,
			d: 7e3,
			q: 40,
			t: "Multiplication"
		}, {
			ID: 705,
			d: 7e3,
			q: 44,
			t: "Division"
		}, {
			ID: 706,
			d: 7e3,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 557,
			d: 7e3,
			q: 44,
			t: "Fractions: Represent"
		}, {
			ID: 707,
			d: 7e3,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 554,
			d: 7100,
			q: 32,
			t: "Fractions: Represent"
		}, {
			ID: 116,
			d: 7100,
			q: 50,
			t: "Division"
		}, {
			ID: 803,
			d: 7100,
			q: 50,
			t: "Area"
		}, {
			ID: 782,
			d: 7100,
			q: 50,
			t: "Division"
		}, {
			ID: 769,
			d: 7100,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 780,
			d: 7100,
			q: 50,
			t: "Measurement"
		}, {
			ID: 761,
			d: 7100,
			q: 50,
			t: "Division"
		}, {
			ID: 735,
			d: 7200,
			q: 50,
			t: "Patterning"
		}, {
			ID: 736,
			d: 7200,
			q: 50,
			t: "Patterning"
		}, {
			ID: 783,
			d: 7200,
			q: 49,
			t: "Mixed Operations"
		}, {
			ID: 776,
			d: 7200,
			q: 50,
			t: "Division"
		}, {
			ID: 463,
			d: 7200,
			q: 45,
			t: "Division"
		}, {
			ID: 175,
			d: 7200,
			q: 50,
			t: "Patterning"
		}, {
			ID: 183,
			d: 7200,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 315,
			d: 7200,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 708,
			d: 7200,
			q: 50,
			t: "Division"
		}, {
			ID: 709,
			d: 7200,
			q: 50,
			t: "Division"
		}, {
			ID: 711,
			d: 7200,
			q: 48,
			t: "Multiplication"
		}, {
			ID: 715,
			d: 7200,
			q: 50,
			t: "Fractions: Represent"
		}, {
			ID: 718,
			d: 7200,
			q: 50,
			t: "Fractions: Represent"
		}, {
			ID: 722,
			d: 7200,
			q: 45,
			t: "Fractions: Represent"
		}, {
			ID: 184,
			d: 7300,
			q: 50,
			t: "Patterning"
		}, {
			ID: 1027,
			d: 7300,
			q: 50,
			t: "Fractions: Represent"
		}, {
			ID: 710,
			d: 7300,
			q: 49,
			t: "Mixed Operations"
		}, {
			ID: 1096,
			d: 7300,
			q: 50,
			t: "Patterning"
		}, {
			ID: 801,
			d: 7400,
			q: 48,
			t: "Measurement"
		}, {
			ID: 802,
			d: 7400,
			q: 40,
			t: "Measurement"
		}, {
			ID: 1279,
			d: 7400,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 757,
			d: 7400,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 784,
			d: 7400,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 767,
			d: 7400,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 160,
			d: 7400,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 734,
			d: 7400,
			q: 33,
			t: "Fractions: Comparing"
		}, {
			ID: 282,
			d: 7400,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 472,
			d: 7500,
			q: 50,
			t: "Time"
		}, {
			ID: 702,
			d: 7500,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 281,
			d: 7500,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 755,
			d: 7500,
			q: 50,
			t: "Measurement"
		}, {
			ID: 786,
			d: 7500,
			q: 50,
			t: "Measurement"
		}, {
			ID: 1104,
			d: 7500,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 1105,
			d: 7500,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 1106,
			d: 7600,
			q: 50,
			t: "Conversion"
		}, {
			ID: 421,
			d: 7600,
			q: 50,
			t: "Time"
		}, {
			ID: 723,
			d: 7600,
			q: 39,
			t: "Fractions: Equivalent"
		}, {
			ID: 719,
			d: 7600,
			q: 42,
			t: "Fractions: Equivalent"
		}, {
			ID: 720,
			d: 7600,
			q: 42,
			t: "Fractions: Equivalent"
		}, {
			ID: 730,
			d: 7700,
			q: 50,
			t: "Fractions: Represent"
		}, {
			ID: 161,
			d: 7700,
			q: 50,
			t: "Time"
		}, {
			ID: 1180,
			d: 7700,
			q: 50,
			t: "Fractions: Equivalent"
		}, {
			ID: 765,
			d: 7800,
			q: 39,
			t: "Fractions: Equivalent"
		}, {
			ID: 724,
			d: 7800,
			q: 39,
			t: "Fractions: Equivalent"
		}, {
			ID: 766,
			d: 7900,
			q: 39,
			t: "Fractions: Equivalent"
		}, {
			ID: 1102,
			d: 7900,
			q: 50,
			t: "Fractions: Equivalent"
		}, {
			ID: 1103,
			d: 8e3,
			q: 49,
			t: "Fractions: Equivalent"
		}, {
			ID: 327,
			d: 10400,
			q: 50,
			t: "Conversion"
		}]
	},
	11: {
		ID: 11,
		grade: 4,
		sub: "Common Core",
		country: "United States",
		locationID: "2",
		skills: [{
			ID: 165,
			d: 4700,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 721,
			d: 7800,
			q: 42,
			t: "Fractions: Equivalent"
		}, {
			ID: 650,
			d: 8100,
			q: 50,
			t: "Money"
		}, {
			ID: 789,
			d: 8100,
			q: 50,
			t: "Place Value"
		}, {
			ID: 449,
			d: 8100,
			q: 50,
			t: "Reading Numbers"
		}, {
			ID: 793,
			d: 8200,
			q: 50,
			t: "Rounding"
		}, {
			ID: 787,
			d: 8200,
			q: 50,
			t: "Place Value"
		}, {
			ID: 164,
			d: 8200,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 182,
			d: 8200,
			q: 50,
			t: "Money"
		}, {
			ID: 278,
			d: 8300,
			q: 50,
			t: "Money"
		}, {
			ID: 794,
			d: 8300,
			q: 50,
			t: "Rounding"
		}, {
			ID: 831,
			d: 8300,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 847,
			d: 8300,
			q: 50,
			t: "Place Value"
		}, {
			ID: 796,
			d: 8400,
			q: 50,
			t: "Rounding"
		}, {
			ID: 788,
			d: 8400,
			q: 50,
			t: "Place Value"
		}, {
			ID: 241,
			d: 8400,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 246,
			d: 8500,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 795,
			d: 8500,
			q: 50,
			t: "Rounding"
		}, {
			ID: 830,
			d: 8500,
			q: 50,
			t: "Place Value"
		}, {
			ID: 832,
			d: 8600,
			q: 50,
			t: "Addition to 1,000,000"
		}, {
			ID: 1015,
			d: 8600,
			q: 50,
			t: "Rounding"
		}, {
			ID: 790,
			d: 8600,
			q: 50,
			t: "Place Value"
		}, {
			ID: 791,
			d: 8600,
			q: 50,
			t: "Place Value"
		}, {
			ID: 166,
			d: 8600,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 68,
			d: 8600,
			q: 50,
			t: "Rounding"
		}, {
			ID: 792,
			d: 8700,
			q: 50,
			t: "Place Value"
		}, {
			ID: 797,
			d: 8700,
			q: 50,
			t: "Rounding"
		}, {
			ID: 834,
			d: 8700,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 242,
			d: 8800,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 250,
			d: 8800,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 251,
			d: 8900,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 247,
			d: 8900,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 243,
			d: 8900,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 1175,
			d: 8900,
			q: 50,
			t: "Angles"
		}, {
			ID: 310,
			d: 9e3,
			q: 50,
			t: "Addition to 1,000,000"
		}, {
			ID: 248,
			d: 9e3,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 417,
			d: 9e3,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 1050,
			d: 9e3,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 833,
			d: 9100,
			q: 50,
			t: "Addition to 1,000,000"
		}, {
			ID: 249,
			d: 9100,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 1054,
			d: 9100,
			q: 35,
			t: "2D Shapes"
		}, {
			ID: 255,
			d: 9200,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 835,
			d: 9200,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 836,
			d: 9300,
			q: 50,
			t: "Subtraction to 1,000,000"
		}, {
			ID: 325,
			d: 9300,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 311,
			d: 9400,
			q: 50,
			t: "Subtraction to 1,000,000"
		}, {
			ID: 409,
			d: 9500,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 989,
			d: 9500,
			q: 50,
			t: "Measurement"
		}, {
			ID: 990,
			d: 9600,
			q: 50,
			t: "Measurement"
		}, {
			ID: 962,
			d: 9600,
			q: 50,
			t: "Factors"
		}, {
			ID: 879,
			d: 9600,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 987,
			d: 9700,
			q: 50,
			t: "Factors"
		}, {
			ID: 179,
			d: 9700,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 279,
			d: 9800,
			q: 50,
			t: "Patterning"
		}, {
			ID: 838,
			d: 9800,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 1066,
			d: 9900,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 287,
			d: 9900,
			q: 50,
			t: "Reading Numbers"
		}, {
			ID: 163,
			d: 9900,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 268,
			d: 9900,
			q: 50,
			t: "Patterning"
		}, {
			ID: 285,
			d: 1e4,
			q: 50,
			t: "Factors"
		}, {
			ID: 583,
			d: 1e4,
			q: 50,
			t: "Patterning"
		}, {
			ID: 837,
			d: 1e4,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 848,
			d: 1e4,
			q: 50,
			t: "Division"
		}, {
			ID: 959,
			d: 10100,
			q: 50,
			t: "Patterning"
		}, {
			ID: 565,
			d: 10100,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 207,
			d: 10100,
			q: 50,
			t: "Division"
		}, {
			ID: 270,
			d: 10100,
			q: 50,
			t: "Patterning"
		}, {
			ID: 462,
			d: 10200,
			q: 40,
			t: "Multiplication"
		}, {
			ID: 960,
			d: 10200,
			q: 50,
			t: "Patterning"
		}, {
			ID: 849,
			d: 10200,
			q: 50,
			t: "Division"
		}, {
			ID: 839,
			d: 10300,
			q: 50,
			t: "Conversion"
		}, {
			ID: 841,
			d: 10300,
			q: 50,
			t: "Conversion"
		}, {
			ID: 587,
			d: 10300,
			q: 50,
			t: "Patterning"
		}, {
			ID: 162,
			d: 10300,
			q: 50,
			t: "Division"
		}, {
			ID: 1067,
			d: 10300,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1068,
			d: 10400,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 327,
			d: 10400,
			q: 50,
			t: "Conversion"
		}, {
			ID: 586,
			d: 10400,
			q: 50,
			t: "Patterning"
		}, {
			ID: 850,
			d: 10400,
			q: 50,
			t: "Division"
		}, {
			ID: 1034,
			d: 10400,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1032,
			d: 10400,
			q: 50,
			t: "Conversion"
		}, {
			ID: 851,
			d: 10500,
			q: 50,
			t: "Division"
		}, {
			ID: 843,
			d: 10500,
			q: 50,
			t: "Conversion"
		}, {
			ID: 844,
			d: 10500,
			q: 50,
			t: "Conversion"
		}, {
			ID: 840,
			d: 10500,
			q: 50,
			t: "Conversion"
		}, {
			ID: 584,
			d: 10500,
			q: 50,
			t: "Patterning"
		}, {
			ID: 281,
			d: 10500,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 564,
			d: 10600,
			q: 50,
			t: "Division"
		}, {
			ID: 1033,
			d: 10600,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1035,
			d: 10600,
			q: 32,
			t: "Time"
		}, {
			ID: 934,
			d: 10600,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1141,
			d: 10600,
			q: 25,
			t: "Measurement"
		}, {
			ID: 974,
			d: 10700,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1028,
			d: 10700,
			q: 50,
			t: "Patterning"
		}, {
			ID: 1029,
			d: 10700,
			q: 50,
			t: "Patterning"
		}, {
			ID: 991,
			d: 10700,
			q: 36,
			t: "Measurement"
		}, {
			ID: 994,
			d: 10700,
			q: 20,
			t: "Measurement"
		}, {
			ID: 846,
			d: 10700,
			q: 50,
			t: "Conversion"
		}, {
			ID: 463,
			d: 10700,
			q: 45,
			t: "Division"
		}, {
			ID: 283,
			d: 10800,
			q: 46,
			t: "Time"
		}, {
			ID: 1030,
			d: 10800,
			q: 50,
			t: "Patterning"
		}, {
			ID: 967,
			d: 10800,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1153,
			d: 10800,
			q: 36,
			t: "Measurement"
		}, {
			ID: 1031,
			d: 10900,
			q: 50,
			t: "Patterning"
		}, {
			ID: 282,
			d: 10900,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 852,
			d: 11e3,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1178,
			d: 11e3,
			q: 50,
			t: "Fractions: Equivalent"
		}, {
			ID: 892,
			d: 11100,
			q: 50,
			t: "Fractions: Equivalent"
		}, {
			ID: 853,
			d: 11100,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 890,
			d: 11200,
			q: 50,
			t: "Fractions: Equivalent"
		}, {
			ID: 563,
			d: 11300,
			q: 18,
			t: "Fractions: Equivalent"
		}, {
			ID: 46,
			d: 11400,
			q: 50,
			t: "Fractions: Equivalent"
		}, {
			ID: 561,
			d: 11500,
			q: 50,
			t: "Decimals: Represent"
		}, {
			ID: 894,
			d: 11500,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 1014,
			d: 11600,
			q: 50,
			t: "Fractions and Decimals"
		}, {
			ID: 316,
			d: 11600,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 560,
			d: 11700,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 952,
			d: 11700,
			q: 50,
			t: "Fractions: Represent"
		}, {
			ID: 939,
			d: 11800,
			q: 50,
			t: "Fractions: Represent"
		}, {
			ID: 1011,
			d: 11800,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 900,
			d: 11900,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 106,
			d: 11900,
			q: 50,
			t: "Fractions and Decimals"
		}, {
			ID: 1166,
			d: 11900,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 558,
			d: 12e3,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 798,
			d: 12e3,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 986,
			d: 12e3,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 922,
			d: 12e3,
			q: 50,
			t: "Fractions and Decimals"
		}, {
			ID: 925,
			d: 12100,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 799,
			d: 12100,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 320,
			d: 12100,
			q: 50,
			t: "Fractions and Decimals"
		}, {
			ID: 562,
			d: 12200,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 1016,
			d: 12200,
			q: 50,
			t: "Decimals: Comparing"
		}, {
			ID: 897,
			d: 12300,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 559,
			d: 12300,
			q: 50,
			t: "Decimals: Comparing"
		}, {
			ID: 466,
			d: 12400,
			q: 50,
			t: "Decimals: Comparing"
		}, {
			ID: 465,
			d: 12400,
			q: 50,
			t: "Decimals: Comparing"
		}, {
			ID: 804,
			d: 12400,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 935,
			d: 12400,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 901,
			d: 12400,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 927,
			d: 12500,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 800,
			d: 12500,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 937,
			d: 12600,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 888,
			d: 12700,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 1021,
			d: 12800,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 889,
			d: 12900,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 926,
			d: 13e3,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 908,
			d: 13100,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 891,
			d: 13200,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 899,
			d: 13300,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 929,
			d: 13400,
			q: 50,
			t: "Fractions: Multiplication"
		}]
	},
	12: {
		ID: 12,
		grade: 5,
		sub: "Common Core",
		country: "United States",
		locationID: "2",
		skills: [{
			ID: 233,
			d: 13600,
			q: 48,
			t: "2D Shapes"
		}, {
			ID: 336,
			d: 13600,
			q: 50,
			t: "Decimals: Place Value"
		}, {
			ID: 337,
			d: 13600,
			q: 50,
			t: "Decimals: Place Value"
		}, {
			ID: 240,
			d: 13600,
			q: 48,
			t: "2D Shapes"
		}, {
			ID: 284,
			d: 13600,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 604,
			d: 13700,
			q: 50,
			t: "Decimals: Place Value"
		}, {
			ID: 1074,
			d: 13700,
			q: 50,
			t: "Decimals: Represent"
		}, {
			ID: 1077,
			d: 13700,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1109,
			d: 13800,
			q: 50,
			t: "Decimals: Represent"
		}, {
			ID: 1073,
			d: 13800,
			q: 50,
			t: "Place Value"
		}, {
			ID: 1089,
			d: 13900,
			q: 48,
			t: "Place Value"
		}, {
			ID: 1076,
			d: 14e3,
			q: 50,
			t: "Decimals: Comparing"
		}, {
			ID: 567,
			d: 14100,
			q: 50,
			t: "Rounding"
		}, {
			ID: 566,
			d: 14100,
			q: 50,
			t: "Rounding"
		}, {
			ID: 51,
			d: 14100,
			q: 50,
			t: "Rounding"
		}, {
			ID: 120,
			d: 14200,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 121,
			d: 14200,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 805,
			d: 14300,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 870,
			d: 14300,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 911,
			d: 14300,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 813,
			d: 14400,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 64,
			d: 14400,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 358,
			d: 14400,
			q: 45,
			t: "Mixed Operations"
		}, {
			ID: 65,
			d: 14400,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 359,
			d: 14500,
			q: 45,
			t: "Mixed Operations"
		}, {
			ID: 414,
			d: 14500,
			q: 50,
			t: "Decimals: Mixed Operations"
		}, {
			ID: 871,
			d: 14500,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 1110,
			d: 14500,
			q: 50,
			t: "Rounding"
		}, {
			ID: 814,
			d: 14600,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 821,
			d: 14600,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 799,
			d: 14600,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 808,
			d: 14600,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 798,
			d: 14600,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 815,
			d: 14700,
			q: 50,
			t: "Division"
		}, {
			ID: 806,
			d: 14700,
			q: 50,
			t: "Division"
		}, {
			ID: 1166,
			d: 14700,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 1174,
			d: 14700,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 1091,
			d: 14800,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 1090,
			d: 14800,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 811,
			d: 14800,
			q: 50,
			t: "Division"
		}, {
			ID: 812,
			d: 14800,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 610,
			d: 14800,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 599,
			d: 14800,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 385,
			d: 14900,
			q: 50,
			t: "3D Shapes"
		}, {
			ID: 180,
			d: 14900,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 855,
			d: 14900,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 825,
			d: 14900,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 809,
			d: 14900,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 854,
			d: 14900,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 916,
			d: 14900,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 917,
			d: 14900,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 918,
			d: 14900,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 880,
			d: 15e3,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 874,
			d: 15e3,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 816,
			d: 15e3,
			q: 50,
			t: "Division"
		}, {
			ID: 807,
			d: 15e3,
			q: 50,
			t: "Division"
		}, {
			ID: 62,
			d: 15e3,
			q: 50,
			t: "Decimals: Multiplication"
		}, {
			ID: 63,
			d: 15e3,
			q: 50,
			t: "Decimals: Division"
		}, {
			ID: 303,
			d: 15e3,
			q: 50,
			t: "Decimals: Mixed Operations"
		}, {
			ID: 305,
			d: 15e3,
			q: 50,
			t: "Decimals: Multiplication"
		}, {
			ID: 366,
			d: 15e3,
			q: 50,
			t: "3D Shapes"
		}, {
			ID: 608,
			d: 15e3,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 936,
			d: 15e3,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 953,
			d: 15e3,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 609,
			d: 15100,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 829,
			d: 15100,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 810,
			d: 15100,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 876,
			d: 15200,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 872,
			d: 15200,
			q: 50,
			t: "Decimals: Multiplication"
		}, {
			ID: 909,
			d: 15200,
			q: 50,
			t: "Numerical Expressions"
		}, {
			ID: 881,
			d: 15200,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 606,
			d: 15200,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 286,
			d: 15200,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 124,
			d: 15200,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1118,
			d: 15200,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1122,
			d: 15200,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1123,
			d: 15200,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1092,
			d: 15200,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 1093,
			d: 15200,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 912,
			d: 15200,
			q: 50,
			t: "Decimals: Multiplication"
		}, {
			ID: 914,
			d: 15200,
			q: 50,
			t: "Decimals: Multiplication"
		}, {
			ID: 1052,
			d: 15200,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1173,
			d: 15200,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 1129,
			d: 15200,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1155,
			d: 15200,
			q: 50,
			t: "Measurement"
		}, {
			ID: 1130,
			d: 15300,
			q: 50,
			t: "Geometry"
		}, {
			ID: 915,
			d: 15300,
			q: 50,
			t: "Decimals: Division"
		}, {
			ID: 913,
			d: 15300,
			q: 50,
			t: "Decimals: Division"
		}, {
			ID: 932,
			d: 15300,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 930,
			d: 15300,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 931,
			d: 15300,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 1144,
			d: 15300,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1126,
			d: 15300,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1127,
			d: 15300,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1142,
			d: 15300,
			q: 50,
			t: "Conversion"
		}, {
			ID: 328,
			d: 15300,
			q: 40,
			t: "Patterning"
		}, {
			ID: 334,
			d: 15300,
			q: 50,
			t: "Geometry"
		}, {
			ID: 910,
			d: 15300,
			q: 50,
			t: "Numerical Expressions"
		}, {
			ID: 919,
			d: 15300,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 873,
			d: 15300,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 877,
			d: 15400,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 875,
			d: 15400,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 362,
			d: 15400,
			q: 50,
			t: "Patterning"
		}, {
			ID: 1143,
			d: 15400,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1158,
			d: 15400,
			q: 50,
			t: "Patterning"
		}, {
			ID: 1161,
			d: 15400,
			q: 50,
			t: "Patterning"
		}, {
			ID: 1119,
			d: 15400,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1120,
			d: 15400,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1121,
			d: 15400,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1145,
			d: 15400,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1156,
			d: 15400,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1157,
			d: 15400,
			q: 50,
			t: "Patterning"
		}, {
			ID: 1172,
			d: 15500,
			q: 50,
			t: "Patterning"
		}, {
			ID: 1148,
			d: 15500,
			q: 45,
			t: "Conversion"
		}, {
			ID: 1154,
			d: 15500,
			q: 36,
			t: "Conversion"
		}, {
			ID: 1128,
			d: 15500,
			q: 50,
			t: "Conversion"
		}, {
			ID: 928,
			d: 15600,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 924,
			d: 15600,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 923,
			d: 18400,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 920,
			d: 18500,
			q: 50,
			t: "Fractions: Multiplication"
		}]
	},
	13: {
		ID: 13,
		grade: 6,
		sub: "Common Core",
		country: "United States",
		locationID: "2",
		skills: [{
			ID: 65,
			d: 14400,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 120,
			d: 18600,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 121,
			d: 18600,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 507,
			d: 18600,
			q: 50,
			t: "Rational Numbers: Represent"
		}, {
			ID: 504,
			d: 18600,
			q: 50,
			t: "Factors and Multiples"
		}, {
			ID: 505,
			d: 18600,
			q: 48,
			t: "Factors and Multiples"
		}, {
			ID: 999,
			d: 18600,
			q: 50,
			t: "Rational Numbers: Comparing"
		}, {
			ID: 998,
			d: 18600,
			q: 50,
			t: "Rational Numbers: Represent"
		}, {
			ID: 1005,
			d: 18600,
			q: 50,
			t: "Rational Numbers: Represent"
		}, {
			ID: 1057,
			d: 18600,
			q: 50,
			t: "Geometry"
		}, {
			ID: 973,
			d: 18700,
			q: 50,
			t: "Exponents: Rules"
		}, {
			ID: 535,
			d: 18700,
			q: 50,
			t: "Exponents: Rules"
		}, {
			ID: 536,
			d: 18700,
			q: 50,
			t: "Exponents: Rules"
		}, {
			ID: 966,
			d: 18700,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 499,
			d: 18700,
			q: 40,
			t: "Rational Numbers: Represent"
		}, {
			ID: 500,
			d: 18800,
			q: 50,
			t: "Rational Numbers: Comparing"
		}, {
			ID: 501,
			d: 18800,
			q: 50,
			t: "Rational Numbers: Comparing"
		}, {
			ID: 376,
			d: 18800,
			q: 50,
			t: "Measurement"
		}, {
			ID: 288,
			d: 18800,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 64,
			d: 18800,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 968,
			d: 18800,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 1056,
			d: 18800,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1131,
			d: 18800,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1060,
			d: 18800,
			q: 50,
			t: "Rational Numbers: Comparing"
		}, {
			ID: 1012,
			d: 18900,
			q: 18,
			t: "3D Shapes"
		}, {
			ID: 1045,
			d: 18900,
			q: 18,
			t: "3D Shapes"
		}, {
			ID: 1047,
			d: 18900,
			q: 18,
			t: "3D Shapes"
		}, {
			ID: 1146,
			d: 18900,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1147,
			d: 18900,
			q: 50,
			t: "Geometry"
		}, {
			ID: 964,
			d: 18900,
			q: 50,
			t: "Division"
		}, {
			ID: 969,
			d: 18900,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 971,
			d: 18900,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 972,
			d: 18900,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 289,
			d: 18900,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 503,
			d: 18900,
			q: 50,
			t: "Rational Numbers: Comparing"
		}, {
			ID: 366,
			d: 19e3,
			q: 50,
			t: "3D Shapes"
		}, {
			ID: 510,
			d: 19e3,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 334,
			d: 19e3,
			q: 50,
			t: "Geometry"
		}, {
			ID: 385,
			d: 19e3,
			q: 50,
			t: "3D Shapes"
		}, {
			ID: 303,
			d: 19e3,
			q: 50,
			t: "Decimals: Mixed Operations"
		}, {
			ID: 961,
			d: 19e3,
			q: 50,
			t: "Division"
		}, {
			ID: 965,
			d: 19e3,
			q: 50,
			t: "Division"
		}, {
			ID: 970,
			d: 19e3,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 1132,
			d: 19e3,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1058,
			d: 19e3,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1078,
			d: 19100,
			q: 32,
			t: "3D Shapes"
		}, {
			ID: 963,
			d: 19100,
			q: 50,
			t: "Division"
		}, {
			ID: 305,
			d: 19200,
			q: 50,
			t: "Decimals: Multiplication"
		}, {
			ID: 291,
			d: 19200,
			q: 50,
			t: "Division"
		}, {
			ID: 306,
			d: 19300,
			q: 50,
			t: "Decimals: Division"
		}, {
			ID: 1e3,
			d: 19300,
			q: 50,
			t: "Exponents: Evaluate"
		}, {
			ID: 975,
			d: 19400,
			q: 50,
			t: "Decimals: Multiplication"
		}, {
			ID: 945,
			d: 19400,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 946,
			d: 19400,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 1059,
			d: 19400,
			q: 50,
			t: "Rational Numbers: Represent"
		}, {
			ID: 1065,
			d: 19500,
			q: 50,
			t: "Exponents: Evaluate"
		}, {
			ID: 951,
			d: 19500,
			q: 47,
			t: "Fractions: Division"
		}, {
			ID: 948,
			d: 19500,
			q: 47,
			t: "Fractions: Division"
		}, {
			ID: 1017,
			d: 19500,
			q: 20,
			t: "3D Shapes"
		}, {
			ID: 1018,
			d: 19500,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 976,
			d: 19500,
			q: 50,
			t: "Decimals: Multiplication"
		}, {
			ID: 995,
			d: 19500,
			q: 50,
			t: "Decimals: Multiplication"
		}, {
			ID: 1019,
			d: 19600,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1001,
			d: 19600,
			q: 50,
			t: "Exponents: Evaluate"
		}, {
			ID: 324,
			d: 19600,
			q: 50,
			t: "Unit Rates"
		}, {
			ID: 509,
			d: 19600,
			q: 50,
			t: "Ratios"
		}, {
			ID: 1169,
			d: 19600,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1149,
			d: 19600,
			q: 8,
			t: "Data Relationships"
		}, {
			ID: 1013,
			d: 19600,
			q: 20,
			t: "3D Shapes"
		}, {
			ID: 1020,
			d: 19700,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1168,
			d: 19700,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1069,
			d: 19700,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 1164,
			d: 19700,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1165,
			d: 19700,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1070,
			d: 19700,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 1071,
			d: 19700,
			q: 30,
			t: "Data Relationships"
		}, {
			ID: 502,
			d: 19700,
			q: 50,
			t: "Ratios"
		}, {
			ID: 314,
			d: 19700,
			q: 50,
			t: "Addition"
		}, {
			ID: 1002,
			d: 19700,
			q: 50,
			t: "Exponents: Evaluate"
		}, {
			ID: 1003,
			d: 19700,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 943,
			d: 19800,
			q: 50,
			t: "Ratios"
		}, {
			ID: 331,
			d: 19800,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 332,
			d: 19800,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 363,
			d: 19800,
			q: 50,
			t: "Unit Rates"
		}, {
			ID: 506,
			d: 19800,
			q: 50,
			t: "Ratios"
		}, {
			ID: 1170,
			d: 19800,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1167,
			d: 19800,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1049,
			d: 19800,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1048,
			d: 19900,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 508,
			d: 19900,
			q: 50,
			t: "Ratios"
		}, {
			ID: 333,
			d: 19900,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 1044,
			d: 19900,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 997,
			d: 2e4,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1160,
			d: 2e4,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 1171,
			d: 2e4,
			q: 50,
			t: "Ratios"
		}, {
			ID: 1055,
			d: 20100,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1004,
			d: 20100,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 315,
			d: 20100,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 996,
			d: 20200,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 865,
			d: 20300,
			q: 30,
			t: "Proportional Relationships"
		}, {
			ID: 864,
			d: 20300,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 339,
			d: 20400,
			q: 48,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 1051,
			d: 20400,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1163,
			d: 20500,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 1162,
			d: 20600,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}]
	},
	16: {
		ID: 16,
		grade: 7,
		sub: "Ontario",
		country: "Canada",
		locationID: "1",
		skills: [{
			ID: 890,
			d: 14700,
			q: 50,
			t: "Fractions: Equivalent"
		}, {
			ID: 320,
			d: 15200,
			q: 50,
			t: "Fractions and Decimals"
		}, {
			ID: 323,
			d: 15300,
			q: 50,
			t: "Decimals and Fractions"
		}, {
			ID: 322,
			d: 15300,
			q: 50,
			t: "Decimals and Fractions"
		}, {
			ID: 513,
			d: 15400,
			q: 25,
			t: "Lines"
		}, {
			ID: 987,
			d: 15400,
			q: 50,
			t: "Factors"
		}, {
			ID: 1165,
			d: 15400,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1164,
			d: 15500,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 962,
			d: 15500,
			q: 50,
			t: "Factors"
		}, {
			ID: 1167,
			d: 15600,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1074,
			d: 15700,
			q: 50,
			t: "Decimals: Represent"
		}, {
			ID: 861,
			d: 15700,
			q: 30,
			t: "Proportional Relationships"
		}, {
			ID: 859,
			d: 15700,
			q: 30,
			t: "Data Relationships"
		}, {
			ID: 504,
			d: 15700,
			q: 50,
			t: "Factors and Multiples"
		}, {
			ID: 505,
			d: 15700,
			q: 48,
			t: "Factors and Multiples"
		}, {
			ID: 558,
			d: 15700,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 925,
			d: 15800,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 1118,
			d: 15800,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1122,
			d: 15800,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1123,
			d: 15800,
			q: 50,
			t: "Conversion"
		}, {
			ID: 927,
			d: 15900,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 900,
			d: 15900,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 901,
			d: 16e3,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 855,
			d: 16e3,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 521,
			d: 16e3,
			q: 50,
			t: "Decimals"
		}, {
			ID: 599,
			d: 16e3,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 494,
			d: 16e3,
			q: 40,
			t: "Measurement"
		}, {
			ID: 935,
			d: 16e3,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 854,
			d: 16100,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 897,
			d: 16100,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 986,
			d: 16100,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 1091,
			d: 16100,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 518,
			d: 16100,
			q: 50,
			t: "Decimals"
		}, {
			ID: 331,
			d: 16100,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 610,
			d: 16100,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 562,
			d: 16100,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 1090,
			d: 16200,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 1160,
			d: 16200,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 929,
			d: 16200,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 997,
			d: 16200,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 995,
			d: 16200,
			q: 50,
			t: "Decimals: Multiplication"
		}, {
			ID: 899,
			d: 16300,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 863,
			d: 16300,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 998,
			d: 16300,
			q: 50,
			t: "Rational Numbers: Represent"
		}, {
			ID: 1057,
			d: 16300,
			q: 50,
			t: "Geometry"
		}, {
			ID: 332,
			d: 16300,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 507,
			d: 16400,
			q: 50,
			t: "Rational Numbers: Represent"
		}, {
			ID: 908,
			d: 16400,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 865,
			d: 16400,
			q: 30,
			t: "Proportional Relationships"
		}, {
			ID: 1063,
			d: 16400,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1082,
			d: 16400,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1021,
			d: 16400,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 1131,
			d: 16400,
			q: 50,
			t: "Geometry"
		}, {
			ID: 926,
			d: 16400,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 864,
			d: 16400,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 520,
			d: 16400,
			q: 25,
			t: "Patterning"
		}, {
			ID: 1060,
			d: 16500,
			q: 50,
			t: "Rational Numbers: Comparing"
		}, {
			ID: 889,
			d: 16500,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 1056,
			d: 16500,
			q: 50,
			t: "Geometry"
		}, {
			ID: 918,
			d: 16500,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 891,
			d: 16500,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 892,
			d: 16500,
			q: 50,
			t: "Fractions: Equivalent"
		}, {
			ID: 500,
			d: 16500,
			q: 50,
			t: "Rational Numbers: Comparing"
		}, {
			ID: 501,
			d: 16500,
			q: 50,
			t: "Rational Numbers: Comparing"
		}, {
			ID: 360,
			d: 16600,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 519,
			d: 16600,
			q: 50,
			t: "Integers"
		}, {
			ID: 888,
			d: 16600,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 1146,
			d: 16600,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1147,
			d: 16700,
			q: 50,
			t: "Geometry"
		}, {
			ID: 354,
			d: 16700,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 353,
			d: 16700,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 358,
			d: 16700,
			q: 45,
			t: "Mixed Operations"
		}, {
			ID: 1132,
			d: 16800,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1046,
			d: 16900,
			q: 25,
			t: "Probability"
		}, {
			ID: 359,
			d: 16900,
			q: 45,
			t: "Mixed Operations"
		}, {
			ID: 511,
			d: 16900,
			q: 30,
			t: "Probability"
		}, {
			ID: 514,
			d: 17e3,
			q: 40,
			t: "Integers"
		}, {
			ID: 877,
			d: 17600,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 876,
			d: 17800,
			q: 50,
			t: "Fractions: Division"
		}]
	},
	17: {
		ID: 17,
		grade: 8,
		sub: "Ontario",
		country: "Canada",
		locationID: "1",
		skills: [{
			ID: 599,
			d: 16e3,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 855,
			d: 16e3,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 854,
			d: 16100,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 610,
			d: 16100,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 357,
			d: 17e3,
			q: 50,
			t: "Probability"
		}, {
			ID: 515,
			d: 17100,
			q: 50,
			t: "Integers"
		}, {
			ID: 503,
			d: 17100,
			q: 50,
			t: "Rational Numbers: Comparing"
		}, {
			ID: 525,
			d: 17100,
			q: 35,
			t: "Probability"
		}, {
			ID: 528,
			d: 17100,
			q: 45,
			t: "Patterning"
		}, {
			ID: 693,
			d: 17100,
			q: 30,
			t: "Data Relationships"
		}, {
			ID: 1175,
			d: 17100,
			q: 50,
			t: "Angles"
		}, {
			ID: 1257,
			d: 17200,
			q: 30,
			t: "Data Relationships"
		}, {
			ID: 1038,
			d: 17200,
			q: 20,
			t: "2D Shapes"
		}, {
			ID: 1061,
			d: 17300,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1053,
			d: 17300,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1079,
			d: 17300,
			q: 50,
			t: "Probability"
		}, {
			ID: 531,
			d: 17300,
			q: 30,
			t: "2D Shapes"
		}, {
			ID: 535,
			d: 17300,
			q: 50,
			t: "Exponents: Rules"
		}, {
			ID: 536,
			d: 17300,
			q: 50,
			t: "Exponents: Rules"
		}, {
			ID: 537,
			d: 17400,
			q: 50,
			t: "Decimals"
		}, {
			ID: 341,
			d: 17400,
			q: 50,
			t: "Conversion"
		}, {
			ID: 538,
			d: 17400,
			q: 50,
			t: "Order of Operations"
		}, {
			ID: 1006,
			d: 17400,
			q: 50,
			t: "Probability"
		}, {
			ID: 973,
			d: 17400,
			q: 50,
			t: "Exponents: Rules"
		}, {
			ID: 1107,
			d: 17500,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1124,
			d: 17500,
			q: 50,
			t: "Geometry"
		}, {
			ID: 530,
			d: 17500,
			q: 30,
			t: "2D Shapes"
		}, {
			ID: 340,
			d: 17500,
			q: 50,
			t: "Conversion"
		}, {
			ID: 542,
			d: 17500,
			q: 50,
			t: "Place Value"
		}, {
			ID: 1125,
			d: 17500,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1134,
			d: 17600,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1135,
			d: 17600,
			q: 50,
			t: "Geometry"
		}, {
			ID: 534,
			d: 17600,
			q: 50,
			t: "Order of Operations"
		}, {
			ID: 608,
			d: 17600,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 342,
			d: 17600,
			q: 50,
			t: "Conversion"
		}, {
			ID: 526,
			d: 17600,
			q: 40,
			t: "Conversion"
		}, {
			ID: 523,
			d: 17600,
			q: 50,
			t: "Rational Numbers"
		}, {
			ID: 524,
			d: 17600,
			q: 50,
			t: "Rational Numbers"
		}, {
			ID: 539,
			d: 17600,
			q: 20,
			t: "Square Roots"
		}, {
			ID: 1092,
			d: 17600,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 532,
			d: 17700,
			q: 50,
			t: "Square Roots"
		}, {
			ID: 609,
			d: 17700,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 540,
			d: 17700,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 541,
			d: 17700,
			q: 30,
			t: "3D Shapes"
		}, {
			ID: 1140,
			d: 17700,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1093,
			d: 17800,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 876,
			d: 17800,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 874,
			d: 17900,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 946,
			d: 17900,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 1062,
			d: 17900,
			q: 50,
			t: "Geometry"
		}, {
			ID: 606,
			d: 17900,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 529,
			d: 17900,
			q: 40,
			t: "2D Shapes"
		}, {
			ID: 688,
			d: 18e3,
			q: 50,
			t: "Pythagorean Theorem"
		}, {
			ID: 1139,
			d: 18e3,
			q: 50,
			t: "Geometry"
		}, {
			ID: 977,
			d: 18e3,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 919,
			d: 18e3,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 873,
			d: 18e3,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 1155,
			d: 18e3,
			q: 50,
			t: "Measurement"
		}, {
			ID: 1150,
			d: 18100,
			q: 50,
			t: "Pythagorean Theorem"
		}, {
			ID: 920,
			d: 18100,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 866,
			d: 18100,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 928,
			d: 18100,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 924,
			d: 18100,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 1138,
			d: 18100,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1137,
			d: 18200,
			q: 50,
			t: "Geometry"
		}, {
			ID: 978,
			d: 18200,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 979,
			d: 18200,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 689,
			d: 18200,
			q: 50,
			t: "Pythagorean Theorem"
		}, {
			ID: 867,
			d: 18300,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 981,
			d: 18300,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1081,
			d: 18300,
			q: 50,
			t: "Geometry"
		}, {
			ID: 868,
			d: 18400,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 690,
			d: 18400,
			q: 50,
			t: "Pythagorean Theorem"
		}, {
			ID: 1136,
			d: 18400,
			q: 50,
			t: "Geometry"
		}, {
			ID: 533,
			d: 18500,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 980,
			d: 18500,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1083,
			d: 18500,
			q: 50,
			t: "Geometry"
		}, {
			ID: 982,
			d: 18600,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 869,
			d: 18700,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1133,
			d: 18700,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1020,
			d: 18800,
			q: 50,
			t: "Proportional Relationships"
		}]
	},
	19: {
		ID: 19,
		grade: 1,
		sub: "Florida",
		country: "United States",
		locationID: "3",
		skills: [{
			ID: 92,
			d: 100,
			q: 20,
			t: "Reading Numbers"
		}, {
			ID: 93,
			d: 100,
			q: 20,
			t: "Reading Numbers"
		}, {
			ID: 231,
			d: 200,
			q: 30,
			t: "Counting"
		}, {
			ID: 227,
			d: 300,
			q: 33,
			t: "Addition to 20"
		}, {
			ID: 225,
			d: 300,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 1259,
			d: 300,
			q: 50,
			t: "Counting"
		}, {
			ID: 1264,
			d: 300,
			q: 40,
			t: "Counting"
		}, {
			ID: 1273,
			d: 300,
			q: 50,
			t: "Place Value"
		}, {
			ID: 1203,
			d: 400,
			q: 50,
			t: "Counting"
		}, {
			ID: 1204,
			d: 400,
			q: 50,
			t: "Place Value"
		}, {
			ID: 1198,
			d: 400,
			q: 50,
			t: "Counting"
		}, {
			ID: 1205,
			d: 500,
			q: 50,
			t: "Place Value"
		}, {
			ID: 1265,
			d: 500,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1256,
			d: 500,
			q: 50,
			t: "Counting"
		}, {
			ID: 224,
			d: 500,
			q: 40,
			t: "2D Shapes"
		}, {
			ID: 197,
			d: 600,
			q: 24,
			t: "2D Shapes"
		}, {
			ID: 136,
			d: 600,
			q: 45,
			t: "Addition to 20"
		}, {
			ID: 545,
			d: 600,
			q: 50,
			t: "Place Value"
		}, {
			ID: 546,
			d: 600,
			q: 42,
			t: "Addition to 20"
		}, {
			ID: 1268,
			d: 600,
			q: 50,
			t: "Counting"
		}, {
			ID: 1269,
			d: 600,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1272,
			d: 700,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1199,
			d: 700,
			q: 50,
			t: "Counting"
		}, {
			ID: 1274,
			d: 800,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 1200,
			d: 800,
			q: 50,
			t: "Counting"
		}, {
			ID: 438,
			d: 800,
			q: 50,
			t: "Ordering Numbers"
		}, {
			ID: 238,
			d: 800,
			q: 50,
			t: "Composing Numbers"
		}, {
			ID: 215,
			d: 800,
			q: 40,
			t: "Data Relationships"
		}, {
			ID: 196,
			d: 800,
			q: 20,
			t: "2D Shapes"
		}, {
			ID: 98,
			d: 900,
			q: 39,
			t: "Counting"
		}, {
			ID: 1185,
			d: 900,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1201,
			d: 900,
			q: 50,
			t: "Counting"
		}, {
			ID: 229,
			d: 1e3,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 388,
			d: 1e3,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 543,
			d: 1e3,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 90,
			d: 1e3,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 91,
			d: 1e3,
			q: 50,
			t: "Ordering Numbers"
		}, {
			ID: 89,
			d: 1e3,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 107,
			d: 1e3,
			q: 59,
			t: "Composing Numbers"
		}, {
			ID: 198,
			d: 1e3,
			q: 48,
			t: "2D Shapes"
		}, {
			ID: 1187,
			d: 1e3,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1267,
			d: 1e3,
			q: 50,
			t: "Counting"
		}, {
			ID: 149,
			d: 1100,
			q: 50,
			t: "Ordering Numbers"
		}, {
			ID: 148,
			d: 1100,
			q: 50,
			t: "Ordering Numbers"
		}, {
			ID: 389,
			d: 1100,
			q: 50,
			t: "Counting"
		}, {
			ID: 237,
			d: 1200,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 439,
			d: 1200,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 440,
			d: 1200,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 669,
			d: 1200,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 668,
			d: 1200,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 232,
			d: 1200,
			q: 20,
			t: "Subtraction to 20"
		}, {
			ID: 1266,
			d: 1200,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 1208,
			d: 1200,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1220,
			d: 1200,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 1275,
			d: 1200,
			q: 44,
			t: "Subtraction to 100"
		}, {
			ID: 1271,
			d: 1300,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 49,
			d: 1300,
			q: 45,
			t: "Subtraction to 20"
		}, {
			ID: 437,
			d: 1300,
			q: 50,
			t: "Ordering Numbers"
		}, {
			ID: 547,
			d: 1300,
			q: 44,
			t: "Subtraction to 100"
		}, {
			ID: 436,
			d: 1300,
			q: 50,
			t: "Ordering Numbers"
		}, {
			ID: 137,
			d: 1400,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 111,
			d: 1400,
			q: 17,
			t: "Mixed Operations"
		}, {
			ID: 138,
			d: 1400,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 140,
			d: 1400,
			q: 48,
			t: "Mixed Operations"
		}, {
			ID: 108,
			d: 1500,
			q: 60,
			t: "Composing Numbers"
		}, {
			ID: 391,
			d: 1500,
			q: 40,
			t: "Comparing Numbers"
		}, {
			ID: 1186,
			d: 1500,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 1207,
			d: 1500,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 1188,
			d: 1500,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 1195,
			d: 1600,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1212,
			d: 1600,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1251,
			d: 1600,
			q: 50,
			t: "Patterning"
		}, {
			ID: 1193,
			d: 1600,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 86,
			d: 1600,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 230,
			d: 1600,
			q: 50,
			t: "Composing Numbers"
		}, {
			ID: 87,
			d: 1700,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 1194,
			d: 1700,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1191,
			d: 1700,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1249,
			d: 1700,
			q: 22,
			t: "Fractions"
		}, {
			ID: 1247,
			d: 1700,
			q: 16,
			t: "Fractions"
		}, {
			ID: 1228,
			d: 1700,
			q: 46,
			t: "Place Value"
		}, {
			ID: 1210,
			d: 1700,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1181,
			d: 1700,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1209,
			d: 1800,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 1182,
			d: 1800,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 1254,
			d: 1800,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 4,
			d: 1800,
			q: 90,
			t: "Addition to 20"
		}, {
			ID: 60,
			d: 1800,
			q: 50,
			t: "Composing Numbers"
		}, {
			ID: 228,
			d: 1800,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 239,
			d: 1900,
			q: 50,
			t: "Composing Numbers"
		}, {
			ID: 83,
			d: 1900,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 548,
			d: 1900,
			q: 50,
			t: "Place Value"
		}, {
			ID: 1230,
			d: 1900,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 1229,
			d: 1900,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 473,
			d: 2e3,
			q: 50,
			t: "Time"
		}, {
			ID: 475,
			d: 2e3,
			q: 24,
			t: "Time"
		}, {
			ID: 393,
			d: 2e3,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 392,
			d: 2e3,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 470,
			d: 2e3,
			q: 50,
			t: "Time"
		}, {
			ID: 1183,
			d: 2e3,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1184,
			d: 2e3,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 670,
			d: 2e3,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 671,
			d: 2e3,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 110,
			d: 2e3,
			q: 50,
			t: "Composing Numbers"
		}, {
			ID: 1234,
			d: 2100,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1223,
			d: 2100,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 1224,
			d: 2200,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 1227,
			d: 2400,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 82,
			d: 2800,
			q: 50,
			t: "Addition to 20"
		}]
	},
	20: {
		ID: 20,
		grade: 2,
		sub: "Florida",
		country: "United States",
		locationID: "3",
		skills: [{
			ID: 213,
			d: 0,
			q: 25,
			t: "Measurement"
		}, {
			ID: 1189,
			d: 2600,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1252,
			d: 2600,
			q: 50,
			t: "Reading Numbers"
		}, {
			ID: 1240,
			d: 2700,
			q: 50,
			t: "Reading Numbers"
		}, {
			ID: 84,
			d: 2700,
			q: 50,
			t: "Reading Numbers"
		}, {
			ID: 86,
			d: 2700,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 82,
			d: 2800,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 454,
			d: 2800,
			q: 30,
			t: "2D Shapes"
		}, {
			ID: 432,
			d: 2900,
			q: 50,
			t: "Counting"
		}, {
			ID: 158,
			d: 2900,
			q: 50,
			t: "Counting"
		}, {
			ID: 458,
			d: 3e3,
			q: 35,
			t: "2D Shapes"
		}, {
			ID: 457,
			d: 3e3,
			q: 40,
			t: "2D Shapes"
		}, {
			ID: 177,
			d: 3e3,
			q: 50,
			t: "Counting"
		}, {
			ID: 1255,
			d: 3200,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 461,
			d: 3400,
			q: 50,
			t: "Counting"
		}, {
			ID: 83,
			d: 3400,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 1190,
			d: 3400,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 52,
			d: 3600,
			q: 45,
			t: "Subtraction to 100"
		}, {
			ID: 53,
			d: 3600,
			q: 45,
			t: "Subtraction to 100"
		}, {
			ID: 87,
			d: 3600,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 60,
			d: 3700,
			q: 50,
			t: "Composing Numbers"
		}, {
			ID: 110,
			d: 3800,
			q: 50,
			t: "Composing Numbers"
		}, {
			ID: 240,
			d: 3800,
			q: 48,
			t: "2D Shapes"
		}, {
			ID: 676,
			d: 3800,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 648,
			d: 3800,
			q: 12,
			t: "Money"
		}, {
			ID: 677,
			d: 3800,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 1231,
			d: 3800,
			q: 50,
			t: "Place Value"
		}, {
			ID: 1232,
			d: 3800,
			q: 50,
			t: "Place Value"
		}, {
			ID: 185,
			d: 3900,
			q: 50,
			t: "Place Value"
		}, {
			ID: 674,
			d: 3900,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 675,
			d: 3900,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 443,
			d: 3900,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 444,
			d: 3900,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 552,
			d: 3900,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 673,
			d: 4e3,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 186,
			d: 4e3,
			q: 50,
			t: "Place Value"
		}, {
			ID: 127,
			d: 4e3,
			q: 25,
			t: "Conversion"
		}, {
			ID: 459,
			d: 4e3,
			q: 40,
			t: "2D Shapes"
		}, {
			ID: 728,
			d: 4e3,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 672,
			d: 4e3,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 1280,
			d: 4e3,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 1278,
			d: 4100,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 1270,
			d: 4100,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 1241,
			d: 4100,
			q: 50,
			t: "Reading Numbers"
		}, {
			ID: 154,
			d: 4200,
			q: 50,
			t: "Composing Numbers"
		}, {
			ID: 474,
			d: 4300,
			q: 50,
			t: "Time"
		}, {
			ID: 647,
			d: 4300,
			q: 50,
			t: "Money"
		}, {
			ID: 471,
			d: 4300,
			q: 50,
			t: "Time"
		}, {
			ID: 1218,
			d: 4300,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 646,
			d: 4400,
			q: 50,
			t: "Money"
		}, {
			ID: 649,
			d: 4400,
			q: 50,
			t: "Money"
		}, {
			ID: 476,
			d: 4400,
			q: 50,
			t: "Time"
		}, {
			ID: 1217,
			d: 4600,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 165,
			d: 4700,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 1253,
			d: 4700,
			q: 48,
			t: "Addition to 100"
		}, {
			ID: 166,
			d: 4800,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 1216,
			d: 4900,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1213,
			d: 4900,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1214,
			d: 4900,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1215,
			d: 4900,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1211,
			d: 5e3,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 1192,
			d: 5100,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 1202,
			d: 5100,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 1219,
			d: 5100,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 1197,
			d: 5200,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 1206,
			d: 5200,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 1221,
			d: 5200,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 1222,
			d: 5200,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 1281,
			d: 5200,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1225,
			d: 5400,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 1233,
			d: 5500,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 1237,
			d: 5600,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 1244,
			d: 5600,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 1245,
			d: 5700,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 1242,
			d: 5700,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 1239,
			d: 5700,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 1226,
			d: 5700,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 1236,
			d: 5700,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 1246,
			d: 5800,
			q: 23,
			t: "Geometry"
		}, {
			ID: 1248,
			d: 5800,
			q: 30,
			t: "Geometry"
		}, {
			ID: 1243,
			d: 6e3,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 1235,
			d: 6e3,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 417,
			d: 9e3,
			q: 50,
			t: "Addition to 1000"
		}]
	},
	21: {
		ID: 21,
		grade: 3,
		sub: "Florida",
		country: "United States",
		locationID: "3",
		skills: [{
			ID: 713,
			d: 3900,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 771,
			d: 6500,
			q: 45,
			t: "2D Shapes"
		}, {
			ID: 32,
			d: 6500,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 33,
			d: 6500,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 34,
			d: 6500,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 35,
			d: 6500,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 36,
			d: 6500,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 75,
			d: 6500,
			q: 50,
			t: "Patterning"
		}, {
			ID: 31,
			d: 6500,
			q: 21,
			t: "Multiplication Facts"
		}, {
			ID: 210,
			d: 6500,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 252,
			d: 6500,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 253,
			d: 6500,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 555,
			d: 6500,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 751,
			d: 6500,
			q: 50,
			t: "Rounding"
		}, {
			ID: 603,
			d: 6600,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 597,
			d: 6600,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 602,
			d: 6600,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 598,
			d: 6600,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 256,
			d: 6600,
			q: 45,
			t: "2D Shapes"
		}, {
			ID: 146,
			d: 6600,
			q: 50,
			t: "Rounding"
		}, {
			ID: 37,
			d: 6600,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 38,
			d: 6600,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 39,
			d: 6600,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 40,
			d: 6600,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 777,
			d: 6600,
			q: 40,
			t: "Addition to 1000"
		}, {
			ID: 762,
			d: 6700,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 764,
			d: 6700,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 714,
			d: 6700,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 756,
			d: 6700,
			q: 49,
			t: "Multiplication"
		}, {
			ID: 772,
			d: 6700,
			q: 45,
			t: "Multiplication"
		}, {
			ID: 257,
			d: 6700,
			q: 43,
			t: "2D Shapes"
		}, {
			ID: 77,
			d: 6700,
			q: 56,
			t: "Patterning"
		}, {
			ID: 596,
			d: 6700,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 595,
			d: 6700,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 726,
			d: 6700,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 733,
			d: 6700,
			q: 50,
			t: "Patterning"
		}, {
			ID: 752,
			d: 6700,
			q: 50,
			t: "Rounding"
		}, {
			ID: 704,
			d: 6800,
			q: 45,
			t: "Multiplication"
		}, {
			ID: 556,
			d: 6800,
			q: 50,
			t: "Rounding"
		}, {
			ID: 271,
			d: 6800,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 25,
			d: 6800,
			q: 18,
			t: "Division Facts"
		}, {
			ID: 26,
			d: 6800,
			q: 18,
			t: "Division Facts"
		}, {
			ID: 27,
			d: 6800,
			q: 18,
			t: "Division Facts"
		}, {
			ID: 1095,
			d: 6800,
			q: 50,
			t: "Patterning"
		}, {
			ID: 759,
			d: 6800,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 712,
			d: 6800,
			q: 48,
			t: "Patterning"
		}, {
			ID: 778,
			d: 6800,
			q: 40,
			t: "Subtraction to 1000"
		}, {
			ID: 779,
			d: 6800,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 781,
			d: 6900,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 763,
			d: 6900,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 760,
			d: 6900,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 28,
			d: 6900,
			q: 18,
			t: "Division Facts"
		}, {
			ID: 115,
			d: 6900,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 76,
			d: 6900,
			q: 56,
			t: "Patterning"
		}, {
			ID: 29,
			d: 6900,
			q: 9,
			t: "Division Facts"
		}, {
			ID: 174,
			d: 6900,
			q: 50,
			t: "Patterning"
		}, {
			ID: 716,
			d: 6900,
			q: 50,
			t: "Measurement"
		}, {
			ID: 462,
			d: 7e3,
			q: 40,
			t: "Multiplication"
		}, {
			ID: 705,
			d: 7e3,
			q: 44,
			t: "Division"
		}, {
			ID: 706,
			d: 7e3,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 557,
			d: 7e3,
			q: 44,
			t: "Fractions: Represent"
		}, {
			ID: 707,
			d: 7e3,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 753,
			d: 7e3,
			q: 32,
			t: "Fractions: Represent"
		}, {
			ID: 754,
			d: 7e3,
			q: 50,
			t: "Patterning"
		}, {
			ID: 758,
			d: 7e3,
			q: 49,
			t: "Division"
		}, {
			ID: 773,
			d: 7e3,
			q: 45,
			t: "Division"
		}, {
			ID: 770,
			d: 7e3,
			q: 50,
			t: "Area"
		}, {
			ID: 775,
			d: 7e3,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 785,
			d: 7e3,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 1094,
			d: 7e3,
			q: 50,
			t: "Patterning"
		}, {
			ID: 803,
			d: 7100,
			q: 50,
			t: "Area"
		}, {
			ID: 769,
			d: 7100,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 761,
			d: 7100,
			q: 50,
			t: "Division"
		}, {
			ID: 782,
			d: 7100,
			q: 50,
			t: "Division"
		}, {
			ID: 780,
			d: 7100,
			q: 50,
			t: "Measurement"
		}, {
			ID: 554,
			d: 7100,
			q: 32,
			t: "Fractions: Represent"
		}, {
			ID: 116,
			d: 7100,
			q: 50,
			t: "Division"
		}, {
			ID: 183,
			d: 7200,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 175,
			d: 7200,
			q: 50,
			t: "Patterning"
		}, {
			ID: 315,
			d: 7200,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 463,
			d: 7200,
			q: 45,
			t: "Division"
		}, {
			ID: 708,
			d: 7200,
			q: 50,
			t: "Division"
		}, {
			ID: 709,
			d: 7200,
			q: 50,
			t: "Division"
		}, {
			ID: 715,
			d: 7200,
			q: 50,
			t: "Fractions: Represent"
		}, {
			ID: 711,
			d: 7200,
			q: 48,
			t: "Multiplication"
		}, {
			ID: 735,
			d: 7200,
			q: 50,
			t: "Patterning"
		}, {
			ID: 718,
			d: 7200,
			q: 50,
			t: "Fractions: Represent"
		}, {
			ID: 783,
			d: 7200,
			q: 49,
			t: "Mixed Operations"
		}, {
			ID: 722,
			d: 7200,
			q: 45,
			t: "Fractions: Represent"
		}, {
			ID: 736,
			d: 7200,
			q: 50,
			t: "Patterning"
		}, {
			ID: 776,
			d: 7200,
			q: 50,
			t: "Division"
		}, {
			ID: 1027,
			d: 7300,
			q: 50,
			t: "Fractions: Represent"
		}, {
			ID: 1096,
			d: 7300,
			q: 50,
			t: "Patterning"
		}, {
			ID: 710,
			d: 7300,
			q: 49,
			t: "Mixed Operations"
		}, {
			ID: 184,
			d: 7300,
			q: 50,
			t: "Patterning"
		}, {
			ID: 282,
			d: 7400,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 160,
			d: 7400,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 734,
			d: 7400,
			q: 33,
			t: "Fractions: Comparing"
		}, {
			ID: 1279,
			d: 7400,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 801,
			d: 7400,
			q: 48,
			t: "Measurement"
		}, {
			ID: 802,
			d: 7400,
			q: 40,
			t: "Measurement"
		}, {
			ID: 767,
			d: 7400,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 757,
			d: 7400,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 784,
			d: 7400,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 786,
			d: 7500,
			q: 50,
			t: "Measurement"
		}, {
			ID: 755,
			d: 7500,
			q: 50,
			t: "Measurement"
		}, {
			ID: 1104,
			d: 7500,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 1105,
			d: 7500,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 702,
			d: 7500,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 472,
			d: 7500,
			q: 50,
			t: "Time"
		}, {
			ID: 281,
			d: 7500,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 421,
			d: 7600,
			q: 50,
			t: "Time"
		}, {
			ID: 723,
			d: 7600,
			q: 39,
			t: "Fractions: Equivalent"
		}, {
			ID: 1106,
			d: 7600,
			q: 50,
			t: "Conversion"
		}, {
			ID: 719,
			d: 7600,
			q: 42,
			t: "Fractions: Equivalent"
		}, {
			ID: 720,
			d: 7600,
			q: 42,
			t: "Fractions: Equivalent"
		}, {
			ID: 730,
			d: 7700,
			q: 50,
			t: "Fractions: Represent"
		}, {
			ID: 1180,
			d: 7700,
			q: 50,
			t: "Fractions: Equivalent"
		}, {
			ID: 161,
			d: 7700,
			q: 50,
			t: "Time"
		}, {
			ID: 724,
			d: 7800,
			q: 39,
			t: "Fractions: Equivalent"
		}, {
			ID: 765,
			d: 7800,
			q: 39,
			t: "Fractions: Equivalent"
		}, {
			ID: 766,
			d: 7900,
			q: 39,
			t: "Fractions: Equivalent"
		}, {
			ID: 1102,
			d: 7900,
			q: 50,
			t: "Fractions: Equivalent"
		}, {
			ID: 1103,
			d: 8e3,
			q: 49,
			t: "Fractions: Equivalent"
		}, {
			ID: 327,
			d: 10400,
			q: 50,
			t: "Conversion"
		}]
	},
	22: {
		ID: 22,
		grade: 4,
		sub: "Florida",
		country: "United States",
		locationID: "3",
		skills: [{
			ID: 165,
			d: 4700,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 721,
			d: 7800,
			q: 42,
			t: "Fractions: Equivalent"
		}, {
			ID: 650,
			d: 8100,
			q: 50,
			t: "Money"
		}, {
			ID: 789,
			d: 8100,
			q: 50,
			t: "Place Value"
		}, {
			ID: 449,
			d: 8100,
			q: 50,
			t: "Reading Numbers"
		}, {
			ID: 787,
			d: 8200,
			q: 50,
			t: "Place Value"
		}, {
			ID: 182,
			d: 8200,
			q: 50,
			t: "Money"
		}, {
			ID: 164,
			d: 8200,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 793,
			d: 8200,
			q: 50,
			t: "Rounding"
		}, {
			ID: 831,
			d: 8300,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 847,
			d: 8300,
			q: 50,
			t: "Place Value"
		}, {
			ID: 278,
			d: 8300,
			q: 50,
			t: "Money"
		}, {
			ID: 794,
			d: 8300,
			q: 50,
			t: "Rounding"
		}, {
			ID: 796,
			d: 8400,
			q: 50,
			t: "Rounding"
		}, {
			ID: 788,
			d: 8400,
			q: 50,
			t: "Place Value"
		}, {
			ID: 241,
			d: 8400,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 246,
			d: 8500,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 795,
			d: 8500,
			q: 50,
			t: "Rounding"
		}, {
			ID: 830,
			d: 8500,
			q: 50,
			t: "Place Value"
		}, {
			ID: 1015,
			d: 8600,
			q: 50,
			t: "Rounding"
		}, {
			ID: 832,
			d: 8600,
			q: 50,
			t: "Addition to 1,000,000"
		}, {
			ID: 790,
			d: 8600,
			q: 50,
			t: "Place Value"
		}, {
			ID: 791,
			d: 8600,
			q: 50,
			t: "Place Value"
		}, {
			ID: 68,
			d: 8600,
			q: 50,
			t: "Rounding"
		}, {
			ID: 166,
			d: 8600,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 792,
			d: 8700,
			q: 50,
			t: "Place Value"
		}, {
			ID: 834,
			d: 8700,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 797,
			d: 8700,
			q: 50,
			t: "Rounding"
		}, {
			ID: 242,
			d: 8800,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 250,
			d: 8800,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 247,
			d: 8900,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 251,
			d: 8900,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 243,
			d: 8900,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 1175,
			d: 8900,
			q: 50,
			t: "Angles"
		}, {
			ID: 1050,
			d: 9e3,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 248,
			d: 9e3,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 310,
			d: 9e3,
			q: 50,
			t: "Addition to 1,000,000"
		}, {
			ID: 417,
			d: 9e3,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 833,
			d: 9100,
			q: 50,
			t: "Addition to 1,000,000"
		}, {
			ID: 249,
			d: 9100,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 1054,
			d: 9100,
			q: 35,
			t: "2D Shapes"
		}, {
			ID: 255,
			d: 9200,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 835,
			d: 9200,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 325,
			d: 9300,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 836,
			d: 9300,
			q: 50,
			t: "Subtraction to 1,000,000"
		}, {
			ID: 311,
			d: 9400,
			q: 50,
			t: "Subtraction to 1,000,000"
		}, {
			ID: 409,
			d: 9500,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 989,
			d: 9500,
			q: 50,
			t: "Measurement"
		}, {
			ID: 990,
			d: 9600,
			q: 50,
			t: "Measurement"
		}, {
			ID: 962,
			d: 9600,
			q: 50,
			t: "Factors"
		}, {
			ID: 879,
			d: 9600,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 987,
			d: 9700,
			q: 50,
			t: "Factors"
		}, {
			ID: 179,
			d: 9700,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 279,
			d: 9800,
			q: 50,
			t: "Patterning"
		}, {
			ID: 838,
			d: 9800,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 1066,
			d: 9900,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 287,
			d: 9900,
			q: 50,
			t: "Reading Numbers"
		}, {
			ID: 163,
			d: 9900,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 268,
			d: 9900,
			q: 50,
			t: "Patterning"
		}, {
			ID: 285,
			d: 1e4,
			q: 50,
			t: "Factors"
		}, {
			ID: 583,
			d: 1e4,
			q: 50,
			t: "Patterning"
		}, {
			ID: 848,
			d: 1e4,
			q: 50,
			t: "Division"
		}, {
			ID: 837,
			d: 1e4,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 959,
			d: 10100,
			q: 50,
			t: "Patterning"
		}, {
			ID: 565,
			d: 10100,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 270,
			d: 10100,
			q: 50,
			t: "Patterning"
		}, {
			ID: 207,
			d: 10100,
			q: 50,
			t: "Division"
		}, {
			ID: 462,
			d: 10200,
			q: 40,
			t: "Multiplication"
		}, {
			ID: 960,
			d: 10200,
			q: 50,
			t: "Patterning"
		}, {
			ID: 849,
			d: 10200,
			q: 50,
			t: "Division"
		}, {
			ID: 839,
			d: 10300,
			q: 50,
			t: "Conversion"
		}, {
			ID: 841,
			d: 10300,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1067,
			d: 10300,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 587,
			d: 10300,
			q: 50,
			t: "Patterning"
		}, {
			ID: 162,
			d: 10300,
			q: 50,
			t: "Division"
		}, {
			ID: 327,
			d: 10400,
			q: 50,
			t: "Conversion"
		}, {
			ID: 586,
			d: 10400,
			q: 50,
			t: "Patterning"
		}, {
			ID: 1068,
			d: 10400,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1032,
			d: 10400,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1034,
			d: 10400,
			q: 50,
			t: "Conversion"
		}, {
			ID: 850,
			d: 10400,
			q: 50,
			t: "Division"
		}, {
			ID: 851,
			d: 10500,
			q: 50,
			t: "Division"
		}, {
			ID: 844,
			d: 10500,
			q: 50,
			t: "Conversion"
		}, {
			ID: 843,
			d: 10500,
			q: 50,
			t: "Conversion"
		}, {
			ID: 840,
			d: 10500,
			q: 50,
			t: "Conversion"
		}, {
			ID: 584,
			d: 10500,
			q: 50,
			t: "Patterning"
		}, {
			ID: 281,
			d: 10500,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 564,
			d: 10600,
			q: 50,
			t: "Division"
		}, {
			ID: 1033,
			d: 10600,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1141,
			d: 10600,
			q: 25,
			t: "Measurement"
		}, {
			ID: 1035,
			d: 10600,
			q: 32,
			t: "Time"
		}, {
			ID: 934,
			d: 10600,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 991,
			d: 10700,
			q: 36,
			t: "Measurement"
		}, {
			ID: 994,
			d: 10700,
			q: 20,
			t: "Measurement"
		}, {
			ID: 974,
			d: 10700,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1029,
			d: 10700,
			q: 50,
			t: "Patterning"
		}, {
			ID: 1028,
			d: 10700,
			q: 50,
			t: "Patterning"
		}, {
			ID: 846,
			d: 10700,
			q: 50,
			t: "Conversion"
		}, {
			ID: 463,
			d: 10700,
			q: 45,
			t: "Division"
		}, {
			ID: 283,
			d: 10800,
			q: 46,
			t: "Time"
		}, {
			ID: 1030,
			d: 10800,
			q: 50,
			t: "Patterning"
		}, {
			ID: 1153,
			d: 10800,
			q: 36,
			t: "Measurement"
		}, {
			ID: 967,
			d: 10800,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1031,
			d: 10900,
			q: 50,
			t: "Patterning"
		}, {
			ID: 282,
			d: 10900,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1178,
			d: 11e3,
			q: 50,
			t: "Fractions: Equivalent"
		}, {
			ID: 852,
			d: 11e3,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 853,
			d: 11100,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 892,
			d: 11100,
			q: 50,
			t: "Fractions: Equivalent"
		}, {
			ID: 890,
			d: 11200,
			q: 50,
			t: "Fractions: Equivalent"
		}, {
			ID: 563,
			d: 11300,
			q: 18,
			t: "Fractions: Equivalent"
		}, {
			ID: 46,
			d: 11400,
			q: 50,
			t: "Fractions: Equivalent"
		}, {
			ID: 561,
			d: 11500,
			q: 50,
			t: "Decimals: Represent"
		}, {
			ID: 894,
			d: 11500,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 1014,
			d: 11600,
			q: 50,
			t: "Fractions and Decimals"
		}, {
			ID: 316,
			d: 11600,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 560,
			d: 11700,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 952,
			d: 11700,
			q: 50,
			t: "Fractions: Represent"
		}, {
			ID: 1011,
			d: 11800,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 939,
			d: 11800,
			q: 50,
			t: "Fractions: Represent"
		}, {
			ID: 1166,
			d: 11900,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 900,
			d: 11900,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 106,
			d: 11900,
			q: 50,
			t: "Fractions and Decimals"
		}, {
			ID: 558,
			d: 12e3,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 922,
			d: 12e3,
			q: 50,
			t: "Fractions and Decimals"
		}, {
			ID: 798,
			d: 12e3,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 986,
			d: 12e3,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 925,
			d: 12100,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 799,
			d: 12100,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 320,
			d: 12100,
			q: 50,
			t: "Fractions and Decimals"
		}, {
			ID: 562,
			d: 12200,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 1016,
			d: 12200,
			q: 50,
			t: "Decimals: Comparing"
		}, {
			ID: 897,
			d: 12300,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 559,
			d: 12300,
			q: 50,
			t: "Decimals: Comparing"
		}, {
			ID: 466,
			d: 12400,
			q: 50,
			t: "Decimals: Comparing"
		}, {
			ID: 465,
			d: 12400,
			q: 50,
			t: "Decimals: Comparing"
		}, {
			ID: 901,
			d: 12400,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 804,
			d: 12400,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 935,
			d: 12400,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 927,
			d: 12500,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 800,
			d: 12500,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 937,
			d: 12600,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 888,
			d: 12700,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 1021,
			d: 12800,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 889,
			d: 12900,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 926,
			d: 13e3,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 908,
			d: 13100,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 891,
			d: 13200,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 899,
			d: 13300,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 929,
			d: 13400,
			q: 50,
			t: "Fractions: Multiplication"
		}]
	},
	23: {
		ID: 23,
		grade: 5,
		sub: "Florida",
		country: "United States",
		locationID: "3",
		skills: [{
			ID: 240,
			d: 13600,
			q: 48,
			t: "2D Shapes"
		}, {
			ID: 284,
			d: 13600,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 233,
			d: 13600,
			q: 48,
			t: "2D Shapes"
		}, {
			ID: 336,
			d: 13600,
			q: 50,
			t: "Decimals: Place Value"
		}, {
			ID: 337,
			d: 13600,
			q: 50,
			t: "Decimals: Place Value"
		}, {
			ID: 604,
			d: 13700,
			q: 50,
			t: "Decimals: Place Value"
		}, {
			ID: 1077,
			d: 13700,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1074,
			d: 13700,
			q: 50,
			t: "Decimals: Represent"
		}, {
			ID: 1109,
			d: 13800,
			q: 50,
			t: "Decimals: Represent"
		}, {
			ID: 1073,
			d: 13800,
			q: 50,
			t: "Place Value"
		}, {
			ID: 1089,
			d: 13900,
			q: 48,
			t: "Place Value"
		}, {
			ID: 1076,
			d: 14e3,
			q: 50,
			t: "Decimals: Comparing"
		}, {
			ID: 567,
			d: 14100,
			q: 50,
			t: "Rounding"
		}, {
			ID: 566,
			d: 14100,
			q: 50,
			t: "Rounding"
		}, {
			ID: 51,
			d: 14100,
			q: 50,
			t: "Rounding"
		}, {
			ID: 120,
			d: 14200,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 121,
			d: 14200,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 805,
			d: 14300,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 870,
			d: 14300,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 911,
			d: 14300,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 813,
			d: 14400,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 64,
			d: 14400,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 65,
			d: 14400,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 358,
			d: 14400,
			q: 45,
			t: "Mixed Operations"
		}, {
			ID: 359,
			d: 14500,
			q: 45,
			t: "Mixed Operations"
		}, {
			ID: 414,
			d: 14500,
			q: 50,
			t: "Decimals: Mixed Operations"
		}, {
			ID: 871,
			d: 14500,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 1110,
			d: 14500,
			q: 50,
			t: "Rounding"
		}, {
			ID: 814,
			d: 14600,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 821,
			d: 14600,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 808,
			d: 14600,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 798,
			d: 14600,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 799,
			d: 14600,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 815,
			d: 14700,
			q: 50,
			t: "Division"
		}, {
			ID: 806,
			d: 14700,
			q: 50,
			t: "Division"
		}, {
			ID: 1166,
			d: 14700,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 1174,
			d: 14700,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 1091,
			d: 14800,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 1090,
			d: 14800,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 610,
			d: 14800,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 811,
			d: 14800,
			q: 50,
			t: "Division"
		}, {
			ID: 812,
			d: 14800,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 599,
			d: 14800,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 385,
			d: 14900,
			q: 50,
			t: "3D Shapes"
		}, {
			ID: 180,
			d: 14900,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 809,
			d: 14900,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 854,
			d: 14900,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 855,
			d: 14900,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 825,
			d: 14900,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 917,
			d: 14900,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 918,
			d: 14900,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 916,
			d: 14900,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 936,
			d: 15e3,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 953,
			d: 15e3,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 880,
			d: 15e3,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 816,
			d: 15e3,
			q: 50,
			t: "Division"
		}, {
			ID: 874,
			d: 15e3,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 63,
			d: 15e3,
			q: 50,
			t: "Decimals: Division"
		}, {
			ID: 62,
			d: 15e3,
			q: 50,
			t: "Decimals: Multiplication"
		}, {
			ID: 303,
			d: 15e3,
			q: 50,
			t: "Decimals: Mixed Operations"
		}, {
			ID: 305,
			d: 15e3,
			q: 50,
			t: "Decimals: Multiplication"
		}, {
			ID: 366,
			d: 15e3,
			q: 50,
			t: "3D Shapes"
		}, {
			ID: 608,
			d: 15e3,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 807,
			d: 15e3,
			q: 50,
			t: "Division"
		}, {
			ID: 609,
			d: 15100,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 829,
			d: 15100,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 810,
			d: 15100,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 876,
			d: 15200,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 881,
			d: 15200,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 872,
			d: 15200,
			q: 50,
			t: "Decimals: Multiplication"
		}, {
			ID: 909,
			d: 15200,
			q: 50,
			t: "Numerical Expressions"
		}, {
			ID: 914,
			d: 15200,
			q: 50,
			t: "Decimals: Multiplication"
		}, {
			ID: 912,
			d: 15200,
			q: 50,
			t: "Decimals: Multiplication"
		}, {
			ID: 606,
			d: 15200,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 286,
			d: 15200,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 124,
			d: 15200,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1052,
			d: 15200,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1092,
			d: 15200,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 1093,
			d: 15200,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 1118,
			d: 15200,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1123,
			d: 15200,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1129,
			d: 15200,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1173,
			d: 15200,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 1122,
			d: 15200,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1155,
			d: 15200,
			q: 50,
			t: "Measurement"
		}, {
			ID: 1144,
			d: 15300,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1130,
			d: 15300,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1142,
			d: 15300,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1126,
			d: 15300,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1127,
			d: 15300,
			q: 50,
			t: "Conversion"
		}, {
			ID: 930,
			d: 15300,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 931,
			d: 15300,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 932,
			d: 15300,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 915,
			d: 15300,
			q: 50,
			t: "Decimals: Division"
		}, {
			ID: 334,
			d: 15300,
			q: 50,
			t: "Geometry"
		}, {
			ID: 328,
			d: 15300,
			q: 40,
			t: "Patterning"
		}, {
			ID: 913,
			d: 15300,
			q: 50,
			t: "Decimals: Division"
		}, {
			ID: 919,
			d: 15300,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 873,
			d: 15300,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 910,
			d: 15300,
			q: 50,
			t: "Numerical Expressions"
		}, {
			ID: 877,
			d: 15400,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 875,
			d: 15400,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 362,
			d: 15400,
			q: 50,
			t: "Patterning"
		}, {
			ID: 1119,
			d: 15400,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1120,
			d: 15400,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1121,
			d: 15400,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1145,
			d: 15400,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1143,
			d: 15400,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1156,
			d: 15400,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1157,
			d: 15400,
			q: 50,
			t: "Patterning"
		}, {
			ID: 1158,
			d: 15400,
			q: 50,
			t: "Patterning"
		}, {
			ID: 1161,
			d: 15400,
			q: 50,
			t: "Patterning"
		}, {
			ID: 1128,
			d: 15500,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1172,
			d: 15500,
			q: 50,
			t: "Patterning"
		}, {
			ID: 1148,
			d: 15500,
			q: 45,
			t: "Conversion"
		}, {
			ID: 1154,
			d: 15500,
			q: 36,
			t: "Conversion"
		}, {
			ID: 924,
			d: 15600,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 928,
			d: 15600,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 923,
			d: 18400,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 920,
			d: 18500,
			q: 50,
			t: "Fractions: Multiplication"
		}]
	},
	24: {
		ID: 24,
		grade: 6,
		sub: "Florida",
		country: "United States",
		locationID: "3",
		skills: [{
			ID: 65,
			d: 14400,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 120,
			d: 18600,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 121,
			d: 18600,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 507,
			d: 18600,
			q: 50,
			t: "Rational Numbers: Represent"
		}, {
			ID: 504,
			d: 18600,
			q: 50,
			t: "Factors and Multiples"
		}, {
			ID: 505,
			d: 18600,
			q: 48,
			t: "Factors and Multiples"
		}, {
			ID: 999,
			d: 18600,
			q: 50,
			t: "Rational Numbers: Comparing"
		}, {
			ID: 1005,
			d: 18600,
			q: 50,
			t: "Rational Numbers: Represent"
		}, {
			ID: 998,
			d: 18600,
			q: 50,
			t: "Rational Numbers: Represent"
		}, {
			ID: 1057,
			d: 18600,
			q: 50,
			t: "Geometry"
		}, {
			ID: 973,
			d: 18700,
			q: 50,
			t: "Exponents: Rules"
		}, {
			ID: 966,
			d: 18700,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 535,
			d: 18700,
			q: 50,
			t: "Exponents: Rules"
		}, {
			ID: 536,
			d: 18700,
			q: 50,
			t: "Exponents: Rules"
		}, {
			ID: 499,
			d: 18700,
			q: 40,
			t: "Rational Numbers: Represent"
		}, {
			ID: 500,
			d: 18800,
			q: 50,
			t: "Rational Numbers: Comparing"
		}, {
			ID: 501,
			d: 18800,
			q: 50,
			t: "Rational Numbers: Comparing"
		}, {
			ID: 376,
			d: 18800,
			q: 50,
			t: "Measurement"
		}, {
			ID: 288,
			d: 18800,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 64,
			d: 18800,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 968,
			d: 18800,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 1060,
			d: 18800,
			q: 50,
			t: "Rational Numbers: Comparing"
		}, {
			ID: 1056,
			d: 18800,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1131,
			d: 18800,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1146,
			d: 18900,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1147,
			d: 18900,
			q: 50,
			t: "Geometry"
		}, {
			ID: 969,
			d: 18900,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 964,
			d: 18900,
			q: 50,
			t: "Division"
		}, {
			ID: 1045,
			d: 18900,
			q: 18,
			t: "3D Shapes"
		}, {
			ID: 1047,
			d: 18900,
			q: 18,
			t: "3D Shapes"
		}, {
			ID: 971,
			d: 18900,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 972,
			d: 18900,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 1012,
			d: 18900,
			q: 18,
			t: "3D Shapes"
		}, {
			ID: 289,
			d: 18900,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 503,
			d: 18900,
			q: 50,
			t: "Rational Numbers: Comparing"
		}, {
			ID: 385,
			d: 19e3,
			q: 50,
			t: "3D Shapes"
		}, {
			ID: 510,
			d: 19e3,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 334,
			d: 19e3,
			q: 50,
			t: "Geometry"
		}, {
			ID: 303,
			d: 19e3,
			q: 50,
			t: "Decimals: Mixed Operations"
		}, {
			ID: 965,
			d: 19e3,
			q: 50,
			t: "Division"
		}, {
			ID: 970,
			d: 19e3,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 366,
			d: 19e3,
			q: 50,
			t: "3D Shapes"
		}, {
			ID: 961,
			d: 19e3,
			q: 50,
			t: "Division"
		}, {
			ID: 1132,
			d: 19e3,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1058,
			d: 19e3,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1078,
			d: 19100,
			q: 32,
			t: "3D Shapes"
		}, {
			ID: 963,
			d: 19100,
			q: 50,
			t: "Division"
		}, {
			ID: 305,
			d: 19200,
			q: 50,
			t: "Decimals: Multiplication"
		}, {
			ID: 291,
			d: 19200,
			q: 50,
			t: "Division"
		}, {
			ID: 306,
			d: 19300,
			q: 50,
			t: "Decimals: Division"
		}, {
			ID: 1e3,
			d: 19300,
			q: 50,
			t: "Exponents: Evaluate"
		}, {
			ID: 975,
			d: 19400,
			q: 50,
			t: "Decimals: Multiplication"
		}, {
			ID: 946,
			d: 19400,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 945,
			d: 19400,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 1059,
			d: 19400,
			q: 50,
			t: "Rational Numbers: Represent"
		}, {
			ID: 1065,
			d: 19500,
			q: 50,
			t: "Exponents: Evaluate"
		}, {
			ID: 948,
			d: 19500,
			q: 47,
			t: "Fractions: Division"
		}, {
			ID: 976,
			d: 19500,
			q: 50,
			t: "Decimals: Multiplication"
		}, {
			ID: 995,
			d: 19500,
			q: 50,
			t: "Decimals: Multiplication"
		}, {
			ID: 951,
			d: 19500,
			q: 47,
			t: "Fractions: Division"
		}, {
			ID: 1017,
			d: 19500,
			q: 20,
			t: "3D Shapes"
		}, {
			ID: 1018,
			d: 19500,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1013,
			d: 19600,
			q: 20,
			t: "3D Shapes"
		}, {
			ID: 1019,
			d: 19600,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1001,
			d: 19600,
			q: 50,
			t: "Exponents: Evaluate"
		}, {
			ID: 509,
			d: 19600,
			q: 50,
			t: "Ratios"
		}, {
			ID: 324,
			d: 19600,
			q: 50,
			t: "Unit Rates"
		}, {
			ID: 1149,
			d: 19600,
			q: 8,
			t: "Data Relationships"
		}, {
			ID: 1169,
			d: 19600,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1168,
			d: 19700,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1164,
			d: 19700,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1165,
			d: 19700,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1070,
			d: 19700,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 1069,
			d: 19700,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 1071,
			d: 19700,
			q: 30,
			t: "Data Relationships"
		}, {
			ID: 314,
			d: 19700,
			q: 50,
			t: "Addition"
		}, {
			ID: 502,
			d: 19700,
			q: 50,
			t: "Ratios"
		}, {
			ID: 1020,
			d: 19700,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1002,
			d: 19700,
			q: 50,
			t: "Exponents: Evaluate"
		}, {
			ID: 1003,
			d: 19700,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 506,
			d: 19800,
			q: 50,
			t: "Ratios"
		}, {
			ID: 943,
			d: 19800,
			q: 50,
			t: "Ratios"
		}, {
			ID: 331,
			d: 19800,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 332,
			d: 19800,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 363,
			d: 19800,
			q: 50,
			t: "Unit Rates"
		}, {
			ID: 1049,
			d: 19800,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1167,
			d: 19800,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1170,
			d: 19800,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 333,
			d: 19900,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 508,
			d: 19900,
			q: 50,
			t: "Ratios"
		}, {
			ID: 1048,
			d: 19900,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1044,
			d: 19900,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 997,
			d: 2e4,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1171,
			d: 2e4,
			q: 50,
			t: "Ratios"
		}, {
			ID: 1160,
			d: 2e4,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 1055,
			d: 20100,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1004,
			d: 20100,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 315,
			d: 20100,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 996,
			d: 20200,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 864,
			d: 20300,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 865,
			d: 20300,
			q: 30,
			t: "Proportional Relationships"
		}, {
			ID: 339,
			d: 20400,
			q: 48,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 1051,
			d: 20400,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1163,
			d: 20500,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 1162,
			d: 20600,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}]
	},
	25: {
		ID: 25,
		grade: 1,
		sub: "Texas",
		country: "United States",
		locationID: "4",
		skills: [{
			ID: 226,
			d: -100,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 231,
			d: 200,
			q: 30,
			t: "Counting"
		}, {
			ID: 225,
			d: 300,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 227,
			d: 300,
			q: 33,
			t: "Addition to 20"
		}, {
			ID: 1259,
			d: 300,
			q: 50,
			t: "Counting"
		}, {
			ID: 1264,
			d: 300,
			q: 40,
			t: "Counting"
		}, {
			ID: 1273,
			d: 300,
			q: 50,
			t: "Place Value"
		}, {
			ID: 1203,
			d: 400,
			q: 50,
			t: "Counting"
		}, {
			ID: 1198,
			d: 400,
			q: 50,
			t: "Counting"
		}, {
			ID: 1204,
			d: 400,
			q: 50,
			t: "Place Value"
		}, {
			ID: 1205,
			d: 500,
			q: 50,
			t: "Place Value"
		}, {
			ID: 224,
			d: 500,
			q: 40,
			t: "2D Shapes"
		}, {
			ID: 1256,
			d: 500,
			q: 50,
			t: "Counting"
		}, {
			ID: 1265,
			d: 500,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1269,
			d: 600,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 197,
			d: 600,
			q: 24,
			t: "2D Shapes"
		}, {
			ID: 50,
			d: 600,
			q: 39,
			t: "Addition to 20"
		}, {
			ID: 136,
			d: 600,
			q: 45,
			t: "Addition to 20"
		}, {
			ID: 546,
			d: 600,
			q: 42,
			t: "Addition to 20"
		}, {
			ID: 1199,
			d: 700,
			q: 50,
			t: "Counting"
		}, {
			ID: 1272,
			d: 700,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1274,
			d: 800,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 1200,
			d: 800,
			q: 50,
			t: "Counting"
		}, {
			ID: 438,
			d: 800,
			q: 50,
			t: "Ordering Numbers"
		}, {
			ID: 73,
			d: 800,
			q: 47,
			t: "Counting"
		}, {
			ID: 196,
			d: 800,
			q: 20,
			t: "2D Shapes"
		}, {
			ID: 1185,
			d: 900,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1201,
			d: 900,
			q: 50,
			t: "Counting"
		}, {
			ID: 1187,
			d: 1e3,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 543,
			d: 1e3,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 198,
			d: 1e3,
			q: 48,
			t: "2D Shapes"
		}, {
			ID: 229,
			d: 1e3,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 89,
			d: 1e3,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 90,
			d: 1e3,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 91,
			d: 1e3,
			q: 50,
			t: "Ordering Numbers"
		}, {
			ID: 148,
			d: 1100,
			q: 50,
			t: "Ordering Numbers"
		}, {
			ID: 149,
			d: 1100,
			q: 50,
			t: "Ordering Numbers"
		}, {
			ID: 232,
			d: 1200,
			q: 20,
			t: "Subtraction to 20"
		}, {
			ID: 237,
			d: 1200,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 439,
			d: 1200,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 440,
			d: 1200,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 1208,
			d: 1200,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1266,
			d: 1200,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 1271,
			d: 1300,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 436,
			d: 1300,
			q: 50,
			t: "Ordering Numbers"
		}, {
			ID: 437,
			d: 1300,
			q: 50,
			t: "Ordering Numbers"
		}, {
			ID: 49,
			d: 1300,
			q: 45,
			t: "Subtraction to 20"
		}, {
			ID: 137,
			d: 1400,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 138,
			d: 1400,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 111,
			d: 1400,
			q: 17,
			t: "Mixed Operations"
		}, {
			ID: 1188,
			d: 1500,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 1186,
			d: 1500,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 1207,
			d: 1500,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 1193,
			d: 1600,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1195,
			d: 1600,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1212,
			d: 1600,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1210,
			d: 1700,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 451,
			d: 1700,
			q: 50,
			t: "Addition"
		}, {
			ID: 1194,
			d: 1700,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1191,
			d: 1700,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1247,
			d: 1700,
			q: 16,
			t: "Fractions"
		}, {
			ID: 1249,
			d: 1700,
			q: 22,
			t: "Fractions"
		}, {
			ID: 1181,
			d: 1700,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 87,
			d: 1700,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 4,
			d: 1800,
			q: 90,
			t: "Addition to 20"
		}, {
			ID: 60,
			d: 1800,
			q: 50,
			t: "Composing Numbers"
		}, {
			ID: 228,
			d: 1800,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1182,
			d: 1800,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 1254,
			d: 1800,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 452,
			d: 1800,
			q: 50,
			t: "Subtraction"
		}, {
			ID: 453,
			d: 1800,
			q: 50,
			t: "Subtraction"
		}, {
			ID: 1209,
			d: 1800,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 1229,
			d: 1900,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1230,
			d: 1900,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 83,
			d: 1900,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 393,
			d: 2e3,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 1184,
			d: 2e3,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 1183,
			d: 2e3,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 470,
			d: 2e3,
			q: 50,
			t: "Time"
		}, {
			ID: 473,
			d: 2e3,
			q: 50,
			t: "Time"
		}, {
			ID: 475,
			d: 2e3,
			q: 24,
			t: "Time"
		}, {
			ID: 392,
			d: 2e3,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1234,
			d: 2100,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 99,
			d: 2400,
			q: 47,
			t: "Addition to 20"
		}, {
			ID: 86,
			d: 2700,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 82,
			d: 2800,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 384,
			d: 3500,
			q: 48,
			t: "3D Shapes"
		}, {
			ID: 351,
			d: 3600,
			q: 48,
			t: "3D Shapes"
		}, {
			ID: 382,
			d: 3700,
			q: 48,
			t: "3D Shapes"
		}]
	},
	26: {
		ID: 26,
		grade: 2,
		sub: "Texas",
		country: "United States",
		locationID: "4",
		skills: [{
			ID: 346,
			d: -600,
			q: 50,
			t: "Time"
		}, {
			ID: 406,
			d: -600,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 178,
			d: -200,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 549,
			d: -100,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 238,
			d: 800,
			q: 50,
			t: "Composing Numbers"
		}, {
			ID: 1275,
			d: 1200,
			q: 44,
			t: "Subtraction to 100"
		}, {
			ID: 1224,
			d: 2200,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 1227,
			d: 2400,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 456,
			d: 2600,
			q: 40,
			t: "2D Shapes"
		}, {
			ID: 1189,
			d: 2600,
			q: 50,
			t: "Addition to 20"
		}, {
			ID: 1252,
			d: 2600,
			q: 50,
			t: "Reading Numbers"
		}, {
			ID: 455,
			d: 2700,
			q: 45,
			t: "2D Shapes"
		}, {
			ID: 1240,
			d: 2700,
			q: 50,
			t: "Reading Numbers"
		}, {
			ID: 435,
			d: 2700,
			q: 50,
			t: "Reading Numbers"
		}, {
			ID: 84,
			d: 2700,
			q: 50,
			t: "Reading Numbers"
		}, {
			ID: 454,
			d: 2800,
			q: 30,
			t: "2D Shapes"
		}, {
			ID: 457,
			d: 3e3,
			q: 40,
			t: "2D Shapes"
		}, {
			ID: 458,
			d: 3e3,
			q: 35,
			t: "2D Shapes"
		}, {
			ID: 1190,
			d: 3400,
			q: 50,
			t: "Subtraction to 20"
		}, {
			ID: 384,
			d: 3500,
			q: 48,
			t: "3D Shapes"
		}, {
			ID: 351,
			d: 3600,
			q: 48,
			t: "3D Shapes"
		}, {
			ID: 52,
			d: 3600,
			q: 45,
			t: "Subtraction to 100"
		}, {
			ID: 53,
			d: 3600,
			q: 45,
			t: "Subtraction to 100"
		}, {
			ID: 382,
			d: 3700,
			q: 48,
			t: "3D Shapes"
		}, {
			ID: 1232,
			d: 3800,
			q: 50,
			t: "Place Value"
		}, {
			ID: 185,
			d: 3900,
			q: 50,
			t: "Place Value"
		}, {
			ID: 443,
			d: 3900,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 444,
			d: 3900,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 728,
			d: 4e3,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 186,
			d: 4e3,
			q: 50,
			t: "Place Value"
		}, {
			ID: 127,
			d: 4e3,
			q: 25,
			t: "Conversion"
		}, {
			ID: 1280,
			d: 4e3,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 441,
			d: 4100,
			q: 50,
			t: "Ordering Numbers"
		}, {
			ID: 442,
			d: 4100,
			q: 50,
			t: "Ordering Numbers"
		}, {
			ID: 1241,
			d: 4100,
			q: 50,
			t: "Reading Numbers"
		}, {
			ID: 154,
			d: 4200,
			q: 50,
			t: "Composing Numbers"
		}, {
			ID: 1218,
			d: 4300,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 476,
			d: 4400,
			q: 50,
			t: "Time"
		}, {
			ID: 1217,
			d: 4600,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 1231,
			d: 4700,
			q: 50,
			t: "Place Value"
		}, {
			ID: 165,
			d: 4700,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 166,
			d: 4800,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 1216,
			d: 4900,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1213,
			d: 4900,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1214,
			d: 4900,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1215,
			d: 4900,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1211,
			d: 5e3,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 1192,
			d: 5100,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 1202,
			d: 5100,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 1219,
			d: 5100,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 1222,
			d: 5200,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 1206,
			d: 5200,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 1221,
			d: 5200,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 1197,
			d: 5200,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 1281,
			d: 5200,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1225,
			d: 5400,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 1226,
			d: 5700,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 34,
			d: 6500,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 31,
			d: 6500,
			q: 21,
			t: "Multiplication Facts"
		}, {
			ID: 35,
			d: 6500,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 32,
			d: 6500,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 33,
			d: 6500,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 36,
			d: 6500,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 37,
			d: 6600,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 38,
			d: 6600,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 39,
			d: 6600,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 40,
			d: 6600,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 25,
			d: 6800,
			q: 18,
			t: "Division Facts"
		}, {
			ID: 26,
			d: 6800,
			q: 18,
			t: "Division Facts"
		}, {
			ID: 27,
			d: 6800,
			q: 18,
			t: "Division Facts"
		}, {
			ID: 28,
			d: 6900,
			q: 18,
			t: "Division Facts"
		}, {
			ID: 29,
			d: 6900,
			q: 9,
			t: "Division Facts"
		}, {
			ID: 472,
			d: 7500,
			q: 50,
			t: "Time"
		}, {
			ID: 164,
			d: 8200,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 241,
			d: 8400,
			q: 50,
			t: "Addition to 100"
		}, {
			ID: 417,
			d: 9e3,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 409,
			d: 9500,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 233,
			d: 13600,
			q: 48,
			t: "2D Shapes"
		}]
	},
	27: {
		ID: 27,
		grade: 3,
		sub: "Texas",
		country: "United States",
		locationID: "4",
		skills: [{
			ID: 126,
			d: -500,
			q: 50,
			t: "Fractions"
		}, {
			ID: 128,
			d: -400,
			q: 25,
			t: "Conversion"
		}, {
			ID: 495,
			d: -400,
			q: 50,
			t: "Time"
		}, {
			ID: 218,
			d: -300,
			q: 25,
			t: "Time"
		}, {
			ID: 254,
			d: 0,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 384,
			d: 3500,
			q: 48,
			t: "3D Shapes"
		}, {
			ID: 351,
			d: 3600,
			q: 48,
			t: "3D Shapes"
		}, {
			ID: 382,
			d: 3700,
			q: 48,
			t: "3D Shapes"
		}, {
			ID: 713,
			d: 3900,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 447,
			d: 4900,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 448,
			d: 4900,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 445,
			d: 5100,
			q: 50,
			t: "Ordering Numbers"
		}, {
			ID: 446,
			d: 5100,
			q: 50,
			t: "Ordering Numbers"
		}, {
			ID: 1233,
			d: 5500,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 1237,
			d: 5600,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 1244,
			d: 5600,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 1245,
			d: 5700,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 1236,
			d: 5700,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 1242,
			d: 5700,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 1239,
			d: 5700,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 1246,
			d: 5800,
			q: 23,
			t: "Geometry"
		}, {
			ID: 1248,
			d: 5800,
			q: 30,
			t: "Geometry"
		}, {
			ID: 1235,
			d: 6e3,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1243,
			d: 6e3,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 771,
			d: 6500,
			q: 45,
			t: "2D Shapes"
		}, {
			ID: 751,
			d: 6500,
			q: 50,
			t: "Rounding"
		}, {
			ID: 210,
			d: 6500,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 252,
			d: 6500,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 253,
			d: 6500,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 31,
			d: 6500,
			q: 21,
			t: "Multiplication Facts"
		}, {
			ID: 32,
			d: 6500,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 33,
			d: 6500,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 34,
			d: 6500,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 35,
			d: 6500,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 36,
			d: 6500,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 37,
			d: 6600,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 38,
			d: 6600,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 39,
			d: 6600,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 40,
			d: 6600,
			q: 19,
			t: "Multiplication Facts"
		}, {
			ID: 146,
			d: 6600,
			q: 50,
			t: "Rounding"
		}, {
			ID: 256,
			d: 6600,
			q: 45,
			t: "2D Shapes"
		}, {
			ID: 603,
			d: 6600,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 597,
			d: 6600,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 602,
			d: 6600,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 598,
			d: 6600,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 777,
			d: 6600,
			q: 40,
			t: "Addition to 1000"
		}, {
			ID: 772,
			d: 6700,
			q: 45,
			t: "Multiplication"
		}, {
			ID: 714,
			d: 6700,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 756,
			d: 6700,
			q: 49,
			t: "Multiplication"
		}, {
			ID: 762,
			d: 6700,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 595,
			d: 6700,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 596,
			d: 6700,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 752,
			d: 6700,
			q: 50,
			t: "Rounding"
		}, {
			ID: 257,
			d: 6700,
			q: 43,
			t: "2D Shapes"
		}, {
			ID: 25,
			d: 6800,
			q: 18,
			t: "Division Facts"
		}, {
			ID: 26,
			d: 6800,
			q: 18,
			t: "Division Facts"
		}, {
			ID: 27,
			d: 6800,
			q: 18,
			t: "Division Facts"
		}, {
			ID: 759,
			d: 6800,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 704,
			d: 6800,
			q: 45,
			t: "Multiplication"
		}, {
			ID: 778,
			d: 6800,
			q: 40,
			t: "Subtraction to 1000"
		}, {
			ID: 779,
			d: 6800,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 781,
			d: 6900,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 760,
			d: 6900,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 763,
			d: 6900,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 716,
			d: 6900,
			q: 50,
			t: "Measurement"
		}, {
			ID: 28,
			d: 6900,
			q: 18,
			t: "Division Facts"
		}, {
			ID: 29,
			d: 6900,
			q: 9,
			t: "Division Facts"
		}, {
			ID: 115,
			d: 6900,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 758,
			d: 7e3,
			q: 49,
			t: "Division"
		}, {
			ID: 707,
			d: 7e3,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 557,
			d: 7e3,
			q: 44,
			t: "Fractions: Represent"
		}, {
			ID: 770,
			d: 7e3,
			q: 50,
			t: "Area"
		}, {
			ID: 773,
			d: 7e3,
			q: 45,
			t: "Division"
		}, {
			ID: 753,
			d: 7e3,
			q: 32,
			t: "Fractions: Represent"
		}, {
			ID: 705,
			d: 7e3,
			q: 44,
			t: "Division"
		}, {
			ID: 706,
			d: 7e3,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 785,
			d: 7e3,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 775,
			d: 7e3,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 780,
			d: 7100,
			q: 50,
			t: "Measurement"
		}, {
			ID: 782,
			d: 7100,
			q: 50,
			t: "Division"
		}, {
			ID: 769,
			d: 7100,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 761,
			d: 7100,
			q: 50,
			t: "Division"
		}, {
			ID: 803,
			d: 7100,
			q: 50,
			t: "Area"
		}, {
			ID: 554,
			d: 7100,
			q: 32,
			t: "Fractions: Represent"
		}, {
			ID: 116,
			d: 7100,
			q: 50,
			t: "Division"
		}, {
			ID: 183,
			d: 7200,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 463,
			d: 7200,
			q: 45,
			t: "Division"
		}, {
			ID: 718,
			d: 7200,
			q: 50,
			t: "Fractions: Represent"
		}, {
			ID: 708,
			d: 7200,
			q: 50,
			t: "Division"
		}, {
			ID: 709,
			d: 7200,
			q: 50,
			t: "Division"
		}, {
			ID: 783,
			d: 7200,
			q: 49,
			t: "Mixed Operations"
		}, {
			ID: 776,
			d: 7200,
			q: 50,
			t: "Division"
		}, {
			ID: 1027,
			d: 7300,
			q: 50,
			t: "Fractions: Represent"
		}, {
			ID: 1096,
			d: 7300,
			q: 50,
			t: "Patterning"
		}, {
			ID: 710,
			d: 7300,
			q: 49,
			t: "Mixed Operations"
		}, {
			ID: 757,
			d: 7400,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 734,
			d: 7400,
			q: 33,
			t: "Fractions: Comparing"
		}, {
			ID: 784,
			d: 7400,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 801,
			d: 7400,
			q: 48,
			t: "Measurement"
		}, {
			ID: 802,
			d: 7400,
			q: 40,
			t: "Measurement"
		}, {
			ID: 767,
			d: 7400,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 755,
			d: 7500,
			q: 50,
			t: "Measurement"
		}, {
			ID: 786,
			d: 7500,
			q: 50,
			t: "Measurement"
		}, {
			ID: 1104,
			d: 7500,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 1105,
			d: 7500,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 702,
			d: 7500,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 723,
			d: 7600,
			q: 39,
			t: "Fractions: Equivalent"
		}, {
			ID: 1180,
			d: 7700,
			q: 50,
			t: "Fractions: Equivalent"
		}, {
			ID: 730,
			d: 7700,
			q: 50,
			t: "Fractions: Represent"
		}, {
			ID: 765,
			d: 7800,
			q: 39,
			t: "Fractions: Equivalent"
		}, {
			ID: 724,
			d: 7800,
			q: 39,
			t: "Fractions: Equivalent"
		}, {
			ID: 766,
			d: 7900,
			q: 39,
			t: "Fractions: Equivalent"
		}, {
			ID: 1102,
			d: 7900,
			q: 50,
			t: "Fractions: Equivalent"
		}, {
			ID: 1103,
			d: 8e3,
			q: 49,
			t: "Fractions: Equivalent"
		}, {
			ID: 246,
			d: 8500,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 68,
			d: 8600,
			q: 50,
			t: "Rounding"
		}, {
			ID: 242,
			d: 8800,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 250,
			d: 8800,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 247,
			d: 8900,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 251,
			d: 8900,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 243,
			d: 8900,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 248,
			d: 9e3,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 249,
			d: 9100,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 179,
			d: 9700,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 462,
			d: 10200,
			q: 40,
			t: "Multiplication"
		}, {
			ID: 46,
			d: 11400,
			q: 50,
			t: "Fractions: Equivalent"
		}, {
			ID: 380,
			d: 20900,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 375,
			d: 21100,
			q: 50,
			t: "2D Shapes"
		}]
	},
	28: {
		ID: 28,
		grade: 4,
		sub: "Texas",
		country: "United States",
		locationID: "4",
		skills: [{
			ID: 126,
			d: 0,
			q: 50,
			t: "Fractions"
		}, {
			ID: 194,
			d: -700,
			q: 50,
			t: "Decimals"
		}, {
			ID: 195,
			d: -600,
			q: 50,
			t: "Decimals"
		}, {
			ID: 211,
			d: -500,
			q: 50,
			t: "Angles"
		}, {
			ID: 212,
			d: -400,
			q: 50,
			t: "Angles"
		}, {
			ID: 353,
			d: -400,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 313,
			d: -400,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 467,
			d: -400,
			q: 50,
			t: "Place Value"
		}, {
			ID: 326,
			d: -300,
			q: 50,
			t: "Angles"
		}, {
			ID: 354,
			d: -300,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 130,
			d: -300,
			q: 50,
			t: "Place Value"
		}, {
			ID: 368,
			d: -200,
			q: 50,
			t: "Angles"
		}, {
			ID: 219,
			d: -200,
			q: 30,
			t: "Fractions"
		}, {
			ID: 542,
			d: -200,
			q: 50,
			t: "Place Value"
		}, {
			ID: 192,
			d: -100,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 193,
			d: 0,
			q: 50,
			t: "Comparing Numbers"
		}, {
			ID: 1255,
			d: 3200,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 733,
			d: 6700,
			q: 50,
			t: "Patterning"
		}, {
			ID: 1095,
			d: 6800,
			q: 50,
			t: "Patterning"
		}, {
			ID: 1094,
			d: 7e3,
			q: 50,
			t: "Patterning"
		}, {
			ID: 735,
			d: 7200,
			q: 50,
			t: "Patterning"
		}, {
			ID: 736,
			d: 7200,
			q: 50,
			t: "Patterning"
		}, {
			ID: 767,
			d: 7400,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 719,
			d: 7600,
			q: 42,
			t: "Fractions: Equivalent"
		}, {
			ID: 720,
			d: 7600,
			q: 42,
			t: "Fractions: Equivalent"
		}, {
			ID: 1106,
			d: 7600,
			q: 50,
			t: "Conversion"
		}, {
			ID: 721,
			d: 7800,
			q: 42,
			t: "Fractions: Equivalent"
		}, {
			ID: 789,
			d: 8100,
			q: 50,
			t: "Place Value"
		}, {
			ID: 793,
			d: 8200,
			q: 50,
			t: "Rounding"
		}, {
			ID: 787,
			d: 8200,
			q: 50,
			t: "Place Value"
		}, {
			ID: 794,
			d: 8300,
			q: 50,
			t: "Rounding"
		}, {
			ID: 831,
			d: 8300,
			q: 50,
			t: "Addition to 1000"
		}, {
			ID: 847,
			d: 8300,
			q: 50,
			t: "Place Value"
		}, {
			ID: 796,
			d: 8400,
			q: 50,
			t: "Rounding"
		}, {
			ID: 788,
			d: 8400,
			q: 50,
			t: "Place Value"
		}, {
			ID: 795,
			d: 8500,
			q: 50,
			t: "Rounding"
		}, {
			ID: 830,
			d: 8500,
			q: 50,
			t: "Place Value"
		}, {
			ID: 1015,
			d: 8600,
			q: 50,
			t: "Rounding"
		}, {
			ID: 790,
			d: 8600,
			q: 50,
			t: "Place Value"
		}, {
			ID: 791,
			d: 8600,
			q: 50,
			t: "Place Value"
		}, {
			ID: 832,
			d: 8600,
			q: 50,
			t: "Addition to 1,000,000"
		}, {
			ID: 68,
			d: 8600,
			q: 50,
			t: "Rounding"
		}, {
			ID: 122,
			d: 8700,
			q: 50,
			t: "Conversion"
		}, {
			ID: 797,
			d: 8700,
			q: 50,
			t: "Rounding"
		}, {
			ID: 834,
			d: 8700,
			q: 50,
			t: "Subtraction to 100"
		}, {
			ID: 792,
			d: 8700,
			q: 50,
			t: "Place Value"
		}, {
			ID: 1175,
			d: 8900,
			q: 50,
			t: "Angles"
		}, {
			ID: 1050,
			d: 9e3,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 1054,
			d: 9100,
			q: 35,
			t: "2D Shapes"
		}, {
			ID: 833,
			d: 9100,
			q: 50,
			t: "Addition to 1,000,000"
		}, {
			ID: 835,
			d: 9200,
			q: 50,
			t: "Subtraction to 1000"
		}, {
			ID: 117,
			d: 9200,
			q: 50,
			t: "Patterning"
		}, {
			ID: 325,
			d: 9300,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 513,
			d: 9300,
			q: 25,
			t: "Lines"
		}, {
			ID: 836,
			d: 9300,
			q: 50,
			t: "Subtraction to 1,000,000"
		}, {
			ID: 269,
			d: 9400,
			q: 50,
			t: "Patterning"
		}, {
			ID: 989,
			d: 9500,
			q: 50,
			t: "Measurement"
		}, {
			ID: 990,
			d: 9600,
			q: 50,
			t: "Measurement"
		}, {
			ID: 962,
			d: 9600,
			q: 50,
			t: "Factors"
		}, {
			ID: 838,
			d: 9800,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 1066,
			d: 9900,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 163,
			d: 9900,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 268,
			d: 1e4,
			q: 50,
			t: "Patterning"
		}, {
			ID: 837,
			d: 1e4,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 848,
			d: 1e4,
			q: 50,
			t: "Division"
		}, {
			ID: 959,
			d: 10100,
			q: 50,
			t: "Patterning"
		}, {
			ID: 207,
			d: 10100,
			q: 50,
			t: "Division"
		}, {
			ID: 565,
			d: 10100,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 849,
			d: 10200,
			q: 50,
			t: "Division"
		}, {
			ID: 960,
			d: 10200,
			q: 50,
			t: "Patterning"
		}, {
			ID: 841,
			d: 10300,
			q: 50,
			t: "Conversion"
		}, {
			ID: 839,
			d: 10300,
			q: 50,
			t: "Conversion"
		}, {
			ID: 162,
			d: 10300,
			q: 50,
			t: "Division"
		}, {
			ID: 327,
			d: 10400,
			q: 50,
			t: "Conversion"
		}, {
			ID: 850,
			d: 10400,
			q: 50,
			t: "Division"
		}, {
			ID: 1034,
			d: 10400,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1032,
			d: 10400,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1068,
			d: 10400,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 843,
			d: 10500,
			q: 50,
			t: "Conversion"
		}, {
			ID: 840,
			d: 10500,
			q: 50,
			t: "Conversion"
		}, {
			ID: 844,
			d: 10500,
			q: 50,
			t: "Conversion"
		}, {
			ID: 851,
			d: 10500,
			q: 50,
			t: "Division"
		}, {
			ID: 934,
			d: 10600,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1033,
			d: 10600,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1035,
			d: 10600,
			q: 32,
			t: "Time"
		}, {
			ID: 564,
			d: 10600,
			q: 50,
			t: "Division"
		}, {
			ID: 1141,
			d: 10600,
			q: 25,
			t: "Measurement"
		}, {
			ID: 974,
			d: 10700,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 991,
			d: 10700,
			q: 36,
			t: "Measurement"
		}, {
			ID: 994,
			d: 10700,
			q: 20,
			t: "Measurement"
		}, {
			ID: 1028,
			d: 10700,
			q: 50,
			t: "Patterning"
		}, {
			ID: 1029,
			d: 10700,
			q: 50,
			t: "Patterning"
		}, {
			ID: 846,
			d: 10700,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1030,
			d: 10800,
			q: 50,
			t: "Patterning"
		}, {
			ID: 967,
			d: 10800,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1153,
			d: 10800,
			q: 36,
			t: "Measurement"
		}, {
			ID: 1031,
			d: 10900,
			q: 50,
			t: "Patterning"
		}, {
			ID: 1178,
			d: 11e3,
			q: 50,
			t: "Fractions: Equivalent"
		}, {
			ID: 892,
			d: 11100,
			q: 50,
			t: "Fractions: Equivalent"
		}, {
			ID: 890,
			d: 11200,
			q: 50,
			t: "Fractions: Equivalent"
		}, {
			ID: 46,
			d: 11400,
			q: 50,
			t: "Fractions: Equivalent"
		}, {
			ID: 894,
			d: 11500,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 1014,
			d: 11600,
			q: 50,
			t: "Fractions and Decimals"
		}, {
			ID: 316,
			d: 11600,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 560,
			d: 11700,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 952,
			d: 11700,
			q: 50,
			t: "Fractions: Represent"
		}, {
			ID: 1011,
			d: 11800,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 939,
			d: 11800,
			q: 50,
			t: "Fractions: Represent"
		}, {
			ID: 900,
			d: 11900,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 106,
			d: 11900,
			q: 50,
			t: "Fractions and Decimals"
		}, {
			ID: 986,
			d: 12e3,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 922,
			d: 12e3,
			q: 50,
			t: "Fractions and Decimals"
		}, {
			ID: 925,
			d: 12100,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 1016,
			d: 12200,
			q: 50,
			t: "Decimals: Comparing"
		}, {
			ID: 562,
			d: 12200,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 559,
			d: 12300,
			q: 50,
			t: "Decimals: Comparing"
		}, {
			ID: 897,
			d: 12300,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 935,
			d: 12400,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 901,
			d: 12400,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 927,
			d: 12500,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 937,
			d: 12600,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 888,
			d: 12700,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 1021,
			d: 12800,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 889,
			d: 12900,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 926,
			d: 13e3,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 908,
			d: 13100,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 1074,
			d: 13700,
			q: 50,
			t: "Decimals: Represent"
		}, {
			ID: 604,
			d: 13700,
			q: 50,
			t: "Decimals: Place Value"
		}, {
			ID: 1109,
			d: 13800,
			q: 50,
			t: "Decimals: Represent"
		}, {
			ID: 1073,
			d: 13800,
			q: 50,
			t: "Place Value"
		}, {
			ID: 1089,
			d: 13900,
			q: 48,
			t: "Place Value"
		}, {
			ID: 120,
			d: 14200,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 805,
			d: 14300,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 870,
			d: 14300,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 911,
			d: 14300,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 813,
			d: 14400,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 64,
			d: 14400,
			q: 50,
			t: "Decimals: Addition"
		}, {
			ID: 65,
			d: 14400,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 871,
			d: 14500,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 814,
			d: 14600,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 821,
			d: 14600,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 808,
			d: 14600,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 815,
			d: 14700,
			q: 50,
			t: "Division"
		}, {
			ID: 806,
			d: 14700,
			q: 50,
			t: "Division"
		}, {
			ID: 180,
			d: 14900,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 1118,
			d: 15200,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1122,
			d: 15200,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1123,
			d: 15200,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1144,
			d: 15300,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1142,
			d: 15300,
			q: 50,
			t: "Conversion"
		}, {
			ID: 328,
			d: 15300,
			q: 40,
			t: "Patterning"
		}, {
			ID: 1119,
			d: 15400,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1120,
			d: 15400,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1143,
			d: 15400,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1145,
			d: 15400,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1121,
			d: 15400,
			q: 50,
			t: "Conversion"
		}, {
			ID: 121,
			d: 18600,
			q: 50,
			t: "Decimals: Subtraction"
		}, {
			ID: 331,
			d: 19800,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 333,
			d: 19900,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 380,
			d: 20900,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 381,
			d: 21e3,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 367,
			d: 21100,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 375,
			d: 21100,
			q: 50,
			t: "2D Shapes"
		}]
	},
	29: {
		ID: 29,
		grade: 5,
		sub: "Texas",
		country: "United States",
		locationID: "4",
		skills: [{
			ID: 309,
			d: -600,
			q: 50,
			t: "Place Value"
		}, {
			ID: 312,
			d: -500,
			q: 50,
			t: "Decimals"
		}, {
			ID: 313,
			d: -400,
			q: 50,
			t: "Mixed Operations"
		}, {
			ID: 516,
			d: -100,
			q: 50,
			t: "Decimals"
		}, {
			ID: 517,
			d: 0,
			q: 50,
			t: "Decimals"
		}, {
			ID: 117,
			d: 9200,
			q: 50,
			t: "Patterning"
		}, {
			ID: 163,
			d: 9900,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 287,
			d: 9900,
			q: 50,
			t: "Reading Numbers"
		}, {
			ID: 285,
			d: 1e4,
			q: 50,
			t: "Factors"
		}, {
			ID: 162,
			d: 10300,
			q: 50,
			t: "Division"
		}, {
			ID: 327,
			d: 10400,
			q: 50,
			t: "Conversion"
		}, {
			ID: 558,
			d: 12e3,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 465,
			d: 12400,
			q: 50,
			t: "Decimals: Comparing"
		}, {
			ID: 466,
			d: 12400,
			q: 50,
			t: "Decimals: Comparing"
		}, {
			ID: 908,
			d: 13100,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 891,
			d: 13200,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 899,
			d: 13300,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 929,
			d: 13400,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 1076,
			d: 14e3,
			q: 50,
			t: "Decimals: Comparing"
		}, {
			ID: 567,
			d: 14100,
			q: 50,
			t: "Rounding"
		}, {
			ID: 51,
			d: 14100,
			q: 50,
			t: "Rounding"
		}, {
			ID: 358,
			d: 14400,
			q: 45,
			t: "Mixed Operations"
		}, {
			ID: 359,
			d: 14500,
			q: 45,
			t: "Mixed Operations"
		}, {
			ID: 1110,
			d: 14500,
			q: 50,
			t: "Rounding"
		}, {
			ID: 1090,
			d: 14800,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 1091,
			d: 14800,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 599,
			d: 14800,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 610,
			d: 14800,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 809,
			d: 14900,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 385,
			d: 14900,
			q: 50,
			t: "3D Shapes"
		}, {
			ID: 825,
			d: 14900,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 854,
			d: 14900,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 855,
			d: 14900,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 918,
			d: 14900,
			q: 50,
			t: "Fractions: Addition and Subtraction"
		}, {
			ID: 953,
			d: 15e3,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 816,
			d: 15e3,
			q: 50,
			t: "Division"
		}, {
			ID: 807,
			d: 15e3,
			q: 50,
			t: "Division"
		}, {
			ID: 305,
			d: 15e3,
			q: 50,
			t: "Decimals: Multiplication"
		}, {
			ID: 608,
			d: 15e3,
			q: 50,
			t: "Fractions: Multiplication"
		}, {
			ID: 1052,
			d: 15200,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1129,
			d: 15200,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1155,
			d: 15200,
			q: 50,
			t: "Measurement"
		}, {
			ID: 124,
			d: 15200,
			q: 50,
			t: "Conversion"
		}, {
			ID: 606,
			d: 15200,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 1092,
			d: 15200,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 914,
			d: 15200,
			q: 50,
			t: "Decimals: Multiplication"
		}, {
			ID: 909,
			d: 15200,
			q: 50,
			t: "Numerical Expressions"
		}, {
			ID: 912,
			d: 15200,
			q: 50,
			t: "Decimals: Multiplication"
		}, {
			ID: 872,
			d: 15200,
			q: 50,
			t: "Decimals: Multiplication"
		}, {
			ID: 876,
			d: 15200,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 913,
			d: 15300,
			q: 50,
			t: "Decimals: Division"
		}, {
			ID: 910,
			d: 15300,
			q: 50,
			t: "Numerical Expressions"
		}, {
			ID: 915,
			d: 15300,
			q: 50,
			t: "Decimals: Division"
		}, {
			ID: 1126,
			d: 15300,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1127,
			d: 15300,
			q: 50,
			t: "Conversion"
		}, {
			ID: 334,
			d: 15300,
			q: 50,
			t: "Geometry"
		}, {
			ID: 328,
			d: 15300,
			q: 40,
			t: "Patterning"
		}, {
			ID: 1130,
			d: 15300,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1157,
			d: 15400,
			q: 50,
			t: "Patterning"
		}, {
			ID: 1158,
			d: 15400,
			q: 50,
			t: "Patterning"
		}, {
			ID: 1161,
			d: 15400,
			q: 50,
			t: "Patterning"
		}, {
			ID: 877,
			d: 15400,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 875,
			d: 15400,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 1128,
			d: 15500,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1172,
			d: 15500,
			q: 50,
			t: "Patterning"
		}, {
			ID: 1148,
			d: 15500,
			q: 45,
			t: "Conversion"
		}, {
			ID: 1154,
			d: 15500,
			q: 36,
			t: "Conversion"
		}, {
			ID: 924,
			d: 15600,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 928,
			d: 15600,
			q: 50,
			t: "Fractions: Division"
		}, {
			ID: 964,
			d: 18900,
			q: 50,
			t: "Division"
		}, {
			ID: 965,
			d: 19e3,
			q: 50,
			t: "Division"
		}, {
			ID: 961,
			d: 19e3,
			q: 50,
			t: "Division"
		}, {
			ID: 303,
			d: 19e3,
			q: 50,
			t: "Decimals: Mixed Operations"
		}, {
			ID: 963,
			d: 19100,
			q: 50,
			t: "Division"
		}, {
			ID: 291,
			d: 19200,
			q: 50,
			t: "Division"
		}, {
			ID: 306,
			d: 19300,
			q: 50,
			t: "Decimals: Division"
		}, {
			ID: 331,
			d: 19800,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 1049,
			d: 19800,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 333,
			d: 19900,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 1048,
			d: 19900,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1044,
			d: 19900,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 339,
			d: 20400,
			q: 48,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 375,
			d: 21100,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 366,
			d: 21600,
			q: 50,
			t: "3D Shapes"
		}, {
			ID: 540,
			d: 23100,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}]
	},
	30: {
		ID: 30,
		grade: 6,
		sub: "Texas",
		country: "United States",
		locationID: "4",
		skills: [{
			ID: 343,
			d: -700,
			q: 50,
			t: "Conversion"
		}, {
			ID: 526,
			d: -300,
			q: 40,
			t: "Conversion"
		}, {
			ID: 534,
			d: -300,
			q: 50,
			t: "Order of Operations"
		}, {
			ID: 538,
			d: -300,
			q: 50,
			t: "Order of Operations"
		}, {
			ID: 340,
			d: -200,
			q: 50,
			t: "Conversion"
		}, {
			ID: 514,
			d: -200,
			q: 40,
			t: "Integers"
		}, {
			ID: 373,
			d: -100,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 374,
			d: -100,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 341,
			d: 0,
			q: 50,
			t: "Conversion"
		}, {
			ID: 342,
			d: 0,
			q: 50,
			t: "Conversion"
		}, {
			ID: 1270,
			d: 4100,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 1278,
			d: 4100,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 711,
			d: 7200,
			q: 48,
			t: "Multiplication"
		}, {
			ID: 1279,
			d: 7400,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 1166,
			d: 11900,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 358,
			d: 14400,
			q: 45,
			t: "Mixed Operations"
		}, {
			ID: 359,
			d: 14500,
			q: 45,
			t: "Mixed Operations"
		}, {
			ID: 1174,
			d: 14700,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 1173,
			d: 15200,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 1129,
			d: 15200,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1092,
			d: 15200,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 1093,
			d: 15200,
			q: 50,
			t: "Fractions: Comparing"
		}, {
			ID: 334,
			d: 15300,
			q: 50,
			t: "Geometry"
		}, {
			ID: 507,
			d: 18600,
			q: 50,
			t: "Rational Numbers: Represent"
		}, {
			ID: 998,
			d: 18600,
			q: 50,
			t: "Rational Numbers: Represent"
		}, {
			ID: 1057,
			d: 18600,
			q: 50,
			t: "Geometry"
		}, {
			ID: 499,
			d: 18700,
			q: 40,
			t: "Rational Numbers: Represent"
		}, {
			ID: 376,
			d: 18800,
			q: 50,
			t: "Measurement"
		}, {
			ID: 1056,
			d: 18800,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1131,
			d: 18800,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1146,
			d: 18900,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1147,
			d: 18900,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1132,
			d: 19e3,
			q: 50,
			t: "Geometry"
		}, {
			ID: 324,
			d: 19600,
			q: 50,
			t: "Unit Rates"
		}, {
			ID: 509,
			d: 19600,
			q: 50,
			t: "Ratios"
		}, {
			ID: 314,
			d: 19700,
			q: 50,
			t: "Addition"
		}, {
			ID: 502,
			d: 19700,
			q: 50,
			t: "Ratios"
		}, {
			ID: 1070,
			d: 19700,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 1071,
			d: 19700,
			q: 30,
			t: "Data Relationships"
		}, {
			ID: 1069,
			d: 19700,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 943,
			d: 19800,
			q: 50,
			t: "Ratios"
		}, {
			ID: 363,
			d: 19800,
			q: 50,
			t: "Unit Rates"
		}, {
			ID: 508,
			d: 19900,
			q: 50,
			t: "Ratios"
		}, {
			ID: 1044,
			d: 19900,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1048,
			d: 19900,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 997,
			d: 2e4,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1004,
			d: 20100,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 315,
			d: 20100,
			q: 50,
			t: "Multiplication"
		}, {
			ID: 996,
			d: 20200,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 864,
			d: 20300,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1051,
			d: 20400,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1163,
			d: 20500,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 1162,
			d: 20600,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 372,
			d: 21e3,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 329,
			d: 21100,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 367,
			d: 21100,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 1159,
			d: 21100,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 506,
			d: 21200,
			q: 50,
			t: "Ratios"
		}, {
			ID: 568,
			d: 21200,
			q: 50,
			t: "Rational Numbers: Represent"
		}, {
			ID: 1075,
			d: 21300,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 515,
			d: 21500,
			q: 50,
			t: "Integers"
		}, {
			ID: 330,
			d: 21500,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 895,
			d: 22300,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 896,
			d: 22300,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 885,
			d: 22400,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 887,
			d: 22400,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 907,
			d: 22500,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 570,
			d: 22500,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 571,
			d: 22500,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 886,
			d: 22600,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 893,
			d: 22600,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 906,
			d: 22700,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 883,
			d: 22700,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 884,
			d: 22800,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 691,
			d: 23e3,
			q: 50,
			t: "Angles"
		}, {
			ID: 698,
			d: 23100,
			q: 50,
			t: "Angles"
		}]
	},
	35: {
		ID: 35,
		grade: 7,
		sub: "Common Core",
		country: "United States",
		locationID: "2",
		skills: [{
			ID: 223,
			d: 21e3,
			q: 48,
			t: "Data Relationships"
		}, {
			ID: 372,
			d: 21e3,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 509,
			d: 21e3,
			q: 50,
			t: "Ratios"
		}, {
			ID: 856,
			d: 21e3,
			q: 50,
			t: "Unit Rates"
		}, {
			ID: 977,
			d: 21e3,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1038,
			d: 21e3,
			q: 20,
			t: "2D Shapes"
		}, {
			ID: 1039,
			d: 21100,
			q: 50,
			t: "Unit Rates"
		}, {
			ID: 1040,
			d: 21100,
			q: 50,
			t: "Unit Rates"
		}, {
			ID: 1159,
			d: 21100,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 580,
			d: 21100,
			q: 50,
			t: "Probability"
		}, {
			ID: 857,
			d: 21100,
			q: 50,
			t: "Unit Rates"
		}, {
			ID: 858,
			d: 21100,
			q: 50,
			t: "Ratios"
		}, {
			ID: 866,
			d: 21100,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 572,
			d: 21100,
			q: 50,
			t: "Rational Numbers: Represent"
		}, {
			ID: 367,
			d: 21100,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 329,
			d: 21100,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 383,
			d: 21100,
			q: 35,
			t: "3D Shapes"
		}, {
			ID: 502,
			d: 21100,
			q: 50,
			t: "Ratios"
		}, {
			ID: 387,
			d: 21200,
			q: 20,
			t: "3D Shapes"
		}, {
			ID: 506,
			d: 21200,
			q: 50,
			t: "Ratios"
		}, {
			ID: 568,
			d: 21200,
			q: 50,
			t: "Rational Numbers: Represent"
		}, {
			ID: 579,
			d: 21200,
			q: 50,
			t: "Probability"
		}, {
			ID: 1042,
			d: 21200,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 978,
			d: 21200,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 979,
			d: 21200,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1046,
			d: 21200,
			q: 25,
			t: "Probability"
		}, {
			ID: 1023,
			d: 21200,
			q: 50,
			t: "Ratios"
		}, {
			ID: 984,
			d: 21200,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 1025,
			d: 21200,
			q: 50,
			t: "Ratios"
		}, {
			ID: 985,
			d: 21300,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 1075,
			d: 21300,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1022,
			d: 21300,
			q: 50,
			t: "Ratios"
		}, {
			ID: 981,
			d: 21300,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 531,
			d: 21300,
			q: 30,
			t: "2D Shapes"
		}, {
			ID: 581,
			d: 21300,
			q: 50,
			t: "Unit Rates"
		}, {
			ID: 525,
			d: 21300,
			q: 35,
			t: "Probability"
		}, {
			ID: 574,
			d: 21300,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 386,
			d: 21300,
			q: 20,
			t: "3D Shapes"
		}, {
			ID: 867,
			d: 21300,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 957,
			d: 21300,
			q: 50,
			t: "Probability"
		}, {
			ID: 868,
			d: 21400,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 530,
			d: 21400,
			q: 30,
			t: "2D Shapes"
		}, {
			ID: 1064,
			d: 21400,
			q: 50,
			t: "Geometry"
		}, {
			ID: 983,
			d: 21400,
			q: 50,
			t: "Probability"
		}, {
			ID: 1009,
			d: 21400,
			q: 50,
			t: "Ratios"
		}, {
			ID: 1010,
			d: 21500,
			q: 50,
			t: "Ratios"
		}, {
			ID: 1079,
			d: 21500,
			q: 50,
			t: "Probability"
		}, {
			ID: 1006,
			d: 21500,
			q: 50,
			t: "Probability"
		}, {
			ID: 980,
			d: 21500,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 515,
			d: 21500,
			q: 50,
			t: "Integers"
		}, {
			ID: 379,
			d: 21500,
			q: 50,
			t: "Probability"
		}, {
			ID: 385,
			d: 21500,
			q: 50,
			t: "3D Shapes"
		}, {
			ID: 330,
			d: 21500,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 366,
			d: 21600,
			q: 50,
			t: "3D Shapes"
		}, {
			ID: 582,
			d: 21600,
			q: 50,
			t: "Rational Numbers: Represent"
		}, {
			ID: 1041,
			d: 21600,
			q: 50,
			t: "Unit Rates"
		}, {
			ID: 1007,
			d: 21600,
			q: 50,
			t: "Probability"
		}, {
			ID: 1008,
			d: 21600,
			q: 50,
			t: "Probability"
		}, {
			ID: 982,
			d: 21600,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1037,
			d: 21700,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 573,
			d: 21700,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 378,
			d: 21700,
			q: 50,
			t: "Probability"
		}, {
			ID: 355,
			d: 21700,
			q: 50,
			t: "Probability"
		}, {
			ID: 869,
			d: 21700,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 878,
			d: 21800,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 511,
			d: 21800,
			q: 30,
			t: "Probability"
		}, {
			ID: 1036,
			d: 21800,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 956,
			d: 21900,
			q: 50,
			t: "Probability"
		}, {
			ID: 1024,
			d: 21900,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 860,
			d: 21900,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 902,
			d: 21900,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 903,
			d: 22e3,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 861,
			d: 22e3,
			q: 30,
			t: "Proportional Relationships"
		}, {
			ID: 859,
			d: 22e3,
			q: 30,
			t: "Data Relationships"
		}, {
			ID: 882,
			d: 22e3,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 569,
			d: 22e3,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 1080,
			d: 22e3,
			q: 50,
			t: "Probability"
		}, {
			ID: 1026,
			d: 22100,
			q: 40,
			t: "Proportional Relationships"
		}, {
			ID: 864,
			d: 22100,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 905,
			d: 22100,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 904,
			d: 22200,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 865,
			d: 22200,
			q: 30,
			t: "Proportional Relationships"
		}, {
			ID: 577,
			d: 22200,
			q: 50,
			t: "Linear Expressions"
		}, {
			ID: 578,
			d: 22300,
			q: 50,
			t: "Linear Expressions"
		}, {
			ID: 863,
			d: 22300,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 949,
			d: 22300,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 895,
			d: 22300,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 896,
			d: 22300,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 955,
			d: 22300,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 947,
			d: 22400,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 885,
			d: 22400,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 950,
			d: 22400,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 887,
			d: 22400,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 576,
			d: 22400,
			q: 50,
			t: "Linear Expressions"
		}, {
			ID: 570,
			d: 22500,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 571,
			d: 22500,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 942,
			d: 22500,
			q: 50,
			t: "Linear Expressions"
		}, {
			ID: 907,
			d: 22500,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 954,
			d: 22500,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 1043,
			d: 22600,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 893,
			d: 22600,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 944,
			d: 22600,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 886,
			d: 22600,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 883,
			d: 22700,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 898,
			d: 22700,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 906,
			d: 22700,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 941,
			d: 22800,
			q: 50,
			t: "Rational Numbers: Mixed Operations"
		}, {
			ID: 884,
			d: 22800,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 940,
			d: 22900,
			q: 50,
			t: "Rational Numbers: Mixed Operations"
		}]
	},
	36: {
		ID: 36,
		grade: 7,
		sub: "Florida",
		country: "United States",
		locationID: "3",
		skills: [{
			ID: 509,
			d: 21e3,
			q: 50,
			t: "Ratios"
		}, {
			ID: 372,
			d: 21e3,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 223,
			d: 21e3,
			q: 48,
			t: "Data Relationships"
		}, {
			ID: 856,
			d: 21e3,
			q: 50,
			t: "Unit Rates"
		}, {
			ID: 977,
			d: 21e3,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1038,
			d: 21e3,
			q: 20,
			t: "2D Shapes"
		}, {
			ID: 1039,
			d: 21100,
			q: 50,
			t: "Unit Rates"
		}, {
			ID: 1040,
			d: 21100,
			q: 50,
			t: "Unit Rates"
		}, {
			ID: 1159,
			d: 21100,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 857,
			d: 21100,
			q: 50,
			t: "Unit Rates"
		}, {
			ID: 858,
			d: 21100,
			q: 50,
			t: "Ratios"
		}, {
			ID: 866,
			d: 21100,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 329,
			d: 21100,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 367,
			d: 21100,
			q: 50,
			t: "2D Shapes"
		}, {
			ID: 383,
			d: 21100,
			q: 35,
			t: "3D Shapes"
		}, {
			ID: 502,
			d: 21100,
			q: 50,
			t: "Ratios"
		}, {
			ID: 580,
			d: 21100,
			q: 50,
			t: "Probability"
		}, {
			ID: 572,
			d: 21100,
			q: 50,
			t: "Rational Numbers: Represent"
		}, {
			ID: 568,
			d: 21200,
			q: 50,
			t: "Rational Numbers: Represent"
		}, {
			ID: 506,
			d: 21200,
			q: 50,
			t: "Ratios"
		}, {
			ID: 387,
			d: 21200,
			q: 20,
			t: "3D Shapes"
		}, {
			ID: 579,
			d: 21200,
			q: 50,
			t: "Probability"
		}, {
			ID: 1042,
			d: 21200,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1046,
			d: 21200,
			q: 25,
			t: "Probability"
		}, {
			ID: 1023,
			d: 21200,
			q: 50,
			t: "Ratios"
		}, {
			ID: 1025,
			d: 21200,
			q: 50,
			t: "Ratios"
		}, {
			ID: 978,
			d: 21200,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 979,
			d: 21200,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 984,
			d: 21200,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 985,
			d: 21300,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 981,
			d: 21300,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 957,
			d: 21300,
			q: 50,
			t: "Probability"
		}, {
			ID: 1022,
			d: 21300,
			q: 50,
			t: "Ratios"
		}, {
			ID: 1075,
			d: 21300,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 525,
			d: 21300,
			q: 35,
			t: "Probability"
		}, {
			ID: 386,
			d: 21300,
			q: 20,
			t: "3D Shapes"
		}, {
			ID: 531,
			d: 21300,
			q: 30,
			t: "2D Shapes"
		}, {
			ID: 581,
			d: 21300,
			q: 50,
			t: "Unit Rates"
		}, {
			ID: 574,
			d: 21300,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 867,
			d: 21300,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 868,
			d: 21400,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 530,
			d: 21400,
			q: 30,
			t: "2D Shapes"
		}, {
			ID: 1009,
			d: 21400,
			q: 50,
			t: "Ratios"
		}, {
			ID: 1064,
			d: 21400,
			q: 50,
			t: "Geometry"
		}, {
			ID: 983,
			d: 21400,
			q: 50,
			t: "Probability"
		}, {
			ID: 1006,
			d: 21500,
			q: 50,
			t: "Probability"
		}, {
			ID: 980,
			d: 21500,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1010,
			d: 21500,
			q: 50,
			t: "Ratios"
		}, {
			ID: 1079,
			d: 21500,
			q: 50,
			t: "Probability"
		}, {
			ID: 385,
			d: 21500,
			q: 50,
			t: "3D Shapes"
		}, {
			ID: 379,
			d: 21500,
			q: 50,
			t: "Probability"
		}, {
			ID: 330,
			d: 21500,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 515,
			d: 21500,
			q: 50,
			t: "Integers"
		}, {
			ID: 582,
			d: 21600,
			q: 50,
			t: "Rational Numbers: Represent"
		}, {
			ID: 366,
			d: 21600,
			q: 50,
			t: "3D Shapes"
		}, {
			ID: 1041,
			d: 21600,
			q: 50,
			t: "Unit Rates"
		}, {
			ID: 1007,
			d: 21600,
			q: 50,
			t: "Probability"
		}, {
			ID: 1008,
			d: 21600,
			q: 50,
			t: "Probability"
		}, {
			ID: 982,
			d: 21600,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1037,
			d: 21700,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 355,
			d: 21700,
			q: 50,
			t: "Probability"
		}, {
			ID: 378,
			d: 21700,
			q: 50,
			t: "Probability"
		}, {
			ID: 573,
			d: 21700,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 869,
			d: 21700,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 878,
			d: 21800,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 511,
			d: 21800,
			q: 30,
			t: "Probability"
		}, {
			ID: 1036,
			d: 21800,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 1024,
			d: 21900,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 956,
			d: 21900,
			q: 50,
			t: "Probability"
		}, {
			ID: 860,
			d: 21900,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 902,
			d: 21900,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 903,
			d: 22e3,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 861,
			d: 22e3,
			q: 30,
			t: "Proportional Relationships"
		}, {
			ID: 859,
			d: 22e3,
			q: 30,
			t: "Data Relationships"
		}, {
			ID: 882,
			d: 22e3,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 569,
			d: 22e3,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 1080,
			d: 22e3,
			q: 50,
			t: "Probability"
		}, {
			ID: 1026,
			d: 22100,
			q: 40,
			t: "Proportional Relationships"
		}, {
			ID: 864,
			d: 22100,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 905,
			d: 22100,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 904,
			d: 22200,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 865,
			d: 22200,
			q: 30,
			t: "Proportional Relationships"
		}, {
			ID: 577,
			d: 22200,
			q: 50,
			t: "Linear Expressions"
		}, {
			ID: 578,
			d: 22300,
			q: 50,
			t: "Linear Expressions"
		}, {
			ID: 863,
			d: 22300,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 895,
			d: 22300,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 896,
			d: 22300,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 955,
			d: 22300,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 949,
			d: 22300,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 950,
			d: 22400,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 885,
			d: 22400,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 887,
			d: 22400,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 947,
			d: 22400,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 576,
			d: 22400,
			q: 50,
			t: "Linear Expressions"
		}, {
			ID: 570,
			d: 22500,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 571,
			d: 22500,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 942,
			d: 22500,
			q: 50,
			t: "Linear Expressions"
		}, {
			ID: 907,
			d: 22500,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 954,
			d: 22500,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 1043,
			d: 22600,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 944,
			d: 22600,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 893,
			d: 22600,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 886,
			d: 22600,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 898,
			d: 22700,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 906,
			d: 22700,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 883,
			d: 22700,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 884,
			d: 22800,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 941,
			d: 22800,
			q: 50,
			t: "Rational Numbers: Mixed Operations"
		}, {
			ID: 940,
			d: 22900,
			q: 50,
			t: "Rational Numbers: Mixed Operations"
		}]
	},
	37: {
		ID: 37,
		grade: 8,
		sub: "Common Core",
		country: "United States",
		locationID: "2",
		skills: [{
			ID: 541,
			d: 21100,
			q: 30,
			t: "3D Shapes"
		}, {
			ID: 691,
			d: 23e3,
			q: 50,
			t: "Angles"
		}, {
			ID: 698,
			d: 23100,
			q: 50,
			t: "Angles"
		}, {
			ID: 535,
			d: 23100,
			q: 50,
			t: "Exponents: Rules"
		}, {
			ID: 540,
			d: 23100,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 536,
			d: 23100,
			q: 50,
			t: "Exponents: Rules"
		}, {
			ID: 641,
			d: 23100,
			q: 50,
			t: "Scientific Notation"
		}, {
			ID: 1061,
			d: 23100,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1053,
			d: 23100,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1063,
			d: 23100,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1082,
			d: 23100,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1114,
			d: 23100,
			q: 50,
			t: "Linear Expressions"
		}, {
			ID: 1179,
			d: 23100,
			q: 50,
			t: "3D Shapes"
		}, {
			ID: 642,
			d: 23200,
			q: 50,
			t: "Scientific Notation"
		}, {
			ID: 638,
			d: 23200,
			q: 22,
			t: "Radicals"
		}, {
			ID: 639,
			d: 23200,
			q: 22,
			t: "Radicals"
		}, {
			ID: 663,
			d: 23200,
			q: 50,
			t: "Linear Expressions"
		}, {
			ID: 817,
			d: 23300,
			q: 50,
			t: "Exponents: Rules"
		}, {
			ID: 818,
			d: 23300,
			q: 50,
			t: "Exponents: Rules"
		}, {
			ID: 820,
			d: 23300,
			q: 50,
			t: "Exponents: Rules"
		}, {
			ID: 651,
			d: 23300,
			q: 50,
			t: "Irrational Numbers"
		}, {
			ID: 640,
			d: 23300,
			q: 50,
			t: "Scientific Notation"
		}, {
			ID: 1257,
			d: 23300,
			q: 30,
			t: "Data Relationships"
		}, {
			ID: 1177,
			d: 23300,
			q: 50,
			t: "Statistics"
		}, {
			ID: 1124,
			d: 23300,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1125,
			d: 23300,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1107,
			d: 23300,
			q: 50,
			t: "Geometry"
		}, {
			ID: 819,
			d: 23300,
			q: 50,
			t: "Exponents: Rules"
		}, {
			ID: 1134,
			d: 23400,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1135,
			d: 23400,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1176,
			d: 23400,
			q: 50,
			t: "Statistics"
		}, {
			ID: 630,
			d: 23400,
			q: 50,
			t: "Exponents: Rules"
		}, {
			ID: 631,
			d: 23400,
			q: 50,
			t: "Exponents: Rules"
		}, {
			ID: 632,
			d: 23400,
			q: 50,
			t: "Exponents: Rules"
		}, {
			ID: 629,
			d: 23400,
			q: 50,
			t: "Exponents: Rules"
		}, {
			ID: 655,
			d: 23400,
			q: 30,
			t: "Linear Expressions"
		}, {
			ID: 653,
			d: 23400,
			q: 50,
			t: "Scientific Notation"
		}, {
			ID: 644,
			d: 23400,
			q: 50,
			t: "Irrational Numbers"
		}, {
			ID: 692,
			d: 23400,
			q: 30,
			t: "Data Relationships"
		}, {
			ID: 654,
			d: 23500,
			q: 40,
			t: "Scientific Notation"
		}, {
			ID: 822,
			d: 23500,
			q: 50,
			t: "Exponents: Rules"
		}, {
			ID: 823,
			d: 23500,
			q: 40,
			t: "Exponents: Evaluate"
		}, {
			ID: 824,
			d: 23500,
			q: 50,
			t: "Exponents: Evaluate"
		}, {
			ID: 645,
			d: 23500,
			q: 50,
			t: "Irrational Numbers"
		}, {
			ID: 656,
			d: 23500,
			q: 30,
			t: "Linear Expressions"
		}, {
			ID: 1140,
			d: 23500,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1260,
			d: 23500,
			q: 30,
			t: "Data Relationships"
		}, {
			ID: 1277,
			d: 23500,
			q: 30,
			t: "Unit Rates"
		}, {
			ID: 826,
			d: 23500,
			q: 40,
			t: "Exponents: Evaluate"
		}, {
			ID: 827,
			d: 23500,
			q: 50,
			t: "Exponents: Evaluate"
		}, {
			ID: 1115,
			d: 23600,
			q: 50,
			t: "Functions"
		}, {
			ID: 1116,
			d: 23600,
			q: 48,
			t: "Functions"
		}, {
			ID: 1086,
			d: 23600,
			q: 48,
			t: "Expressions and Equations"
		}, {
			ID: 1276,
			d: 23600,
			q: 30,
			t: "Unit Rates"
		}, {
			ID: 652,
			d: 23600,
			q: 50,
			t: "Scientific Notation"
		}, {
			ID: 634,
			d: 23600,
			q: 40,
			t: "Exponents: Evaluate"
		}, {
			ID: 628,
			d: 23600,
			q: 50,
			t: "Exponents: Rules"
		}, {
			ID: 635,
			d: 23600,
			q: 50,
			t: "Exponents: Evaluate"
		}, {
			ID: 636,
			d: 23600,
			q: 50,
			t: "Exponents: Evaluate"
		}, {
			ID: 637,
			d: 23600,
			q: 40,
			t: "Exponents: Evaluate"
		}, {
			ID: 643,
			d: 23600,
			q: 30,
			t: "Irrational Numbers"
		}, {
			ID: 658,
			d: 23700,
			q: 30,
			t: "Linear Expressions"
		}, {
			ID: 686,
			d: 23700,
			q: 40,
			t: "Functions"
		}, {
			ID: 828,
			d: 23700,
			q: 50,
			t: "Exponents: Evaluate"
		}, {
			ID: 701,
			d: 23700,
			q: 50,
			t: "Pythagorean Theorem"
		}, {
			ID: 693,
			d: 23700,
			q: 30,
			t: "Data Relationships"
		}, {
			ID: 1099,
			d: 23700,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1062,
			d: 23700,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1085,
			d: 23700,
			q: 34,
			t: "Expressions and Equations"
		}, {
			ID: 1088,
			d: 23700,
			q: 48,
			t: "Expressions and Equations"
		}, {
			ID: 1097,
			d: 23700,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1101,
			d: 23700,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1098,
			d: 23800,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1108,
			d: 23800,
			q: 48,
			t: "Expressions and Equations"
		}, {
			ID: 1139,
			d: 23800,
			q: 50,
			t: "Geometry"
		}, {
			ID: 699,
			d: 23800,
			q: 50,
			t: "Pythagorean Theorem"
		}, {
			ID: 684,
			d: 23800,
			q: 50,
			t: "Functions"
		}, {
			ID: 688,
			d: 23800,
			q: 50,
			t: "Pythagorean Theorem"
		}, {
			ID: 696,
			d: 23800,
			q: 22,
			t: "Data Relationships"
		}, {
			ID: 659,
			d: 23800,
			q: 30,
			t: "Linear Expressions"
		}, {
			ID: 633,
			d: 23800,
			q: 50,
			t: "Exponents: Evaluate"
		}, {
			ID: 689,
			d: 23900,
			q: 50,
			t: "Pythagorean Theorem"
		}, {
			ID: 681,
			d: 23900,
			q: 50,
			t: "Functions"
		}, {
			ID: 661,
			d: 23900,
			q: 50,
			t: "Linear Expressions"
		}, {
			ID: 685,
			d: 23900,
			q: 21,
			t: "Functions"
		}, {
			ID: 1138,
			d: 23900,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1111,
			d: 23900,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1150,
			d: 23900,
			q: 50,
			t: "Pythagorean Theorem"
		}, {
			ID: 1100,
			d: 24e3,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1087,
			d: 24e3,
			q: 48,
			t: "Expressions and Equations"
		}, {
			ID: 1137,
			d: 24e3,
			q: 50,
			t: "Geometry"
		}, {
			ID: 700,
			d: 24e3,
			q: 50,
			t: "Pythagorean Theorem"
		}, {
			ID: 694,
			d: 24e3,
			q: 22,
			t: "Data Relationships"
		}, {
			ID: 697,
			d: 24e3,
			q: 22,
			t: "Data Relationships"
		}, {
			ID: 687,
			d: 24100,
			q: 40,
			t: "Functions"
		}, {
			ID: 690,
			d: 24100,
			q: 50,
			t: "Pythagorean Theorem"
		}, {
			ID: 660,
			d: 24100,
			q: 50,
			t: "Linear Expressions"
		}, {
			ID: 1081,
			d: 24100,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1084,
			d: 24200,
			q: 31,
			t: "Geometry"
		}, {
			ID: 1151,
			d: 24200,
			q: 50,
			t: "Pythagorean Theorem"
		}, {
			ID: 1136,
			d: 24200,
			q: 50,
			t: "Geometry"
		}, {
			ID: 695,
			d: 24200,
			q: 22,
			t: "Data Relationships"
		}, {
			ID: 682,
			d: 24300,
			q: 40,
			t: "Functions"
		}, {
			ID: 1152,
			d: 24300,
			q: 50,
			t: "Pythagorean Theorem"
		}, {
			ID: 1083,
			d: 24300,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1113,
			d: 24400,
			q: 48,
			t: "Expressions and Equations"
		}, {
			ID: 667,
			d: 24400,
			q: 40,
			t: "Linear Expressions"
		}, {
			ID: 1112,
			d: 24500,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1133,
			d: 24500,
			q: 50,
			t: "Geometry"
		}, {
			ID: 664,
			d: 24600,
			q: 42,
			t: "Linear Expressions"
		}, {
			ID: 665,
			d: 24700,
			q: 42,
			t: "Linear Expressions"
		}, {
			ID: 666,
			d: 24700,
			q: 36,
			t: "Linear Expressions"
		}, {
			ID: 680,
			d: 24800,
			q: 30,
			t: "Linear Expressions"
		}, {
			ID: 679,
			d: 24800,
			q: 27,
			t: "Linear Expressions"
		}, {
			ID: 678,
			d: 24900,
			q: 40,
			t: "Linear Expressions"
		}, {
			ID: 683,
			d: 24900,
			q: 40,
			t: "Functions"
		}, {
			ID: 662,
			d: 24900,
			q: 50,
			t: "Linear Expressions"
		}]
	},
	38: {
		ID: 38,
		grade: 8,
		sub: "Florida",
		country: "United States",
		locationID: "3",
		skills: [{
			ID: 541,
			d: 21100,
			q: 30,
			t: "3D Shapes"
		}, {
			ID: 691,
			d: 23e3,
			q: 50,
			t: "Angles"
		}, {
			ID: 535,
			d: 23100,
			q: 50,
			t: "Exponents: Rules"
		}, {
			ID: 536,
			d: 23100,
			q: 50,
			t: "Exponents: Rules"
		}, {
			ID: 540,
			d: 23100,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 698,
			d: 23100,
			q: 50,
			t: "Angles"
		}, {
			ID: 1053,
			d: 23100,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1061,
			d: 23100,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1063,
			d: 23100,
			q: 50,
			t: "Geometry"
		}, {
			ID: 641,
			d: 23100,
			q: 50,
			t: "Scientific Notation"
		}, {
			ID: 1082,
			d: 23100,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1114,
			d: 23100,
			q: 50,
			t: "Linear Expressions"
		}, {
			ID: 1179,
			d: 23100,
			q: 50,
			t: "3D Shapes"
		}, {
			ID: 642,
			d: 23200,
			q: 50,
			t: "Scientific Notation"
		}, {
			ID: 638,
			d: 23200,
			q: 22,
			t: "Radicals"
		}, {
			ID: 639,
			d: 23200,
			q: 22,
			t: "Radicals"
		}, {
			ID: 663,
			d: 23200,
			q: 50,
			t: "Linear Expressions"
		}, {
			ID: 640,
			d: 23300,
			q: 50,
			t: "Scientific Notation"
		}, {
			ID: 651,
			d: 23300,
			q: 50,
			t: "Irrational Numbers"
		}, {
			ID: 817,
			d: 23300,
			q: 50,
			t: "Exponents: Rules"
		}, {
			ID: 818,
			d: 23300,
			q: 50,
			t: "Exponents: Rules"
		}, {
			ID: 819,
			d: 23300,
			q: 50,
			t: "Exponents: Rules"
		}, {
			ID: 820,
			d: 23300,
			q: 50,
			t: "Exponents: Rules"
		}, {
			ID: 1257,
			d: 23300,
			q: 30,
			t: "Data Relationships"
		}, {
			ID: 1124,
			d: 23300,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1125,
			d: 23300,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1107,
			d: 23300,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1177,
			d: 23300,
			q: 50,
			t: "Statistics"
		}, {
			ID: 1176,
			d: 23400,
			q: 50,
			t: "Statistics"
		}, {
			ID: 1134,
			d: 23400,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1135,
			d: 23400,
			q: 50,
			t: "Geometry"
		}, {
			ID: 692,
			d: 23400,
			q: 30,
			t: "Data Relationships"
		}, {
			ID: 644,
			d: 23400,
			q: 50,
			t: "Irrational Numbers"
		}, {
			ID: 629,
			d: 23400,
			q: 50,
			t: "Exponents: Rules"
		}, {
			ID: 630,
			d: 23400,
			q: 50,
			t: "Exponents: Rules"
		}, {
			ID: 631,
			d: 23400,
			q: 50,
			t: "Exponents: Rules"
		}, {
			ID: 632,
			d: 23400,
			q: 50,
			t: "Exponents: Rules"
		}, {
			ID: 655,
			d: 23400,
			q: 30,
			t: "Linear Expressions"
		}, {
			ID: 653,
			d: 23400,
			q: 50,
			t: "Scientific Notation"
		}, {
			ID: 654,
			d: 23500,
			q: 40,
			t: "Scientific Notation"
		}, {
			ID: 656,
			d: 23500,
			q: 30,
			t: "Linear Expressions"
		}, {
			ID: 645,
			d: 23500,
			q: 50,
			t: "Irrational Numbers"
		}, {
			ID: 822,
			d: 23500,
			q: 50,
			t: "Exponents: Rules"
		}, {
			ID: 823,
			d: 23500,
			q: 40,
			t: "Exponents: Evaluate"
		}, {
			ID: 824,
			d: 23500,
			q: 50,
			t: "Exponents: Evaluate"
		}, {
			ID: 826,
			d: 23500,
			q: 40,
			t: "Exponents: Evaluate"
		}, {
			ID: 827,
			d: 23500,
			q: 50,
			t: "Exponents: Evaluate"
		}, {
			ID: 1260,
			d: 23500,
			q: 30,
			t: "Data Relationships"
		}, {
			ID: 1140,
			d: 23500,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1277,
			d: 23500,
			q: 30,
			t: "Unit Rates"
		}, {
			ID: 1276,
			d: 23600,
			q: 30,
			t: "Unit Rates"
		}, {
			ID: 1115,
			d: 23600,
			q: 50,
			t: "Functions"
		}, {
			ID: 1116,
			d: 23600,
			q: 48,
			t: "Functions"
		}, {
			ID: 1086,
			d: 23600,
			q: 48,
			t: "Expressions and Equations"
		}, {
			ID: 628,
			d: 23600,
			q: 50,
			t: "Exponents: Rules"
		}, {
			ID: 652,
			d: 23600,
			q: 50,
			t: "Scientific Notation"
		}, {
			ID: 643,
			d: 23600,
			q: 30,
			t: "Irrational Numbers"
		}, {
			ID: 634,
			d: 23600,
			q: 40,
			t: "Exponents: Evaluate"
		}, {
			ID: 635,
			d: 23600,
			q: 50,
			t: "Exponents: Evaluate"
		}, {
			ID: 636,
			d: 23600,
			q: 50,
			t: "Exponents: Evaluate"
		}, {
			ID: 637,
			d: 23600,
			q: 40,
			t: "Exponents: Evaluate"
		}, {
			ID: 658,
			d: 23700,
			q: 30,
			t: "Linear Expressions"
		}, {
			ID: 701,
			d: 23700,
			q: 50,
			t: "Pythagorean Theorem"
		}, {
			ID: 1062,
			d: 23700,
			q: 50,
			t: "Geometry"
		}, {
			ID: 828,
			d: 23700,
			q: 50,
			t: "Exponents: Evaluate"
		}, {
			ID: 693,
			d: 23700,
			q: 30,
			t: "Data Relationships"
		}, {
			ID: 686,
			d: 23700,
			q: 40,
			t: "Functions"
		}, {
			ID: 1088,
			d: 23700,
			q: 48,
			t: "Expressions and Equations"
		}, {
			ID: 1097,
			d: 23700,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1085,
			d: 23700,
			q: 34,
			t: "Expressions and Equations"
		}, {
			ID: 1099,
			d: 23700,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1101,
			d: 23700,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1108,
			d: 23800,
			q: 48,
			t: "Expressions and Equations"
		}, {
			ID: 1098,
			d: 23800,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1139,
			d: 23800,
			q: 50,
			t: "Geometry"
		}, {
			ID: 688,
			d: 23800,
			q: 50,
			t: "Pythagorean Theorem"
		}, {
			ID: 684,
			d: 23800,
			q: 50,
			t: "Functions"
		}, {
			ID: 699,
			d: 23800,
			q: 50,
			t: "Pythagorean Theorem"
		}, {
			ID: 696,
			d: 23800,
			q: 22,
			t: "Data Relationships"
		}, {
			ID: 659,
			d: 23800,
			q: 30,
			t: "Linear Expressions"
		}, {
			ID: 633,
			d: 23800,
			q: 50,
			t: "Exponents: Evaluate"
		}, {
			ID: 661,
			d: 23900,
			q: 50,
			t: "Linear Expressions"
		}, {
			ID: 685,
			d: 23900,
			q: 21,
			t: "Functions"
		}, {
			ID: 681,
			d: 23900,
			q: 50,
			t: "Functions"
		}, {
			ID: 689,
			d: 23900,
			q: 50,
			t: "Pythagorean Theorem"
		}, {
			ID: 1111,
			d: 23900,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1138,
			d: 23900,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1150,
			d: 23900,
			q: 50,
			t: "Pythagorean Theorem"
		}, {
			ID: 1137,
			d: 24e3,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1100,
			d: 24e3,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1087,
			d: 24e3,
			q: 48,
			t: "Expressions and Equations"
		}, {
			ID: 700,
			d: 24e3,
			q: 50,
			t: "Pythagorean Theorem"
		}, {
			ID: 694,
			d: 24e3,
			q: 22,
			t: "Data Relationships"
		}, {
			ID: 697,
			d: 24e3,
			q: 22,
			t: "Data Relationships"
		}, {
			ID: 1081,
			d: 24100,
			q: 50,
			t: "Geometry"
		}, {
			ID: 690,
			d: 24100,
			q: 50,
			t: "Pythagorean Theorem"
		}, {
			ID: 687,
			d: 24100,
			q: 40,
			t: "Functions"
		}, {
			ID: 660,
			d: 24100,
			q: 50,
			t: "Linear Expressions"
		}, {
			ID: 695,
			d: 24200,
			q: 22,
			t: "Data Relationships"
		}, {
			ID: 1084,
			d: 24200,
			q: 31,
			t: "Geometry"
		}, {
			ID: 1136,
			d: 24200,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1151,
			d: 24200,
			q: 50,
			t: "Pythagorean Theorem"
		}, {
			ID: 1152,
			d: 24300,
			q: 50,
			t: "Pythagorean Theorem"
		}, {
			ID: 1083,
			d: 24300,
			q: 50,
			t: "Geometry"
		}, {
			ID: 682,
			d: 24300,
			q: 40,
			t: "Functions"
		}, {
			ID: 667,
			d: 24400,
			q: 40,
			t: "Linear Expressions"
		}, {
			ID: 1113,
			d: 24400,
			q: 48,
			t: "Expressions and Equations"
		}, {
			ID: 1112,
			d: 24500,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1133,
			d: 24500,
			q: 50,
			t: "Geometry"
		}, {
			ID: 664,
			d: 24600,
			q: 42,
			t: "Linear Expressions"
		}, {
			ID: 665,
			d: 24700,
			q: 42,
			t: "Linear Expressions"
		}, {
			ID: 666,
			d: 24700,
			q: 36,
			t: "Linear Expressions"
		}, {
			ID: 679,
			d: 24800,
			q: 27,
			t: "Linear Expressions"
		}, {
			ID: 680,
			d: 24800,
			q: 30,
			t: "Linear Expressions"
		}, {
			ID: 678,
			d: 24900,
			q: 40,
			t: "Linear Expressions"
		}, {
			ID: 662,
			d: 24900,
			q: 50,
			t: "Linear Expressions"
		}, {
			ID: 683,
			d: 24900,
			q: 40,
			t: "Functions"
		}]
	},
	40: {
		ID: 40,
		grade: 7,
		sub: "Texas",
		country: "United States",
		locationID: "4",
		skills: [{
			ID: 1012,
			d: 18900,
			q: 18,
			t: "3D Shapes"
		}, {
			ID: 1017,
			d: 19500,
			q: 20,
			t: "3D Shapes"
		}, {
			ID: 1018,
			d: 19500,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1019,
			d: 19600,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1013,
			d: 19600,
			q: 20,
			t: "3D Shapes"
		}, {
			ID: 509,
			d: 19600,
			q: 50,
			t: "Ratios"
		}, {
			ID: 324,
			d: 19600,
			q: 50,
			t: "Unit Rates"
		}, {
			ID: 1169,
			d: 19600,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1168,
			d: 19700,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1164,
			d: 19700,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1165,
			d: 19700,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1020,
			d: 19700,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1069,
			d: 19700,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 1070,
			d: 19700,
			q: 50,
			t: "Data Relationships"
		}, {
			ID: 1071,
			d: 19700,
			q: 30,
			t: "Data Relationships"
		}, {
			ID: 363,
			d: 19800,
			q: 50,
			t: "Unit Rates"
		}, {
			ID: 1167,
			d: 19800,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1049,
			d: 19800,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1170,
			d: 19800,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1048,
			d: 19900,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 865,
			d: 20300,
			q: 30,
			t: "Proportional Relationships"
		}, {
			ID: 1163,
			d: 20500,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 1162,
			d: 20600,
			q: 50,
			t: "Variables, Expressions, and Equations"
		}, {
			ID: 1038,
			d: 21e3,
			q: 20,
			t: "2D Shapes"
		}, {
			ID: 977,
			d: 21e3,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 856,
			d: 21e3,
			q: 50,
			t: "Unit Rates"
		}, {
			ID: 857,
			d: 21100,
			q: 50,
			t: "Unit Rates"
		}, {
			ID: 866,
			d: 21100,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1039,
			d: 21100,
			q: 50,
			t: "Unit Rates"
		}, {
			ID: 1040,
			d: 21100,
			q: 50,
			t: "Unit Rates"
		}, {
			ID: 1042,
			d: 21200,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 978,
			d: 21200,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 979,
			d: 21200,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 981,
			d: 21300,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 957,
			d: 21300,
			q: 50,
			t: "Probability"
		}, {
			ID: 867,
			d: 21300,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 581,
			d: 21300,
			q: 50,
			t: "Unit Rates"
		}, {
			ID: 868,
			d: 21400,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 983,
			d: 21400,
			q: 50,
			t: "Probability"
		}, {
			ID: 1009,
			d: 21400,
			q: 50,
			t: "Ratios"
		}, {
			ID: 1010,
			d: 21500,
			q: 50,
			t: "Ratios"
		}, {
			ID: 1006,
			d: 21500,
			q: 50,
			t: "Probability"
		}, {
			ID: 980,
			d: 21500,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 515,
			d: 21500,
			q: 50,
			t: "Integers"
		}, {
			ID: 982,
			d: 21600,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 1007,
			d: 21600,
			q: 50,
			t: "Probability"
		}, {
			ID: 1008,
			d: 21600,
			q: 50,
			t: "Probability"
		}, {
			ID: 1041,
			d: 21600,
			q: 50,
			t: "Unit Rates"
		}, {
			ID: 1037,
			d: 21700,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 573,
			d: 21700,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 869,
			d: 21700,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 878,
			d: 21800,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 1036,
			d: 21800,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 956,
			d: 21900,
			q: 50,
			t: "Probability"
		}, {
			ID: 860,
			d: 21900,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 902,
			d: 21900,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 903,
			d: 22e3,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 861,
			d: 22e3,
			q: 30,
			t: "Proportional Relationships"
		}, {
			ID: 859,
			d: 22e3,
			q: 30,
			t: "Data Relationships"
		}, {
			ID: 882,
			d: 22e3,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 569,
			d: 22e3,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 864,
			d: 22100,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 905,
			d: 22100,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 904,
			d: 22200,
			q: 50,
			t: "Rational Numbers: Addition and Subtraction"
		}, {
			ID: 895,
			d: 22300,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 896,
			d: 22300,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 863,
			d: 22300,
			q: 50,
			t: "Proportional Relationships"
		}, {
			ID: 885,
			d: 22400,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 887,
			d: 22400,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 570,
			d: 22500,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 571,
			d: 22500,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 907,
			d: 22500,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 893,
			d: 22600,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 886,
			d: 22600,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 898,
			d: 22700,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 906,
			d: 22700,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 883,
			d: 22700,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 884,
			d: 22800,
			q: 50,
			t: "Rational Numbers: Multiplication and Division"
		}, {
			ID: 941,
			d: 22800,
			q: 50,
			t: "Rational Numbers: Mixed Operations"
		}, {
			ID: 940,
			d: 22900,
			q: 50,
			t: "Rational Numbers: Mixed Operations"
		}]
	},
	41: {
		ID: 41,
		grade: 8,
		sub: "Texas",
		country: "United States",
		locationID: "4",
		skills: [{
			ID: 522,
			d: -300,
			q: 40,
			t: "2D Shapes"
		}, {
			ID: 541,
			d: 21100,
			q: 30,
			t: "3D Shapes"
		}, {
			ID: 691,
			d: 23e3,
			q: 50,
			t: "Angles"
		}, {
			ID: 698,
			d: 23100,
			q: 50,
			t: "Angles"
		}, {
			ID: 1053,
			d: 23100,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1063,
			d: 23100,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1061,
			d: 23100,
			q: 50,
			t: "Geometry"
		}, {
			ID: 641,
			d: 23100,
			q: 50,
			t: "Scientific Notation"
		}, {
			ID: 1179,
			d: 23100,
			q: 50,
			t: "3D Shapes"
		}, {
			ID: 642,
			d: 23200,
			q: 50,
			t: "Scientific Notation"
		}, {
			ID: 663,
			d: 23200,
			q: 50,
			t: "Linear Expressions"
		}, {
			ID: 1257,
			d: 23300,
			q: 30,
			t: "Data Relationships"
		}, {
			ID: 1124,
			d: 23300,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1125,
			d: 23300,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1107,
			d: 23300,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1134,
			d: 23400,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1135,
			d: 23400,
			q: 50,
			t: "Geometry"
		}, {
			ID: 644,
			d: 23400,
			q: 50,
			t: "Irrational Numbers"
		}, {
			ID: 655,
			d: 23400,
			q: 30,
			t: "Linear Expressions"
		}, {
			ID: 692,
			d: 23400,
			q: 30,
			t: "Data Relationships"
		}, {
			ID: 656,
			d: 23500,
			q: 30,
			t: "Linear Expressions"
		}, {
			ID: 1277,
			d: 23500,
			q: 30,
			t: "Unit Rates"
		}, {
			ID: 1140,
			d: 23500,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1276,
			d: 23600,
			q: 30,
			t: "Unit Rates"
		}, {
			ID: 1115,
			d: 23600,
			q: 50,
			t: "Functions"
		}, {
			ID: 1116,
			d: 23600,
			q: 48,
			t: "Functions"
		}, {
			ID: 1086,
			d: 23600,
			q: 48,
			t: "Expressions and Equations"
		}, {
			ID: 643,
			d: 23600,
			q: 30,
			t: "Irrational Numbers"
		}, {
			ID: 658,
			d: 23700,
			q: 30,
			t: "Linear Expressions"
		}, {
			ID: 693,
			d: 23700,
			q: 30,
			t: "Data Relationships"
		}, {
			ID: 686,
			d: 23700,
			q: 40,
			t: "Functions"
		}, {
			ID: 1062,
			d: 23700,
			q: 50,
			t: "Geometry"
		}, {
			ID: 701,
			d: 23700,
			q: 50,
			t: "Pythagorean Theorem"
		}, {
			ID: 1088,
			d: 23700,
			q: 48,
			t: "Expressions and Equations"
		}, {
			ID: 1097,
			d: 23700,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1099,
			d: 23700,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1085,
			d: 23700,
			q: 34,
			t: "Expressions and Equations"
		}, {
			ID: 1101,
			d: 23700,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1108,
			d: 23800,
			q: 48,
			t: "Expressions and Equations"
		}, {
			ID: 1098,
			d: 23800,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1139,
			d: 23800,
			q: 50,
			t: "Geometry"
		}, {
			ID: 699,
			d: 23800,
			q: 50,
			t: "Pythagorean Theorem"
		}, {
			ID: 696,
			d: 23800,
			q: 22,
			t: "Data Relationships"
		}, {
			ID: 659,
			d: 23800,
			q: 30,
			t: "Linear Expressions"
		}, {
			ID: 688,
			d: 23800,
			q: 50,
			t: "Pythagorean Theorem"
		}, {
			ID: 689,
			d: 23900,
			q: 50,
			t: "Pythagorean Theorem"
		}, {
			ID: 661,
			d: 23900,
			q: 50,
			t: "Linear Expressions"
		}, {
			ID: 1138,
			d: 23900,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1150,
			d: 23900,
			q: 50,
			t: "Pythagorean Theorem"
		}, {
			ID: 1111,
			d: 23900,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1100,
			d: 24e3,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 1087,
			d: 24e3,
			q: 48,
			t: "Expressions and Equations"
		}, {
			ID: 1137,
			d: 24e3,
			q: 50,
			t: "Geometry"
		}, {
			ID: 694,
			d: 24e3,
			q: 22,
			t: "Data Relationships"
		}, {
			ID: 697,
			d: 24e3,
			q: 22,
			t: "Data Relationships"
		}, {
			ID: 700,
			d: 24e3,
			q: 50,
			t: "Pythagorean Theorem"
		}, {
			ID: 1081,
			d: 24100,
			q: 50,
			t: "Geometry"
		}, {
			ID: 687,
			d: 24100,
			q: 40,
			t: "Functions"
		}, {
			ID: 690,
			d: 24100,
			q: 50,
			t: "Pythagorean Theorem"
		}, {
			ID: 660,
			d: 24100,
			q: 50,
			t: "Linear Expressions"
		}, {
			ID: 695,
			d: 24200,
			q: 22,
			t: "Data Relationships"
		}, {
			ID: 1136,
			d: 24200,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1151,
			d: 24200,
			q: 50,
			t: "Pythagorean Theorem"
		}, {
			ID: 1084,
			d: 24200,
			q: 31,
			t: "Geometry"
		}, {
			ID: 1152,
			d: 24300,
			q: 50,
			t: "Pythagorean Theorem"
		}, {
			ID: 682,
			d: 24300,
			q: 40,
			t: "Functions"
		}, {
			ID: 1083,
			d: 24300,
			q: 50,
			t: "Geometry"
		}, {
			ID: 1113,
			d: 24400,
			q: 48,
			t: "Expressions and Equations"
		}, {
			ID: 1112,
			d: 24500,
			q: 50,
			t: "Expressions and Equations"
		}, {
			ID: 664,
			d: 24600,
			q: 42,
			t: "Linear Expressions"
		}]
	}
}, Prodigy.EducationSystem.getAlignedSkills = function (e, t, i) {
	var a = [];
	for (var s in Prodigy.EducationSystem.curriculums)
		if (Prodigy.EducationSystem.curriculums.hasOwnProperty(s)) {
			var r = Prodigy.EducationSystem.curriculums[s];
			r.grade != e && Util.isDefined(e) || r.country != t || r.sub != i || (a = a.concat(r.skills))
		} return a
}, Prodigy.EducationSystem.isSkillInCurriculum = function (e, t, i, a) {
	for (var s in Prodigy.EducationSystem.curriculums)
		if (Prodigy.EducationSystem.curriculums.hasOwnProperty(s)) {
			var r = Prodigy.EducationSystem.curriculums[s];
			if (r.grade == e && r.country == t && r.sub == i)
				for (var o = 0; o < r.skills.length; o++)
					if (r.skills[o] == a) return !0
		} return !1
}, Prodigy.SkillSelection = function (e, t, i, a, s, r) {
	this.game = e, this.skillTree = t, this.exhaust = 0, this.selectedGrade = r, this.country = a, this.sub = s, this.skills = t.getSkills(Prodigy.EducationSystem.getAlignedSkills(null, a, s)), this.setup(i)
}, Prodigy.SkillSelection.prototype = {
	constructor: Prodigy.SkillSelection,
	setup: function (e) {
		this.grade = e, this.fastTrack = e < this.selectedGrade, this.skillTree.setCurriculum(this.country, this.sub);
		for (var t = 0; t < this.skills.length; t++)
			for (var i = this.skills[t], a = 1; e >= a; a++) Prodigy.EducationSystem.isSkillInCurriculum(a, this.country, this.sub, i.ID) && (i.grade = a);
		this.type = "BASIC " + this.grade + ", " + this.country + ", " + this.sub
	},
	save: function () {
		this.updated = !1
	},
	isComplete: function () {
		return !1
	},
	selectSkill: function () {
		console.log("-------------------------------------------\n"), console.log("\n------ " + this.type + " SKILL SELECTION ------"), this.current = null;
		for (var e = [], t = 0; t < this.skills.length && !Util.isDefined(this.current); t++) {
			var i = this.skills[t],
				a = "";
			i.isValid() ? i.isNew() && i.grade === this.grade ? (a = "NEW GRADE SKILL :", this.current = i) : i.isNew() && i.decay >= 3 * .6 ? (a = "NEW AVAIL PREREQ :", this.current = i) : !i.isNew() && i.grade <= this.grade ? (a = "NON-MASTERED SKILL :", this.current = i) : a = "SKIPPED (OUTSIDE GRADE) :" : (e.push(i), a = i.lock ? "SKILL LOCKED :" : i.localLock.length > 0 ? "PREREQS LOCKED :" : i.isMastered() ? "SKILL MASTERED :" : "SKIPPED ??? :"), console.log(a + " ID = " + i.ID + ", decay = " + i.decay + ", theta = " + i.theta + ", grade = " + i.grade)
		}
		if (!Util.isDefined(this.current))
			if (Util.isDefined(this.country) && this.grade < 8 && this.skillTree.isMastered(Prodigy.EducationSystem.getAlignedSkills(this.grade, this.country, this.sub))) console.log("GRADE COMPLETE!"), this.game.prodigy.network.updateUser({
				grade: this.grade + 1
			}, function () {}), this.game.prodigy.network.sendNotification({
				type: "grade:mastered:" + this.grade,
				message: {
					userID: this.game.prodigy.player.userID,
					grade: this.grade
				}
			}), this.setup(this.grade + 1);
			else {
				console.log("STUCK OR FULL MASTERY --- RANDOM SELECT!");
				for (var s = 0, t = 0; 5 > s && e.length > 0; t++) {
					var i = Util.randomArrayElement(e);
					i.grade === this.grade && (i.setDecay(.6 * 3), this.current = i, s++), Util.removeFromArray(i, e)
				}
			} return Util.isDefined(this.current) || (this.current = this.skills[0]), this.current
	},
	selectQuestion: function () {
		for (var e = Math.max(0, Math.ceil(this.current.questions / 20)), t = Math.floor(this.current.getNormalizedTheta() * this.current.questions), i = [], a = -.1, s = Math.max(0, t - e); s < this.current.questions && t + e > s; s++) a += .2 / (2 * e + 1), Util.inArray(this.current.previous, s) || i.push({
			index: s,
			mod: a
		});
		if (i.length > 0) {
			var r = Util.randomArrayElement(i);
			t = r.index, this.mod = r.mod
		} else this.mod = 0;
		return this.current.previous.push(t), this.current.previous.length > 10 && this.current.previous.splice(0, 1), console.log("QUESTION CHOSEN: index = " + t + ", mod = " + this.mod), 0 > t && (t = 0), t > this.current.questions - 1 && (t = this.current.questions - 1), {
			index: t
		}
	},
	answerQuestion: function (e, t, i) {
		this.exhaust += this.current.nFactor * (e ? 1 : 3), this.exhaust >= 150 && (this.exhaust = 0), this.skillTree.decrementLocks(), this.current.answerQuestion(this.mod, e, t, i)
	}
}, Prodigy.PlannerSkillSelection = function (e, t, i, a, s, r, o) {
	this.game = e, this.skillTree = t, this.country = s, this.sub = r, this.data = o, this.selectedGrade = a;
	var n = t.getSkills(Prodigy.EducationSystem.getAlignedSkills(null, s, r));
	this.data.sort(function (e, t) {
		var i = e.active ? -1e3 : Math.abs(e.diff),
			a = t.active ? -1e3 : Math.abs(t.diff);
		return i - a
	}), this.skills = [];
	for (var l = 0; l < this.data.length; l++)
		for (var h = this.data[l], d = 0; d < n.length; d++) {
			var p = n[d];
			if (Util.inArray(h.skill_list, p.ID) && (h.active || h.diff < 0)) this.skills.push(p);
			else if (h.diff >= 0 && !h.active)
				for (var c = 0; c < p.next.length; c++) {
					var u = p.next[c];
					Util.inArray(h.skill_list, u.ID) && !Util.inArray(h.skill_list, p.ID) && this.skills.push(p)
				}
		}
	console.log("PLANNER SKILLS:"), console.log(this.skills), this.setup(i)
}, Prodigy.extends(Prodigy.PlannerSkillSelection, Prodigy.SkillSelection, {
	constructor: Prodigy.PlannerSkillSelection,
	setup: function (e) {
		this.grade = e;
		for (var t = 0; t < this.skills.length; t++) {
			var i = this.skills[t];
			i.marked = !0
		}
		this.type = "PLANNER " + this.grade + ", " + this.country + ", " + this.sub
	},
	save: function () {
		this.updated = !1
	},
	isComplete: function () {
		for (var e = 0; e < this.skills.length; e++) {
			var t = this.skills[e];
			if (t.isMastered() && t.lastTime >= 14) return !1;
			if (!t.isValid() || t.isStruggling() && t.lastTime < 2 && Util.isSchoolHours());
			else if (t.isValid()) return !1
		}
		return !0
	},
	selectSkill: function (e) {
		e || (console.log("-------------------------------------------\n"), console.log("\n------ " + this.type + " SKILL SELECTION ------")), this.current = null;
		for (var t = 0; t < this.skills.length && !Util.isDefined(this.current); t++) {
			var i = this.skills[t],
				a = "";
			i.isMastered() && i.lastTime >= 14 ? (i.setDecay(4), i.lastTime = 2, this.current = i, a = "OLD MASTERY") : !i.isValid() || i.isStruggling() && i.lastTime < 2 && !Util.isSchoolHours() ? (this.skills.splice(t, 1), t--, a = "LOCKED") : i.isValid() && (i.lastTime = 2, this.current = i, a = "NORMAL"), e || console.log(a + " ID = " + i.ID + ", decay = " + i.decay + ", theta = " + i.theta + ", last = " + i.lastTime)
		}
		return this.current
	},
	answerQuestion: function (e, t, i) {
		Prodigy.SkillSelection.prototype.answerQuestion.call(this, e, t, i), !e && this.isComplete() && this.game.prodigy.network.sendAnalytics("failed", this.game.prodigy.player.userID, "Planner")
	}
}), Prodigy.HomeworkSkillSelection = function (e, t, i) {
	if (this.game = e, Util.isDefined(i)) {
		this.skills = i.skills, this.homeworkID = i.homeworkID, this.skillTree = t, this.incorrect = 0, this.correct = 0;
		for (var a = 0; a < this.skills.length; a++) {
			var s = this.skills[a];
			0 === a && (this.skillID = s.skillID), Util.isDefined(s.incorrect) && (this.incorrect += s.incorrect), Util.isDefined(s.correct) && (this.correct += s.correct)
		}
		Util.isDefined(i.stats) && Util.isDefined(i.stats.skills) && i.stats.skills > 1 && (this.isExtended = !0)
	}
}, Prodigy.extends(Prodigy.HomeworkSkillSelection, Prodigy.SkillSelection, {
	constructor: Prodigy.HomeworkSkillSelection,
	isComplete: function () {
		if (!Util.isDefined(this.skills)) return !0;
		for (var e = 0; e < this.skills.length; e++)
			if (this.skills[e].questions.length > 0) return !1;
		return !0
	},
	selectSkill: function () {
		if (!Util.isDefined(this.skills)) return null;
		console.log("HOMEWORK SELECT!");
		for (var e = 0; e < this.skills.length; e++) {
			var t = this.skills[e];
			if (t.questions.length > 0) {
				var i = this.skillTree.getSkill(t.skillID);
				if (Util.isDefined(i)) return this.currentSkill = t, this.currentQuestion = t.questions[0], this.current = i, this.current.marked = !0, console.log("HW ID = " + i.ID + ", decay = " + i.decay + ", theta = " + i.theta + ", grade = " + i.grade), i;
				this.skills.splice(e, 1), e--
			} else this.skills.splice(e, 1), e--
		}
		return null
	},
	selectQuestion: function () {
		return this.mod = 0, {
			ID: this.currentQuestion,
			homeworkID: this.homeworkID
		}
	},
	answerQuestion: function (e, t) {
		if (this.currentSkill.questions.splice(0, 1), e) this.correct++;
		else {
			this.incorrect++;
			var i = this.incorrect + this.correct;
			if (this.isExtended && this.incorrect >= 9) {
				var i = this.incorrect + this.correct,
					a = Math.floor(i * (.6 - .0055 * (i - 15)));
				(15 >= i || this.incorrect >= a) && (this.skills = null)
			}
		}
		if (Prodigy.SkillSelection.prototype.answerQuestion.call(this, e, t), this.isComplete()) {
			console.log("ASSIGNMENT COMPLETE"), this.game.prodigy.network.completeAssignment(this.homeworkID);
			var s = "";
			s = Util.isDefined(this.skills) ? "assignment:complete:" + this.homeworkID : "assignment:failed:" + this.homeworkID, this.game.prodigy.network.sendNotification({
				type: s,
				message: {
					userID: this.game.prodigy.player.userID,
					assignmentID: this.homeworkID,
					skillID: this.skillID,
					grade: this.getGrade()
				}
			})
		}
	},
	getGrade: function () {
		var e = this.correct + this.incorrect;
		return this.correct / e
	}
}), Prodigy.PlacementSkillSelection = function (e, t, i, a, s, r, o, n) {
	this.game = e, this.placementTestID = r, this.currentSkill = o, this.skills = [], this.grade = s, this.country = i, this.sub = a, this.momentum = n || 0, this.skillTree = t, this.newGrade = null, this.selectGrade = s, this.testIDs = Prodigy.PlacementSkillSelection.TARGETS[i];
	for (var l = 0, h = 0; h < this.testIDs.length; h++)
		for (var d = 0; d < this.testIDs[h].length; d++) {
			var p = t.getSkill(this.testIDs[h][d]);
			this.skills.push(p), p.marked = !0, (h === s - 2 || 0 === h && 0 > s - 2) && 0 === d && !Util.isDefined(o) && (this.currentSkill = l), l++
		}
}, Prodigy.extends(Prodigy.PlacementSkillSelection, Prodigy.SkillSelection, {
	constructor: Prodigy.PlacementSkillSelection,
	isComplete: function () {
		return 0 === this.momentum && !Util.isDefined(this.currentSkill)
	},
	save: function () {
		this.game.prodigy.network.updateUser({
			currentSkill: this.currentSkill,
			momentum: this.momentum
		}, function () {}), this.updated = !1
	},
	selectSkill: function () {
		return this.isComplete() ? null : (console.log("PLACEMENT ID " + this.placementTestID + " - " + this.currentSkill), this.current = this.skills[this.currentSkill], console.log("SKILL CHOSEN " + this.current.ID), this.current)
	},
	selectQuestion: function () {
		this.mod = 0;
		var e = 0;
		return e = 0 === this.current.correct ? 0 + this.current.incorrect : 1 === this.current.correct ? this.current.questions / 2 + Math.max(0, this.current.incorrect) : this.current.questions - 1 - Math.max(0, this.current.incorrect), e = Math.floor(e), 0 > e && (e = 0), e > this.current.questions - 1 && (e = this.current.questions - 1), {
			index: e
		}
	},
	answerQuestion: function (e, t) {
		if (this.updated = !0, Prodigy.SkillSelection.prototype.answerQuestion.call(this, e, t, !0), this.current.incorrectT >= 2) 0 === this.momentum ? this.momentum = -2 : 2 === this.momentum ? this.momentum = -1 : 1 === this.momentum && this.completeTest(this.currentSkill);
		else {
			if (!(this.current.correctT >= 3)) return;
			0 === this.momentum ? this.momentum = 2 : -2 === this.momentum ? this.momentum = 1 : -1 === this.momentum && this.completeTest(this.currentSkill + 1)
		}
		0 !== this.momentum && (this.currentSkill += this.momentum, (this.currentSkill <= 0 || this.currentSkill >= this.skills.length - 1) && this.completeTest(this.currentSkill))
	},
	completeTest: function (e) {
		0 > e && (e = 0), e > this.skills.length - 1 && (e = this.skills.length - 1);
		for (var t = 1, i = null, a = 1, s = 0, r = 0; r < this.testIDs.length && !Util.isDefined(i); r++) {
			t = r + 1;
			for (var o = 0; o < this.testIDs[r].length; o++) {
				if (s === e) {
					i = o / this.testIDs[r].length;
					break
				}
				s++
			}
		}
		this.momentum = 0, this.currentSkill = null, a = t === this.selectGrade ? this.selectGrade : t === this.selectGrade - 1 && i >= .75 ? this.selectGrade : i >= .15 ? t : t - 1, 1 > a ? a = 1 : a > 8 && (a = 8), this.completed = !0, this.newGrade = a, this.game.prodigy.education.setCurriculum(a, this.country, this.sub, this.grade), this.updated = !0, console.log("COMPLETE PLACEMENT TEST " + this.placementTestID + ", grade = " + a + ", percent = " + i), this.game.prodigy.network.finishPlacement(this.newGrade, this.game.prodigy.player.classIDs), this.game.prodigy.network.sendNotification({
			type: "placement-test:complete:" + this.newGrade,
			message: {
				userID: this.game.prodigy.player.userID,
				grade: this.newGrade
			}
		});
		var n = {
			currentSkill: "null",
			momentum: 0
		};
		n.grade = this.newGrade, n.placementTestID = "null", this.game.prodigy.network.updateUser(n, function () {}), console.log(n)
	}
}), Prodigy.PlacementSkillSelection.TARGETS = {
	1: [[94, 95, 148, 49, 3, 196, 482], [429, 439, 7, 53, 457, 77, 76], [176, 186, 240, 243, 249, 27, 38], [29, 129, 208, 760, 252, 719, 721], [51, 223, 258, 825, 1014, 117, 1016], [309, 359, 966, 328, 341, 322, 894], [998, 505, 515, 987, 512, 529, 332], [534, 535, 540, 688, 533, 609, 1061]],
	2: [[94, 97, 98, 164, 165, 196, 197], [166, 110, 243, 154, 186, 185, 458], [772, 782, 554, 753, 722, 719, 803], [847, 838, 1054, 1050, 849, 901, 925, 892], [805, 65, 385, 609, 876, 918], [999, 1059, 509, 506, 1044, 946], [387, 861, 541, 902, 979, 898], [691, 701, 681, 697, 663, 664]]
};
var Creature = function () {
	function e() {
		this.data = {}, this.appearanceChanged = !1
	}
	return e.prototype = Object.create(e.prototype), e.prototype.getDataAndClear = function () {
		return this.updated = !1, this.data
	}, e.prototype.getID = function () {
		return 0
	}, e.prototype.getAffixes = function () {
		return []
	}, e.prototype.canCatch = function () {
		return !1
	}, e.prototype.getAttacks = function () {
		return [1]
	}, e.prototype.isKnockedOut = function () {
		return this.getCurrentHearts() <= 0
	}, e.prototype.getMaxHearts = function (t) {
		return t = t || this.getLevel(), e.getHeartsFromCurve(Util.isDefined(this.type) ? this.type : "B", 1, t)
	}, e.prototype.getCurrentHearts = function () {
		return Util.isDefined(this.data.hp) ? (this.data.hp > this.getMaxHearts() && (this.data.hp = this.getMaxHearts()), this.data.hp) : this.getMaxHearts()
	}, e.prototype.changeCurrentHearts = function (e) {
		var t = this.getCurrentHearts() + e;
		0 > t && (t = 0), t > this.getMaxHearts() && (t = this.getMaxHearts()), this.data.hp = t, this.updated = !0
	}, e.prototype.addStars = function (t) {
		var i = this.getLevel();
		if (!(i >= 100)) {
			if (Util.isDefined(this.data.stars) ? this.data.stars += t : this.data.stars = t, this.data.level = e.levelFromStars(this.data.stars), i !== this.data.level) {
				Util.isDefined(this.levelEvents) || (this.levelEvents = []);
				var a = this.getLevelingCurve(this.data.level);
				if (Util.isDefined(a))
					for (var s = 0; s < a.length; s++) Util.inArray(this.levelEvents, a[s]) || this.levelEvents.push(a[s]);
				this.getMaxHearts(i) !== this.getMaxHearts(this.data.level) && this.levelEvents.push({
					h: 2,
					lvl: this.data.level
				})
			}
			this.updated = !0
		}
	}, e.prototype.getUnprocessedLevelEvents = function () {
		return this.levelEvents
	}, e.prototype.clearUnprocessedLevelEvents = function () {
		this.levelEvents = []
	}, e.prototype.getStars = function () {
		return Util.isDefined(this.data.stars) ? this.data.stars : 0
	}, e.prototype.getStarsToLevel = function () {
		var t = this.getStars(),
			i = this.getLevel(),
			a = e.starsToLevel(i);
		return Math.max(0, a - t)
	}, e.prototype.getStarReward = function () {
		return 10
	}, e.prototype.getLevel = function () {
		return Util.isDefined(this.data.level) ? this.data.level : 1
	}, e.prototype.getLevelingCurve = function () {
		return []
	}, e.prototype.getElement = function () {
		return "wizard"
	}, e.prototype.getDamageBonus = function () {
		return 0
	}, e.prototype.giveBonus = function () {}, e.prototype.getDrops = function () {
		return []
	}, e
}();
Creature.MAX_HEARTS = 80, Creature.HP_BONUS = {
	"A+": 4,
	A: 3,
	"A-": 2,
	"B+": 1,
	B: 0,
	"B-": -1,
	"C+": -2,
	C: -3,
	"C-": -4
}, Creature.enemiesPerLevel = function (e) {
	return Math.max(0, Math.floor(.8 + Math.pow(1.7, .085 * e)))
}, Creature.starsToLevel = function (e) {
	if (1 > e) return 0;
	for (var t = 0, i = 1; e >= i; i++) t += Creature.enemiesPerLevel(i);
	return 10 * t
}, Creature.getLevelPercent = function (e) {
	var t = Creature.levelFromStars(e),
		i = Creature.starsToLevel(t),
		a = Creature.starsToLevel(t - 1),
		s = (e - a) / (i - a);
	return s
}, Creature.levelFromStars = function (e) {
	for (var t = 1; 100 >= t; t++)
		if (e < Creature.starsToLevel(t)) return t;
	return 100
}, Creature.getHeartsFromCurve = function (e, t, i) {
	var a = Creature.HP_BONUS[e],
		s = Math.floor((20 + a) * i / 100),
		r = Math.floor((20 + a) * (t - 1) / 100);
	return 2 * (s - r)
}, Creature.getAttacksFromCurve = function (e, t, i) {
	for (var a = [], s = 0; s < e.length; s++) {
		var r = e[s];
		r.lvl >= t && r.lvl <= i && Util.isDefined(r.a) && a.push(r.a)
	}
	return a
}, Creature.getAttacksOfType = function (e, t) {
	for (var i = [], a = 0, s = 0; s < e.length; s++) Util.isDefined(Prodigy.Attacks.data[e[s] - 1]) && (a = Prodigy.Attacks.data[e[s] - 1].element), Util.isDefined(t) && a !== t || i.push(e[s]);
	return i
};
var Boss = function () {
		function e(e) {
			Creature.call(this), this.data.level = e.level, this.source = e
		}
		return e.prototype = Object.create(Creature.prototype), e.prototype.getAttacks = function () {
			return this.source.attacks || []
		}, e.prototype.getMaxHearts = function () {
			return this.source.maxHP
		}, e.prototype.getName = function () {
			return this.source.name
		}, e.prototype.getElement = function () {
			return this.source.element
		}, e.prototype.getID = function () {
			return this.source.ID
		}, e.prototype.getAffixes = function () {
			return []
		}, e.prototype.getStarReward = function () {
			return this.source.starBonus ? this.source.starBonus : Creature.prototype.getStarReward.call(this)
		}, e
	}(),
	Appearance = function () {
		function e() {
			var e = Math.random() < .5 ? "female" : "male",
				t = Names.generateName(e);
			this.data = {
				name: t,
				gender: e,
				hairStyle: Math.floor(1 + 8 * Math.random()),
				hairColor: Math.floor(1 + 16 * Math.random()),
				skinColor: Math.floor(1 + 5 * Math.random()),
				eyeColor: Math.floor(1 + 15 * Math.random())
			}
		}
		return e.prototype = Object.create(e.prototype), e.prototype.getDataAndClear = function () {
			return this.updated = !1, this.data
		}, e.prototype.getName = function () {
			return this.data.nick || this.data.name
		}, e.prototype.getFullName = function () {
			return this.data.name
		}, e.prototype.setName = function (e) {
			this.data.name = e, this.updated = !0
		}, e.prototype.setNickname = function (e) {
			this.data.nick = e, this.updated = !0
		}, e.prototype.getCoords = function () {
			return {
				x: this.data.x || 0,
				y: this.data.y || 0
			}
		}, e.prototype.setCoords = function (e, t) {
			e = Math.floor(e), t = Math.floor(t), (this.data.x !== e || this.data.y !== t) && (this.updated = !0), this.data.x = e, this.data.y = t
		}, e.prototype.getGender = function () {
			return this.data.gender
		}, e.prototype.setGender = function (e) {
			("male" === e || "female" === e) && (this.data.gender = e), this.updated = !0
		}, e.prototype.getHairStyle = function () {
			return this.data.hairStyle
		}, e.prototype.setHairStyle = function (e) {
			e >= 1 && 15 >= e && (this.data.hairStyle = e), this.updated = !0
		}, e.prototype.getHairColor = function () {
			return this.data.hairColor
		}, e.prototype.setHairColor = function (e) {
			e >= 1 && 16 >= e && (this.data.hairColor = e), this.updated = !0
		}, e.prototype.getEyeColor = function () {
			return this.data.eyeColor
		}, e.prototype.setEyeColor = function (e) {
			e >= 1 && 15 >= e && (this.data.eyeColor = e), this.updated = !0
		}, e.prototype.getSkinColor = function () {
			return this.data.skinColor
		}, e.prototype.setSkinColor = function (e) {
			e >= 1 && 5 >= e && (this.data.skinColor = e), this.updated = !0
		}, e.prototype.setAppearance = function (e) {
			Util.isEmptyObject(e) || (this.data = e)
		}, e.prototype.getHairName = function () {
			return e.hairNames[this.getGender()][this.getHairStyle() - 1]
		}, e
	}();
Appearance.hairNames = {
	male: ["Prince", "Spikes", "Rock Star", "Fever", "Neat", "Slick", "Shaggy", "Bed Head"],
	female: ["Grace", "Spring", "Fall", "Side Swept", "Winter", "Uplift", "Blossom", "Sunshine", "Excite", "Pizzazz", "Dashing", "Summer", "Lilly", "Sweetheart", "Island Breeze"]
};
var Quests = function () {
	function e() {
		this.data = {}
	}
	return e.prototype = Object.create(e.prototype), e.prototype.setQuests = function (e) {
		this.data = e
	}, e.prototype.getDataAndClear = function () {
		return this.updated = !1, this.data
	}, e.prototype.setZoneState = function (e, t, i) {
		this.setState(e, t, i, "state")
	}, e.prototype.getZoneState = function (e, t) {
		return this.getState(e, t, "state")
	}, e.prototype.setQuestState = function (e, t, i, a) {
		Util.isDefined(this.data[e]) && this.data[e].C === t && this.setState(e, i, a, "queststate")
	}, e.prototype.getQuestState = function (e, t, i) {
		return Util.isDefined(this.data[e]) && this.data[e].C === t ? this.getState(e, i, "queststate") : null
	}, e.prototype.setState = function (e, t, i, a) {
		Util.isDefined(e) && Util.isDefined(t) && (Util.isDefined(this.data[e]) || (this.data[e] = {}), Util.isDefined(this.data[e][a]) || (this.data[e][a] = {}), Util.isDefined(i) ? this.data[e][a][t] = i : delete this.data[e][a][t])
	}, e.prototype.getState = function (e, t, i) {
		return Util.isDefined(e) && Util.isDefined(t) ? Util.isDefined(this.data[e]) && Util.isDefined(this.data[e][i]) ? this.data[e][i][t] : null : null
	}, e.prototype.getZoneVar = function (e, t) {
		return Util.isDefined(this.data[e]) ? this.data[e][t] : null
	}, e.prototype.setZoneVar = function (e, t, i) {
		Util.isDefined(this.data[e]) || (this.data[e] = {}), this.data[e][t] = i
	}, e.prototype.getCurrentQuest = function (e) {
		return Util.isDefined(this.data[e]) && this.data[e].C ? this.data[e].C : 0
	}, e.prototype.getQuestProgress = function (e) {
		return Util.isDefined(this.data[e.ID]) ? (this.data[e.ID].C - 1) / e.quests.length : 0
	}, e.prototype.isQuestComplete = function (e, t, i, a) {
		if (!Util.isDefined(this.data[e]) || !Util.isDefined(a)) return !1;
		if (this.data[e].C < t) return !1;
		if (this.data[e].C > t) return !0;
		var s = !0;
		if (Util.isDefined(a.req))
			for (var r = 0; r < a.req.length; r++) {
				var o = a.req[r];
				"pet" === o.type ? this.getMonsterProgress(e, o.ID) < o.N && (s = !1) : "boss" === o.type || "player" === o.type ? 1 !== this.data[e].B && (s = !1) : i.backpack.hasItem(o.type, o.ID) < o.N && (s = !1)
			}
		return s
	}, e.prototype.isQuestStarted = function (e, t) {
		return Util.isDefined(this.data[e]) ? this.data[e].C == t && Util.isDefined(this.data[e].A) : !1
	}, e.prototype.getMonsterProgress = function (e, t) {
		var i = this.data[e].M;
		if (!Util.isDefined(i)) return 0;
		for (var a = 0; a < i.length; a++)
			if (i[a].ID == t) return i[a].N;
		return 0
	}, e.prototype.getBossProgress = function (e) {
		var t = this.data[e].B;
		return Util.isDefined(t) ? t : 0
	}, e.prototype.clearQuestLine = function (e) {
		delete this.data[e]
	}, e.prototype.startQuestLine = function (e) {
		Util.isDefined(e) && (Util.isDefined(this.data[e]) ? this.data[e].C = 1 : this.data[e] = {
			C: 1
		})
	}, e.prototype.startQuest = function (e, t) {
		Util.isDefined(this.data[e]) && this.data[e].C == t && (this.data[e].A = 1, this.updated = !0)
	}, e.prototype.completeQuest = function (e, t, i, a) {
		if (Util.isDefined(this.data[e]) && this.data[e].C == t) {
			if (Util.isDefined(a.req))
				for (var s = 0; s < a.req.length; s++) {
					var r = a.req[s];
					"pet" !== r.type && i.backpack.consume(r.type, r.ID, r.N)
				}
			delete this.data[e].A, delete this.data[e].M, delete this.data[e].B, delete this.data[e].queststate, this.data[e].C = t + 1, this.updated = !0
		}
	}, e.prototype.defeatMonster = function (t, i, a) {
		if (Util.isDefined(this.data[t])) {
			if (Util.isDefined(i.req))
				for (var s = 0; s < i.req.length; s++) "pet" === i.req[s].type && (this.data[t].M || (this.data[t].M = []), e.hasEntryForMonster(this.data[t].M, i.req[s].ID) || this.data[t].M.push({
					ID: i.req[s].ID,
					N: 0
				}));
			if (Util.isDefined(this.data[t].M))
				for (var s = 0; s < this.data[t].M.length; s++) {
					var r = this.data[t].M[s];
					r.ID == a && r.N++
				}
		}
	}, e.prototype.defeatBoss = function (e) {
		Util.isDefined(this.data[e]) && (this.data[e].B = 1)
	}, e
}();
Quests.hasEntryForMonster = function (e, t) {
	if (!Util.isDefined(e)) return !1;
	for (var i = 0; i < e.length; i++)
		if (e[i].ID == t) return !0;
	return !1
};
var State = function () {
		function e() {
			this.data = {
				tutorial: {},
				world: {},
				zone: {}
			}
		}
		return e.prototype = Object.create(e.prototype), e.prototype.setData = function (e) {
			this.data = e
		}, e.prototype.getDataAndClear = function () {
			return this.updated = !1, this.data
		}, e.prototype.set = function (e, t) {
			if (Util.isDefined(e)) {
				e = e.split("-");
				for (var i = this.data, a = 0; a < e.length; a++) Util.isDefined(i[e[a]]) || (i[e[a]] = {}), a === e.length - 1 ? i[e[a]] = t : i = i[e[a]];
				this.updated = !0
			}
		}, e.prototype.get = function (e) {
			if (Util.isDefined(e)) {
				e = e.split("-");
				for (var t = this.data, i = 0; i < e.length; i++) {
					if (!Util.isDefined(t[e[i]])) return null;
					t = t[e[i]]
				}
				return t
			}
			return null
		}, e
	}(),
	Backpack = function () {
		function e() {
			this.data = {
				hat: [],
				boots: [],
				weapon: [],
				outfit: [],
				item: [],
				fossil: [],
				key: [],
				relic: []
			}
		}
		return e.prototype = Object.create(e.prototype), e.prototype.getDataAndClear = function () {
			return this.updated = !1, this.data
		}, e.prototype.unlockAllItems = function () {
			for (var e in this.data)
				for (var t = this.data[e], i = 0; i < t.length; i++) Util.isDefined(t[i].L) && (delete t[i].L, this.updated = !0)
		}, e.prototype.setItems = function (e) {
			this.data = e
		}, e.prototype.getTotalUnique = function () {
			var e = 0;
			for (var t in this.data) e += this.data[t].length;
			return e
		}, e.prototype.setKeyItemData = function (e, t, i) {
			if (!Util.isDefined(this.data.key)) return null;
			for (var a = 0; a < this.data.key.length; a++) this.data.key[a].ID == e && (this.data.key[a][t] = i);
			this.updated = !0
		}, e.prototype.getKeyItemData = function (e, t) {
			if (!Util.isDefined(this.data.key)) return null;
			for (var i = 0; i < this.data.key.length; i++)
				if (this.data.key[i].ID == e) return this.data.key[i][t];
			return null
		}, e.prototype.hasItem = function (e, t) {
			if (!Util.isDefined(e) || !Util.isDefined(this.data[e])) return 0;
			for (var i = 0; i < this.data[e].length; i++)
				if (this.data[e][i].ID == t) return this.data[e][i].N || 1;
			return 0
		}, e.prototype.addKeyItem = function (e, t, i) {
			Util.isDefined(this.data.key) || (this.data.key = []);
			for (var a = this.data.key, s = 0; s < a.length; s++) {
				var r = a[s];
				if (r.ID == e && r.lvl < t) return r.lvl = t, this.updated = !0, void 0
			}
			var o = {
				ID: e
			};
			o.lvl = t, Util.isDefined(i) && Util.isDefined(i.seed) && (o.seed = i.seed), a.push(o), this.updated = !0
		}, e.prototype.add = function (e, t, i, a) {
			if (Util.isDefined(this.data[e]) || (this.data[e] = []), "key" === e) return this.addKeyItem(t), void 0;
			var a = a || 1,
				s = this.data[e];
			if (Util.isDefined(s)) {
				for (var r = 0; r < s.length; r++) {
					var o = s[r];
					if (o.ID == t) return Util.isDefined(o.N) ? o.N < 99 && (o.N += a) : o.N = 1 + a, o.N > 99 && (o.N = 99), this.updated = !0, void 0
				}
				var n = {
					ID: t
				};
				a > 1 && (n.N = a), i && (n.L = 1), s.push(n), this.updated = !0
			}
		}, e.prototype.consume = function (e, t, i) {
			if (Util.isDefined(e)) {
				var a = this.data[e];
				if (Util.isDefined(a))
					for (var s = 0; s < a.length; s++) {
						var r = a[s];
						if (r.ID == t) return Util.isDefined(r.N) ? (r.N -= i || 1, 1 === r.N ? delete r.N : r.N <= 0 && a.splice(s, 1)) : a.splice(s, 1), this.updated = !0, void 0
					}
			}
		}, e.prototype.getBackpackItemsByType = function (e) {
			var t = new Array,
				i = this.data[e];
			if (Util.isDefined(i))
				for (var a = 0; a < i.length; a++) t.push(i[a]);
			return t
		}, e.prototype.canCraft = function (e, t) {
			var i = Items.getItemData(e, t);
			if (!Util.isDefined(i.recipe)) return !1;
			for (var a = 0; a < i.recipe.length; a++) {
				var s = i.recipe[a];
				if (this.hasItem(s.type, s.ID) < s.N) return !1
			}
			return !0
		}, e.prototype.craft = function (e, t) {
			if (!this.canCraft(e, t)) return !1;
			for (var i = Items.getItemData(e, t), a = 0; a < i.recipe.length; a++) {
				var s = i.recipe[a];
				this.consume(s.type, s.ID, s.N)
			}
			return this.add(e, t), this.updated = !0, !0
		}, e
	}(),
	Equipment = function () {
		function e() {
			this.data = {}
		}
		return e.prototype = Object.create(e.prototype), e.prototype.getDataAndClear = function () {
			return this.updated = !1, this.data
		}, e.prototype.getHeartBonuses = function () {
			var e = 0;
			for (var t in this.data)
				if (this.data.hasOwnProperty(t)) {
					var i = Items.getItemData(t, this.data[t]);
					if (Util.isDefined(i) && Util.isDefined(i.effects))
						for (var a = 0; a < i.effects.length; a++)(33 === i.effects[a] || 34 === i.effects[a] || 35 === i.effects[a] || 82 === i.effects[a] || 83 === i.effects[a]) && (e += Prodigy.AffixManager.data[i.effects[a]].value)
				} return e
		}, e.prototype.getEquipment = function (e) {
			return !Util.isDefined(this.data[e]) || this.data[e] <= 0 ? null : this.data[e]
		}, e.prototype.setEquipment = function (e) {
			Util.isEmptyObject(e) || (this.data = e)
		}, e.prototype.equip = function (e, t) {
			return Util.isDefined(this.data[t]) && this.data[t] === e ? !1 : (this.data[t] = e, this.updated = !0, !0)
		}, e.prototype.unEquip = function (e) {
			if (Util.isDefined(this.data[e])) {
				var t = this.data[e];
				return delete this.data[e], this.updated = !0, t
			}
			return !1
		}, e
	}(),
	Kennel = function () {
		function e(e) {
			this.player = e, this.setPets([])
		}
		return e.prototype.getDataAndClear = function () {
			return this.updated = !1, this.data
		}, e.prototype.setTeam = function (e, t) {
			if (Util.isDefined(t))
				if (t == Number(t)) e.team = t;
				else {
					var i = e.team;
					e.team = t.team, t.team = i
				}
			else delete e.team;
			this.updated = !0
		}, e.prototype.getTeamSource = function () {
			var e = [];
			Util.isDefined(this.player.data.team) || (this.player.data.team = 0), e[this.player.data.team] = this.player;
			for (var t = 0; t < this.data.length; t++) {
				var i = this.data[t];
				Util.isDefined(i.team) && (Util.isDefined(e[i.team]) ? delete i.team : e[i.team] = i)
			}
			return e
		}, e.prototype.getTeam = function () {
			for (var e = this.getTeamSource(), t = 0; t < e.length; t++) {
				var i = e[t];
				i instanceof Player || !Util.isDefined(i) || (e[t] = new Monster(i))
			}
			return e
		}, e.prototype.getAvgTeamLv = function () {
			for (var e = this.getTeamSource(), t = 0, i = 0, a = 0; a < e.length; a++) Util.isDefined(e[a]) ? Util.isDefined(e[a].data) ? Util.isDefined(e[a].data.level) ? t += e[a].data.level : t++ : Util.isDefined(e[a].level) && (t += e[a].level) : i += 1;
			return Math.floor(t / (e.length - i))
		}, e.prototype.getTeamScore = function () {
			for (var e = this.getTeam(), t = 0, i = 0; i < e.length; i++) Util.isDefined(e[i]) && !e[i].isKnockedOut() && (t += e[i].getCurrentHearts());
			return t
		}, e.prototype.findEmptyTeamIndex = function () {
			var e = [0, 1, 2, 3, 4];
			Util.isDefined(this.player.data.team) ? Util.removeFromArray(this.player.data.team, e) : Util.removeFromArray(0, e);
			for (var t = 0; t < this.data.length; t++) {
				var i = this.data[t].team;
				Util.isDefined(i) && Util.removeFromArray(i, e)
			}
			return e[0]
		}, e.prototype.add = function (e) {
			if (Util.isDefined(e) && e) {
				var t = this.findEmptyTeamIndex();
				Util.isDefined(t) && (e.team = t), this.data.push(e), this.updated = !0
			}
		}, e.prototype.remove = function (e) {
			for (var t = this.data.length; t--;) this.data[t] === e && this.data.splice(t, 1);
			this.updated = !0
		}, e.prototype.getPets = function (e) {
			for (var t = [], i = 0; i < this.data.length; i++) e && Util.isDefined(this.data[i].team) || t.push(this.data[i]);
			return t
		}, e.prototype.setPets = function (e) {
			this.data = e
		}, e.prototype.getPetsAsMonsters = function () {
			for (var e = [], t = 0; t < this.data.length; t++) e.push(new Monster(this.data[t]));
			return e
		}, e.prototype.hasPet = function (e) {
			for (var t = 0; t < this.data.length; t++)
				if (this.data[t].ID == e) return !0;
			return !1
		}, e.prototype.isFull = function () {
			return this.data.length >= 140
		}, e
	}(),
	Monster = function () {
		function e(e) {
			Creature.call(this), this.data = e, this.nickname = e.nickname, this.drops = e.drops, this.attacks = e.attacks, delete this.data.R, delete this.data.drops, this.source = Monsters.getItemData(e.ID), this.type = this.source.life
		}
		return e.prototype = Object.create(Creature.prototype), e.prototype.canCatch = function (e) {
			return Util.isDefined(e.bounty) ? !0 : !Util.isDefined(this.nickname)
		}, e.prototype.getAffixes = function () {
			return this.source.effects
		}, e.prototype.getAttacks = function (e) {
			if (Util.isDefined(this.attacks)) return this.attacks;
			var t = [];
			if (Util.isDefined(this.data.evolve)) {
				for (var i = 1, a = 0; a < this.data.evolve.length; a++) {
					var s = this.data.evolve[a],
						r = Monsters.getItemData(s.ID).curve;
					t = t.concat(Creature.getAttacksFromCurve(r, i, s.lvl)), i = s.lvl
				}
				t = t.concat(Creature.getAttacksFromCurve(Monsters.getItemData(this.getID()).curve, i, this.getLevel()))
			} else t = t.concat(Creature.getAttacksFromCurve(Monsters.getItemData(this.getID()).curve, 1, this.getLevel()));
			return Creature.getAttacksOfType(Util.removeDuplicates(t), e)
		}, e.prototype.getMaxHearts = function (e) {
			var t = 12;
			if (Util.isDefined(this.data.evolve)) {
				for (var i = 1, a = 0; a < this.data.evolve.length; a++) {
					var s = this.data.evolve[a],
						r = Monsters.getItemData(s.ID).life;
					t += Creature.getHeartsFromCurve(r, i, s.lvl - 1), i = s.lvl
				}
				t += Creature.getHeartsFromCurve(this.type, i, this.getLevel())
			} else t += Creature.prototype.getMaxHearts.call(this, e);
			return Math.min(t, Creature.MAX_HEARTS)
		}, e.prototype.evolve = function (e) {
			Util.isDefined(this.data.evolve) || (this.data.evolve = []), this.data.evolve.push({
				ID: this.data.ID,
				lvl: this.getLevel()
			}), this.data.ID = e, this.source = Monsters.getItemData(this.data.ID)
		}, e.prototype.getID = function () {
			return this.source.ID
		}, e.prototype.getName = function () {
			return this.nickname || this.source.name
		}, e.prototype.getSourceName = function () {
			return this.source.name
		}, e.prototype.getDescription = function () {
			return this.source.flavorText
		}, e.prototype.getLife = function () {
			return this.source.life
		}, e.prototype.getPower = function () {
			return this.source.power
		}, e.prototype.getGrowth = function () {
			return this.source.growth
		}, e.prototype.getElement = function () {
			return this.source.element
		}, e.prototype.generate = function (e, t) {
			e = Math.max(1, e - t);
			var i = Creature.starsToLevel(e - 1);
			this.data.stars = i, this.data.level = e
		}, e.prototype.getLevelingCurve = function (e) {
			Creature.prototype.getLevelingCurve.call(this, e);
			for (var t = [], i = Monsters.getItemData(this.getID()).curve, a = 0; a < i.length; a++) {
				var s = i[a];
				Util.isDefined(s.e) && s.lvl <= e ? t.push(s) : s.lvl === e && t.push(s)
			}
			return t
		}, e.prototype.getDrops = function () {
			var e = [{
				type: "gold",
				N: 100
			}];
			return e = e.concat(Items.getItemDrops()), e = e.concat(Items.getItemDrops(this.drops))
		}, e
	}(),
	House = function () {
		function e() {
			this.data = {
				bg: {
					active: 1,
					own: [1]
				},
				items: {}
			}
		}
		return e.prototype = Object.create(e.prototype), e.prototype.getDataAndClear = function () {
			return this.updated = !1, this.data
		}, e.prototype.setItems = function (e) {
			Util.isDefined(e) && (this.data = e)
		}, e.prototype.getItems = function () {
			return this.data.items
		}, e.prototype.getSortedActive = function () {
			var e = [];
			for (var t in this.data.items)
				for (var i = this.data.items[t].A, a = 0; a < i.length; a++) {
					var s = i[a];
					s.ID = t, e.push(s)
				}
			return e.sort(function (e, t) {
				return e.z - t.z
			}), e
		}, e.prototype.setAllInactive = function () {
			for (var e in this.data.items) this.data.items[e].A = [];
			this.updated = !0
		}, e.prototype.add = function (e) {
			var t = this.data.items[e];
			Util.isDefined(t) || (t = this.data.items[e] = {
				N: 0,
				A: []
			}), t.N < 9 && t.N++, this.updated = !0
		}, e.prototype.setActive = function (e, t, i, a, s) {
			var r = this.data.items[e];
			if (Util.isDefined(r) && r.N > r.A.length) {
				var o = {
					x: t,
					y: i,
					z: a,
					a: s
				};
				return r.A.push(o), this.updated = !0, o
			}
			return null
		}, e.prototype.setInactive = function (e, t) {
			Util.removeFromArray(t, this.data.items[e].A), this.updated = !0
		}, e.prototype.getBackground = function () {
			return Util.isDefined(this.data.bg.active) ? this.data.bg.active : 1
		}, e.prototype.addBackground = function (e) {
			this.hasBackground(e) || this.data.bg.own.push(e), this.updated = !0
		}, e.prototype.setBackground = function (e) {
			this.data.bg.active = e, this.setAllInactive()
		}, e.prototype.hasBackground = function (e) {
			return Util.inArray(this.data.bg.own, e)
		}, e.prototype.getData = function (e) {
			return this.data.items[e]
		}, e.prototype.getOwned = function (e) {
			var t = this.getData(e);
			return Util.isDefined(t) && Util.isDefined(t.N) ? t.N : 0
		}, e.prototype.hasMax = function (e) {
			return this.getOwned(e) >= 9
		}, e.prototype.getActive = function (e) {
			var t = this.getData(e);
			return Util.isDefined(t) && Util.isDefined(t.A) ? t.A.length : 0
		}, e
	}(),
	Player = function () {
		function e() {
			Creature.call(this), this.init(null), this.saveEnabled = !1
		}
		return e.prototype = Object.create(Creature.prototype), e.prototype.createRandom = function () {
			this.equipment.data.hat = Items.getRandomItem("hat"), this.equipment.data.weapon = Items.getRandomItem("weapon"), this.equipment.data.outfit = Items.getRandomItem("outfit")
		}, e.prototype.getUpdatedData = function (e) {
			var t = {};
			(this.equipment.updated || e) && (t.equipment = this.equipment.getDataAndClear()), (this.tutorial.updated || e) && (t.tutorial = this.tutorial.getDataAndClear()), (this.appearance.updated || e) && (t.appearance = this.appearance.getDataAndClear()), (this.kennel.updated || e) && (t.pets = this.kennel.getDataAndClear()), (this.quests.updated || e) && (t.quests = this.quests.getDataAndClear()), (this.house.updated || e) && (t.house = this.house.getDataAndClear()), (this.updated || e) && (t.data = this.getDataAndClear()), (this.backpack.updated || e) && (t.inventory = this.backpack.getDataAndClear()), (this.state.updated || e) && (t.state = this.state.getDataAndClear());
			for (var i in t) t[i] = JSON.stringify(t[i]);
			return t
		}, e.prototype.init = function (e) {
			if (this.isMember = !1, this.backpack = new Backpack, this.equipment = new Equipment, this.appearance = new Appearance, this.kennel = new Kennel(this), this.quests = new Quests, this.state = new State, this.house = new House, this.tutorial = new Tutorial, !Util.isDefined(e)) return !1;
			if (console.log(JSON.stringify(e)), Util.isDefined(e.userID) && (this.userID = parseInt(e.userID)), Util.isDefined(e.data) && (this.data = Util.getObject(e.data)), Util.isDefined(e.pets) && this.kennel.setPets(Util.getObject(e.pets)), Util.isDefined(e.tutorial) && this.tutorial.setData(Util.getObject(e.tutorial)), Util.isDefined(e.state) && this.state.setData(Util.getObject(e.state)), Util.isDefined(e.house) && this.house.setItems(Util.getObject(e.house)), Util.isDefined(e.inventory) && this.backpack.setItems(Util.getObject(e.inventory)), Util.isDefined(e.equipment) && this.equipment.setEquipment(Util.getObject(e.equipment)), Util.isDefined(e.quests) && this.quests.setQuests(Util.getObject(e.quests)), Util.isDefined(e.appearance) && this.appearance.setAppearance(Util.getObject(e.appearance)), Util.isDefined(e.isMember) && 1 == e.isMember && this.setMembership(), Util.isDefined(e.classIDs)) {
				this.owners = e.classIDs, this.classIDs = [];
				for (var t = 0; t < e.classIDs.length; t++) this.classIDs.push(e.classIDs[t].ownerID)
			}
			Util.isDefined(e.dataloss) && (this.dataloss = e.dataloss)
		}, e.prototype.getBountyScore = function () {
			return this.data.bountyScore || 0
		}, e.prototype.addBountyScore = function (e) {
			this.data.bountyScore = this.getBountyScore() + e, this.updated = !0
		}, e.prototype.getMods = function () {
			var e = this.data.mods || {};
			return e
		}, e.prototype.getAffixes = function () {
			var e = [];
			for (var t in this.equipment.data)
				if (Util.isDefined(Items.getItemData(t, this.equipment.data[t])))
					for (var i = Items.getItemData(t, this.equipment.data[t]).effects, a = 0; a < i.length; a++) e.push(i[a]);
			return e
		}, e.prototype.setMod = function (e, t) {
			Util.isDefined(this.data.mods[e]) ? this.data.mods[e] += t : (this.data.mods[e] = t, this.updated = !0)
		}, e.prototype.hasMod = function (e) {
			return !Util.isDefined(this.data.mods[e])
		}, e.prototype.setMembership = function () {
			Util.isDefined(this.data.nm) ? this.data.nm = 2 : (this.data.nm = 1, this.updated = !0), this.isMember = !0, this.backpack.unlockAllItems()
		}, e.prototype.isUnranked = function () {
			return !Util.isDefined(this.data.arenaRank)
		}, e.prototype.getArenaRank = function () {
			return Util.isDefined(this.data.arenaRank) ? this.data.arenaRank : 0
		}, e.prototype.getArenaScore = function () {
			return Util.isDefined(this.data.arenaScore) ? this.data.arenaScore : 0
		}, e.prototype.fx = function (e, t) {
			this[e] = !0;
			var i = {
				action: "emit",
				data: {
					userID: this.userID,
					type: e
				}
			};
			t && (this[e] = i)
		}, e.prototype.heal = function () {
			this.changeCurrentHearts(200);
			for (var e = this.kennel.getPets(), t = 0; t < e.length; t++) delete e[t].hp;
			this.kennel.updated = !0
		}, e.prototype.healTeam = function (e) {
			this.changeCurrentHearts(e);
			for (var t = this.kennel.getPets(), i = 0; i < t.length; i++) {
				var a = new Monster(t[i]);
				Util.isDefined(t[i].hp) && (t[i].hp + e > a.getMaxHearts() ? delete t[i].hp : t[i].hp = t[i].hp + e)
			}
			this.kennel.updated = !0
		}, e.prototype.setZone = function (e) {
			this.data.zone = e, this.updated = !0
		}, e.prototype.transform = function (e, t) {
			this.transformID = e, Util.isDefined(this.timer) && window.clearInterval(this.timer), this.timer = setInterval(this.transform.bind(this), t)
		}, e.prototype.getAttacks = function (e) {
			var t = this.data.spellbook || this.getAllAttacks();
			return t.length > 6 && (t = t.splice(0, 6)), Util.isDefined(e) ? Creature.getAttacksOfType(t, e) : t
		}, e.prototype.getAllAttacks = function () {
			var t = Creature.getAttacksFromCurve(e.LEVEL_CURVE, 1, this.getLevel());
			if (Util.isDefined(this.data.spells))
				for (var i = 0; i < this.data.spells.length; i++) Util.inArray(t, this.data.spells[i]) || t.push(this.data.spells[i]);
			return t
		}, e.prototype.getName = function () {
			return this.appearance.getName()
		}, e.prototype.getMaxHearts = function (e) {
			return Math.min(Math.floor(20 + Creature.prototype.getMaxHearts.call(this, e) + this.getHeartBonus()), Creature.MAX_HEARTS)
		}, e.prototype.getHeartBonus = function () {
			return this.equipment.getHeartBonuses()
		}, e.prototype.getGold = function (e) {
			var t = 0;
			return Util.isDefined(this.data.gold) && (t = this.data.gold), e && (t = Util.numberToString(t)), t
		}, e.prototype.changeGold = function (e) {
			this.data.gold = this.getGold() + e, this.data.gold < 0 && delete this.data.gold, this.updated = !0
		}, e.prototype.equip = function (e, t) {
			if ("pet" === t) {
				this.kennel.remove(e)
			}
			return this.equipment.equip(e, t)
		}, e.prototype.unEquip = function (e) {
			var t = this.equipment.unEquip(e);
			return "pet" === e && this.kennel.add(t), t
		}, e.prototype.setDefault = function (e) {
			"male" === e ? this.appearance.setHairStyle(4) : this.appearance.setHairStyle(5), this.appearance.setGender(e), this.appearance.setHairColor(Math.floor(5 * Math.random() + 1)), this.appearance.setEyeColor(Math.floor(5 * Math.random() + 1)), this.appearance.setSkinColor(Math.floor(5 * Math.random() + 1)), this.equipment.unEquip("hat")
		}, e.prototype.getLevelingCurve = function (t) {
			Creature.prototype.getLevelingCurve.call(this, t);
			for (var i = [], a = 0; a < e.LEVEL_CURVE.length; a++) {
				var s = e.LEVEL_CURVE[a];
				s.lvl === t && i.push(s)
			}
			return i
		}, e.prototype.setSpinDate = function () {
			var e = new Date;
			this.data.spinDate = {
				d: e.getUTCDate(),
				m: e.getUTCMonth(),
				y: e.getUTCFullYear()
			}, this.updated = !0
		}, e.prototype.canSpin = function () {
			if (Util.isDefined(this.data.numSpins) && Util.isDefined(this.data.spinDate.d) && Util.isDefined(this.data.spinDate.m) && Util.isDefined(this.data.spinDate.y)) {
				var e = new Date;
				return (this.data.spinDate.d !== e.getUTCDate() || this.data.spinDate.m !== e.getUTCMonth() || this.data.spinDate.y !== e.getUTCFullYear()) && (this.setSpinDate(), this.data.numSpins = 0), 0 === this.data.numSpins || 1 === this.data.numSpins && this.isMember
			}
			return this.setSpinDate(), this.data.numSpins = 0, !0
		}, e.prototype.spinWheel = function () {
			this.data.numSpins++, this.updated = !0
		}, e.prototype.setSchool = function (e) {
			this.data.school = e, this.updated = !0
		}, e.prototype.getSchool = function () {
			return this.data.school
		}, e.prototype.setColiseum = function (e) {
			this.data.arena = e
		}, e.prototype.getColiseum = function () {
			return Util.isDefined(this.data.arena) ? this.data.arena : 0
		}, e.prototype.getTeamScore = function () {
			return this.kennel.getTeamScore()
		}, e.prototype.getWins = function () {
			return this.data.win || 0
		}, e.prototype.getLosses = function () {
			return this.data.loss || 0
		}, e.prototype.addArenaScore = function (e, t) {
			var i = this.getArenaScore();
			this.data.arenaScore = this.getArenaScore() + e, this.data.arenaScore < 0 && (this.data.arenaScore = 0), this.data.arenaScore > 5e3 && (this.data.arenaScore = 5e3), t ? this.data.win = (this.data.win || 0) + 1 : this.data.loss = (this.data.loss || 0) + 1;
			var a = 500 + Math.max(0, 1e3 * this.getArenaRank()),
				s = a - 1e3 - 200;
			t && a > i && this.getArenaScore() >= a && this.getArenaRank() < 4 ? this.data.arenaRank = this.getArenaRank() + 1 : !t && i >= s && this.getArenaScore() < s && this.getArenaRank() > 0 && (this.data.arenaRank = this.getArenaRank() - 1), this.getArenaScore() >= 100 && this.isUnranked() && (this.data.arenaRank = 0), this.updated = !0
		}, e.prototype.processDeserter = function () {
			return Util.isDefined(this.data.deserter) ? (delete this.data.deserter, this.addArenaScore(-50, !1), this.updated = !0, !0) : !1
		}, e.prototype.getTowerProgress = function () {
			return Util.isDefined(this.data.tower) ? this.data.tower : 0
		}, e.prototype.completeTower = function (e) {
			var t = this.getTowerProgress();
			e > t && (this.data.tower = e), this.updated = !0
		}, e.prototype.getLeaderboard = function () {
			return Util.isDefined(this.data.lb) ? this.data.lb : 31
		}, e.prototype.setLeaderboard = function (e) {
			this.data.lb = e, this.updated = !0
		}, e.prototype.addSpell = function (e) {
			Util.isDefined(this.data.spells) || (this.data.spells = []), Util.inArray(this.data.spells, e) || (this.data.spells.push(e), Util.isDefined(this.data.spellbook) && !Util.inArray(this.data.spellbook) && this.data.spellbook.length < 6 && this.data.spellbook.push(e)), this.updated = !0
		}, e.prototype.swapSpells = function (e, t) {
			if (Util.isDefined(e) && Util.isDefined(t)) {
				if (!Util.isDefined(this.data.spellbook)) {
					this.data.spellbook = [];
					for (var i = this.getAllAttacks(), a = 0; 6 > a && a < i.length; a++) this.data.spellbook[a] = i[a]
				}
				console.log(this.data.spellbook);
				for (var a = 0; a < this.data.spellbook.length; a++) this.data.spellbook[a] !== e ? this.data.spellbook[a] !== t || (this.data.spellbook[a] = e) : this.data.spellbook[a] = t;
				this.updated = !0
			}
		}, e
	}();
Player.LEVEL_CURVE = [{
	lvl: 1,
	a: 31
}, {
	lvl: 5,
	a: 32
}, {
	lvl: 12,
	a: 33
}, {
	lvl: 22,
	a: 34
}, {
	lvl: 38,
	a: 35
}, {
	lvl: 52,
	a: 36
}];
var Tutorial = function () {
	function e() {
		this.setData({
			zones: {},
			menus: {}
		})
	}
	return e.prototype.getDataAndClear = function () {
		return this.updated = !1, this.data
	}, e.prototype.setData = function (e) {
		this.data = e
	}, e.prototype.getMenuValue = function (e, t) {
		return this.getValue("menus", e, t)
	}, e.prototype.getZoneValue = function (e, t) {
		return this.getValue("zones", e, t)
	}, e.prototype.getValue = function (e, t, i) {
		if (!Util.isDefined(this.data[e][t])) return 0;
		var a = this.data[e][t];
		return i = i || 0, Util.isDefined(a[i]) ? a[i] : 0
	}, e.prototype.setMenuValue = function (e, t, i) {
		return this.setValue("menus", e, t, i)
	}, e.prototype.setZoneValue = function (e, t, i) {
		return this.setValue("zones", e, t, i)
	}, e.prototype.setValue = function (e, t, i, a) {
		Util.isDefined(this.data[e][t]) || (this.data[e][t] = []), i = i || 0, this.data[e][t][i] !== a && (this.data[e][t][i] = a, this.updated = !0)
	}, e
}();
Prodigy.Menu.Backpack = function (e, t, i) {
	this.player = i, Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.create()
}, Prodigy.extends(Prodigy.Menu.Backpack, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.Backpack,
	create: function () {
		this.addTransparent(), this.content = this.game.prodigy.create.element(this, 610, 220), this.createBaseSetup(30, 16, "shine", null, [{
			icon: "hat/5",
			bot: "Hats"
		}, {
			icon: "outfit/1",
			bot: "Outfits"
		}, {
			icon: "weapon/1",
			bot: "Wands"
		}, {
			icon: "boots/7",
			bot: "Boots"
		}, {
			icon: "item/29",
			bot: "Relics"
		}, {
			icon: "item/5",
			bot: "Items"
		}], !0);
		var e = this.game.prodigy.create.element(this, 0, 0);
		e.setRenderState(!0), e.add(new Phaser.TileSprite(this.game, 51, 240, 449, 40, "core", "blue-top")), e.add(new Phaser.TileSprite(this.game, 51, 280, 449, 300, "core", "blue-mid")), e.add(new Phaser.TileSprite(this.game, 51, 580, 449, 40, "core", "blue-top2")), e.add(new Phaser.TileSprite(this.game, 500, 280, 40, 300, "core", "blue-side2")), e.add(this.game.prodigy.create.sprite(500, 240, "core", "blue-corner2")), e.add(this.game.prodigy.create.sprite(500, 580, "core", "blue-corner3")), e.add(new Phaser.TileSprite(this.game, 631, 240, 598, 40, "core", "blue-top")), e.add(new Phaser.TileSprite(this.game, 631, 280, 598, 300, "core", "blue-mid")), e.add(new Phaser.TileSprite(this.game, 631, 580, 598, 40, "core", "blue-top2")), e.add(new Phaser.TileSprite(this.game, 591, 280, 40, 300, "core", "blue-side")), e.add(this.game.prodigy.create.sprite(591, 240, "core", "blue-corner")), e.add(this.game.prodigy.create.sprite(591, 580, "core", "blue-corner4")), e.add(this.game.prodigy.create.sprite(110, 63, "core", "backpack")), this.game.prodigy.create.panel(e, 100, 270, 10, 8, "white").alpha = .5, Prodigy.RenderMenu.prototype.create.call(this), this.bar = this.game.prodigy.create.slider(this, 1150, 240, 380, !0, !0), this.p = this.game.prodigy.create.player(this, this.player, 2, 280, 550), this.equip = this.game.prodigy.create.element(this, 80, 220), this.setMode(0), this.reload()
	},
	setMode: function (e) {
		switch (Prodigy.RenderMenu.prototype.setMode.call(this, e), this.clearContents(), e) {
		case 1:
			this.itemType = "outfit";
			break;
		case 2:
			this.itemType = "weapon";
			break;
		case 3:
			this.itemType = "boots";
			break;
		case 4:
			this.itemType = "relic";
			break;
		case 5:
			this.itemType = "item";
			break;
		default:
			this.itemType = "hat"
		}
		this.listItemsOfType()
	},
	clearContents: function () {
		Util.isDefined(this.content) && this.content.removeAll(!0)
	},
	itemSelected: function (e) {
		this.game.prodigy.open.itemInfo({
			ID: e.ID,
			L: e.L,
			type: e.type || this.itemType
		}, this.reload.bind(this), "equip")
	},
	reload: function (e) {
		this.equip.removeAll(!0);
		for (var t = ["hat", "weapon", "outfit", "boots", "relic", "ring"], i = 0; i < t.length; i++) {
			var a = {
					ID: this.player.equipment.getEquipment(t[i]),
					type: t[i]
				},
				s = this.itemSelected.bind(this, a);
			"ring" === t[i] ? s = null : Util.isDefined(a.ID) || (s = this.game.prodigy.open.pouch.bind(this.game.prodigy.open, t[i], this.reload.bind(this))), this.game.prodigy.create.item(this.equip, i % 2 * 340, 40 + 120 * Math.floor(i / 2), a, "icon", s)
		}
		this.game.input.clearEnterCallback(), this.p.reload(), this.bar.process(), e && this.close()
	},
	scrollItems: function (e) {
		this.page = Util.isDefined(e) ? e : Util.isDefined(this.page) ? this.page : 0, e = this.page, this.clearContents(), this.owned = this.player.backpack.getBackpackItemsByType(this.itemType);
		for (var t = e; e + 6 > t; t++) {
			var i = t - e;
			t >= this.owned.length ? this.game.prodigy.create.panel(this.content, i % 3 * 180, 220 * Math.floor(i / 3), 4, 5, "empty") : this.game.prodigy.create.item(this.content, i % 3 * 180, 220 * Math.floor(i / 3), {
				ID: this.owned[t].ID,
				type: this.itemType,
				L: this.owned[t].L,
				N: this.owned[t].N
			}, "inv", this.itemSelected.bind(this, this.owned[t]))
		}
	},
	listItemsOfType: function () {
		this.owned = this.player.backpack.getBackpackItemsByType(this.itemType), this.bar.reset(this.owned.length - 3, 3, -1, this.scrollItems.bind(this))
	}
}), Prodigy.Menu.Pouch = function (e, t, i, a, s, r) {
	this.player = i, this.itemType = a, this.onClose = s, this.selected = r, Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.create()
}, Prodigy.extends(Prodigy.Menu.Pouch, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.Pouch,
	create: function () {
		this.addTransparent(), this.panel = this.game.prodigy.create.panel(this, 220, 100, 21, 13, "shine"), this.panel.setRenderState(!0), this.game.prodigy.create.button(this, this.panel.x + 800, this.panel.y - 10, "icons", "close", this.close.bind(this)), this.content = this.game.prodigy.create.element(this, 260, 180, 19, 6), this.game.prodigy.create.panel(this, 260, 180, 19, 10, "white"), this.game.prodigy.create.font(this, 290, 120, "Choose your " + this.itemType, {
			font: "button",
			size: 36,
			width: 720,
			align: "center"
		}), Prodigy.RenderMenu.prototype.create.call(this), this.game.input.setEnterCallback(this.searchItems.bind(this)), this.game.input.keyboard.enabled = !0, this.setMode(0)
	},
	setMode: function (e) {
		Prodigy.RenderMenu.prototype.setMode.call(this, e), this.listItemsOfType()
	},
	clearContents: function () {
		Util.isDefined(this.content) && this.content.destroy(), Util.isDefined(this.searchNotFound) && !this.isSearch && this.searchNotFound.destroy(), this.content = this.game.prodigy.create.element(this, 100, 180, 21, 6)
	},
	onWear: function () {
		this.searchBar.show(0), this.close()
	},
	switchSpell: function (e) {
		e !== this.selected && this.player.swapSpells(this.selected, e), this.close()
	},
	searchItems: function () {
		var e = this.searchBar.getValue().toUpperCase().trim();
		if ("" === e) this.clearSearch();
		else {
			if (this.isSearch = !0, "spell" === this.itemType) {
				var t = this.player.getAllAttacks();
				this.owned = [];
				for (var i = 0; i < t.length; i++) this.owned.push({
					ID: t[i]
				})
			} else this.owned = this.player.backpack.getBackpackItemsByType(this.itemType);
			for (var a = [], i = 0; i < this.owned.length; i++)
				if ("spell" === this.itemType) {
					var s = this.game.prodigy.attacks.getAttack(this.owned[i].ID).name;
					s.toUpperCase().includes(e) && a.push(this.game.prodigy.attacks.getAttack(this.owned[i].ID))
				} else {
					var s = Items.getItemData(this.itemType, this.owned[i].ID).name;
					s.toUpperCase().includes(e) && a.push(Items.getItemData(this.itemType, this.owned[i].ID))
				} for (var r = [], i = 0; i < a.length; i++)
				for (var o = 0; o < this.owned.length; o++) a[i].ID === this.owned[o].ID && r.push(this.owned[o]);
			this.owned = r, this.bar.reset(this.owned.length - 3, 1, -1, this.scrollItems.bind(this)), 0 === this.owned.length && (this.clearContents(), this.searchNotFound = this.game.prodigy.create.font(this.content, 230, 165, "No items containing your search were found", {
				width: 620,
				align: "center"
			}))
		}
	},
	clearSearch: function () {
		this.clearContents(), this.searchBtn.destroy(), this.searchBtn = this.game.prodigy.create.textButton(this, 790, 210, {
			text: "search",
			icon: "inspect",
			size: Prodigy.Control.TextButton.SMALL
		}, this.searchItems.bind(this)), this.searchBar.setValue(""), this.searchBar.setFocus(!0), this.isSearch = !1, this.listItemsOfType()
	},
	scrollItems: function (e) {
		if (console.log(e), this.clearContents(), !this.isSearch && !this.isSort)
			if ("spell" === this.itemType) {
				var t = this.player.getAllAttacks();
				this.owned = [];
				for (var i = 0; i < t.length; i++) this.owned.push({
					ID: t[i]
				})
			} else this.owned = this.player.backpack.getBackpackItemsByType(this.itemType);
		for (var a = 0, i = e; e + 4 > i; i++) i < this.owned.length && ("spell" === this.itemType ? this.game.prodigy.create.item(this.content, 190 + 180 * a, 100, {
			ID: this.owned[i].ID,
			type: this.itemType
		}, "inv", this.switchSpell.bind(this, this.owned[i].ID), this.onWear.bind(this)) : this.game.prodigy.create.item(this.content, 190 + 180 * a, 100, {
			ID: this.owned[i].ID,
			type: this.itemType,
			N: this.owned[i].N,
			L: this.owned[i].L
		}, "inv", this.equipItem.bind(this, this.owned[i]))), a++;
		for (var i = Math.min(this.owned.length, 4); 4 > i; i++) this.game.prodigy.create.panel(this.content, 190 + 180 * i, 100, 4, 5, "empty")
	},
	listItemsOfType: function () {
		if (Util.isDefined(this.bar) && this.bar.destroy(), "spell" === this.itemType) {
			var e = this.player.getAllAttacks();
			this.owned = [];
			for (var t = 0; t < e.length; t++) this.owned.push({
				ID: e[t]
			})
		} else this.owned = this.player.backpack.getBackpackItemsByType(this.itemType);
		this.bar = this.game.prodigy.create.slider(this, 290, 500, 700, !1, !0), this.bar.reset(this.owned.length - 3, 1, -1, this.scrollItems.bind(this))
	},
	equipItem: function (e) {
		e.L ? this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.PREMIUM_ITEM) : (this.player.equip(e.ID, this.itemType) && (this.player.appearanceChanged = !0, this.game.prodigy.audio.playSFX("whoosh")), this.close())
	}
}), Prodigy.Menu.LevelUp = function (e, t, i, a) {
	this.callback = a, this.stars = i, Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.create()
}, Prodigy.extends(Prodigy.Menu.LevelUp, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.LevelUp,
	create: function () {
		this.addTransparent(), this.panel = this.game.prodigy.create.panel(this, 40, 40, 30, 16, "shine"), this.panel.setRenderState(!0), this.game.prodigy.create.button(this, 1200, 10, "icons", "close", this.close.bind(this)), this.content = this.game.prodigy.create.element(this, 260, 180, 19, 6), Prodigy.RenderMenu.prototype.create.call(this);
		for (var e = this.game.prodigy.player.kennel.getTeam(), t = this.game.prodigy.player.data.team; this.stars.length < e.length;) this.stars.push(0);
		console.log(this.stars);
		for (var i = 0; 2 >= i; i++)
			if (2 * i < e.length) 2 * i === t ? this.game.prodigy.create.level(this, 100 + 40 * i, 200 * (i + 1) - 140, "player", e[2 * i], this.stars[2 * i]) : this.game.prodigy.create.level(this, 100 + 40 * i, 200 * (i + 1) - 140, "monster", e[2 * i], this.stars[2 * i]);
			else {
				var a = this.game.prodigy.create.level(this, 100 + 40 * i, 200 * (i + 1) - 140, "empty");
				a.alpha = .3
			} for (var i = 0; 2 > i; i++)
			if (2 * i + 1 < e.length) 2 * i + 1 === t ? this.game.prodigy.create.level(this, 620 + 40 * (i + 1), 200 * (i + 1) - 40, "player", e[2 * i + 1], this.stars[2 * i + 1]) : this.game.prodigy.create.level(this, 620 + 40 * (i + 1), 200 * (i + 1) - 40, "monster", e[2 * i + 1], this.stars[2 * i + 1]);
			else {
				var a = this.game.prodigy.create.level(this, 620 + 40 * (i + 1), 200 * (i + 1) - 40, "empty");
				a.alpha = .3
			}
	},
	setMode: function (e) {
		Prodigy.RenderMenu.prototype.setMode.call(this, e)
	}
}), Prodigy.Menu.MemberAd = function (e, t, i, a) {
	Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.onClose = a, Prodigy.Menu.MemberAd.callback = this.finishUpgrade.bind(this), this.create("string" == typeof i ? i : Prodigy.Menu.MemberAd.DEFAULT)
}, Prodigy.Menu.MemberAd.DEFAULT = "[star] Members access amazing features! [star]", Prodigy.Menu.MemberAd.MORE_GOLD = "[gold] Members earn gold faster! [gold]", Prodigy.Menu.MemberAd.MORE_EXP = "[star] Members level up faster! [star]", Prodigy.Menu.MemberAd.PREMIUM_ITEM = "[star] Members get the best items! [star]", Prodigy.Menu.MemberAd.WHEEL_SPIN = "[star] Members spin the wheel twice a day! [star]", Prodigy.Menu.MemberAd.BIGGER_ROSTER = "[star] Members can catch all 100+ pets! [star]", Prodigy.Menu.MemberAd.TOWER = "[star] Members can climb the Dark Tower! [star]", Prodigy.Menu.MemberAd.CATCH = "[star] Members can try to catch twice! [star]", Prodigy.Menu.MemberAd.BOOSTS = "[star] Members can use mini-game boosts! [star]", Prodigy.Menu.MemberAd.NICKNAME = "[star] Members can unlock cool nicknames! [star]", Prodigy.Menu.MemberAd.MEMBER_PETS = "[star] Members can catch stronger pets! [star]", Prodigy.Menu.MemberAd.STYLE = "[star] Members can change their wizard! [star]", Prodigy.Menu.MemberAd.TEXT_APP = "[down] Choose a membership option [down]", Prodigy.extends(Prodigy.Menu.MemberAd, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.MemberAd,
	create: function (e) {
		this.addTransparent();
		var t = this.game.prodigy.create.panel(this, 160, 40, 24, 16, "shine");
		t.setRenderState(!0), this.b = this.game.prodigy.create.element(this, 160, 40), this.b.setRenderState(!0), this.e = this.game.prodigy.create.element(this, 160, 40), this.e.setRenderState(!0), this.c = this.game.prodigy.create.element(this, 160, 40), this.title = this.game.prodigy.create.font(this, 160, 116, "", {
			size: 36,
			font: "button",
			width: 960,
			align: "center"
		}), this.game.prodigy.create.button(this, 1080, 30, "icons", "close", this.close.bind(this)), Prodigy.RenderMenu.prototype.create.call(this), this.startLoad(["popup-member"], this.showContent.bind(this, e))
	},
	showContent: function (e) {
		this.e.removeAll(!0), this.b.add(this.game.prodigy.create.sprite(40, 40, "popup-member", "bg")), this.b.add(this.game.prodigy.create.sprite(10, 183, "popup-member", "p1")), this.b.add(this.game.prodigy.create.sprite(18, 339, "popup-member", "p2")), this.b.add(this.game.prodigy.create.sprite(22, 473, "popup-member", "p3")), this.b.add(this.game.prodigy.create.sprite(107, 600, "popup-member", "p4"));
		var t = ["More gold and stars!", "Access to all items!", "Exclusive zones!", "All house items!", "Access to all pets!", "And much more!"],
			i = this.game.prodigy.create.panel(this.e, 580, 180, 8, 7, "panel-base");
		i.alpha = .75, this.game.prodigy.create.font(i, 20, 10, "Members ALSO get...", {
			size: 20
		});
		for (var a = 0; a < t.length; a++) this.game.prodigy.create.font(i, 20, 55 + 36 * a, "@ " + t[a], {
			size: 20
		});
		this.game.prodigy.create.panel(this.b, 60, 60, 21, 2, "banner").alpha = .75, this.title.setText(e);
		var s = this.game.prodigy.create.button(this.c, 580, 500, "popup-member", "btn", this.upgradeNow.bind(this));
		this.game.add.tween(s).to({
			y: s.y - 6
		}, 1e3, Phaser.Easing.Quadratic.InOut, !0, 0, Number.MAX_VALUE, !0), this.process()
	},
	upgradeNow: function () {
		if (1 == Util.getUrlVariable("iosApp")) {
			this.e.removeAll(!0), this.c.removeAll(!0), this.title.setText(Prodigy.Menu.MemberAd.TEXT_APP);
			var e = this.game.prodigy.create.panel(this.c, 580, 160, 8, 5, "panel-base");
			this.game.prodigy.create.font(e, 20, 10, "@ Monthly Plan", {
				size: 20
			}), this.game.prodigy.create.font(e, 0, 60, "$8.95", {
				width: 320,
				align: "center",
				size: 40
			}), this.game.prodigy.create.font(e, 0, 105, "per month", {
				width: 320,
				align: "center",
				size: 20
			}), this.game.prodigy.create.font(e, 0, 160, "billed $8.95 once a month", {
				width: 320,
				align: "center",
				size: 16
			}), e.setClickable(this.openAppMembership.bind(this, "month"));
			var e = this.game.prodigy.create.panel(this.c, 580, 380, 8, 5, "item-epic");
			this.game.prodigy.create.font(e, 20, 10, "@ Yearly Plan", {
				size: 20
			}), this.game.prodigy.create.font(e, 0, 60, "$4.99", {
				width: 320,
				align: "center",
				size: 40
			}), this.game.prodigy.create.font(e, 0, 105, "per month", {
				width: 320,
				align: "center",
				size: 20
			}), this.game.prodigy.create.font(e, 0, 160, "billed $59.88 once a year", {
				width: 320,
				align: "center",
				size: 16
			}), e.setClickable(this.openAppMembership.bind(this, "year")), e.add(this.game.prodigy.create.sprite(250, -10, "icons", "star2")), this.game.prodigy.create.font(e, 270, 8, "best deal!", {
				width: 50,
				align: "center",
				size: 16
			})
		} else try {
			prodigyWeb.membershipFlow.open(this.game.prodigy.player.username, this.game.prodigy.player.userID, this.finishUpgrade.bind(this), this.adID || 0)
		} catch (t) {
			this.game.prodigy.open.message("There was an error contacting our server. Please try again later.")
		}
		this.process()
	},
	openAppMembership: function (e) {
		try {
			this.c.visible = !1, this.title.setText("CHECKING CONNECTION..."), $.ajax({
				method: "GET",
				url: "/Includes/Server/ios/checkServerStatus.php",
				dataType: "json",
				success: this.openWebMembership.bind(this, e),
				error: this.upgradeFailed.bind(this, "There was an error contacting our server. Please try again later.")
			})
		} catch (t) {
			this.upgradeFailed.bind(this, "There was an error contacting our server. Please try again later.")
		}
	},
	openWebMembership: function (e) {
		return this.game.prodigy.open.message("In-app purchases are disabled for the time being. If you wish to purchase, go to www.prodigygame.com and purchase a membership through the website."), void 0
	},
	upgradeFailed: function (e) {
		e && this.game.prodigy.open.message(e), this.finishUpgrade(!1)
	},
	finishUpgrade: function (e) {
		if (this.c.visible = !0, e) {
			this.c.removeAll(!0), this.e.removeAll(!0), this.title.setText("[membership] You are now a member! [membership]");
			var t = this.game.prodigy.create.panel(this.e, 580, 180, 8, 6, "panel-base");
			t.alpha = .9, this.game.prodigy.create.font(t, 20, 10, "NOTE:", {
				size: 20
			}), this.game.prodigy.create.font(t, 10, 55, "Your membership will be applied after the next loading screen, however you may need to logout for the change to take effect", {
				width: 300,
				size: 20
			}), this.game.prodigy.player.setMembership(), this.process()
		} else 1 == Util.getUrlVariable("iosApp") ? this.title.setText(Prodigy.Menu.MemberAd.TEXT_APP) : this.title.setText(Prodigy.Menu.MemberAd.DEFAULT), this.game.prodigy.open.message("Your purchase did not go through.")
	}
});
var Ad = {};
Ad.iosMembershipSuccess = function () {
	Util.isDefined(Prodigy.Menu.MemberAd.callback) && Prodigy.Menu.MemberAd.callback(!0)
}, Ad.iosMembershipFail = function () {
	Util.isDefined(Ad.Prodigy.Menu.MemberAd.callback) && Prodigy.Menu.MemberAd.callback(!1)
}, Prodigy.Menu.Social = function (e, t, i) {
	Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.create(i)
}, Prodigy.Menu.Social.LEADERBOARD = 0, Prodigy.Menu.Social.ARENA = 1, Prodigy.Menu.Social.ARENA_LEADERBOARD = 2, Prodigy.Menu.Social.BOUNTIES = 3, Prodigy.extends(Prodigy.Menu.Social, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.Social,
	create: function (e) {
		this.addTransparent(), this.createBaseSetup(30, 16, "shine", "AWARDS", [{
			icon: "leaderboard",
			top: "Class",
			bot: "Leaders"
		}, {
			icon: "challenge",
			top: "My",
			bot: "Arena"
		}, {
			icon: "challenge",
			top: "Arena",
			bot: "Leaders"
		}, {
			icon: "bounty",
			top: "",
			bot: "Bounties"
		}], !0), Prodigy.RenderMenu.prototype.create.call(this), this.setMode(e)
	},
	setMode: function (e) {
		Prodigy.RenderMenu.prototype.setMode.call(this, e), Util.isDefined(this.content) && this.content.destroy(), e && e !== Prodigy.Menu.Social.LEADERBOARD ? e === Prodigy.Menu.Social.ARENA ? this.content = new Prodigy.Container.Arena(this.game, this, 80, 200) : e === Prodigy.Menu.Social.ARENA_LEADERBOARD ? this.content = new Prodigy.Container.ArenaLeaderboard(this.game, this, 80, 200) : e === Prodigy.Menu.Social.BOUNTIES && (this.content = new Prodigy.Container.Bounties(this.game, this, 80, 200)) : this.content = new Prodigy.Container.Leaderboard(this.game, this, 80, 200), this.page = e
	}
}), Prodigy.Menu.SystemMenu = function (e, t) {
	Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.create()
}, Prodigy.extends(Prodigy.Menu.SystemMenu, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.SystemMenu,
	create: function () {
		this.addTransparent(), this.content = this.game.prodigy.create.element(this, 280, 260, 15, 8), this.createBaseSetup(20, 13, "shine", "OPTIONS", [{
			icon: "settings",
			bot: "Sound"
		}, {
			icon: "settings",
			bot: "Graphics"
		}, {
			icon: "settings",
			bot: "Network"
		}, {
			icon: "settings",
			bot: "Other"
		}]), Prodigy.RenderMenu.prototype.create.call(this), this.setMode(0), this.game.prodigy.create.advButton(this, 900, 480, {
			icon: "settings",
			bot: "Log Out"
		}, this.exitGame.bind(this))
	},
	clearContents: function () {
		Util.isDefined(this.content) && this.content.destroy(), Util.isDefined(this.panel) && this.panel.destroy(), Util.isDefined(this.soundVolumeBar) && (this.soundVolumeBar.destroy(), this.soundVolumeBar = null), Util.isDefined(this.voiceVolumeBar) && (this.voiceVolumeBar.destroy(), this.voiceVolumeBar = null), Util.isDefined(this.bgmVolumeBar) && (this.bgmVolumeBar.destroy(), this.bgmVolumeBar = null), this.panel = this.game.prodigy.create.panel(this, 280, 260, 15, 8, "white"), this.content = this.game.prodigy.create.element(this, 280, 260, 15, 8)
	},
	setMode: function (e) {
		switch (Prodigy.RenderMenu.prototype.setMode.call(this, e), this.clearContents(), e) {
		case 1:
			this.openGraphics();
			break;
		case 2:
			this.openNetwork();
			break;
		case 3:
			this.openOther();
			break;
		default:
			this.openSound()
		}
	},
	openIntro: function () {
		this.game.state.start("Intro")
	},
	setSound: function (e) {
		switch (e) {
		case 0:
			this.game.prodigy.audio.setSFXVolume(this.soundVolumeBar.page / 100);
			break;
		case 1:
			this.game.prodigy.audio.setBGMVolume(this.bgmVolumeBar.page / 100);
			break;
		case 2:
			this.game.prodigy.audio.setVoiceVolume(this.voiceVolumeBar.page / 100)
		}
	},
	openSound: function () {
		var e = 525;
		this.game.prodigy.create.font(this.content, (600 - e) / 2, 30, "Sound Volume", {
			width: e,
			align: "center"
		}), this.soundVolumeBar = this.game.prodigy.create.slider(this.content, (600 - e) / 2, 55, e, !1, !1), this.soundVolumeBar.reset(101, 1, Math.floor(100 * this.game.prodigy.audio.getSFXVolume()), this.setSound.bind(this, 0)), this.game.prodigy.create.font(this.content, (600 - e) / 2, 110, "Music Volume", {
			width: e,
			align: "center"
		}), this.bgmVolumeBar = this.game.prodigy.create.slider(this.content, (600 - e) / 2, 135, e, !1, !1), this.bgmVolumeBar.reset(101, 1, Math.floor(100 * this.game.prodigy.audio.getBGMVolume()), this.setSound.bind(this, 1)), this.game.prodigy.create.font(this.content, (600 - e) / 2, 190, "Voice Volume", {
			width: e,
			align: "center"
		}), this.voiceVolumeBar = this.game.prodigy.create.slider(this.content, (600 - e) / 2, 215, e, !1, !1), this.voiceVolumeBar.reset(101, 1, Math.floor(100 * this.game.prodigy.audio.getVoiceVolume()), this.setSound.bind(this, 2))
	},
	openGraphics: function () {
		this.game.prodigy.create.textButton(this.content, 150, 50, {
			text: "Small Screen",
			size: Prodigy.Control.TextButton.MED
		}, this.game.prodigy.graphics.setResolutionSmall.bind(this)), this.game.prodigy.create.textButton(this.content, 150, 125, {
			text: "Medium Screen",
			size: Prodigy.Control.TextButton.MED
		}, this.game.prodigy.graphics.setResolutionMedium.bind(this)), this.game.prodigy.create.textButton(this.content, 150, 200, {
			text: "Large Screen",
			size: Prodigy.Control.TextButton.MED
		}, this.game.prodigy.graphics.setResolutionLarge.bind(this))
	},
	openNetwork: function () {
		var e = "You are playing in Offline Mode.";
		Util.isDefined(this.game.prodigy.player.world) && (e = "Your world is: " + Prodigy.Menu.Server.getServerName(this.game.prodigy.player.world)), this.game.prodigy.create.font(this.content, 0, 50, e, {
			width: 600,
			align: "center"
		})
	},
	openOther: function () {
		this.game.prodigy.create.textButton(this.content, 150, 50, {
			text: "Watch Intro",
			size: Prodigy.Control.TextButton.MED
		}, this.openIntro.bind(this))
	},
	exitGame: function () {
		this.game.prodigy.network.logout()
	},
	menuUpdate: function () {
		Prodigy.Control.Menu.prototype.menuUpdate.call(this), Util.isDefined(this.soundVolumeBar) && this.game.prodigy.audio.getSFXVolume() !== this.soundVolumeBar.page && this.game.prodigy.audio.setSFXVolume(this.soundVolumeBar.page), Util.isDefined(this.voiceVolumeBar) && this.game.prodigy.audio.getVoiceVolume() !== this.voiceVolumeBar.page && this.game.prodigy.audio.setVoiceVolume(this.voiceVolumeBar.page), Util.isDefined(this.bgmVolumeBar) && this.game.prodigy.audio.getBGMVolume() !== this.bgmVolumeBar.page && this.game.prodigy.audio.setBGMVolume(this.bgmVolumeBar.page)
	}
}), Prodigy.Menu.Map = function (e, t) {
	Prodigy.Control.Menu.call(this, e, t, 14, {
		hideMenu: !0,
		hideContent: !0
	}), this.setup()
}, Prodigy.extends(Prodigy.Menu.Map, Prodigy.Control.Menu, {
	constructor: Prodigy.Menu.Map,
	menuSetup: function () {
		Prodigy.Control.Menu.prototype.menuSetup.call(this), new Prodigy.MapDisplay(this.game, this);
		var e = this.game.prodigy.player;
		if (e.tutorial.getMenuValue(this.menuID) < 1) {
			e.tutorial.setMenuValue(this.menuID, 0, 1);
			var t = this.game.prodigy.dialogue.create();
			t.setText(18), t.start("noot")
		}
	}
}), Prodigy.Menu.Character = function (e, t, i) {
	this.player = i, Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.create()
}, Prodigy.extends(Prodigy.Menu.Character, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.Character,
	create: function () {
		this.addTransparent(), this.panel = this.game.prodigy.create.panel(this, 240, 80, 20, 14, "shine"), this.panel.setRenderState(!0), this.game.prodigy.create.button(this, this.panel.x + 760, this.panel.y - 10, "icons", "close", this.close.bind(this)), this.panel.add(new Phaser.TileSprite(this.game, 11, 120, 778, 40, "core", "blue-top")), this.panel.add(new Phaser.TileSprite(this.game, 11, 160, 778, 300, "core", "blue-mid")), this.panel.add(new Phaser.TileSprite(this.game, 11, 460, 778, 40, "core", "blue-top2")), this.game.prodigy.create.panel(this.panel, 200, -10, 10, 2, "banner"), this.game.prodigy.create.font(this, 290, 86, "My Spellbook", {
			font: "button",
			size: 36,
			width: 720,
			align: "center"
		}), this.game.prodigy.create.panel(this.panel, 240, 140, 8, 4, "white").alpha = .5, this.game.prodigy.create.font(this.panel, 250, 150, "Here are the spells you will see in battle.\n\nClick on a card to switch a spell.", {
			font: "black",
			width: 300
		}), this.content = this.game.prodigy.create.element(this, 500, 170), Prodigy.RenderMenu.prototype.create.call(this), this.updateSpells()
	},
	updateSpells: function () {
		Util.isDefined(this.content) && this.content.destroy(), this.content = this.game.prodigy.create.element(this, 290, 180);
		for (var e = this.game.prodigy.player.getAttacks(), t = [[0, 0], [0, 1], [1, 1], [2, 1], [3, 1], [3, 0]], i = 0; 6 > i; i++) i >= e.length ? this.game.prodigy.create.panel(this.content, 180 * t[i][0], 220 * t[i][1], 4, 5, "empty") : this.game.prodigy.create.item(this.content, 180 * t[i][0], 220 * t[i][1], {
			ID: e[i],
			type: "spell"
		}, "inv", this.spellSelected.bind(this, e[i]))
	},
	spellSelected: function (e) {
		this.game.prodigy.open.pouch("spell", this.updateSpells.bind(this), e)
	}
}), Prodigy.Menu.AccountCreate = function (e, t, i, a, s, r) {
	Prodigy.Control.Menu.call(this, e, t, -1, {
		hideMenu: !0,
		hideContent: !0,
		tile: "bg-tile-brown",
		full: !0
	}), this.callback = r, this.username = i, this.password = a, this.data = {
		firstName: "",
		lastName: ""
	}, this.data.reset = !Util.isDefined(s), Util.isDefined(s) && (this.data.player = this.player), this.setup()
}, Prodigy.extends(Prodigy.Menu.AccountCreate, Prodigy.Control.Menu, {
	constructor: Prodigy.Menu.AccountCreate,
	menuSetup: function () {
		Prodigy.Control.Menu.prototype.menuSetup.call(this), this.content = this.game.prodigy.create.element(this), this.spinner = this.add(this.game.prodigy.create.sprite(640, 300, "core", "loading")), this.spinner.anchor.setTo(.5, .5), this.game.add.tween(this.spinner).to({
			angle: 360
		}, 2e3, Phaser.Easing.Linear.None, !0, 0, Number.MAX_VALUE, !1), this.spinner.visible = !1, this.modules = [], Util.isDefined(this.username) || (this.modules.push(new Prodigy.Container.ClassCodePage(this.game, this.content, this.data)), this.modules.push(new Prodigy.Container.NamePage(this.game, this.content, this.data)), this.modules.push(new Prodigy.Container.PasswordPage(this.game, this.content, this.data))), this.modules.push(new Prodigy.Container.LocationPage(this.game, this.content, this.data)), this.modules.push(new Prodigy.Container.GradePage(this.game, this.content, this.data)), this.modules.push(new Prodigy.Container.WizardPage(this.game, this.content, this.data)), this.modules.push(new Prodigy.Container.WizardNamePage(this.game, this.content, this.data));
		for (var e = 0; e < this.modules.length; e++) {
			var t = this.modules[e - 1],
				i = this.modules[e + 1];
			this.modules[e].init(t ? t.open.bind(t, -1) : this.close.bind(this, !1), i ? i.open.bind(i, 1) : this.processResults.bind(this))
		}
		this.modules[0].open(), this.setupComplete = !0
	},
	processResults: function () {
		this.content.removeAll(!0), this.data.player.data.school = "none", delete this.data.player.data.reset;
		var e = {
			data: JSON.stringify(this.data.player.data),
			equipment: JSON.stringify(this.data.player.equipment.data),
			pets: JSON.stringify(this.data.player.kennel.data),
			inventory: JSON.stringify(this.data.player.backpack.data),
			appearance: JSON.stringify(this.data.player.appearance.data)
		};
		this.spinner.visible = !0, Util.isDefined(this.username) ? this.game.prodigy.education.nullGrade ? this.game.prodigy.network.updateUser({
			chosenGrade: this.data.grade,
			grade: this.data.grade,
			country: this.data.country,
			sub: this.data.sub || 0
		}, this.createCharacter.bind(this, e)) : this.createCharacter(e) : (e.grade = e.chosenGrade = this.data.grade, e.sub = this.data.sub || 0, e.country = this.data.country, e.password = this.data.password, e.teacherID = this.data.teacherID, e.email = this.data.email, console.log(JSON.stringify(e)), this.game.prodigy.network.createPlayer(this.data.firstName, this.data.lastName, e, this.fail.bind(this), this.complete.bind(this)))
	},
	createCharacter: function (e) {
		this.game.prodigy.network.createCharacter(this.game.prodigy.player.userID, e, this.fail.bind(this), this.complete.bind(this))
	},
	fail: function () {
		this.spinner.visible = !1;
		var e = this.game.prodigy.event.create();
		e.yesNoText(52, "noot", this.close.bind(this, !1)), e.function(this.processResults.bind(this)), e.start()
	},
	complete: function (e) {
		this.spinner.visible = !1, this.game.prodigy.create.panel(this.content, 290, 160, 14, 4), this.game.prodigy.create.font(this.content, 240, 190, "username:", {
			size: 36,
			font: "button",
			width: 280,
			align: "right"
		}), this.game.prodigy.create.font(this.content, 240, 270, "password:", {
			size: 36,
			font: "button",
			width: 280,
			align: "right"
		}), this.game.prodigy.create.font(this.content, 560, 190, e.username, {
			size: 40
		}), this.game.prodigy.create.font(this.content, 560, 270, e.password, {
			size: 40
		}), Util.isDefined(this.data.email) && Util.setCookie("prodigyUsername", e.username || "", 5), Util.isDefined(this.username) ? this.close(!0, this.username, this.password) : this.showResults(e)
	},
	showResults: function (e) {
		var t = this.game.prodigy.event.create();
		t.text(51, "noot"), t.function(this.close.bind(this, !0, e.username, e.password)), t.start()
	},
	close: function (e, t, i) {
		Util.isDefined(this.callback) && this.callback(e, t, i), Prodigy.Control.Menu.prototype.close.call(this)
	}
}), Prodigy.Menu.Server = function (e, t, i, a) {
	Prodigy.Control.Menu.call(this, e, t, 11), this.callback = a, this.servers = i, this.setup()
}, Prodigy.extends(Prodigy.Menu.Server, Prodigy.Control.Menu, {
	constructor: Prodigy.Menu.Server,
	menuSetup: function () {
		Prodigy.Control.Menu.prototype.menuSetup.call(this), this.showFrame("map", "CHOOSE YOUR WORLD", []);
		this.game.prodigy.create.textButton(this, 930, 20, {
			size: Prodigy.Control.TextButton.MED,
			icon: "next",
			text: "play offline"
		}, this.close.bind(this, !0));
		this.showBtns([], []), this.game.prodigy.create.textButton(this, 50, 650, {
			icon: "back",
			text: "back"
		}, this.close.bind(this, !1, !0)), this.content = this.game.prodigy.create.element(this, 0, 0), this.showSuggestedServers(this.servers), this.game.prodigy.create.font(this, 125, 60, "Pick the same world as your friends to play together!", {
			size: 20
		}), this.setupComplete = !0
	},
	showSuggestedServers: function (e) {
		if (this.content.removeAll(!0), !Util.isDefined(e)) return this.game.prodigy.create.font(this.content, 0, 320, "Loading world list...", {
			size: 30,
			width: 1280,
			align: "center"
		}), this.game.prodigy.network.getWorldList(this.showSuggestedServers.bind(this), this.showError.bind(this, "Could not load world list. Check your connection and try again.")), void 0;
		for (var t = this.getSuggested(this.game.prodigy.player.classIDs, e), i = 0; i < t.length; i++) {
			var a = t[i];
			Util.isDefined(a) && this.createButton(a, this.content, 140 + i % 3 * 350, 210 + 140 * Math.floor(i / 3), this.showSuggestedServers.bind(this))
		}
		this.game.prodigy.create.textButton(this.content, 880, 650, {
			size: Prodigy.Control.TextButton.LG,
			text: "more worlds",
			icon: "map"
		}, this.showAllServers.bind(this));
		var s = this.content.add(this.game.prodigy.create.sprite(520, 530, "core", "server-icon"));
		s.tint = 8111468, this.game.prodigy.create.font(this.content, 560, 540, " = wizards online", {
			size: 20
		})
	},
	getSuggested: function (e, t) {
		var i = [];
		t = t.sort(function (e, t) {
			return e.full - t.full
		});
		for (var a = 0; a < t.length; a++)
			if (t[a].full > 75 && a > 4 || a === t.length - 1) {
				i = [t[a - 3], t[a - 4], t[a - 5], t[a], t[a - 1], t[a - 2]];
				break
			} if (Util.isDefined(e) && e.length > 0) {
			t = t.sort(function (e, t) {
				return e.id - t.id
			});
			for (var a = 0; a < e.length && 3 > a; a++) {
				var s = e[a];
				s = Math.floor(Util.pseudoRandomNumber(1341 * s) * t.length), Util.inArray(i, t[s]) || (i[a] = t[s])
			}
		}
		return i
	},
	connect: function (e, t) {
		this.content.removeAll(!0), this.game.prodigy.create.font(this.content, 0, 320, "Connecting to " + Prodigy.Menu.Server.getServerName(e) + "...", {
			size: 30,
			width: 1280,
			align: "center"
		}), this.game.prodigy.network.joinMultiplayerServer(e, "zone-login", this.connected.bind(this, !0), this.connected.bind(this, !1, t), this.connected.bind(this, !1, t, "This world is full. Please select another world"))
	},
	connected: function (e, t, i) {
		Util.isDefined(this) && Util.isDefined(this.game) && (this.content.removeAll(!0), e ? this.close(!0) : this.showError(i || "Could not connect to world. Try again, or select another world.", t))
	},
	showError: function (e, t) {
		this.content.removeAll(!0), this.game.prodigy.create.panel(this.content, 240, 260, 16, 4), this.game.prodigy.create.font(this.content, 270, 300, e, {
			size: 30,
			width: 740,
			align: "center"
		}), this.game.prodigy.create.textButton(this.content, 465, 430, {
			size: Prodigy.Control.TextButton.LG,
			text: "back to worlds",
			icon: "back"
		}, t)
	},
	showAllServers: function (e) {
		if (this.content.removeAll(!0), !Util.isDefined(e)) return this.game.prodigy.create.font(this.content, 0, 320, "Loading world list...", {
			size: 30,
			width: 1280,
			align: "center"
		}), this.game.prodigy.network.getWorldList(this.showAllServers.bind(this), this.showError.bind(this, "Could not load world list. Check your connection and try again.")), void 0;
		for (var t = 0; t < e.length; t++) e[t].name = Prodigy.Menu.Server.getServerName(e[t].id);
		e = e.sort(function (e, t) {
			return e.name.localeCompare(t.name)
		}), this.serverPage = this.game.prodigy.create.element(this.content, 200, 180), this.scroll = this.game.prodigy.create.scrollBar(this.content, 60, 180, 345, this.setPage.bind(this, e)), this.scroll.setPages(1 + Math.floor((e.length - 1) / 9)), this.game.prodigy.create.textButton(this.content, 880, 650, {
			size: Prodigy.Control.TextButton.LG,
			text: "my worlds",
			icon: "star"
		}, this.showSuggestedServers.bind(this))
	},
	setPage: function (e, t) {
		this.serverPage.removeAll(!0);
		for (var i = 0, a = 9 * t; 9 * t + 9 > a && a < e.length; a++) {
			var s = e[a],
				r = 15 + i % 3 * 350,
				o = 120 * Math.floor(i / 3);
			i++, this.createButton(s, this.serverPage, r, o, this.showAllServers.bind(this))
		}
	},
	createButton: function (e, t, i, a, s) {
		var r = this.game.prodigy.create.element(t, i, a),
			o = r.add(this.game.prodigy.create.sprite(0, 0, "core", "store-panel"));
		o.inputEnabled = !0, o.events.onInputDown.add(this.connect.bind(this, e.id, s), this), r.add(this.game.prodigy.create.sprite(0, 0, "icons", Prodigy.Menu.Server.getServerIcon(e.id))), this.game.prodigy.create.font(r, 85, -2, Prodigy.Menu.Server.getServerName(e.id));
		for (var n = 0 == e.full ? 12364703 : e.full <= 80 ? 8111468 : e.full < 95 ? 15194464 : 14307665, l = 0; 5 > l; l++) {
			var o = r.add(this.game.prodigy.create.sprite(96 + 39 * l, 36, "core", "server-icon"));
			o.tint = e.full >= 20 * l ? n : 12364703
		}
		return r
	},
	close: function (e, t) {
		Util.isDefined(this.callback) && this.callback(e, t), Prodigy.Control.Menu.prototype.close.call(this)
	}
}), Prodigy.Menu.Server.getServerName = function (e) {
	return Prodigy.Menu.Server.NAMES[e - 1].name
}, Prodigy.Menu.Server.getServerIcon = function (e) {
	return Util.convertItemToIcon(Prodigy.Menu.Server.NAMES[e - 1])
}, Prodigy.Menu.Server.NAMES = [{
	name: "Fireplane",
	tag: "fire"
}, {
	name: "Waterscape",
	tag: "water"
}, {
	name: "Earthshire",
	tag: "earth"
}, {
	name: "Airmeld",
	tag: "air"
}, {
	name: "Icefields",
	tag: "ice"
}, {
	name: "Astrallum",
	tag: "wizard"
}, {
	name: "Cumulite",
	tag: "zone-air"
}, {
	name: "Grasslands",
	tag: "zone-earth"
}, {
	name: "Emberland",
	tag: "zone-fire"
}, {
	name: "Coldshard",
	tag: "zone-ice"
}, {
	name: "Riverdeep",
	tag: "zone-water"
}, {
	name: "Animalia",
	tag: "pet"
}, {
	name: "Prodigy",
	tag: "trophyGold"
}, {
	name: "Silverdome",
	tag: "trophySilver"
}, {
	name: "Culldeep",
	tag: "trophyBronze"
}, {
	name: "Travellog",
	tag: "map"
}, {
	name: "Illustrus",
	tag: "leaderboard"
}, {
	name: "Dragonfire",
	type: "pet",
	ID: 8
}, {
	name: "Unikind",
	type: "pet",
	ID: 35
}, {
	name: "Skyfall",
	type: "pet",
	ID: 56
}, {
	name: "Flamespace",
	type: "pet",
	ID: 63
}, {
	name: "Faerealm",
	type: "pet",
	ID: 61
}, {
	name: "Snowbaul",
	type: "pet",
	ID: 87
}, {
	name: "Treasureland",
	type: "pet",
	ID: 98
}, {
	name: "Robobit",
	type: "pet",
	ID: 113
}, {
	name: "Dynocore",
	type: "pet",
	ID: 111
}, {
	name: "Royalway",
	type: "pet",
	ID: 53
}, {
	name: "Flexor",
	type: "pet",
	ID: 47
}, {
	name: "Phoenick",
	type: "pet",
	ID: 48
}, {
	name: "Lunaris",
	type: "pet",
	ID: 20
}, {
	name: "Birdcage",
	type: "pet",
	ID: 4
}, {
	name: "Oceanus",
	type: "pet",
	ID: 101
}, {
	name: "Granite",
	type: "pet",
	ID: 80
}, {
	name: "Prehistoria",
	type: "pet",
	ID: 107
}, {
	name: "Squeekore",
	type: "pet",
	ID: 1
}, {
	name: "Leftfield",
	type: "pet",
	ID: 30
}, {
	name: "Furnace",
	type: "pet",
	ID: 34
}, {
	name: "Ghosttown",
	type: "pet",
	ID: 90
}, {
	name: "Amphibia",
	type: "pet",
	ID: 94
}, {
	name: "Skywing",
	type: "item",
	ID: 7
}, {
	name: "Diamondmine",
	type: "item",
	ID: 28
}, {
	name: "Frostwick",
	type: "item",
	ID: 27
}, {
	name: "Gemcraft",
	type: "item",
	ID: 20
}, {
	name: "Goldmire",
	type: "item",
	ID: 26
}, {
	name: "Solarus",
	type: "item",
	ID: 35
}, {
	name: "Cloudcall",
	type: "item",
	ID: 46
}, {
	name: "Farmland",
	type: "item",
	ID: 44
}, {
	name: "Doubloon",
	type: "item",
	ID: 55
}, {
	name: "Hatchery",
	type: "item",
	ID: 64
}, {
	name: "Plank",
	type: "item",
	ID: 51
}, {
	name: "Gearshop",
	type: "item",
	ID: 47
}, {
	name: "Mechanico",
	type: "item",
	ID: 53
}, {
	name: "Mandora",
	type: "item",
	ID: 24
}, {
	name: "Dracogem",
	type: "item",
	ID: 36
}, {
	name: "Borderland",
	type: "item",
	ID: 56
}, {
	name: "Explora",
	type: "item",
	ID: 57
}, {
	name: "Keystone",
	type: "item",
	ID: 59
}, {
	name: "Enchantric",
	type: "weapon",
	ID: 1
}, {
	name: "Spellbound",
	type: "weapon",
	ID: 4
}, {
	name: "Starlight",
	type: "weapon",
	ID: 2
}, {
	name: "Reptilia",
	type: "weapon",
	ID: 6
}, {
	name: "Moonsight",
	type: "weapon",
	ID: 7
}, {
	name: "The Pale",
	type: "weapon",
	ID: 16
}, {
	name: "Flowerseed",
	type: "weapon",
	ID: 15
}, {
	name: "Vinewood",
	type: "weapon",
	ID: 24
}, {
	name: "Treebark",
	type: "weapon",
	ID: 36
}, {
	name: "Felspore",
	type: "weapon",
	ID: 54
}, {
	name: "Pirate Bay",
	type: "weapon",
	ID: 65
}, {
	name: "Farflight",
	type: "weapon",
	ID: 67
}, {
	name: "Labyrinth",
	type: "weapon",
	ID: 49
}, {
	name: "Tinkertown",
	type: "hat",
	ID: 45
}, {
	name: "Emporia",
	type: "hat",
	ID: 6
}, {
	name: "Winterhall",
	type: "hat",
	ID: 27
}, {
	name: "Landlubber",
	type: "hat",
	ID: 39
}, {
	name: "Beastcore",
	type: "hat",
	ID: 32
}, {
	name: "Aviatrix",
	type: "hat",
	ID: 41
}, {
	name: "Robonight",
	type: "hat",
	ID: 46
}, {
	name: "Discotek",
	type: "hat",
	ID: 47
}, {
	name: "Backbone",
	type: "fossil",
	ID: 1
}, {
	name: "Amberlamp",
	type: "fossil",
	ID: 5
}, {
	name: "Warclaw",
	type: "fossil",
	ID: 7
}, {
	name: "Stonemarr",
	type: "fossil",
	ID: 11
}, {
	name: "Skeletus",
	type: "fossil",
	ID: 6
}, {
	name: "Shipyard",
	type: "dorm",
	ID: 52
}, {
	name: "Timezone",
	type: "dorm",
	ID: 68
}, {
	name: "Keynote",
	type: "dorm",
	ID: 65
}, {
	name: "Soundview",
	type: "dorm",
	ID: 58
}, {
	name: "Breakbeat",
	type: "dorm",
	ID: 51
}, {
	name: "Incantrik",
	type: "outfit",
	ID: 1
}, {
	name: "Celestial",
	type: "outfit",
	ID: 5
}, {
	name: "Powerthrone",
	type: "outfit",
	ID: 7
}, {
	name: "Grasslands",
	type: "outfit",
	ID: 29
}, {
	name: "Naturill",
	type: "outfit",
	ID: 31
}, {
	name: "Sleetwind",
	type: "outfit",
	ID: 33
}, {
	name: "Sandshore",
	type: "outfit",
	ID: 40
}, {
	name: "Danceclub",
	type: "outfit",
	ID: 42
}, {
	name: "Flamekeep",
	type: "outfit",
	ID: 34
}], Prodigy.Menu.CharSelect = function (e, t, i) {
	Prodigy.Control.Menu.call(this, e, t, -1), this.callback = i, this.setup()
}, Prodigy.extends(Prodigy.Menu.CharSelect, Prodigy.Control.Menu, {
	constructor: Prodigy.Menu.CharSelect,
	menuSetup: function () {
		Prodigy.Control.Menu.prototype.menuSetup.call(this), this.showFrame("player", "WELCOME TO PRODIGY!", []), this.off = this.game.prodigy.create.textButton(this, 0, 0, {
			icon: "next",
			text: "next"
		}, this.close.bind(this, !0)), this.showBtns([], [this.off]), this.game.prodigy.create.textButton(this, 50, 650, {
			icon: "back",
			text: "back"
		}, this.close.bind(this, !1));
		var e = this.game.prodigy.create.player(this, this.game.prodigy.player, 2, 640, 500);
		e.reload(), e.showName(!0), this.showContentA(), this.showContentB(), this.setupComplete = !0
	},
	showContentA: function () {
		var e = this.contentA = this.game.prodigy.create.panel(this, 100, 200, 6, 5),
			t = e.add(this.game.prodigy.create.sprite(8, 28, "core", "overlay-light"));
		t.width = 284, t.height = 30, t.alpha = .25, e.add(this.game.prodigy.create.sprite(-20, -20, "icons", "wizard")), this.game.prodigy.create.font(e, 60, 30, "New Teacher?", {
			align: "center",
			width: 220
		}), this.game.prodigy.create.font(e, 20, 85, "Add your character to your new class!", {
			width: 260
		});
		var i = this.game.prodigy.create.textButton(e, 50, 180, {
			icon: "yes",
			text: "update"
		}, this.showClassCode.bind(this));
		if (Util.isDefined(this.game.prodigy.player.owners))
			for (var a = 0; a < this.game.prodigy.player.owners.length; a++) {
				var s = this.game.prodigy.player.owners[a];
				if (s.startDate >= 143801786e4) return this.off.highlight(!0, 0, -30), void 0
			}
		i.highlight(!0, 100)
	},
	showContentB: function () {
		var e = this.game.prodigy.create.panel(this, 880, 200, 6, 7),
			t = e.add(this.game.prodigy.create.sprite(8, 28, "core", "overlay-light"));
		t.width = 284, t.height = 30, t.alpha = .25, e.add(this.game.prodigy.create.sprite(-20, -20, "icons", "star2")), this.game.prodigy.create.font(e, 60, 30, "New Content!", {
			align: "center",
			width: 220
		}), this.game.prodigy.create.font(e, 20, 85, "In the next few months, Prodigy will be adding tons of new features! \n\nCheck in often as we improve the game for everyone!", {
			width: 260
		})
	},
	showClassCode: function () {
		this.overlay = this.add(this.game.prodigy.create.sprite(0, 0, "core", "overlay")), this.overlay.width = 1280, this.overlay.height = 720, this.overlay.alpha = .5, this.overlay.inputEnabled = !0;
		var e = this.game.prodigy.create.element(this, 340, 170);
		this.classCode = e, this.game.prodigy.create.panel(e, 0, 0, 12, 8), this.nextButton = Prodigy.Control.TextButton.createNextButton(this.game, e, 350, 370, this.submit.bind(this)), this.backButton = Prodigy.Control.TextButton.createCloseButton(this.game, e, 50, 370, this.closeClassCode.bind(this)), this.game.prodigy.create.font(e, 10, 25, "Enter your teacher's class code", {
			size: 30,
			width: 600,
			align: "center"
		}), this.error = this.game.prodigy.create.font(e, 0, 300, "", {
			width: 600,
			align: "center"
		}), this.codeField = Prodigy.Control.InputField.createInputField(this.game, this, "classcodeg", "", 640 - Prodigy.Control.InputField.WIDTH_MEDIUM / 2, 285, Prodigy.Control.InputField.WIDTH_MEDIUM, Prodigy.Control.InputField.HEIGHT_MEDIUM, "textg"), this.codeField.setLabel(this, "Class Code:");
		var t = e.add(this.game.prodigy.create.sprite(40, 200, "core", "overlay-light"));
		t.alpha = .2, t.width = 520, t.height = 70, t.inputEnabled = !0, t.events.onInputDown.add(this.getCode, this), this.game.prodigy.create.font(e, 50, 210, "Teachers: Don't have a class code? Click here!", {
			size: 20,
			align: "center",
			width: 500
		}), this.spinner = e.add(this.game.prodigy.create.sprite(300, 125, "core", "loading")), this.spinner.anchor.setTo(.5, .5), this.game.add.tween(this.spinner).to({
			angle: 360
		}, 2e3, Phaser.Easing.Linear.None, !0, 0, Number.MAX_VALUE, !1), this.spinner.visible = !1
	},
	closeClassCode: function () {
		this.overlay.destroy(), this.codeField.hide(0), this.classCode.destroy()
	},
	getCode: function () {
		this.codeField.clearEvents(!1), this.game.input.keyboard.clearCaptures(), prodigyWeb.getClassCode.open(this.setCode.bind(this))
	},
	setCode: function (e) {
		this.codeField.clearEvents(!0), this.game.input.keyboard.addKeyCapture([Phaser.Keyboard.BACKSPACE]), this.codeField.setValue(e)
	},
	validationComplete: function (e, t) {
		this.backButton.visible = !0, this.nextButton.visible = !0, this.spinner.visible = !1, console.log(t), e ? this.game.prodigy.open.message("You were added to a new class!", this.classCodeComplete.bind(this), "star", "success!") : (this.codeField.show(0), this.error.setText("That class code is not valid"))
	},
	classCodeComplete: function () {
		this.closeClassCode(), this.contentA.destroy()
	},
	submit: function () {
		var e = this.codeField.getValue();
		return e.length <= 0 ? this.error.setText("Please enter a class code") : (this.codeField.hide(0), this.error.setText(""), this.backButton.visible = !1, this.nextButton.visible = !1, this.spinner.visible = !0, this.game.prodigy.network.attachClassCode(e, this.validationComplete.bind(this, !0), this.validationComplete.bind(this, !1))), !1
	},
	close: function (e) {
		Util.isDefined(this.callback) && this.callback(e), Prodigy.Control.Menu.prototype.close.call(this)
	}
}), Prodigy.Menu.MenuBar = function (e, t, i) {
	Prodigy.Control.Element.call(this, e, t), this.ID = 1, this.disable = i || {}, this.bars = [], this.openNav()
}, Prodigy.extends(Prodigy.Menu.MenuBar, Prodigy.Control.Element, {
	constructor: Prodigy.Menu.MenuBar,
	addMenu: function (e, t) {
		Util.isDefined(this.bars[e]) || (this.bars[e] = this.game.prodigy.create.element(this, 0, 650)), this.bars[e].removeAll(!0);
		var i = 100 * t.length;
		this.bars[e].add(this.game.prodigy.create.sprite(0, 20, "core", "panel-light-corner")), this.bars[e].add(this.game.prodigy.create.sprite(i - 50, 20, "core", "panel-light-corner2"));
		for (var a = 0;
			(i - 100) / 50 > a; a++) this.bars[e].add(this.game.prodigy.create.sprite(50 + 50 * a, 20, "core", "panel-light-top"));
		for (var s = Math.floor(i % 90 / 2), a = 0; a < t.length; a++) {
			var r = this.game.prodigy.create.button(this.bars[e], s + 90 * a, -15, "icons", t[a].icon, t[a].callback);
			t[a].jump && this.game.add.tween(r).to({
				y: r.y - 10
			}, 1e3, Phaser.Easing.Quadratic.InOut, !0, 0, Number.MAX_VALUE, !0)
		}
		this.centerBars()
	},
	addStore: function () {
		this.addMenu(1, [{
			icon: "catalogue",
			callback: this.game.prodigy.open.store.bind(this.game.prodigy.open, Prodigy.Menu.Store.DATA)
		}])
	},
	centerBars: function () {
		for (var e = 0, t = 0; t < this.bars.length; t++) Util.isDefined(this.bars[t]) && (e += this.bars[t].width);
		e += 10 * (this.bars.length - 1);
		for (var i = Math.floor((1280 - e) / 2), t = 0; t < this.bars.length; t++) Util.isDefined(this.bars[t]) && (this.bars[t].x = i, i += this.bars[t].width + 10)
	},
	createBar: function (e, t) {
		var i = Math.ceil(t.width / 50);
		e.add(this.game.prodigy.create.sprite(0, 0, "core", "panel-corner")), e.add(this.game.prodigy.create.sprite(50 * i - 50, 0, "core", "panel-corner2"));
		for (var a = 0; i - 2 > a; a++) e.add(this.game.prodigy.create.sprite(50 + 50 * a, 0, "core", "panel-top"));
		t.x = Math.floor((e.width - t.width) / 2), t.y = 45
	},
	openNav: function () {
		Util.isDefined(this.bars[0]) || (this.bars[0] = this.game.prodigy.create.element(this, 0, 670)), this.bars[0].removeAll(!0), this.createBar(this.game.prodigy.create.element(this.bars[0]), new Prodigy.Menu.NavBar(this.game, this.bars[0], this.disable, this)), this.centerBars()
	},
	openChat: function (e) {
		Util.isDefined(this.bars[0]) || (this.bars[0] = this.game.prodigy.create.element(this, 0, 670)), this.bars[0].removeAll(!0), this.createBar(this.game.prodigy.create.element(this.bars[0]), new Prodigy.Menu.ChatBar(this.game, this.bars[0], e, this)), this.centerBars()
	}
}), Prodigy.Menu.NavBar = function (e, t, i, a) {
	Prodigy.Control.Element.call(this, e, t), this.menu = a, this.disable = i, this.btns = [], this.addBook(), this.addBag(), this.addPets(), this.addMap(), this.addLeaderboard(), this.addChat(), this.addSettings();
	for (var s = 0; s < this.btns.length; s++) s > 0 && (this.btns[s].x = this.btns[s - 1].x + this.btns[s - 1].width + 5), this.btns[s].y = -this.btns[s].height
}, Prodigy.extends(Prodigy.Menu.NavBar, Prodigy.Control.Element, {
	constructor: Prodigy.Menu.NavBar,
	checkNew: function (e, t, i) {
		Util.isDefined(e) && this.game.prodigy.player.tutorial.getMenuValue(1, t) < i && (e.newText = this.game.prodigy.create.font(e, 0, 0, "New!", {
			width: 80,
			align: "center"
		}), this.game.add.tween(e.newText).to({
			y: 5
		}, 800, Phaser.Easing.Quadratic.InOut, !0, 0, Number.MAX_VALUE, !0))
	},
	addBook: function () {
		this.btns.push(this.game.prodigy.create.button(this, 0, 0, "icons", "book", this.openBook.bind(this), this))
	},
	openBook: function () {
		this.game.prodigy.open.character()
	},
	addBag: function () {
		if (!(this.game.prodigy.player.getGold() < 1 && this.game.prodigy.player.backpack.getTotalUnique() < 1)) {
			var e = this.game.prodigy.create.button(this, 0, 0, "icons", "bag", this.openBag.bind(this), this);
			this.checkNew(e, 3, 1), this.btns.push(e)
		}
	},
	openBag: function () {
		this.game.prodigy.player.tutorial.setMenuValue(1, 3, 1), this.game.prodigy.open.backpack(), this.menu.openNav()
	},
	addPets: function () {
		if (!(this.game.prodigy.player.kennel.getPets().length <= 0 || Util.isDefined(this.disable.pets))) {
			var e = this.game.prodigy.create.button(this, 0, 0, "icons", "pet", this.openPets.bind(this), this);
			this.checkNew(e, 2, 1), this.btns.push(e)
		}
	},
	openPets: function () {
		this.game.prodigy.player.tutorial.setMenuValue(1, 2, 1), this.game.prodigy.open.pets(), this.menu.openNav()
	},
	addLeaderboard: function () {
		var e = this.game.prodigy.player.state.get("zone-tutorial");
		!Util.isDefined(e) || e.quest.ID < 5 || this.btns.push(this.game.prodigy.create.button(this, 0, 0, "icons", "award", this.openLeaderboard.bind(this), this))
	},
	openLeaderboard: function () {
		this.game.prodigy.open.social(0)
	},
	addMap: function () {
		var e = this.game.prodigy.player.state.get("zone-tutorial");
		if (Util.isDefined(e) && !(e.quest.ID < 5)) {
			var t = this.game.prodigy.create.button(this, 0, 0, "icons", "map", this.openMap.bind(this), this);
			this.checkNew(t, 1, 1), this.btns.push(t)
		}
	},
	openMap: function () {
		this.game.prodigy.player.tutorial.setMenuValue(1, 1, 1), this.game.prodigy.open.map(), this.menu.openNav()
	},
	addChat: function () {
		var e = this.game.prodigy.player.state.get("zone-tutorial");
		!Util.isDefined(e) || e.quest.ID < 5 || this.btns.push(this.game.prodigy.create.button(this, 0, 0, "icons", "chat", this.openChat.bind(this), this))
	},
	openChat: function () {
		this.menu.openChat()
	},
	addSettings: function () {
		this.btns.push(this.game.prodigy.create.button(this, 0, 0, "icons", "settings", this.openSettings.bind(this), this))
	},
	openSettings: function () {
		this.game.prodigy.open.settings()
	}
}), Prodigy.Menu.ChatBar = function (e, t, i, a) {
	Prodigy.Control.Element.call(this, e, t), this.menu = a, this.setup(i)
}, Prodigy.extends(Prodigy.Menu.ChatBar, Prodigy.Control.Element, {
	constructor: Prodigy.Menu.ChatBar,
	setup: function (e) {
		var t, i = this.game.prodigy.chat.getEmotes();
		if (!(Util.isDefined(e) && e <= Math.floor(i.length / 8))) return this.setup(0), void 0;
		t = this.menu.openChat.bind(this.menu, e + 1);
		for (var a = 70, s = 8 * e; 8 * e + 8 > s && s < i.length; s++) {
			var r = this.game.prodigy.create.button(this, a, 0, "icons", "chat/" + i[s], this.sendChat.bind(this, null, s));
			r.x += Math.floor((55 - r.width) / 2), a += 60, r.y = -r.height
		}
		this.game.prodigy.create.button(this, 0, -50, "icons", "back", t), this.game.prodigy.create.button(this, 550, -80, "icons", "chat", this.sendChat.bind(this))
	},
	sendChat: function (e, t) {
		Util.isDefined(t) && (this.game.prodigy.player.emoteID = t, this.game.prodigy.network.emitMessage({
			action: "chat",
			data: {
				userID: this.game.prodigy.player.userID,
				emoteID: t
			}
		})), Util.isDefined(e) && (this.game.prodigy.player.chatID = e), Util.isDefined(this.menu) && this.menu.openNav()
	}
}), Prodigy.Menu.Message = function (e, t) {
	Prodigy.Control.Menu.call(this, e, t, 17, {
		hideMenu: !0,
		hideContent: !1
	}), this.setup()
}, Prodigy.extends(Prodigy.Menu.Message, Prodigy.Control.Menu, {
	constructor: Prodigy.Menu.Message,
	setup: function () {
		Prodigy.Control.Menu.prototype.menuSetup.call(this), this.base = this.game.prodigy.create.element(this, 340, 200), this.game.prodigy.create.panel(this.base, 0, 0, 15, 8, "shine"), this.desc = this.game.prodigy.create.font(this.base, 60, 60, "", {
			font: "black",
			size: 20,
			width: 480
		}), this.title = this.game.prodigy.create.font(this.base, 10, 0, "", {
			size: 36,
			font: "button",
			width: 540
		})
	},
	setText: function (e, t, i) {
		Util.isDefined(this.timer) && window.clearInterval(this.timer), Util.isDefined(e) && this.processText(e, (new Date).getTime()), Util.isDefined(i) && this.title.setText("[star-small] " + i)
	},
	setOkay: function (e) {
		this.game.prodigy.create.button(this.base, 560, -10, "icons", "close", this.close.bind(this, e))
	},
	setConfirm: function (e, t) {
		Prodigy.Control.TextButton.createYesButton(this.game, this.base, 160, 250, this.close.bind(this, e)), Prodigy.Control.TextButton.createNoButton(this.game, this.base, 380, 250, this.close.bind(this, t))
	},
	close: function (e) {
		Util.isDefined(this.timer) && window.clearInterval(this.timer), Util.isDefined(e) && e(), Prodigy.Control.Menu.prototype.close.call(this)
	},
	processText: function (e, t) {
		if (Util.isDefined(this.game))
			if (e.indexOf("XTIMERX") >= 0) {
				var i = (new Date).getTime(),
					a = Util.processTime(i - t);
				this.desc.setText(e.replace("XTIMERX", a)), this.timer = window.setTimeout(this.processText.bind(this, e, t), 500)
			} else this.desc.setText(e)
	}
}), Prodigy.Menu.Rating = function (e, t) {
	if (Prodigy.Control.Menu.call(this, e, t, -1, {
			hideMenu: !0,
			hideContent: !1
		}), console.log("try rating " + this.game.prodigy.player.data.rate), Util.isDefined(this.game.prodigy.player.data.rate) && this.game.prodigy.player.data.rate > 3) {
		console.log("invoke app");
		try {
			webkit.messageHandlers.reviewApp.postMessage(0)
		} catch (i) {
			console.log(i)
		}
	}
	return Util.isDefined(this.game.prodigy.player.data.rate) ? (this.close(), void 0) : (this.setup(), void 0)
}, Prodigy.extends(Prodigy.Menu.Rating, Prodigy.Control.Menu, {
	constructor: Prodigy.Menu.Rating,
	setup: function () {
		Prodigy.Control.Menu.prototype.menuSetup.call(this), this.base = this.game.prodigy.create.element(this, 320, 150);
		var e = this.game.prodigy.create.element(this.base, 0, 0);
		this.game.prodigy.create.panel(e, 0, 0, 16, 10, "shine"), e.add(new Phaser.TileSprite(this.game, 11, 200, 618, 40, "core", "blue-top")), e.add(new Phaser.TileSprite(this.game, 11, 240, 618, 20, "core", "blue-mid")), e.add(new Phaser.TileSprite(this.game, 11, 260, 618, 40, "core", "blue-top2")), this.game.prodigy.create.panel(e, 40, 40, 14, 3, "banner"), this.base.add(this.game.prodigy.create.sprite(100, -30, "core", "menu-noot")), this.game.prodigy.create.font(this.base, 260, 58, "How would you rate Prodigy?", {
			size: 36,
			font: "button",
			width: 300,
			align: "center",
			lineHeight: 38
		}), this.game.prodigy.create.button(this.base, 600, -10, "icons", "close", this.close.bind(this)), this.cBtn = this.game.prodigy.create.textButton(this.base, 220, 320, {
			icon: "yes",
			text: "okay"
		}, this.close.bind(this, !0)), this.cBtn.setInactive();
		for (var t = [], i = 0; 5 > i; i++) {
			var a = this.base.add(this.game.prodigy.create.sprite(140 + 90 * i, 250, "icons", "star"));
			a.anchor.setTo(.5, .5), a.angle = -15, this.game.add.tween(a).to({
				angle: 15
			}, 1500, Phaser.Easing.Quadratic.InOut, !0, 0, Number.MAX_VALUE, !0), a.tint = 7829367, a.inputEnabled = !0, a.events.onInputDown.add(this.rate.bind(this, t, i)), t.push(a)
		}
	},
	rate: function (e, t) {
		for (var i = 0; i < e.length; i++) {
			var a = e[i];
			a.tint = t >= i ? 16777215 : 7829367
		}
		this.cBtn.setActive(), this.rating = t + 1
	},
	close: function (e) {
		if (e && this.rating > 3) try {
			webkit.messageHandlers.reviewApp.postMessage(0)
		} catch (t) {
			console.log(t)
		}
		e && Util.isDefined(this.rating) && (this.game.prodigy.player.data.rate = this.rating || 0, this.game.prodigy.player.updated = !0), Prodigy.Control.Menu.prototype.close.call(this)
	}
}), Prodigy.Menu.DormEditor = function (e, t, i) {
	Prodigy.Control.Menu.call(this, e, t, -1, {
		hideMenu: !0,
		hideContent: !0,
		tile: "bg-tile-brown",
		close: i
	}), this.setup()
}, Prodigy.extends(Prodigy.Menu.DormEditor, Prodigy.Control.Menu, {
	menuSetup: function () {
		Prodigy.Control.Menu.prototype.menuSetup.call(this), this.myItems = this.game.prodigy.create.element(this, 190, 620);
		var e = [{
			icon: "dorm/1",
			callback: this.setItems.bind(this, "Comfy")
		}, {
			icon: "dorm/3",
			callback: this.setItems.bind(this, "Surface")
		}, {
			icon: "dorm/6",
			callback: this.setItems.bind(this, "Plants")
		}, {
			icon: "dorm/13",
			callback: this.setItems.bind(this, "Storage")
		}, {
			icon: "dorm/18",
			callback: this.setItems.bind(this, "Wall")
		}, {
			icon: "dorm/31",
			callback: this.setItems.bind(this, "Lamps")
		}, {
			icon: "dorm/22",
			callback: this.setItems.bind(this, "Items")
		}];
		this.showFrame("map", "DESIGN-A-HOUSE", e, 0);
		var t = this.game.prodigy.create.textButton(this, 0, 0, {
			icon: "close",
			text: "close"
		}, this.close.bind(this));
		this.showBtns([], [t]);
		var i = Items.getItemData("dormbg", this.game.prodigy.player.house.getBackground()),
			a = i.bg;
		this.game.prodigy.load.assets([a], this.setBackground.bind(this, a)), this.setupComplete = !0
	},
	setBackground: function (e) {
		this.house = this.bg.add(this.game.prodigy.create.sprite(0, 0, e)), this.house.inputEnabled = !0, this.house.input.enableDrag(!1, !1);
		var t = function () {
			this.rot.visible = !1
		};
		this.house.events.onDragStart.add(t, this);
		var i = this.game.prodigy.player.house.getBackground(),
			a = Items.getItemData("dormbg", i);
		this.area = a.area, this.path = new Pathfinder(this.area);
		var s = this.game.prodigy.player.house.getSortedActive();
		this.game.prodigy.player.house.setAllInactive();
		var r = function () {
			this.game.prodigy.open.confirm("Do you want to remove all your items? All of your items will be returned to you!", this.removeAllItems.bind(this))
		};
		this.trash = this.game.prodigy.create.button(this.bg, 10, 505, "zone-house", "trash-icon", r.bind(this)), this.items = this.game.prodigy.create.element(this.bg, 0, 0);
		for (var o = 0; o < s.length; o++) this.addItem(s[o].ID, s[o].x, s[o].y, s[o].a, !0);
		this.rot = this.game.prodigy.create.sprite(0, 0, "zone-house", "rotate"), this.rot.anchor.setTo(.5, 1), this.add(this.rot), this.rot.visible = !1, this.rot.inputEnabled = !0, this.rot.events.onInputDown.add(this.rotateItem.bind(this, this.rot), this);
		var n = function () {
			this.game.prodigy.open.store(Dorm.STORE, this.setItems.bind(this, this.type, this.page))
		};
		this.add(this.game.prodigy.create.sprite(50, 635, "icons", "icon-base")), this.game.prodigy.create.button(this, 50, 625, "icons", "catalogue", n.bind(this))
	},
	update: function () {
		Util.isDefined(this.house) && Util.isDefined(this.items) && (this.house.y > 100 && (this.house.y = 100), this.house.y < -100 && (this.house.y = -100), this.house.x = 0, this.items.y = this.house.y), Prodigy.Control.Menu.prototype.update.call(this)
	},
	addItem: function (e, t, i, a, s) {
		var r = this.items.add(this.game.prodigy.create.sprite(t, i, "zone-house", "1-0"));
		Prodigy.Menu.DormEditor.setupItem(e, r, a), r.data = this.game.prodigy.player.house.setActive(e, t, i, 0, a), r.anchor.setTo(.5, .5), r.inputEnabled = !0, r.input.enableDrag(!0, !0), r.events.onDragStart.add(this.startDrag.bind(this, r), this), r.events.onDragStop.add(this.placeItem.bind(this, r), this), s || (this.linkRotate(r), this.setItems(this.type, this.page))
	},
	startDrag: function () {
		this.rot.visible = !1
	},
	placeItem: function (e) {
		e.x = Math.floor(e.x), e.y = Math.floor(e.y), e.x >= this.trash.x && e.y >= this.trash.y && e.x <= this.trash.x + this.trash.width && e.y <= this.trash.y + this.trash.height ? (this.game.prodigy.player.house.setInactive(e.ID, e.data), this.setItems(this.type, this.page), e.destroy()) : this.canPlace(e.x, e.y) ? this.linkRotate(e) : (e.x = e.data.x, e.y = e.data.y, e.z = e.data.z, this.linkRotate(e))
	},
	removeAllItems: function () {
		this.items.removeAll(!0), this.game.prodigy.player.house.setAllInactive(), this.setItems(this.type, this.page), this.rot.visible = !1
	},
	setItems: function (e, t) {
		this.myItems.removeAll(!0);
		for (var i = Items.getDormItems(e), a = i.length - 1; a >= 0; a--) {
			var s = i[a];
			this.game.prodigy.player.house.getOwned(s.ID) - this.game.prodigy.player.house.getActive(s.ID) <= 0 && i.splice(a, 1)
		}
		var r = Math.floor(1 + (i.length - 1) / 6);
		if (t = t || 0, 0 > t && (t = 0), t >= r && (t = r - 1), this.type = e, this.page = t, i.length <= 0) {
			var o = this.game.prodigy.create.element(this.myItems, 0, 30);
			o.showTooltip("Buy new items!", 0)
		} else {
			var n = this.myItems.add(this.game.prodigy.create.sprite(25, 30, "core", "overlay"));
			n.alpha = .2, n.width = 700, n.height = 50;
			for (var a = 6 * t, l = 0; 6 * t + 6 > a && a < i.length; a++, l++) Util.isDefined(i[a]) && new DormIcon(this.game, this.myItems, 75 + 100 * l, 0, i[a], this);
			var o = this.game.prodigy.create.button(this.myItems, 0, 30, "icons", "back", this.setItems.bind(this, e, t - 1)),
				h = this.game.prodigy.create.button(this.myItems, 700, 30, "icons", "next", this.setItems.bind(this, e, t + 1));
			0 === t && o.setInactive(), t === r - 1 && h.setInactive()
		}
	},
	canPlace: function (e, t) {
		if (0 > t || t > 720) return !1;
		var i = this.path.getNodeValue(Math.floor(e / 20), Math.floor(t / 20));
		return -1 === i || 1 === i
	},
	linkRotate: function (e) {
		Items.data.dorm[e.ID - 1].r > 0 ? (this.rot.visible = !0, this.rot.x = e.x, this.rot.y = e.y - e.height / 2 + this.house.y, this.rot.data = e, this.rot.bringToTop()) : this.rot.visible = !1
	},
	rotateItem: function (e) {
		if (Util.isDefined(e.data)) {
			var t = e.data.ID,
				i = e.data.data.a + 1,
				a = Items.data.dorm[t - 1],
				s = a.r;
			i >= s && (i = 0), e.data.data.a = i, Prodigy.Menu.DormEditor.setupItem(t, e.data, i)
		}
	},
	close: function () {
		for (var e = 0; e < this.items.children.length; e++) {
			var t = this.items.children[e];
			t.data.x = t.x, t.data.y = t.y, t.data.z = t.z
		}
		this.game.prodigy.player.house.updated = !0, Prodigy.Control.Menu.prototype.close.call(this)
	}
}), Prodigy.Menu.DormEditor.setupItem = function (e, t, i) {
	var a = Items.data.dorm[e - 1],
		s = Math.floor(i / 2),
		r = e + (a.r > 0 ? "-" + s : "");
	t.ID = e, t.frameName = r, t.scale.x = i % 2 === 1 ? -1 : 1
};
var DormIcon = function () {
	function e(e, t, i, a, s, r) {
		Prodigy.Control.Element.call(this, e, t, i, a), this.menu = r, this.item = s, this.icon = this.add(this.game.prodigy.create.sprite(0, 0, "icons", "dorm/" + s.ID)), this.overlay = this.add(this.game.prodigy.create.sprite(40, 40, "zone-house", "14")), this.overlay.anchor.setTo(.5, .5), this.overlay.inputEnabled = !0, this.overlay.alpha = 0, this.overlay.input.enableDrag(!0, !0), this.overlay.events.onDragStart.add(this.startDrag, this), this.overlay.events.onDragStop.add(this.stopDrag, this), this.ownedCount = this.game.prodigy.create.font(this, 0, 65, "" + (this.game.prodigy.player.house.getOwned(s.ID) - this.game.prodigy.player.house.getActive(s.ID)), {
			width: 80,
			align: "right"
		})
	}
	return e.prototype = Object.create(Prodigy.Control.Element.prototype), e.prototype.startDrag = function () {
		this.overlay.alpha = 1, Prodigy.Menu.DormEditor.setupItem(this.item.ID, this.overlay, 0)
	}, e.prototype.stopDrag = function () {
		var e = this.game.input.x,
			t = this.game.input.y;
		this.overlay.frameName = "14", this.overlay.anchor.setTo(.5, .5), this.overlay.x = 40, this.overlay.y = 40, this.overlay.alpha = 0, this.menu.canPlace(e, t - this.menu.house.y) ? this.menu.addItem(this.item.ID, Math.floor(e), Math.floor(t - this.menu.house.y), 0) : this.game.prodigy.open.message("You need to place this item in the house!", null, null, "Uh oh!")
	}, e
}();
Prodigy.Menu.LeaderPrompt = function (e, t) {
	Prodigy.Control.Menu.call(this, e, t, 17, {
		hideMenu: !0,
		hideContent: !1
	}), this.setup()
}, Prodigy.extends(Prodigy.Menu.LeaderPrompt, Prodigy.Control.Menu, {
	constructor: Prodigy.Menu.LeaderPrompt,
	setup: function () {
		Prodigy.Control.Menu.prototype.menuSetup.call(this), this.base = this.game.prodigy.create.element(this, 340, 720);
		for (var e = 0; 6 > e; e++) this.base.add(this.game.prodigy.create.sprite(20 + 50 * e, -40, "core", "panel-light-top"));
		this.base.add(this.game.prodigy.create.sprite(320, -40, "core", "panel-light-corner2")), this.game.prodigy.create.panel(this.base, 0, 0, 12, 6), this.base.add(this.game.prodigy.create.sprite(-20, -50, "icons", "icon-base")), this.icon = this.base.add(this.game.prodigy.create.sprite(-20, -50, "icons", "leaderboard")), this.desc = this.game.prodigy.create.font(this.base, 30, 30, "Loading...", {
			size: 30,
			width: 540
		}), this.title = this.game.prodigy.create.font(this.base, 80, -34, "Hey There!", {
			size: 30,
			width: 540
		}), this.game.add.tween(this.base).to({
			y: 150
		}, 400, Phaser.Easing.Quadratic.Out).to({
			y: 200
		}, 200, Phaser.Easing.Quadratic.In).start(), Prodigy.Control.TextButton.createCloseButton(this.game, this.base, 360, 270, this.close.bind(this)), this.game.prodigy.network.getLeaderboard("data.level", this.game.prodigy.player.classIDs, this.setText.bind(this, !0), this.setText.bind(this, !1))
	},
	setText: function (e, t) {
		if (Util.isDefined(this.game)) {
			if (!e || !Util.isDefined(t) || t.length <= 0) return this.desc.setText("You can play prodigy at home!\n\nJust go to prodigygame.com and click PLAY!"), this.game.prodigy.player.loginPrompt = !0, void 0;
			this.desc.setText(Prodigy.Container.Leaderboard.getPlayerMessage(t, this.game.prodigy.player)), this.game.prodigy.create.textButton(this.base, 40, 270, {
				text: "check it out!",
				size: Prodigy.Control.TextButton.MED
			}, this.close.bind(this, this.game.prodigy.open.leaderboard.bind(this.game.prodigy.open, t)))
		}
	},
	close: function (e) {
		Util.isDefined(e) && e(), Prodigy.Control.Menu.prototype.close.call(this)
	}
}), Prodigy.Menu.AttackSelect = function (e, t, i, a, s, r, o, n, l, h, d) {
	this.catchEnabled = Util.isDefined(r) && Util.isDefined(r.catch) ? r.catch : !0, this.mods = r || {
		run: !0
	}, this.spellCallback = n, this.runCallback = h, this.swapCallback = l, this.catchCallback = d, this.source = i, this.target = s, this.team = a, this.switchMode = o, Prodigy.Control.Menu.call(this, e, t, 3, {
		hideMenu: !0,
		hideContent: !1,
		hideOverlay: !0
	}), this.setup()
}, Prodigy.extends(Prodigy.Menu.AttackSelect, Prodigy.Control.Menu, {
	constructor: Prodigy.Menu.AttackSelect,
	menuSetup: function () {
		Prodigy.Control.Menu.prototype.menuSetup.call(this), this.base = this.game.prodigy.create.element(this, 466, 230);
		var e = this.base.add(this.game.prodigy.create.sprite(174, 174, "battle", "gear"));
		e.anchor.setTo(.5, .5), this.game.add.tween(e).to({
			angle: 360
		}, 36e3, Phaser.Easing.Linear.None, !0, 0, Number.MAX_VALUE), this.base.add(this.game.prodigy.create.sprite(0, 0, "battle", "base")), this.title = this.game.prodigy.create.font(this.base, 24, 150, "Attack", {
			size: 36,
			font: "button",
			width: 300,
			align: "center"
		}), this.content = this.game.prodigy.create.element(this.base, 0, 0), this.switchMode ? this.openSwitch() : this.openMain()
	},
	openMain: function () {
		this.openContent("actions");
		var e = [];
		e.push(this.game.prodigy.create.stackButton(this.content, 0, 0, [{
			tag: "icon-base"
		}, {
			tag: "attack",
			x: -10,
			y: -10
		}], this.openAttacks.bind(this)));
		var t = !1;
		if (this.catchEnabled && this.source instanceof Prodigy.Container.PlayerContainer && this.target.source.canCatch(this.mods)) {
			e.push(this.game.prodigy.create.stackButton(this.content, 0, 0, [{
				tag: "icon-base"
			}, {
				tag: "catch",
				x: -10,
				y: -10
			}], this.openCatch.bind(this)));
			var i = this.target.source.catchAttempt > 1,
				a = this.target.source.getID(),
				s = Monsters.getItemData(a);
			this.game.prodigy.player.isMember || 1 !== this.target.source.catchAttempt && !s.member || e[1].addImage("membership", 15, 15);
			var r = this.target.source.getCurrentHearts() <= 6 && !i;
			t = r;
			var o = e[1];
			e[1].enable(r)
		}
		e.push(this.game.prodigy.create.stackButton(this.content, 0, 0, [{
			tag: "icon-base"
		}, {
			tag: "run",
			x: -10,
			y: -10
		}], this.openRun.bind(this))), e[e.length - 1].enable(this.mods.run), e.push(this.game.prodigy.create.stackButton(this.content, 0, 0, [{
			tag: "icon-base"
		}, {
			tag: "team",
			x: -10,
			y: -10
		}], this.openSwitch.bind(this)));
		var n = e[e.length - 1];
		e[e.length - 1].enable(!this.mods.switchDisabled), this.arrangeChoices(e);
		var l = this.game.prodigy.player;
		this.dialogue = this.game.prodigy.dialogue.create(), l.tutorial.getMenuValue(this.menuID, 2) < 1 ? (l.tutorial.setMenuValue(this.menuID, 2, 1), this.dialogue.setText(8), this.dialogue.start("noot", !0)) : this.source.source.getCurrentHearts() < 8 && this.team.length > 1 && l.tutorial.getMenuValue(this.menuID, 0) < 1 ? (l.tutorial.setMenuValue(this.menuID, 0, 1), this.dialogue.setText(9), this.dialogue.setText({
			callback: Util.highlightAll.bind(Util, [n], !0)
		}), this.dialogue.setText(10), this.dialogue.setText({
			callback: Util.highlightAll.bind(Util, [n], !1)
		}), this.dialogue.start("noot")) : t && l.tutorial.getMenuValue(this.menuID, 1) < 1 && l.getGold() >= 500 && (l.tutorial.setMenuValue(this.menuID, 1, 1), this.dialogue.setText(11), this.dialogue.setText({
			callback: Util.highlightAll.bind(Util, [o], !0)
		}), this.dialogue.setText(12), this.dialogue.setText({
			callback: Util.highlightAll.bind(Util, [o], !1)
		}), this.dialogue.start("noot")), l.tutorial.getMenuValue(this.menuID, 2) < 2 && e[0].highlight(!0)
	},
	openElements: function () {
		this.dialogue.close(!0), this.openContent("elements", this.openMain.bind(this));
		for (var e = ["wizard", "fire", "water", "earth", "ice", "storm"], t = [], i = 0; i < e.length; i++) t.push(this.game.prodigy.create.stackButton(this.content, 0, 0, [{
			tag: "icon-base"
		}, {
			tag: e[i]
		}], this.openAttacks.bind(this, e[i]))), t[i].enable(this.source.source.getAttacks(e[i]).length > 0);
		this.arrangeChoices(t)
	},
	openCatch: function (e) {
		if (this.openContent("capture?"), e) {
			var t = this.source.source.kennel.getPets().length,
				i = this.target.source.getID(),
				a = Monsters.getItemData(i);
			if (a.member && this.game.prodigy.network.sendAnalytics("Catch-Member-Pets", a.name), this.source.source.kennel.isFull()) this.game.prodigy.open.message("You have too many pets! You must release some before you can catch any more...", null, null, "Uh oh!");
			else if (t >= 10 && !this.source.source.isMember) this.game.prodigy.network.sendAnalytics("Catch-More-Pets"), this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.BIGGER_ROSTER);
			else if (!this.source.source.isMember && a.member) this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.MEMBER_PETS);
			else if (this.target.source.catchAttempt > 0 && !this.game.prodigy.player.isMember) this.game.prodigy.network.sendAnalytics("Catch-Pet-Second-Try"), this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.CATCH);
			else {
				if (!(this.game.prodigy.player.getGold() < 500)) return this.game.prodigy.player.changeGold(-500), this.game.prodigy.player.isMember && (t >= 10 && this.game.prodigy.network.sendAnalytics("Catch-More-Pets"), this.target.source.catchAttempt > 0 && this.game.prodigy.network.sendAnalytics("Catch-Pet-Second-Try")), this.close(this.catchCallback), void 0;
				this.game.prodigy.open.message("You need [gold]500 to catch this pet. You only have [gold]" + this.game.prodigy.player.getGold(!0) + ".", null, "gold", "Uh oh!")
			}
			this.openMain()
		} else {
			var s = [];
			s.push(this.game.prodigy.create.stackButton(this.content, 0, 0, [{
				tag: "icon-base"
			}, {
				tag: "pet-yes"
			}], this.openCatch.bind(this, !0))), s.push(this.game.prodigy.create.stackButton(this.content, 0, 0, [{
				tag: "icon-base"
			}, {
				tag: "close",
				x: 15,
				y: 15
			}], this.openMain.bind(this))), this.arrangeChoices(s)
		}
	},
	openRun: function () {
		this.openContent("escape?");
		var e = [];
		e.push(this.game.prodigy.create.stackButton(this.content, 0, 0, [{
			tag: "icon-base"
		}, {
			tag: "yes",
			x: 15,
			y: 15
		}], this.close.bind(this, this.runCallback))), e.push(this.game.prodigy.create.stackButton(this.content, 0, 0, [{
			tag: "icon-base"
		}, {
			tag: "close",
			x: 15,
			y: 15
		}], this.openMain.bind(this))), this.arrangeChoices(e)
	},
	openSwitch: function () {
		this.openContent("my team", this.switchMode ? null : this.openMain.bind(this));
		for (var e = [], t = 0; t < this.team.length; t++) {
			var i = this.team[t].source,
				a = i instanceof Monster ? "pets/" + i.getID().toString() : "player";
			if (e.push(this.game.prodigy.create.stackButton(this.content, 0, 0, [{
					tag: "icon-base"
				}, {
					tag: a
				}], this.close.bind(this, this.swapCallback, t))), t < this.team.length / 2) e[t].add(this.game.prodigy.create.sprite(70, 0, "icons", "icon-data")), this.game.prodigy.create.font(e[t], 130, 7, i.getCurrentHearts() + "\n" + i.getLevel(), {
				lineHeight: 38
			});
			else {
				var s = e[t].add(this.game.prodigy.create.sprite(10, 0, "icons", "icon-data"));
				s.scale.x = -1, this.game.prodigy.create.font(e[t], -100, 7, i.getCurrentHearts() + "\n" + i.getLevel(), {
					width: 50,
					align: "right",
					lineHeight: 38
				})
			}(i === this.source.source || i.isKnockedOut()) && e[t].enable(!1)
		}
		this.arrangeChoices(e)
	},
	openAttacks: function () {
		this.dialogue.close(!0), this.openContent("spells", this.openMain.bind(this));
		for (var e = this.source.source.getAttacks(), t = {
				1: [0],
				2: [0, 1],
				3: [0, 0, 1],
				4: [0, 0, 1, 1],
				5: [0, 0, 0, 1, 1],
				6: [0, 0, 1, 1, 1, 0]
			}, i = [], a = Math.min(6, e.length), s = 0; a > s; s++) {
			var r = s < e.length ? this.game.prodigy.attacks.getAttack(e[s]) : null,
				o = this.close.bind(this, this.spellCallback, r);
			i.push(this.game.prodigy.create.stackButton(this.content, 0, 0, [{
				tag: "icon-base"
			}, {
				tag: r.element
			}], o));
			var n = null;
			0 === t[a][s] ? (n = i[s].add(this.game.prodigy.create.sprite(70, 0, "icons", "icon-data-2")), this.game.prodigy.create.font(i[s], 90, 7, r.name)) : (n = i[s].add(this.game.prodigy.create.sprite(10, 0, "icons", "icon-data-2")), n.scale.x = -1, this.game.prodigy.create.font(i[s], -260, 7, r.name, {
				width: 250,
				align: "right"
			})), n.inputEnabled = !0, n.events.onInputDown.add(o)
		}
		this.arrangeChoices(i), this.game.prodigy.player.tutorial.getMenuValue(this.menuID, 2) < 2 && i[0].highlight(!0, -100)
	},
	openAttacks2: function (e) {
		this.openContent("spells", this.openElements.bind(this));
		for (var t = this.source.source.getAttacks(e), i = [], a = 0; 6 > a; a++) {
			var s = a < t.length ? this.game.prodigy.attacks.getAttack(t[a]) : null,
				r = this.close.bind(this, this.spellCallback, s);
			if (i.push(this.game.prodigy.create.stackButton(this.content, 0, 0, [{
					tag: "icon-base"
				}, {
					tag: e
				}], r)), a < t.length) {
				var o = null;
				0 === a || 1 === a || 5 === a ? (o = i[a].add(this.game.prodigy.create.sprite(70, 0, "icons", "icon-data-2")), this.game.prodigy.create.font(i[a], 90, 7, s.name)) : (o = i[a].add(this.game.prodigy.create.sprite(10, 0, "icons", "icon-data-2")), o.scale.x = -1, this.game.prodigy.create.font(i[a], -260, 7, s.name, {
					width: 250,
					align: "right"
				})), o.inputEnabled = !0, o.events.onInputDown.add(r)
			} else i[a].enable(!1)
		}
		this.arrangeChoices(i)
	},
	openContent: function (e, t) {
		this.content.removeAll(!0), this.title.setText(e), Util.isDefined(t) && this.game.prodigy.create.button(this.content, 135, 189, "battle", "back-btn", t)
	},
	arrangeChoices: function (e, t) {
		var i = 165,
			a = 2 === e.length || 6 === e.length ? 0 : -Math.PI / 2;
		a += t || 0;
		for (var s = 2 * Math.PI / e.length, r = 174, o = 174, n = 0; n < e.length; n++) e[n].x = Math.floor(r + i * Math.cos(a + s * n)) - 40, e[n].y = Math.floor(o + i * Math.sin(a + s * n)) - 40
	},
	close: function (e, t) {
		Util.isDefined(e) && e(t), Prodigy.Control.Menu.prototype.close.call(this)
	}
}), Prodigy.Menu.Catcher = function (e, t, i, a) {
	this.callback = a, this.target = i, Prodigy.Control.Menu.call(this, e, t, 6, {
		hideMenu: !0,
		hideContent: !1,
		hideOverlay: !0
	}), this.setup()
}, Prodigy.extends(Prodigy.Menu.Catcher, Prodigy.Control.Menu, {
	constructor: Prodigy.Menu.Catcher,
	menuSetup: function () {
		Prodigy.Control.Menu.prototype.menuSetup.call(this), this.base = this.game.prodigy.create.element(this, 466, 230);
		var e = this.base.add(this.game.prodigy.create.sprite(174, 174, "battle", "gear"));
		e.anchor.setTo(.5, .5), this.game.add.tween(e).to({
			angle: 360
		}, 36e3, Phaser.Easing.Linear.None, !0, 0, Number.MAX_VALUE), this.base.add(this.game.prodigy.create.sprite(0, 0, "battle", "base")), this.base.add(this.game.prodigy.create.sprite(0, 0, "battle", "catch-overlay")), this.pointer = this.game.prodigy.create.sprite(174, 174, "battle", "pointer"), this.pointer.anchor.setTo(.5, .92), this.pointer.angle = 180, this.base.add(this.pointer);
		var t = Math.floor(600 + 800 * Math.random() * this.game.prodigy.affixes.getCatch());
		this.tween = this.game.add.tween(this.pointer).to({
			angle: "+360"
		}, t, Phaser.Easing.Linear.None, !0, 0, Number.MAX_VALUE);
		var i = this.game.prodigy.create.stackButton(this.base, 134, 134, [{
				tag: "icon-base"
			}, {
				tag: "catch",
				x: -10,
				y: -10
			}], this.close.bind(this)),
			a = this.game.prodigy.player;
		if (a.tutorial.getMenuValue(this.menuID, 0) < 1) {
			a.tutorial.setMenuValue(this.menuID, 0, 1);
			var s = this.game.prodigy.dialogue.create();
			s.setText({
				callback: Util.highlightAll.bind(Util, [i], !0)
			}), s.setText(13), s.setText({
				callback: Util.highlightAll.bind(Util, [i], !1)
			}), s.start("noot")
		}
	},
	close: function () {
		this.callback(this.pointer.angle >= 0 && this.pointer.angle <= 30 || this.pointer.angle >= -30 && this.pointer.angle <= 0), Prodigy.Control.Menu.prototype.close.call(this)
	}
}), Prodigy.Menu.MemberPrompt = function (e, t) {
	Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.create()
}, Prodigy.extends(Prodigy.Menu.MemberPrompt, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.RenderMenu,
	create: function () {
		var e = this.game.prodigy.create.element(this, 365, 720);
		Prodigy.RenderMenu.prototype.create.call(this);
		var t = this.game.prodigy.player.classIDs;
		if (t = Util.isDefined(t) && t.length > 0 ? t[0] : 2, this.game.prodigy.create.panel(e, 0, 0, 11, 8, "panel-light"), this.game.prodigy.player.isMember) {
			var i = this.showContent(e, t, this.game.prodigy.player.isMember, this.game.prodigy.player.data.rewardData);
			this.showReward(e, i.text, i.reward)
		} else {
			var i = this.showContent(e, t, this.game.prodigy.player.isMember);
			this.game.prodigy.player.data.reward && (delete this.game.prodigy.player.data.reward, this.game.prodigy.player.updated = !0), this.showBonus(e, i.text, i.reward), this.game.prodigy.player.data.rewardData = i.reward, this.game.prodigy.player.updated = !0
		}
		this.game.add.tween(e).to({
			y: 100
		}, 400, Phaser.Easing.Quadratic.Out).to({
			y: 150
		}, 200, Phaser.Easing.Quadratic.In).start(), this.setupComplete = !0
	},
	showContent: function (e, t, i) {
		var a = e.add(this.game.prodigy.create.sprite(200, 8, "core", "overlay-light"));
		a.alpha = .1, a.width = 150, a.height = 210;
		var s = this.game.prodigy.create.element(e, 175, 110),
			r = "",
			o = null;
		r = i ? "Here's your reward of 2000 gold!" : "Join now and get 2000 GOLD!", o = {
			type: "gold",
			N: 2e3
		};
		var n = s.add(this.game.prodigy.create.sprite(60, 50, "icons", "item/26"));
		return this.game.add.tween(n).to({
			y: "-5"
		}, 800, Phaser.Easing.Quadratic.InOut, !0, 0, Number.MAX_VALUE, !0), n = s.add(this.game.prodigy.create.sprite(10, 50, "icons", "item/26")), this.game.add.tween(n).to({
			y: "-5"
		}, 800, Phaser.Easing.Quadratic.InOut, !0, 50, Number.MAX_VALUE, !0), n = s.add(this.game.prodigy.create.sprite(110, 50, "icons", "item/26")), this.game.add.tween(n).to({
			y: "-5"
		}, 800, Phaser.Easing.Quadratic.InOut, !0, 100, Number.MAX_VALUE, !0), n = s.add(this.game.prodigy.create.sprite(30, 30, "icons", "item/26")), this.game.add.tween(n).to({
			y: "-5"
		}, 800, Phaser.Easing.Quadratic.InOut, !0, 150, Number.MAX_VALUE, !0), n = s.add(this.game.prodigy.create.sprite(80, 30, "icons", "item/26")), this.game.add.tween(n).to({
			y: "-5"
		}, 800, Phaser.Easing.Quadratic.InOut, !0, 200, Number.MAX_VALUE, !0), n = s.add(this.game.prodigy.create.sprite(55, 10, "icons", "item/26")), this.game.add.tween(n).to({
			y: "-5"
		}, 800, Phaser.Easing.Quadratic.InOut, !0, 0, Number.MAX_VALUE, !0), s.add(this.game.prodigy.create.sprite(0, 100, "core", "chest-bot")), {
			text: r,
			reward: o
		}
	},
	showBonus: function (e, t) {
		this.game.prodigy.create.font(e, 0, 15, "Become a Member Today!", {
			size: 30,
			width: 550,
			align: "center"
		}), this.game.prodigy.create.font(e, 0, 70, t, {
			size: 20,
			width: 550,
			align: "center"
		}), Prodigy.Control.TextButton.createCloseButton(this.game, e, 330, 320, this.close.bind(this)), this.game.prodigy.create.textButton(e, 20, 320, {
			icon: "member",
			text: "buy now!",
			size: Prodigy.Control.TextButton.MED
		}, this.submit.bind(this))
	},
	showReward: function (e, t, i) {
		this.game.prodigy.create.font(e, 0, 15, "You Have a Membership!", {
			size: 30,
			width: 550,
			align: "center"
		}), this.game.prodigy.create.font(e, 0, 70, t, {
			size: 20,
			width: 550,
			align: "center"
		}), Prodigy.Control.TextButton.createCloseButton(this.game, e, 175, 320, this.game.prodigy.open.gotItem.bind(this.game.prodigy.open, [i], this.giveItem.bind(this)))
	},
	giveItem: function () {
		this.game.prodigy.player.data.reward = 1, this.game.prodigy.player.data.rewardData = null, this.game.prodigy.player.updated = !0, this.close()
	},
	submit: function () {
		this.game.prodigy.open.membership()
	}
}), Prodigy.Menu.MemberPrompt.isRequired = function (e) {
	if (e.memberPrompt) return !1;
	var t = e.classIDs;
	return Util.isDefined(t) && !(t.length <= 0) || e.isMember ? (t = Util.isDefined(t) ? t[0] : 0, t % 3 !== 2 || e.isMember ? !e.isMember && Util.isSchoolHours() ? !1 : e.isMember && e.data.reward ? !1 : !0 : !1) : !1
}, Prodigy.Menu.Card = function (e, t, i, a) {
	Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.viewOnly = a, this.player = i, this.create()
}, Prodigy.extends(Prodigy.Menu.Card, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.Card,
	create: function () {
		this.addTransparent(), this.base = this.game.prodigy.create.element(this, 300, 120);
		var e = this.game.prodigy.create.element(this, this.base.x, this.base.y);
		this.game.prodigy.create.panel(e, 0, 0, 17, 2, "card-top"), this.game.prodigy.create.panel(e, 0, 80, 17, 10, "card-bot");
		var t = e.add(this.game.prodigy.create.sprite(6, 360, "core", "overlay"));
		t.width = 668, t.height = 80, t.alpha = .1, e.setRenderState(!0), this.p = this.game.prodigy.create.player(this.base, this.player, 2, 110, 320), this.p.reload(), this.game.prodigy.create.font(this.base, 10, 3, (this.player.isMember ? "[membership] " : "") + this.player.appearance.getName(), {
			size: 36,
			font: "button"
		}), this.game.prodigy.create.font(this.base, 10, 53, "$" + this.player.getLevel(), {
			size: 36,
			font: "button"
		}), this.game.prodigy.create.button(this.base, 640, -10, "icons", "close", this.close.bind(this)), this.buttons = [], this.player.userID === this.game.prodigy.player.userID ? this.setupPlayer(this.buttons) : this.setupStranger(this.buttons), this.content = this.game.prodigy.create.element(this.base), this.setMode(1), Prodigy.RenderMenu.prototype.create.call(this)
	},
	setupPlayer: function (e) {
		var t = 15,
			i = 350,
			a = this.game.prodigy.create.advButton(this.base, t + 0, i, {
				icon: "move",
				top: "Go To",
				bot: "House"
			}, this.toHouse.bind(this));
		e.push(this.game.prodigy.create.advButton(this.base, t + 330, i, {
			icon: "player",
			top: "View",
			bot: "Stats"
		}, this.setMode.bind(this, 0))), e.push(this.game.prodigy.create.advButton(this.base, t + 440, i, {
			icon: "bag",
			top: "View",
			bot: "Gear"
		}, this.setMode.bind(this, 1))), e.push(this.game.prodigy.create.advButton(this.base, t + 550, i, {
			icon: "item/75",
			top: "Key",
			bot: "Items"
		}, this.setMode.bind(this, 2)));
		var s = this.game.prodigy.player.state.get("zone-tutorial");
		(!Util.isDefined(s) || s.quest.ID < 5) && a.setActive(!1)
	},
	setupStranger: function (e) {
		var t = 15,
			i = 350;
		this.game.prodigy.create.advButton(this.base, t + 0, i, {
			icon: "move",
			top: "Go To",
			bot: "House"
		}, this.toHouse.bind(this)).setActive(!1);
		var a = this.game.prodigy.create.advButton(this.base, t + 110, i, {
			icon: "challenge",
			top: "Battle!"
		}, this.challenge.bind(this));
		this.viewOnly && a.setActive(!1), e.push(this.game.prodigy.create.advButton(this.base, t + 440, i, {
			icon: "player",
			top: "View",
			bot: "Stats"
		}, this.setMode.bind(this, 0))), e.push(this.game.prodigy.create.advButton(this.base, t + 550, i, {
			icon: "bag",
			top: "View",
			bot: "Gear"
		}, this.setMode.bind(this, 1)))
	},
	setMode: function (e) {
		if (this.page = e, Prodigy.RenderMenu.prototype.setMode.call(this, e), this.content.removeAll(!0), 1 === e)
			for (var t = ["hat", "weapon", "relic", "outfit", "boots", "ring"], i = 0; i < t.length; i++) this.player.userID === this.game.prodigy.player.userID ? this.game.prodigy.create.item(this.content, 260 + i % 3 * 140, 67 + 140 * Math.floor(i / 3), {
				ID: this.player.equipment.getEquipment(t[i]),
				type: t[i]
			}, "icon", this.openPouch.bind(this, t[i])) : this.game.prodigy.create.item(this.content, 260 + i % 3 * 140, 67 + 140 * Math.floor(i / 3), {
				ID: this.player.equipment.getEquipment(t[i]),
				type: t[i]
			}, "icon", this.itemSelected.bind(this, this.player.equipment.getEquipment(t[i]), t[i]));
		else if (0 === e) {
			var a = this.player.getCurrentHearts() / 4 + "/" + this.player.getMaxHearts() / 4,
				s = this.game.prodigy.create.panel(this.content, 330, 65, 4, 2, "stat");
			this.game.prodigy.create.font(s, 5, 5, "[mail-heart] Hearts", {
				size: 20
			}), this.game.prodigy.create.font(s, 5, 46, a, {
				font: "black",
				align: "right",
				width: 145
			}), a = this.player.getStars() + "/" + (this.player.getStars() + this.player.getStarsToLevel()), this.player.getLevel() >= 100 && (a = "MAX");
			var s = this.game.prodigy.create.panel(this.content, 500, 65, 4, 2, "stat");
			this.game.prodigy.create.font(s, 5, 5, "[mail-star] Stars", {
				size: 20
			}), this.game.prodigy.create.font(s, 5, 46, a, {
				font: "black",
				align: "right",
				width: 145
			});
			var s = this.game.prodigy.create.panel(this.content, 330, 155, 4, 2, "stat");
			this.game.prodigy.create.font(s, 5, 5, "[mail-gold] Gold", {
				size: 20
			}), this.game.prodigy.create.font(s, 5, 46, "" + this.player.getGold(!0), {
				font: "black",
				align: "right",
				width: 145
			});
			var s = this.game.prodigy.create.panel(this.content, 500, 155, 4, 2, "stat");
			this.game.prodigy.create.font(s, 5, 5, "[mail-tower] Tower", {
				size: 20
			}), this.game.prodigy.create.font(s, 5, 46, "Floor " + this.player.getTowerProgress(), {
				font: "black",
				align: "center",
				width: 145
			});
			var s = this.game.prodigy.create.panel(this.content, 330, 245, 4, 2, "stat");
			this.game.prodigy.create.font(s, 5, 5, "[mail-challenge] Arena", {
				size: 20
			}), this.game.prodigy.create.font(s, 5, 46, "" + this.player.getArenaScore(), {
				font: "black",
				align: "right",
				width: 145
			});
			var s = this.game.prodigy.create.panel(this.content, 500, 245, 4, 2, "stat");
			this.game.prodigy.create.font(s, 5, 5, "[mail-challenge] W / L", {
				size: 20
			}), this.game.prodigy.create.font(s, 5, 46, this.player.getWins() + "/" + this.player.getLosses(), {
				font: "black",
				align: "center",
				width: 145
			})
		} else if (2 === e)
			for (var r = this.game.prodigy.player.backpack.getBackpackItemsByType("key"), i = 0; 2 > i; i++) {
				var o = this.content.add(this.game.prodigy.create.sprite(260, 120 + 90 * i, "core", "overlay"));
				o.width = 414, o.height = 40, o.alpha = .05;
				for (var n = 0; 4 > n; n++)
					if (4 * i + n < r.length) {
						var l = this.content.add(this.game.prodigy.create.sprite(o.x + 20 + 100 * n, o.y - 50, "icons", Util.convertItemToIcon({
							type: "key",
							ID: r[4 * i + n].ID
						})));
						l.inputEnabled = !0, l.events.onInputDown.add(this.itemSelected.bind(this, r[4 * i + n].ID, "key", "inv"))
					}
			}
	},
	toHouse: function () {
		this.game.prodigy.network.getCharData(this.player.userID, ["house"], this.dormLoaded.bind(this, this.player.userID))
	},
	dormLoaded: function (e, t) {
		Util.isDefined(t) && Util.isDefined(t[e].house) && (this.player.house.setItems(Util.getObject(t[e].house)), this.game.state.states.Dorm.player = this.player, this.game.state.start("Dorm"))
	},
	challenge: function () {
		var e = function (e) {
				e.prodigy.world.teleport(e.prodigy.player.data.zone, e.prodigy.player.appearance.data.x, e.prodigy.player.appearance.data.y)
			},
			t = {
				equipment: this.game.prodigy.player.equipment.data,
				appearance: this.game.prodigy.player.appearance.data,
				data: this.game.prodigy.player.data,
				isMember: this.game.prodigy.player.isMember
			};
		this.game.prodigy.network.emitMessage({
			action: "challenge",
			target: this.player.userID,
			time: 6e4,
			data: {
				userID: this.game.prodigy.player.userID,
				player: t
			}
		}), this.game.prodigy.pvp.start(this.game.prodigy.player.userID, this.game.prodigy.player, this.player, e.bind(this, this.game), !1)
	},
	sendGift: function () {
		this.game.prodigy.open.message("This feature is coming soon!", null, null, "Send Gift")
	},
	updatePlayer: function () {
		this.p.reload(), this.game.input.clearEnterCallback()
	},
	itemSelected: function (e, t, i) {
		Util.isDefined(e) && this.game.prodigy.open.itemInfo({
			ID: e,
			type: t
		}, this.updatePlayer.bind(this), i)
	},
	openPouch: function (e) {
		"ring" === e || Util.isDefined(this.player.equipment.getEquipment(e)) ? this.itemSelected(this.player.equipment.getEquipment(e), e, "equip") : this.game.prodigy.open.pouch(e, this.updatePlayer.bind(this))
	}
}), Prodigy.Menu.ChoosePet = function (e, t, i) {
	Prodigy.Control.Menu.call(this, e, t, -1, {
		hideMenu: !0,
		hideContent: !1
	}), this.callback = i, this.setup()
}, Prodigy.extends(Prodigy.Menu.ChoosePet, Prodigy.Control.Menu, {
	constructor: Prodigy.Menu.ChoosePet,
	setup: function () {
		Prodigy.Control.Menu.prototype.menuSetup.call(this), this.base = this.game.prodigy.create.element(this, 390, 120), this.game.prodigy.create.panel(this.base, 0, 0, 10, 6, "panel-light");
		for (var e = [[20, 50, .2], [100, 80, .1], [230, 50, .2]], t = 0; t < e.length; t++) {
			var i = this.base.add(this.game.prodigy.create.sprite(8, e[t][0], "core", "overlay-small"));
			i.width = 484, i.height = e[t][1], i.alpha = e[t][2]
		}
		this.game.prodigy.create.font(this.base, 0, 20, "Choose Your Pet", {
			font: "button",
			size: 36,
			align: "center",
			width: 500
		}), this.btns = [];
		for (var t = 0; 4 > t; t++) this.btns.push(this.game.prodigy.create.button(this.base, 36 + 116 * t, 100, "icons", "pets/" + (1 + 3 * t), this.selectPet.bind(this, t)));
		this.dialogue = this.game.prodigy.dialogue.create(), this.dialogue.setText(14), this.dialogue.start("noot", !0)
	},
	selectPet: function (e) {
		for (var t = 0; t < this.btns.length; t++) this.game.tweens.removeFrom(this.btns[t], !1), this.btns[t].sprite.tint = 6710886, this.btns[t].y = 100;
		this.btns[e].sprite.tint = 16777215, this.game.add.tween(this.btns[e]).to({
			y: this.btns[e].y - 10
		}, 500, Phaser.Easing.Quadratic.Out).to({
			y: this.btns[e].y
		}, 500, Phaser.Easing.Quadratic.In).loop().start(), Util.isDefined(this.closeBtn) && this.closeBtn.destroy(), this.closeBtn = this.game.prodigy.create.textButton(this.base, 75, 220, {
			icon: "next",
			text: "choose " + Monsters.getItemData(1 + 3 * e).name,
			size: Prodigy.Control.TextButton.LG
		}, this.takePet.bind(this, 1 + 3 * e))
	},
	takePet: function (e) {
		this.dialogue.close(), this.game.prodigy.open.gotItem([{
			type: "pet",
			ID: e,
			data: {
				ID: e
			}
		}], this.callback), this.close()
	}
}), Prodigy.Menu.ChooseSpell = function (e, t, i, a) {
	Prodigy.Control.Menu.call(this, e, t, -1, {
		hideMenu: !0,
		hideContent: !1
	}), this.spells = i, this.callback = a, this.setup()
}, Prodigy.extends(Prodigy.Menu.ChooseSpell, Prodigy.Control.Menu, {
	constructor: Prodigy.Menu.ChooseSpell,
	setup: function () {
		Prodigy.Control.Menu.prototype.menuSetup.call(this), this.base = this.game.prodigy.create.element(this, 390, 110), this.game.prodigy.create.panel(this.base, 0, 0, 10, 9, "panel-light");
		for (var e = [[20, 50, .2]], t = 0; t < e.length; t++) {
			var i = this.base.add(this.game.prodigy.create.sprite(8, e[t][0], "core", "overlay-small"));
			i.width = 484, i.height = e[t][1], i.alpha = e[t][2]
		}
		this.game.prodigy.create.font(this.base, 0, 20, "Choose a Spell", {
			font: "button",
			size: 36,
			align: "center",
			width: 500
		});
		var a = this.game.prodigy.create.element(this.base, 150, 100);
		this.scroll = this.game.prodigy.create.scrollBar(this.base, 30, 100, 280, this.showSpellList.bind(this, a)), this.scroll.setPages(this.spells.length), this.scroll.click(0), this.game.prodigy.create.textButton(this.base, 150, 410, {
			icon: "close",
			text: "cancel"
		}, this.close.bind(this))
	},
	showSpellList: function (e, t) {
		e.removeAll(!0);
		for (var i = t; t + 3 > i && i < this.spells.length; i++) {
			var a = this.spells[i],
				s = e.add(this.game.prodigy.create.sprite(0, 100 * (i - t), "icons", "icon-base")),
				r = e.add(this.game.prodigy.create.sprite(70, 100 * (i - t), "icons", "icon-data-2"));
			s.inputEnabled = r.inputEnabled = !0, s.events.onInputDown.add(this.close.bind(this, a.ID)), r.events.onInputDown.add(this.close.bind(this, a.ID)), this.game.prodigy.create.font(e, r.x + 20, r.y + 7, a.name), r = e.add(this.game.prodigy.create.sprite(s.x, s.y, "icons", a.element))
		}
	},
	close: function (e) {
		this.callback(e), Prodigy.Control.Menu.prototype.close.call(this)
	}
}), Prodigy.Menu.Store = function (e, t, i, a) {
	this.data = i, this.onClose = a, Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.create()
}, Prodigy.extends(Prodigy.Menu.Store, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.Store,
	create: function () {
		this.addTransparent();
		var e = [];
		if (Util.isDefined(this.data.pages))
			for (var t = 0; t < this.data.pages.length; t++) e.push(this.data.pages[t].btn);
		else e = null;
		this.createBaseSetup(30, 16, "shine", null, e, !0, this.data.name);
		var i = this.game.prodigy.create.element(this, 0, 0);
		i.setRenderState(!0), i.add(new Phaser.TileSprite(this.game, 51, 240, 1178, 40, "core", "blue-top")), i.add(new Phaser.TileSprite(this.game, 51, 280, 1178, 300, "core", "blue-mid")), i.add(new Phaser.TileSprite(this.game, 51, 580, 1178, 40, "core", "blue-top2")), i.add(this.game.prodigy.create.sprite(80, 63, "core", "merchant")), this.cards = this.game.prodigy.create.element(this, 430, 220), this.bar = this.game.prodigy.create.slider(this, this.cards.x + 540 + 180, 240, 380, !0, !0), this.initGold(), this.data.dod && this.initDeal(), Prodigy.RenderMenu.prototype.create.call(this), this.setMode(0)
	},
	setMode: function (e) {
		Prodigy.RenderMenu.prototype.setMode.call(this, e);
		var t = [];
		Util.isDefined(this.data.pages) ? (this.currentPage = this.data.pages[e], t = this.data.pages[e].items) : Util.isDefined(this.data.items) && (t = this.data.items), this.bar.reset(t.length - 4, 4, -1, this.setItems.bind(this, t)), this.refreshPage()
	},
	setItems: function (e, t) {
		this.cards.removeAll(!0);
		for (var i = t; t + 8 > i; i++) {
			var a = e[i],
				s = i - t;
			i >= e.length ? this.game.prodigy.create.panel(this.cards, s % 4 * 180, 220 * Math.floor(s / 4), 4, 5, "empty") : this.game.prodigy.create.item(this.cards, s % 4 * 180, 220 * Math.floor(s / 4), {
				ID: a.ID,
				type: a.type
			}, "store", this.clicked.bind(this, a))
		}
	},
	initGold: function () {
		var e = this.game.prodigy.create.panel(this, 80, 260, 8, 2, "white");
		e.alpha = .75, e.setRenderState(!0), this.gold = this.game.prodigy.create.font(this, e.x, e.y + 20, "[mail-gold] " + this.game.prodigy.player.getGold(!0), {
			size: 40,
			align: "center",
			width: 320
		})
	},
	initDeal: function () {
		var e = this.game.prodigy.create.panel(this, 80, 360, 8, 6, "white");
		e.setRenderState(!0), e.alpha = 0, this.deal = this.game.prodigy.create.element(this, e.x, e.y)
	},
	refreshPage: function () {
		this.bar.process()
	},
	clicked: function (e) {
		var t = this.game.prodigy.player.backpack.hasItem(e.type, e.ID);
		"dorm" === e.type ? t = this.owned = this.game.prodigy.player.house.getOwned(e.ID) >= 9 : "pet" === e.type ? t = this.owned = this.game.prodigy.player.kennel.hasPet(e.ID) : "item" === e.type && (t = t >= 99), t && "dorm" === e.type ? this.game.prodigy.open.message("You already have too many of this item!", null, null, "Uh oh!") : t && "dormbg" === e.type ? this.game.prodigy.open.message("You already live here!", null, null, "Uh oh!") : t && "pet" !== e.type ? this.game.prodigy.open.message("You already have this item!", null, null, "Uh oh!") : t ? this.game.prodigy.open.message("You already have this pet!", null, null, "Uh oh!") : "pet" === e.type && this.game.prodigy.player.kennel.isFull() ? this.game.prodigy.open.message("You have too many pets! You must release some in order to buy a new one.", null, null, "Uh oh!") : this.game.prodigy.open.itemInfo(e, this.buy.bind(this, e), "buy")
	},
	buy: function (e, t) {
		if (t) {
			var i = Items.getItemData(e.type, e.ID),
				a = Items.getItemPrice(e.type, e.ID);
			Util.isDefined(i.member) && ("pet" === e.type ? this.game.prodigy.network.sendAnalytics("Buy-Member-Pet", Monsters.getItemData(e.ID).name) : this.game.prodigy.network.sendAnalytics("Buy-Member-Item", Items.getItemData(e.type, e.ID).name)), !this.game.prodigy.player.isMember && i.member ? this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.PREMIUM_ITEM) : this.game.prodigy.player.getGold() < a ? this.game.prodigy.player.isMember ? this.game.prodigy.open.message("You need [gold]" + a + " for this item. You only have [gold]" + this.game.prodigy.player.getGold(!0) + ".", null, "gold", "Uh oh!") : this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.MORE_GOLD) : (this.game.prodigy.player.changeGold(-a), this.game.prodigy.open.gotItem([{
				ID: e.ID,
				type: e.type,
				N: 1,
				data: i
			}], this.refreshPage.bind(this)), this.gold.setText("[mail-gold] " + this.game.prodigy.player.getGold(!0)))
		}
	}
}), Prodigy.Menu.Store.DATA = {
	name: "ACADEMY WAND SHOP",
	dod: !0,
	pages: [{
		btn: {
			icon: "weapon/1",
			bot: "Wands"
		},
		items: [{
			ID: 26,
			type: "weapon"
		}, {
			ID: 28,
			type: "weapon"
		}, {
			ID: 30,
			type: "weapon"
		}, {
			ID: 1,
			type: "weapon"
		}, {
			ID: 2,
			type: "weapon"
		}, {
			ID: 3,
			type: "weapon"
		}, {
			ID: 4,
			type: "weapon"
		}, {
			ID: 5,
			type: "weapon"
		}, {
			ID: 6,
			type: "weapon"
		}, {
			ID: 9,
			type: "weapon"
		}, {
			ID: 10,
			type: "weapon"
		}, {
			ID: 11,
			type: "weapon"
		}, {
			ID: 12,
			type: "weapon"
		}, {
			ID: 14,
			type: "weapon"
		}, {
			ID: 15,
			type: "weapon"
		}, {
			ID: 31,
			type: "weapon"
		}, {
			ID: 55,
			type: "weapon"
		}, {
			ID: 34,
			type: "weapon"
		}, {
			ID: 50,
			type: "weapon"
		}, {
			ID: 52,
			type: "weapon"
		}, {
			ID: 37,
			type: "weapon"
		}, {
			ID: 38,
			type: "weapon"
		}, {
			ID: 41,
			type: "weapon"
		}, {
			ID: 7,
			type: "weapon"
		}, {
			ID: 8,
			type: "weapon"
		}, {
			ID: 20,
			type: "weapon"
		}, {
			ID: 21,
			type: "weapon"
		}, {
			ID: 22,
			type: "weapon"
		}, {
			ID: 24,
			type: "weapon"
		}, {
			ID: 42,
			type: "weapon"
		}, {
			ID: 45,
			type: "weapon"
		}, {
			ID: 16,
			type: "weapon"
		}, {
			ID: 61,
			type: "weapon"
		}]
	}, {
		btn: {
			icon: "hat/5",
			bot: "Hats"
		},
		items: [{
			ID: 14,
			type: "hat"
		}, {
			ID: 16,
			type: "hat"
		}, {
			ID: 17,
			type: "hat"
		}, {
			ID: 18,
			type: "hat"
		}, {
			ID: 19,
			type: "hat"
		}, {
			ID: 20,
			type: "hat"
		}, {
			ID: 1,
			type: "hat"
		}, {
			ID: 2,
			type: "hat"
		}, {
			ID: 3,
			type: "hat"
		}, {
			ID: 4,
			type: "hat"
		}, {
			ID: 5,
			type: "hat"
		}, {
			ID: 9,
			type: "hat"
		}]
	}, {
		btn: {
			icon: "outfit/1",
			bot: "Outfits"
		},
		items: [{
			ID: 16,
			type: "outfit"
		}, {
			ID: 18,
			type: "outfit"
		}, {
			ID: 1,
			type: "outfit"
		}, {
			ID: 2,
			type: "outfit"
		}, {
			ID: 7,
			type: "outfit"
		}, {
			ID: 9,
			type: "outfit"
		}, {
			ID: 10,
			type: "outfit"
		}, {
			ID: 11,
			type: "outfit"
		}, {
			ID: 12,
			type: "outfit"
		}, {
			ID: 17,
			type: "outfit"
		}, {
			ID: 20,
			type: "outfit"
		}, {
			ID: 21,
			type: "outfit"
		}, {
			ID: 22,
			type: "outfit"
		}, {
			ID: 28,
			type: "outfit"
		}, {
			ID: 30,
			type: "outfit"
		}]
	}]
}, Prodigy.Menu.DormStore = function (e, t, i, a, s) {
	this.data = i, this.panels = [], this.pageIndex = 0, this.deal = a, Prodigy.Control.Menu.call(this, e, t, 20, {
		hideMenu: !0,
		hideContent: !0,
		tile: "bg-tile-white",
		close: s
	}), this.setup()
}, Prodigy.extends(Prodigy.Menu.DormStore, Prodigy.Control.Menu, {
	constructor: Prodigy.Menu.DormStore,
	menuSetup: function () {
		Prodigy.Control.Menu.prototype.menuSetup.call(this), this.gold = this.game.prodigy.create.font(this, 50, 655, "", {
			size: 40
		}), this.content = this.game.prodigy.create.element(this, 200, 180), this.deal && (this.dealData = this.initDeal()), this.scroll = this.game.prodigy.create.scrollBar(this, 60, 180, 345, this.setPage.bind(this));
		for (var e = [], t = 0; t < this.data.length; t++) e.push({
			icon: this.data[t].icon || "catalogue",
			callback: this.setStore.bind(this, this.data[t]),
			title: this.data[t].name || "PRODIGY STORE"
		});
		this.showFrame("catalogue", 1 === this.data.length ? this.data[0].name : "Prodigy Store", e, 0);
		var i = this.game.prodigy.create.textButton(this, 0, 0, {
			icon: "close",
			text: "close"
		}, this.close.bind(this));
		this.showBtns([], [i]), this.setupComplete = !0
	},
	setStore: function (e) {
		this.current = e, this.pageIndex = 0, this.scroll.setPages(this.current.pages.length)
	},
	setPage: function (e) {
		this.pageIndex = e, this.initPage(this.current.pages[this.pageIndex]), this.gold.setText("[gold] " + this.game.prodigy.player.getGold(!0))
	},
	showImage: function (e, t, i, a) {
		if (this.pageIndex === e) {
			var s = this.game.prodigy.create.sprite(250, 370, t, i);
			a ? (s.y = 0, s.anchor.setTo(.5, 0)) : s.anchor.setTo(.5, 1), this.content.add(s)
		}
	},
	initDeal: function () {
		Util.isDefined(this.dealC) && this.dealC.destroy();
		var e = new Date,
			t = Util.getDateSeed(),
			i = new Date(e.getUTCFullYear(), e.getUTCMonth(), e.getUTCDay(), e.getUTCHours(), e.getUTCMinutes(), e.getUTCSeconds(), e.getUTCMilliseconds()),
			a = t + 864e5 - i.getTime(),
			s = Math.floor(Util.pseudoRandomNumber(t) * this.data.length),
			r = Math.floor(Util.pseudoRandomNumber(t + 1) * this.data[s].pages.length),
			o = Math.floor(Util.pseudoRandomNumber(t + 2) * this.data[s].pages[r].items.length),
			n = this.data[s].pages[r].items[o];
		return this.dealC = this.game.prodigy.create.panel(this, 340, 580, 12, 2), this.timer = this.game.prodigy.create.timer(this.dealC, 300, 0, !0), this.timer.setTime(a), this.timer.setMsg("Time to Next Deal"), this.timer.start(a, this.setPage.bind(this, 0)), this.showItem(this.dealC, n, 20, 20, .5), n
	},
	initPage: function (e) {
		if (Util.isDefined(e)) {
			this.content.removeAll(!0);
			var t = this.game.prodigy.player.appearance.getGender() + "Tag";
			Util.isDefined(e.tag) && (t = "tag");
			var i = 15;
			Util.isDefined(e[t]) && (i = 500, this.game.prodigy.load.assets([this.current.atlas], this.showImage.bind(this, this.pageIndex, this.current.atlas, e[t], e.tagtop)));
			for (var a = 0; a < e.items.length; a++) e.items[a] === this.dealData ? this.showItem(this.content, e.items[a], i + Math.floor(a / 3) * (15 === i ? 350 : 500), a % 3 * 120, .5) : this.showItem(this.content, e.items[a], i + Math.floor(a / 3) * (15 === i ? 350 : 500), a % 3 * 120)
		}
	},
	showItem: function (e, t, i, a, s) {
		var r = null,
			o = !1;
		"pet" === t.type ? (r = Monsters.getItemData(t.ID), o = this.game.prodigy.player.kennel.hasPet(t.ID)) : "dorm" === t.type ? (r = Items.getItemData(t.type, t.ID), o = this.game.prodigy.player.house.hasMax(t.ID)) : "dormbg" === t.type ? (r = Items.getItemData(t.type, t.ID), o = t.ID == this.game.prodigy.player.house.getBackground()) : (r = Items.getItemData(t.type, t.ID), o = this.game.prodigy.player.backpack.hasItem(t.type, t.ID));
		var n = Items.getItemPrice(t.type, t.ID);
		Util.isDefined(s) && (n = Math.max(0, n - Math.max(200, Math.floor(n * s))));
		var l = this.game.prodigy.create.element(e, i, a),
			h = l.add(this.game.prodigy.create.sprite(0, 0, "core", "store-panel"));
		h.inputEnabled = !0, h.events.onInputDown.add(this.buy.bind(this, t, r.name, o, n, Util.isDefined(s)), this), l.add(this.game.prodigy.create.sprite(0, 0, "icons", Util.convertItemToIcon(t))), this.game.prodigy.create.font(l, 80, -2, r.name), o ? this.game.prodigy.create.font(l, 90, 44, "dorm" === t.type ? "MAX" : "OWNED", {
			size: 30,
			align: "center",
			width: 180
		}) : (this.game.prodigy.create.font(l, 90, 44, "" + (0 >= n ? "FREE" : n), {
			size: 30,
			align: "right",
			width: 140
		}), l.add(this.game.prodigy.create.sprite(238, 60, "icons", "gold")), r.member && l.add(this.game.prodigy.create.sprite(90, 35, "icons", "membership")))
	},
	buy: function (e, t, i, a, s) {
		var r = Items.getItemData(e.type, e.ID);
		Util.isDefined(r.member) && ("pet" === e.type ? this.game.prodigy.network.sendAnalytics("Buy-Member-Pet", Monsters.getItemData(e.ID).name) : this.game.prodigy.network.sendAnalytics("Buy-Member-Item", Items.getItemData(e.type, e.ID).name)), i && "dorm" === e.type ? this.game.prodigy.open.message("You already have too many of this item!", null, null, "Uh oh!") : i && "dormbg" === e.type ? this.game.prodigy.open.message("You already live here!", null, null, "Uh oh!") : i && "pet" !== e.type ? this.game.prodigy.open.message("You already have this item!", null, null, "Uh oh!") : i ? this.game.prodigy.open.message("You already have this pet!", null, null, "Uh oh!") : "pet" === e.type && this.game.prodigy.player.kennel.isFull() ? this.game.prodigy.open.message("You have too many pets! You must release some in order to buy a new one.", null, null, "Uh oh!") : !this.game.prodigy.player.isMember && r.member ? this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.PREMIUM_ITEM) : this.game.prodigy.player.getGold() < a ? this.game.prodigy.player.isMember ? this.game.prodigy.open.message("You need [gold]" + a + " for this item. You only have [gold]" + this.game.prodigy.player.getGold(!0) + ".", null, "gold", "Uh oh!") : this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.MORE_GOLD) : this.game.prodigy.open.confirm("Are you sure you want to buy the " + t + " for " + a + " coins?", this.completeBuy.bind(this, a, e, {
			ID: e.ID
		}, s))
	},
	completeBuy: function (e, t, i, a) {
		this.game.prodigy.player.changeGold(-e), this.game.prodigy.open.gotItem([{
			ID: t.ID,
			type: t.type,
			N: 1,
			data: i
		}], this.checkDeal.bind(this, a)), a && this.initDeal()
	},
	checkDeal: function (e) {
		e && this.initDeal(), this.scroll.click(0)
	}
}), Prodigy.Menu.PopupStore = function (e, t, i, a) {
	Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this._data = i, this.create(a)
}, Prodigy.extends(Prodigy.Menu.PopupStore, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.PopupStore,
	create: function (e) {
		this.addTransparent();
		var t = this.game.prodigy.create.panel(this, 200, 80, 22, 14, "shine");
		t.setRenderState(!0);
		var i = this.game.prodigy.create.element(this, 200, 80);
		i.setRenderState(!0), i.add(this.game.prodigy.create.sprite(40, 40, e, "store")), i.add(this.game.prodigy.create.sprite(-70, -55, e, "store-t")), i.add(this.game.prodigy.create.sprite(190, -25, e, "store-tr")), i.add(this.game.prodigy.create.sprite(-16, 204, e, "store-tb"));
		var a = this.game.prodigy.create.timer(this, 250, 490, !1);
		a.setMsg("left until they vanish!");
		var s = new Date("January 31, 2016");
		a.start(s.getTime() - (new Date).getTime(), this.close.bind(this)), this.game.prodigy.create.button(this, 1040, 70, "icons", "close", this.close.bind(this)), this._content = this.game.prodigy.create.element(this, 200, 40), this._gold = this.game.prodigy.create.font(this, 920, 540, "", {
			size: 40
		}), this.scroll = this.game.prodigy.create.scrollBar(this, 920, 140, 340, this.setPage.bind(this)), this.scroll.setPages(this._data.length), Prodigy.RenderMenu.prototype.create.call(this)
	},
	setPage: function (e) {
		this.page = e, this._gold.setText("[gold] " + this.game.prodigy.player.getGold(!0)), this._gold.x = 990 - this._gold.width, this._content.removeAll(!0);
		for (var t = 0; t < this._data[this.page].length; t++) this.showItem(this._data[this.page][t], 400, 100 + 120 * t)
	},
	showItem: function (e, t, i) {
		var a = Items.getItemData(e.type, e.ID),
			s = this.game.prodigy.player.backpack.hasItem(e.type, e.ID),
			r = Items.getItemPrice(e.type, e.ID),
			o = this.game.prodigy.create.element(this._content, t, i),
			n = o.add(this.game.prodigy.create.sprite(0, 0, "core", "store-panel"));
		n.inputEnabled = !0, n.events.onInputDown.add(this.buy.bind(this, e, a.name, s, r), this), o.add(this.game.prodigy.create.sprite(0, 0, "icons", Util.convertItemToIcon(e))), this.game.prodigy.create.font(o, 80, -2, a.name), "item" !== e.type && s ? this.game.prodigy.create.font(o, 90, 44, "dorm" === e.type ? "MAX" : "OWNED", {
			size: 30,
			align: "center",
			width: 180
		}) : (this.game.prodigy.create.font(o, 90, 44, "" + (0 >= r ? "FREE" : r), {
			size: 30,
			align: "right",
			width: 140
		}), o.add(this.game.prodigy.create.sprite(238, 60, "icons", "gold")), a.member && o.add(this.game.prodigy.create.sprite(90, 35, "icons", "membership")))
	},
	buy: function (e, t, i, a) {
		var s = Items.getItemData(e.type, e.ID);
		Util.isDefined(s.member) && this.game.prodigy.network.sendAnalytics("Buy-Member-Item", Items.getItemData(e.type, e.ID).name), "item" !== e.type && i ? this.game.prodigy.open.message("You already have this item!", null, null, "Uh oh!") : !this.game.prodigy.player.isMember && s.member ? this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.PREMIUM_ITEM) : this.game.prodigy.player.getGold() < a ? this.game.prodigy.player.isMember ? this.game.prodigy.open.message("You need [gold]" + a + " for this item. You only have [gold]" + this.game.prodigy.player.getGold(!0) + ".", null, "gold", "Uh oh!") : this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.MORE_GOLD) : this.game.prodigy.open.confirm("Are you sure you want to buy the " + t + " for " + a + " coins?", this.completeBuy.bind(this, a, e, {
			ID: e.ID
		}))
	},
	completeBuy: function (e, t, i) {
		this.game.prodigy.player.changeGold(-e), this.game.prodigy.open.gotItem([{
			ID: t.ID,
			type: t.type,
			N: 1,
			data: i
		}], this.scroll.click.bind(this.scroll, 0))
	}
}), Prodigy.Menu.RankStore = function (e, t, i, a, s) {
	this.mode = a, Prodigy.Menu.Store.call(this, e, t, i, s)
}, Prodigy.extends(Prodigy.Menu.RankStore, Prodigy.Menu.Store, {
	constructor: Prodigy.Menu.RankStore,
	create: function () {
		Prodigy.Menu.Store.prototype.create.call(this)
	},
	refreshPage: function () {
		Prodigy.Menu.Store.prototype.refreshPage.call(this), Util.isDefined(this.deal) || (this.deal = this.game.prodigy.create.element(this, 80, 360), this.game.prodigy.create.panel(this.deal, 0, 0, 8, 6, "white").alpha = .5, this.dc = this.game.prodigy.create.element(this.deal, 0, 0)), this.dc.removeAll(!0), this.game.prodigy.create.font(this.dc, 0, 5, this.currentPage.top, {
			width: 320,
			align: "center",
			font: "button",
			size: 36
		});
		var e = this.dc.add(this.game.prodigy.create.sprite(160, 50, "icons", this.currentPage.icon));
		e.anchor.setTo(.5, 0), this.currentPage.rank > this.data.callback() + 1 && this.game.prodigy.create.font(this.dc, 0, 175, "You have not reached this rank yet!", {
			width: 320,
			align: "center",
			size: 20
		})
	},
	clicked: function (e) {
		if (this.currentPage.rank > this.data.callback() + 1) {
			if ("bounty" === this.mode) this.game.prodigy.open.message("You need to reach " + this.currentPage.rank + " Bounty Points to unlock this item!");
			else if ("arena" === this.mode) {
				var t = "this";
				switch (this.currentPage.rank) {
				case 2:
					t = "Silver";
					break;
				case 3:
					t = "Gold";
					break;
				case 4:
					t = "Platinum";
					break;
				case 5:
					t = "Diamond"
				}
				this.game.prodigy.open.message("You need to reach " + t + " rank to unlock this item!")
			}
		} else Prodigy.Menu.Store.prototype.clicked.call(this, e)
	}
}), Prodigy.Menu.GotItem = function (e, t, i, a) {
	Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.items = this.splitItems(i), this.itemsLeft = i.length, this.gold = 0, this.game = e, this.index = -1, this.onClose = a, this.create(), console.log("------------------------------------")
}, Prodigy.extends(Prodigy.Menu.GotItem, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.GotItem,
	create: function () {
		this.addTransparent(), this.content = this.game.prodigy.create.element(this, 0, 0, 32, 18), this.overlay = this.game.prodigy.create.element(this, 0, 0, 32, 18), Prodigy.RenderMenu.prototype.create.call(this), this.dialogue = this.game.prodigy.dialogue.create(), this.getDialogue(), this.dialogue.start("noot")
	},
	getItems: function (e, t) {
		for (var i = 0; e > i; i++) console.log(this.items[i + t].type + " " + (i + t)), this.revealItem((1280 - (160 * e + 20 * (e - 1))) / 2 + 180 * i, this.items[i + t], 400 * i), this.bagItem(this.items[i + t]), this.itemsLeft--, console.log(this.itemsLeft + " remaining")
	},
	splitItems: function (e) {
		for (var t = [], i = 0, a = 0; a < e.length; a++)
			if ("gold" === e[a].type) i += e[a].N;
			else if ("spell" === e[a].type) var s = e[a];
		else if ("hat" === e[a].type || "weapon" === e[a].type || "outfit" === e[a].type || "boots" === e[a].type || "relic" === e[a].type) var r = e[a];
		else t.push(e[a]);
		return i && t.unshift({
			type: "gold",
			N: i
		}), Util.isDefined(s) && t.unshift(s), Util.isDefined(r) && t.push(r), console.log(t), t
	},
	getDialogue: function () {
		if (1 === this.items.length) this.getSingleDialogue(this.items[0], 0), this.dialogue.setText({
			callback: this.close.bind(this)
		});
		else {
			var e = this.items[this.items.length - 1],
				t = !1,
				i = !1;
			("hat" === e.type || "outfit" === e.type || "weapon" === e.type || "boots" === e.type || "relic" === e.type) && (t = !0), "spell" === this.items[0].type && (i = !0), t ? (this.items.length > 2 ? this.dialogue.setText({
				text: "You got something!",
				element: this.getItems(this.items.length - 1, 0),
				face: 2,
				anim: 1
			}) : this.getSingleDialogue(this.items[0], 0), this.dialogue.setText({
				callback: this.getSingleDialogue.bind(this, e, this.items.length - 1)
			})) : i ? (this.items.length > 2 ? this.dialogue.setText({
				text: "You got something!",
				element: this.getItems(this.items.length - 1, 1),
				face: 2,
				anim: 1
			}) : this.getSingleDialogue(e, this.items.length - 1), this.dialogue.setText({
				callback: this.getSingleDialogue.bind(this, this.items[0], 0)
			})) : (this.dialogue.setText({
				text: "You got something!",
				element: this.getItems(this.items.length, 0),
				face: 2,
				anim: 1
			}), this.dialogue.setText({
				callback: this.close.bind(this)
			}))
		}
	},
	getSingleDialogue: function (e, t) {
		if (this.clearItems(), "pet" === e.type) this.dialogue.setText({
			text: "You got a new pet!",
			element: this.getItems(1, t),
			face: 2,
			anim: 1
		});
		else if ("dorm" === e.type) this.dialogue.setText({
			text: "You got furniture for your house!",
			element: this.getItems(1, t),
			face: 2,
			anim: 1
		});
		else if ("dormbg" === e.type) this.dialogue.setText({
			text: "You've moved to a new house! I'll clean up all your furniture for you.",
			element: this.getItems(1, t),
			face: 2,
			anim: 1
		});
		else if ("bounty" === e.type) this.dialogue.setText({
			text: "You earned bounty points!",
			element: this.getItems(1, t),
			face: 2,
			anim: 1
		});
		else if ("gold" === e.type) this.dialogue.setText({
			text: "You got gold!",
			element: this.getItems(1, t),
			face: 2,
			anim: 1
		});
		else if ("spell" === e.type) this.dialogue.setText({
			text: "You learned a new spell!",
			element: this.getItems(1, t),
			face: 2,
			anim: 1
		}), this.items.length > 1 && this.dialogue.setText({
			callback: this.close.bind(this)
		});
		else if ("hat" === e.type || "outfit" === e.type || "weapon" === e.type || "boots" === e.type || "relic" === e.type) {
			var i = "";
			"boots" === e.type && (i = "pair of "), this.dialogue.setText({
				text: "Wow! A new " + i + e.type + ". Would you like to put it on?",
				element: this.getItems(1, t),
				yes: this.wearItem.bind(this, e),
				no: this.close.bind(this),
				face: 3,
				anim: 4
			})
		} else this.dialogue.setText({
			text: "You got an item!",
			element: this.getItems(1, t),
			face: 2,
			anim: 1
		})
	},
	revealItem: function (e, t, i) {
		this.game.prodigy.create.item(this.content, e, 150, t, "card");
		var a = this.game.prodigy.create.panel(this.overlay, e, 150, 4, 5, "orange");
		a.alpha = 1, this.game.add.tween(a).to({
			alpha: 0
		}, 200, Phaser.Easing.Linear.None, !0, 500 + i), this.shootStars(500 + i, e + 80)
	},
	clearItems: function () {
		Util.isDefined(this.content) && (this.content.destroy(), this.content = this.game.prodigy.create.element(this, 0, 0, 32, 18)), Util.isDefined(this.overlay) && (this.overlay.destroy(), this.overlay = this.game.prodigy.create.element(this, 0, 0, 32, 18))
	},
	skip: function () {
		Util.isDefined(this.overlay) && this.overlay.destroy(), this.overlay = this.game.prodigy.create.element(this, 0, 0, 32, 18)
	},
	bagItem: function (e) {
		if ("gold" === e.type) this.game.prodigy.player.changeGold(e.N);
		else if ("pet" === e.type) this.game.prodigy.player.kennel.add(e.data);
		else if ("spell" === e.type) this.game.prodigy.player.addSpell(e.ID);
		else if ("dorm" === e.type) this.game.prodigy.player.house.add(e.ID);
		else if ("dormbg" === e.type) this.game.prodigy.player.house.setBackground(e.ID);
		else if ("key" === e.type) this.game.prodigy.player.backpack.addKeyItem(e.ID, e.lvl, e.data);
		else if ("bounty" !== e.type) {
			var t = Items.getItemData(e.type, e.ID).member && !this.game.prodigy.player.isMember;
			this.game.prodigy.player.backpack.add(e.type, e.ID, t, e.N)
		}
	},
	wearItem: function (e) {
		!this.game.prodigy.player.isMember && Items.getItemData(e.type, e.ID).member ? (this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.PREMIUM_ITEM, this.close.bind(this)), this.game.prodigy.network.sendAnalytics("Equip-Member-Item", Items.getItemData(e.type, e.ID).name)) : (this.game.prodigy.player.equip(e.ID, e.type), this.game.prodigy.player.appearanceChanged = !0, this.close())
	},
	shootStars: function (e, t) {
		this.stars = this.game.prodigy.create.element(this.overlay);
		for (var i = 0; 5 > i; i++) {
			var a = t - 100 + 50 * i,
				s = this.game.world.centerY - 100 - 150;
			0 === i || 4 === i ? s += 120 : (1 === i || 3 === i) && (s += 50);
			var r = this.game.prodigy.create.sprite(t, this.game.world.centerY - 100, "icons", "star");
			this.stars.add(r), r.anchor.setTo(.5, .5), r.alpha = 0, this.game.add.tween(r).to({
				alpha: .5
			}, 1, Phaser.Easing.Linear.None).delay(e).to({
				x: a,
				alpha: 0
			}, 1e3, Phaser.Easing.Quadratic.Out).start(), this.game.add.tween(r).to({
				y: s
			}, 1e3, Phaser.Easing.Quadratic.Out).delay(e).start()
		}
	}
}), Prodigy.Menu.Stylist = function (e, t, i) {
	this.panels = [], this.player = i, Prodigy.Control.Menu.call(this, e, t, 21, {
		hideMenu: !0,
		hideContent: !0,
		tile: "bg-tile-white"
	}), this.setup()
}, Prodigy.Menu.Stylist.EYES = [11303522, 7426628, 14844965, 14860069, 14017835, 7660843, 4837077, 1657838, 8530901, 14695800, 16733628, 4025779, 10547199, 16772244, 236287], Prodigy.Menu.Stylist.M_EYES = [!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0], Prodigy.Menu.Stylist.HAIR = [16777166, 16768906, 14466221, 11901838, 7103584, 16754058, 13762442, 10157962, 9106431, 9087743, 14650111, 16747180, 16568319, 13631487, 15925199, 15791866], Prodigy.Menu.Stylist.M_HAIR = [!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0], Prodigy.Menu.Stylist.M_STYLE = [!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0], Prodigy.extends(Prodigy.Menu.Stylist, Prodigy.Control.Menu, {
	menuSetup: function () {
		Prodigy.Control.Menu.prototype.menuSetup.call(this), this.scroll = this.game.prodigy.create.scrollBar(this, 60, 180, 345, this.setPage.bind(this)), this.playerCopy = new Player, this.data = new Prodigy.Container.UserEquipment(this.game, this, 872, 200, this.playerCopy, !0), this.content = this.game.prodigy.create.element(this, 0, 0), this.game.prodigy.create.font(this.data, 0, 250, "Click to buy this look!", {
			size: 20,
			width: 348,
			align: "center"
		}), this.buyBtn = this.game.prodigy.create.textButton(this.data, 74, 290, {
			text: "250",
			icon: "item/26"
		}, this.buy.bind(this)), this.gold = this.game.prodigy.create.font(this, 50, 655, "[gold] " + this.game.prodigy.player.getGold(!0), {
			size: 40
		});
		var e = [{
			icon: "hair-2",
			callback: this.setStyles.bind(this),
			title: "CHOOSE HAIR STYLE"
		}, {
			icon: "item/46",
			callback: this.setColors.bind(this),
			title: "CHOOSE HAIR COLOR"
		}, {
			icon: "eyes-2",
			callback: this.setEyes.bind(this),
			title: "CHOOSE EYE COLOR"
		}];
		this.showFrame("player", "STYLIST", e, 0);
		var t = this.game.prodigy.create.textButton(this, 0, 0, {
			icon: "close",
			text: "close"
		}, this.close.bind(this));
		this.showBtns([], [t]), this.setupComplete = !0
	},
	resetPlayer: function () {
		this.playerCopy.appearance.setGender(this.player.appearance.getGender()), this.playerCopy.appearance.setHairStyle(this.player.appearance.getHairStyle()), this.playerCopy.appearance.setHairColor(this.player.appearance.getHairColor()), this.playerCopy.appearance.setEyeColor(this.player.appearance.getEyeColor()), this.playerCopy.appearance.setSkinColor(this.player.appearance.getSkinColor()), this.playerCopy.equipment.setEquipment({
			outfit: this.player.equipment.getEquipment("outfit"),
			hat: this.player.equipment.getEquipment("hat"),
			weapon: this.player.equipment.getEquipment("weapon")
		}), this.playerCopy.appearanceChanged = !0, this.data.user.reload()
	},
	setPage: function (e) {
		this.content.removeAll(!0);
		for (var t = 0; 6 > t; t++) {
			var i = 6 * e + t;
			i < this.current.length && this.showItem(this.content, this.current[i], 190 + 330 * Math.floor(t / 3), 180 + t % 3 * 120)
		}
	},
	showItem: function (e, t, i, a) {
		var s = !1,
			r = t.price,
			o = this.game.prodigy.create.element(e, i, a),
			n = o.add(this.game.prodigy.create.sprite(0, 0, "core", "store-panel"));
		n.inputEnabled = !0, n.events.onInputDown.add(this.changeAppearance.bind(this, t), this);
		var l = o.add(this.game.prodigy.create.sprite(15, 15, "icons", t.icon));
		"empty" === t.icon && (l.tint = t.tint), this.game.prodigy.create.font(o, 80, -2, t.name), s ? this.game.prodigy.create.font(o, 90, 44, "OWNED", {
			size: 30,
			align: "center",
			width: 180
		}) : (this.game.prodigy.create.font(o, 90, 44, "" + (0 >= r ? "FREE" : r), {
			size: 30,
			align: "right",
			width: 140
		}), o.add(this.game.prodigy.create.sprite(238, 60, "icons", "gold")), t.member && o.add(this.game.prodigy.create.sprite(90, 35, "icons", "membership")))
	},
	setStyles: function () {
		this.resetPlayer(), this.content.removeAll(!0), this.locked = !1, this.current = [];
		for (var e = Appearance.hairNames[this.playerCopy.appearance.getGender()], t = 0; t < e.length; t++) {
			var i = {
				type: "style",
				ID: t + 1,
				icon: "hair-2",
				price: 250,
				member: Prodigy.Menu.Stylist.M_STYLE[t],
				name: e[t]
			};
			this.current.push(i)
		}
		this.scroll.setPages(1 + Math.floor((this.current.length - 1) / 6))
	},
	setColors: function () {
		this.resetPlayer(), this.content.removeAll(!0), this.locked = !1, this.current = [];
		for (var e = Prodigy.Menu.Stylist.HAIR, t = 0; t < e.length; t++) {
			var i = {
				type: "hair",
				ID: t + 1,
				icon: "empty",
				price: 250,
				member: Prodigy.Menu.Stylist.M_HAIR[t],
				name: "Hair Color",
				tint: e[t]
			};
			this.current.push(i)
		}
		this.scroll.setPages(1 + Math.floor((this.current.length - 1) / 6))
	},
	setEyes: function () {
		this.resetPlayer(), this.content.removeAll(!0), this.locked = !1, this.current = [];
		for (var e = Prodigy.Menu.Stylist.EYES, t = 0; t < e.length; t++) {
			var i = {
				type: "eyes",
				ID: t + 1,
				icon: "empty",
				price: 250,
				member: Prodigy.Menu.Stylist.M_EYES[t],
				name: "Eye Color",
				tint: e[t]
			};
			this.current.push(i)
		}
		this.scroll.setPages(1 + Math.floor((this.current.length - 1) / 6))
	},
	changeAppearance: function (e) {
		this.locked = e.member && !this.game.prodigy.player.isMember, "eyes" === e.type ? this.playerCopy.appearance.setEyeColor(e.ID) : "hair" === e.type ? this.playerCopy.appearance.setHairColor(e.ID) : "style" === e.type && this.playerCopy.appearance.setHairStyle(e.ID), this.buyBtn.icon.frameName = this.locked ? "membership" : "item/26", this.data.user.reload()
	},
	buy: function () {
		this.locked && this.game.prodigy.network.sendAnalytics("Buy-Member-Style"), !this.player.isMember && this.locked ? this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.STYLE) : this.player.getGold() < 250 ? this.player.isMember ? this.game.prodigy.open.message("You need [gold]250 to style your wizard. You only have [gold]" + this.player.getGold(!0) + ".", null, "gold", "Uh oh!") : this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.MORE_GOLD) : this.game.prodigy.open.confirm("Are you sure you want to style your wizard for 250 gold? \nThis will change your wizard's appearance.", this.completePurchase.bind(this))
	},
	completePurchase: function () {
		this.player.changeGold(-250), this.player.appearance.setHairStyle(this.playerCopy.appearance.getHairStyle()), this.player.appearance.setHairColor(this.playerCopy.appearance.getHairColor()), this.player.appearance.setEyeColor(this.playerCopy.appearance.getEyeColor()), this.player.appearanceChanged = !0, this.close()
	}
}), Prodigy.Menu.Coliseum = function (e, t, i) {
	this.player = i, Prodigy.Control.Menu.call(this, e, t, 8), this.setup()
}, Prodigy.extends(Prodigy.Menu.Coliseum, Prodigy.Control.Menu, {
	constructor: Prodigy.Menu.Coliseum,
	menuSetup: function () {
		Prodigy.Control.Menu.prototype.menuSetup.call(this), this.index = 0, this.add(this.game.prodigy.create.sprite(120, 140, "core", "char-container")), this.game.prodigy.create.panel(this, 560, 140, 12, 6), this.game.prodigy.create.panel(this, 860, 480, 6, 2), this.opponentName = this.game.prodigy.create.font(this, 610, 150, "", {
			size: 40
		}), this.opponentTitle = this.game.prodigy.create.font(this, 610, 180, "", {
			width: 500,
			align: "right"
		}), this.description = this.game.prodigy.create.font(this, 590, 230, "", {
			size: 20,
			width: 540
		}), this.game.prodigy.create.font(this, 880, 490, "Reward", {
			size: 30
		}), this.itemIcon = this.game.prodigy.create.icon(this, 1020, 470, "icons", "item/26", 1), this.defeat = this.game.prodigy.create.sprite(270, 460, "icons", "yes"), this.add(this.defeat), this.scrollRightButton = this.game.prodigy.create.button(this, 374, 430, "icons", "next", this.shift.bind(this, 1)), this.scrollLeftButton = this.game.prodigy.create.button(this, 164, 430, "icons", "back", this.shift.bind(this, -1)), this.challengeButton = this.game.prodigy.create.textButton(this, 710, 410, {
			text: "challenge!",
			icon: "weapon/4",
			size: Prodigy.Control.TextButton.MED
		}, this.challenge.bind(this)), this.showFrame("leaderboard", "THE ARENA", []);
		var e = this.game.prodigy.create.textButton(this, 0, 0, {
			icon: "close",
			text: "close"
		}, this.close.bind(this));
		this.showBtns([], [e]), this.index = Math.min(this.game.prodigy.player.getColiseum(), Prodigy.Menu.Coliseum.data.length - 1), this.shift(0), this.setupComplete = !0
	},
	shift: function (e) {
		this.index += e, this.scrollLeftButton.setActive(), this.scrollRightButton.setActive(), this.index <= 0 && (this.index = 0, this.scrollLeftButton.setInactive()), this.index >= Prodigy.Menu.Coliseum.data.length - 1 && (this.index = Prodigy.Menu.Coliseum.data.length - 1, this.scrollRightButton.setInactive()), this.changeOpponent()
	},
	changeOpponent: function () {
		this.data = Prodigy.Menu.Coliseum.data[this.index], this.opponent = new Player, this.opponent.init(this.data.opponent), Util.isDefined(this.petV) && this.petV.destroy(), this.data.pets.length > 0 && (this.petV = this.game.prodigy.create.monster(this, new Monster(this.data.pets[0]), 2, 250, 390), this.petV.reload()), Util.isDefined(this.playerV) && this.playerV.destroy(), this.playerV = this.game.prodigy.create.player(this, this.opponent, 2, 350, 390), this.data.pets.length <= 0 && (this.playerV.x -= 55), this.playerV.reload();
		var e = this.data.drops[0];
		if ("gold" === e.type ? this.itemIcon.setValue("item/26", e.N) : this.itemIcon.setValue(e.type + "/" + e.ID, 1), this.index > Math.floor(this.player.getLevel() / 5) || this.index > this.game.prodigy.player.getColiseum()) {
			var t = "";
			this.index > Math.floor(this.player.getLevel() / 5) && (t = "You must be at least level " + 5 * this.index), this.index > this.game.prodigy.player.getColiseum() && (t += t.length > 0 ? " and you " : "You ", t += "must defeat the previous wizards"), t += " to challenge " + this.opponent.getName() + ".", this.locked = !0, this.challengeButton.visible = !0, this.challengeButton.setInactive(), this.defeat.visible = !1
		} else this.index < this.game.prodigy.player.getColiseum() ? (t = this.data.description, this.locked = !0, this.challengeButton.visible = !1, this.challengeButton.setInactive(), this.defeat.visible = !0) : (this.locked = !1, t = this.data.description, this.challengeButton.visible = !0, this.challengeButton.setActive(), this.defeat.visible = !1);
		this.opponentName.setText(this.opponent.getName()), this.opponentTitle.setText("- " + this.data.title + " -"), this.description.setText(t)
	},
	challenge: function () {
		if (!this.locked) {
			var e = this.game.prodigy.dialogue.create();
			e.setText({
				face: 0,
				text: "Do you want to challenge " + this.opponent.getName() + "?",
				audio: Arena.AUDIO[0],
				yes: this.startBattle.bind(this, this.index, !0)
			}), e.start("clankboot")
		}
	},
	startBattle: function (e, t) {
		if (t) {
			var i = function (e, t) {
				Util.isDefined(t) && t > e.prodigy.player.getColiseum() && e.prodigy.player.setColiseum(t), e.state.start("Arena")
			};
			delete Prodigy.Menu.Coliseum.data[e].opponent.data.hp;
			var a = Prodigy.Menu.Coliseum.data[e].pets;
			if (Util.isDefined(a))
				for (var s = 0; s < a.length; s++) delete a[s].hp;
			var r = {
				screen: "bg-battle-arena",
				opponent: [Prodigy.Menu.Coliseum.data[e].opponent],
				drops: Prodigy.Menu.Coliseum.data[e].drops,
				"catch": !1,
				pets: a,
				difficulty: 6
			};
			this.game.prodigy.battle.start(r, i.bind(this, this.game), i.bind(this, this.game, e + 1), null, "Arena")
		}
	}
}), Prodigy.Menu.Coliseum.data = [{
	opponent: {
		data: '{"level":5}',
		appearance: '{"name":"Gina", "gender":"female", "hairStyle":5, "hairColor":3, "skinColor":3, "eyeColor":5}',
		equipment: '{"weapon":1}'
	},
	title: "The New Girl",
	description: "Gina arrived at the Academy a few weeks ago. She doesn't know many spells, but she can't wait to test them out on new challengers.",
	pets: [],
	drops: [{
		type: "gold",
		N: 500
	}]
}, {
	opponent: {
		data: '{"level":10}',
		appearance: '{"name":"Cameron", "gender":"male", "hairStyle":4, "hairColor":6, "skinColor":5, "eyeColor":4}',
		equipment: '{"outfit":4, "weapon":12}'
	},
	title: "The Copycat",
	description: "When Cameron first came to the Academy, he challenged Crios and was beaten by his powerful fire spells. Now, Cameron has chosen fire as his new element.",
	pets: [{
		ID: "94",
		level: "10"
	}],
	drops: [{
		ID: 12,
		type: "hat"
	}]
}, {
	opponent: {
		data: '{"level":15}',
		appearance: '{"name":"Mila", "gender":"female", "hairStyle":14, "hairColor":1, "skinColor":4, "eyeColor":1}',
		equipment: '{"hat":4, "outfit":2, "weapon":2}'
	},
	title: "The Veteran Wizard",
	description: "Mila didn't get her outfit from the Academy... in fact, she came here dressed like this. She's been casting spells for years, and uses all of them to defeat challengers.",
	pets: [{
		ID: "1",
		level: "15"
	}],
	drops: [{
		type: "gold",
		N: 500
	}]
}, {
	opponent: {
		data: '{"level":20}',
		appearance: '{"name":"Benjamyn", "gender":"male", "hairStyle":1, "hairColor":4, "skinColor":3, "eyeColor":8}',
		equipment: '{"outfit":17, "weapon":36}'
	},
	title: "The Nameless",
	description: "There are plenty of Bens at the Academy, but only one Benjamyn. Most students say his name is REALLY spelled 'Benjamin' and think he just changed it to be different. Interesting fact: It's really spelled Binjumun.",
	pets: [{
		ID: "16",
		level: "20"
	}],
	drops: [{
		type: "boots",
		ID: 26
	}]
}, {
	opponent: {
		data: '{"level":25}',
		appearance: '{"name":"Fuchsia", "gender":"female", "hairStyle":15, "hairColor":12, "skinColor":1, "eyeColor":10}',
		equipment: '{"outfit":20, "weapon":3}'
	},
	title: "The Sweetheart",
	description: "Pink is Fuchsia's favorite color, which is obvious to anyone who sees her. She doesn't know many spells, mostly because she spends too much time with her pet Peppermint.",
	pets: [{
		ID: "35",
		level: "25"
	}],
	drops: [{
		type: "gold",
		N: 500
	}]
}, {
	opponent: {
		data: '{"level":30}',
		appearance: '{"name":"Bannard", "gender":"male", "hairStyle":4, "hairColor":2, "skinColor":1, "eyeColor":7}',
		equipment: '{"hat":5, "outfit":30, "weapon":61}'
	},
	title: "The Loudmouth",
	description: "Most students avoid Bannard, but not because he's too tough. In fact, he's a pretty normal student, except for the fact that he talks really loud... in fact, students can hear him coming from a mile away.",
	pets: [{
		ID: "19",
		level: "30"
	}],
	drops: [{
		type: "gold",
		N: 500
	}]
}, {
	opponent: {
		data: '{"level":35}',
		appearance: '{"name":"Leena", "gender":"female", "hairStyle":1, "hairColor":3, "skinColor":2, "eyeColor":7}',
		equipment: '{"outfit":31, "weapon":52}'
	},
	title: "The Metalhead",
	description: "Leena was raised in a small mining town in the mountains of the northern regions. Her appreciation of the rare rocks and ores that come from the planet have earned her her nickname, but it isn't earth spells that she's been practicing...",
	pets: [{
		ID: "88",
		level: "35"
	}],
	drops: [{
		type: "gold",
		N: 500
	}]
}, {
	opponent: {
		data: '{"level":40}',
		appearance: '{"name":"Finneas", "gender":"male", "hairStyle":2, "hairColor":16, "skinColor":4, "eyeColor":2}',
		equipment: '{"hat":16, "outfit":16, "weapon":38}'
	},
	title: "The Adventurer",
	description: "Finn has a wild thirst for adventure, travel, and new challenges. He is a gifted student, but many teachers wish he would spend more time in the classroom and less out exploring the wilderness.",
	pets: [{
		ID: "29",
		level: "40"
	}, {
		ID: "14",
		level: "40"
	}],
	drops: [{
		type: "hat",
		ID: 36
	}]
}, {
	opponent: {
		data: '{"level":45}',
		appearance: '{"name":"Djinna", "gender":"female", "hairStyle":7, "hairColor":11, "skinColor":5, "eyeColor":15}',
		equipment: '{"outfit":1, "weapon":7}'
	},
	title: "The Enigma",
	description: "One of the stranger students at the Academy, Djinna comes and goes as she pleases, often disappearing for days at a time. There is a rumour going around that she's not a student at all, but a spirit who watches over the Academy.",
	pets: [{
		ID: "99",
		level: "45"
	}, {
		ID: "101",
		level: "45"
	}],
	drops: [{
		type: "gold",
		N: 500
	}]
}, {
	opponent: {
		data: '{"level":50}',
		appearance: '{"name":"Jess", "gender":"male", "hairStyle":6, "hairColor":8, "skinColor":1, "eyeColor":1}',
		equipment: '{"outfit":29, "weapon":15}'
	},
	title: "The Forest Sprite",
	description: "Jess loves nature and everything about it. His respect for nature is second only to his twin sister, who taught him all she knows. He will accept any challenge to prove himself worthy of her teachings.",
	pets: [{
		ID: "59",
		level: "50"
	}, {
		ID: "52",
		level: "50"
	}],
	drops: [{
		type: "gold",
		N: 500
	}]
}, {
	opponent: {
		data: '{"level":55}',
		appearance: '{"name":"Flora", "gender":"female", "hairStyle":11, "hairColor":7, "skinColor":1, "eyeColor":2}',
		equipment: '{"outfit":3, "weapon":8}'
	},
	title: "The Forest Guardian",
	description: "The forests of the Academy are full of life, and Flora loves being a part of it. She spends her time in the forest, using earth spells to rejuvenate the plantlife. Every once in a while, she'll return to the Academy, looking for new challengers.",
	pets: [{
		ID: "60",
		level: "55"
	}, {
		ID: "53",
		level: "55"
	}],
	drops: [{
		type: "gold",
		N: 500
	}]
}, {
	opponent: {
		data: '{"level":60}',
		appearance: '{"name":"Nick", "gender":"male", "hairStyle":8, "hairColor":5, "skinColor":2, "eyeColor":2}',
		equipment: '{"hat":24, "outfit":25, "weapon":25}'
	},
	title: "The Caroler",
	description: "A lot of students at the Academy like the holiday season, but no one loves it as much as Nick. Nick sings festive carols all year long, even in the middle of July.",
	pets: [{
		ID: "27",
		level: "60"
	}, {
		ID: "28",
		level: "60"
	}],
	drops: [{
		type: "gold",
		N: 500
	}]
}, {
	opponent: {
		data: '{"level":65}',
		appearance: '{"name":"Lillian", "gender":"female", "hairStyle":13, "hairColor":5, "skinColor":1, "eyeColor":8}',
		equipment: '{"outfit":1, "weapon":2}'
	},
	title: "The Pet Enthusiast",
	description: "Lillian knows everything there is to know about pets, from their favorite activity to their favorite flavor of yogurt. She hopes to one day befriend every kind of pet and earn the title of 'Pet Master'.",
	pets: [{
		ID: "25",
		level: "65"
	}, {
		ID: "26",
		level: "65"
	}],
	drops: [{
		type: "gold",
		N: 500
	}]
}, {
	opponent: {
		data: '{"level":70}',
		appearance: '{"name":"Korathius", "gender":"male", "hairStyle":1, "hairColor":5, "skinColor":1, "eyeColor":7}',
		equipment: '{"hat":32, "outfit":31, "weapon":59}'
	},
	title: "The Beastmaster",
	description: "It is not real fur that Korathius wears, though his outfit correctly symbolizes his power and respect for all beasts. He never enters combat without a pet, though he instead refers to them as his 'brothers'.",
	pets: [{
		ID: "20",
		level: "70"
	}, {
		ID: "21",
		level: "70"
	}, {
		ID: "22",
		level: "70"
	}],
	drops: [{
		type: "outfit",
		ID: 32
	}]
}, {
	opponent: {
		data: '{"level":75}',
		appearance: '{"name":"Jen", "gender":"female", "hairStyle":14, "hairColor":16, "skinColor":4, "eyeColor":10}',
		equipment: '{"outfit":35, "weapon":53}'
	},
	title: "The Timed Traveller",
	description: "Many students dream of travelling the world, and Jen is no different. What separates her from the other students is that she's actually done it, in only 79 days!",
	pets: [{
		ID: "55",
		level: "75"
	}, {
		ID: "58",
		level: "75"
	}, {
		ID: "82",
		level: "75"
	}],
	drops: [{
		type: "gold",
		N: 500
	}]
}, {
	opponent: {
		data: '{"level":80}',
		appearance: '{"name":"George", "gender":"male", "hairStyle":8, "hairColor":6, "skinColor":2, "eyeColor":2}',
		equipment: '{"hat":9, "outfit":2, "weapon":10}'
	},
	title: "The Curious One",
	description: "George has a blooming curiosity for anything and everything. He loves playing with gadgets and gizmos, and often tries to invent his own... with varying degrees of success.",
	pets: [{
		ID: "63",
		level: "80"
	}, {
		ID: "72",
		level: "80"
	}, {
		ID: "89",
		level: "80"
	}],
	drops: [{
		type: "gold",
		N: 500
	}]
}, {
	opponent: {
		data: '{"level":85}',
		appearance: '{"name":"Aurora", "gender":"female", "hairStyle":1, "hairColor":14, "skinColor":1, "eyeColor":13}',
		equipment: '{"hat":10, "outfit":6, "weapon":20}'
	},
	title: "The Ice Queen",
	description: "Students come to the Academy by many means, but Aurora's tale takes the cake. She arrived at the Academy floating on an iceberg, telling of her long journey across the sea. True or not, there is truth in her power over the spells of ice.",
	pets: [{
		ID: "40",
		level: "85"
	}, {
		ID: "45",
		level: "85"
	}, {
		ID: "50",
		level: "85"
	}],
	drops: [{
		type: "gold",
		N: 500
	}]
}, {
	opponent: {
		data: '{"level":90}',
		appearance: '{"name":"Ziang", "gender":"male", "hairStyle":4, "hairColor":11, "skinColor":2, "eyeColor":6}',
		equipment: '{"hat":31, "outfit":7, "weapon":58}'
	},
	title: "The Emerald Knight",
	description: "One night, Ziang disappeared into the mountains alone. For days, students could hear the sounds of battle, and a green glow filled the sky. He returned wearing a mysterious emerald armor, which he claims he took from a Dragon.",
	pets: [{
		ID: "92",
		level: "90"
	}, {
		ID: "93",
		level: "90"
	}, {
		ID: "91",
		level: "90"
	}],
	drops: [{
		type: "gold",
		N: 500
	}]
}, {
	opponent: {
		data: '{"level":95}',
		appearance: '{"name":"Nova", "gender":"female", "hairStyle":3, "hairColor":2, "skinColor":1, "eyeColor":1}',
		equipment: '{"hat":8, "outfit":5, "weapon":23}'
	},
	title: "The Well Rounded",
	description: "Few students stand out the way Nova does. She is friendly, smart and generally fun to be around. She practices hard, and helps others when they ask. She'll accept your challenge, of course, and she'll even shake your hand when she beats you.",
	pets: [{
		ID: "41",
		level: "95"
	}, {
		ID: "3",
		level: "95"
	}, {
		ID: "86",
		level: "95"
	}, {
		ID: "42",
		level: "95"
	}],
	drops: [{
		type: "gold",
		N: 500
	}]
}, {
	opponent: {
		data: '{"level":100}',
		appearance: '{"name":"Crios", "gender":"male", "hairStyle":2, "hairColor":6, "skinColor":2, "eyeColor":10}',
		equipment: '{"outfit":8, "weapon":22}'
	},
	title: "The Prodigy",
	description: "Crios is by far the most gifted student the Academy has ever seen. He has never lost a duel, and at least 20 students a year leave because of him. And now he challenges you.",
	pets: [{
		ID: "94",
		level: "100"
	}, {
		ID: "95",
		level: "100"
	}, {
		ID: "96",
		level: "100"
	}, {
		ID: "97",
		level: "100"
	}],
	drops: [{
		type: "weapon",
		ID: 62
	}]
}], Prodigy.Menu.Nicknamer = function (e, t, i, a) {
	Prodigy.Control.Menu.call(this, e, t, 18, {
		hideMenu: !0,
		hideContent: !1,
		hideClose: !0
	}), this.names = i, this.user = a, this.setup()
}, Prodigy.extends(Prodigy.Menu.Nicknamer, Prodigy.Control.Menu, {
	constructor: Prodigy.Menu.Nicknamer,
	menuSetup: function () {
		Prodigy.Control.Menu.prototype.menuSetup.call(this);
		var e = this.game.prodigy.create.panel(this, 390, 80, 10, 10);
		e.add(this.game.prodigy.create.sprite(-15, -15, "icons", "item/12")), this.game.prodigy.create.font(e, 80, 15, "Change my name to...", {
			align: "left",
			size: 30
		});
		for (var t = 0; t < this.names.length + 1; t++) {
			var i = this.game.prodigy.player.appearance.getFullName(),
				a = i.split(" ")[0],
				s = "",
				r = "",
				o = !1,
				n = !1,
				l = !1;
			t >= this.names.length ? r = "Change back to original" : (s = r = (this.names[t].pre || "") + a + (this.names[t].post || ""), l = Util.isDefined(this.names[t].member), o = n = l && !this.game.prodigy.player.isMember, o || (o = this.isLocked(this.names[t])));
			var h = this.game.prodigy.create.element(e, 30, 80 + 60 * t),
				d = this.game.prodigy.create.sprite(0, 0, "core", "overlay-small");
			d.inputEnabled = !0, d.events.onInputDown.add(this.setCurrent.bind(this, s, o, this.names[t], 80 + 60 * t - 5, l)), d.width = 440, d.alpha = o ? .5 : .2, o || h.add(d), this.game.prodigy.create.font(h, 60, 8, r, {
				align: "left",
				size: 20
			}), o && h.add(d), n && h.add(this.game.prodigy.create.sprite(-5, -5, "icons", "membership"))
		}
		this.selected = e.add(this.game.prodigy.create.sprite(25, -5, "icons", "yes")), this.selected.visible = !1, this.quit = this.game.prodigy.create.textButton(e, 40, 470, {
			icon: "close",
			text: "cancel"
		}, this.close.bind(this)), this.apply = this.game.prodigy.create.textButton(e, 260, 470, {
			icon: "next",
			text: "apply"
		}, this.apply.bind(this)), this.apply.setInactive()
	},
	isLocked: function (e) {
		if (!Util.isDefined(e.req)) return !1;
		for (var t = 0; t < e.req.length; t++) {
			var i = e.req[t];
			if ("pet" === i.rtype && !this.game.prodigy.player.kennel.hasPet(i.ID)) return !0;
			if ("item" === i.rtype && !this.game.prodigy.player.backpack.hasItem(i.type, i.ID)) return !0;
			if ("quest" === i.rtype && this.game.prodigy.player.quests.getCurrentQuest(i.zone) <= i.Q) return !0
		}
		return !1
	},
	setCurrent: function (e, t, i, a, s) {
		return s && this.game.prodigy.network.sendAnalytics("Set-Nickname", i.pre || i.post), s && t ? (this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.NICKNAME), void 0) : (t && Util.isDefined(i) ? this.game.prodigy.open.message(i.fail, null, null, "Uh oh!") : (this.selected.visible = !0, this.selected.y = a, this.current = e, this.apply.setActive()), void 0)
	},
	apply: function () {
		this.game.prodigy.player.appearance.setNickname(this.current), this.user.showName(!0);
		var e = this.game.prodigy.player;
		this.game.prodigy.network.emitMessage({
			action: "change",
			data: {
				userID: e.userID,
				appearance: e.appearance.data
			}
		}), this.close()
	}
}), Prodigy.Menu.BoostSelect = function (e, t, i, a) {
	Prodigy.Control.Menu.call(this, e, t, 4, {
		hideMenu: !0,
		hideContent: !1,
		hideClose: !0
	}), this.boosts = i, this.callback = a, this.setup()
}, Prodigy.extends(Prodigy.Menu.BoostSelect, Prodigy.Control.Menu, {
	constructor: Prodigy.Menu.BoostSelect,
	menuSetup: function () {
		Prodigy.Control.Menu.prototype.menuSetup.call(this);
		var e = this.game.prodigy.create.panel(this, 390, 160, 10, 6);
		e.add(this.game.prodigy.create.sprite(-15, -15, "icons", "member")), this.game.prodigy.create.font(e, 80, 15, "Choose Your Boost!", {
			align: "left",
			size: 30
		});
		for (var t = 0; t < this.boosts.length; t++) {
			var i = this.game.prodigy.create.element(e, 60 + 150 * t, 80 + t % 2 * 50),
				a = i.add(this.game.prodigy.create.sprite(0, 0, "icons", "icon-base"));
			a.inputEnabled = !0, a.events.onInputDown.add(this.setCurrent.bind(this, t, i.x, i.y));
			var s = this.game.prodigy.create.sprite(0, 0, "icons", this.boosts[t].icon);
			s.x += Math.floor((80 - s.width) / 2), s.y += Math.floor((80 - s.height) / 2), i.add(s), this.game.prodigy.create.font(e, i.x - 110, i.y + 90, this.boosts[t].d, {
				width: 300,
				align: "center",
				size: 20
			})
		}
		this.selected = e.add(this.game.prodigy.create.sprite(25, -5, "icons", "yes")), this.selected.visible = !1, this.quit = this.game.prodigy.create.textButton(e, 40, 270, {
			icon: "close",
			text: "none"
		}, this.apply.bind(this, !0)), this.apply = this.game.prodigy.create.textButton(e, 260, 270, {
			icon: "next",
			text: "apply"
		}, this.apply.bind(this)), this.apply.setInactive()
	},
	setCurrent: function (e, t, i) {
		this.selected.visible = !0, this.selected.x = t - 10, this.selected.y = i - 10, this.currentBoost = e, this.apply.setActive()
	},
	apply: function (e) {
		return e || this.game.prodigy.network.sendAnalytics("Use-Boost", this.currentBoost), e || this.game.prodigy.player.isMember ? (e ? this.callback() : this.callback(this.currentBoost), this.close(), void 0) : (this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.BOOSTS), void 0)
	}
}), Prodigy.Menu.ItemInfo = function (e, t, i, a, s) {
	this.item = i, this.itemData = Items.getItemData(this.item.type, this.item.ID), this.player = e.prodigy.player, this.mode = s || "view", this.onClose = a, Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.create()
}, Prodigy.extends(Prodigy.Menu.ItemInfo, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.ItemInfo,
	create: function () {
		this.addTransparent(), this.panel = this.game.prodigy.create.panel(this, 260, 140, 19, 11, "shine"), this.panel.setRenderState(!0), this.game.prodigy.create.button(this, this.panel.x + 720, this.panel.y - 10, "icons", "close", this.close.bind(this)), this.game.prodigy.create.item(this, 300, 180, {
			ID: this.item.ID,
			type: this.item.type
		}, "info");
		var e = Items.getItemData(this.item.type, this.item.ID);
		if ("view" === this.mode);
		else if ("buy" === this.mode) {
			var t = Items.getItemPrice(this.item.type, this.item.ID);
			this.game.prodigy.create.font(this, 320, 385, "[mail-gold] " + t, {
				align: "center",
				width: 200,
				size: 30
			});
			var i = "Buy";
			e.member && !this.game.prodigy.player.isMember && (i = "[membership] " + i), this.game.prodigy.create.textButton(this, 320, 435, {
				text: i,
				size: Prodigy.Control.TextButton.SMALL
			}, this.buy.bind(this))
		} else if ("equip" === this.mode) {
			var i = "";
			this.item.L && !this.game.prodigy.player.isMember && (i = "[membership] "), "hat" === this.item.type || "weapon" === this.item.type || "outfit" === this.item.type || "boots" === this.item.type || "relic" === this.item.type || "back" === this.item.type ? this.player.equipment.getEquipment(this.item.type) === this.item.ID ? this.game.prodigy.create.textButton(this, 320, 435, {
				text: "remove",
				size: Prodigy.Control.TextButton.SMALL
			}, this.unequipItem.bind(this)) : this.game.prodigy.create.textButton(this, 320, 435, {
				text: i + "wear",
				size: Prodigy.Control.TextButton.SMALL
			}, this.equipItem.bind(this)) : e.effect && this.game.prodigy.create.textButton(this, 320, 435, {
				text: "use",
				icon: "up",
				size: Prodigy.Control.TextButton.SMALL
			}, this.use.bind(this))
		}
		Prodigy.RenderMenu.prototype.create.call(this)
	},
	use: function () {
		var e = Items.getItemData(this.item.type, this.item.ID),
			t = !1;
		e.effect.hp ? (this.game.prodigy.audio.playSFX("heart"), this.game.prodigy.player.healTeam(e.effect.hp)) : e.effect.fx && (this.game.prodigy.player.fx(e.effect.fx, !0), t = !0), this.player.backpack.consume(this.item.type, this.item.ID), this.close(t)
	},
	buy: function () {
		this.close(!0)
	},
	equipItem: function () {
		this.item.L ? this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.PREMIUM_ITEM) : (this.player.equip(this.item.ID, this.item.type) && (this.player.appearanceChanged = !0, this.game.prodigy.audio.playSFX("whoosh")), this.close())
	},
	unequipItem: function () {
		this.player.unEquip(this.item.type) && (this.player.appearanceChanged = !0, this.game.prodigy.audio.playSFX("blop")), this.close()
	},
	throwItem: function () {
		("hat" === this.item.type || "outfit" === this.item.type || "weapon" === this.item.type || "boots" === this.item.type || "relics" === this.item.type) && this.player.equipment.getEquipment(this.item.type) === this.item.ID && this.unequipItem(), this.player.backpack.consume(this.item.type, this.item.ID), this.close()
	}
}), Prodigy.Menu.Pets = function (e, t, i, a) {
	this.callback = i, this.mode = a || Prodigy.Menu.Pets.TEAM, Prodigy.Control.Menu.call(this, e, t, 23), this.setup()
}, Prodigy.Menu.Pets.TEAM = 0, Prodigy.Menu.Pets.ALL = 1, Prodigy.extends(Prodigy.Menu.Pets, Prodigy.Control.Menu, {
	constructor: Prodigy.Menu.Pets,
	menuSetup: function () {
		Prodigy.Control.Menu.prototype.menuSetup.call(this);
		var e = [{
			icon: "team",
			callback: this.switchTeam.bind(this),
			title: "MY PET TEAM"
		}, {
			icon: "item/62",
			callback: this.allPets.bind(this),
			title: "PRODIGY BESTIARY"
		}];
		this.showFrame("pet", "", e, 0), e = [this.game.prodigy.create.textButton(this, 0, 0, {
			icon: "close",
			text: "close"
		}, this.close.bind(this))], this.showBtns([], e), this.setupComplete = !0
	},
	close: function (e) {
		Util.isDefined(this.callback) && this.callback(e), Prodigy.Control.Menu.prototype.close.call(this)
	},
	createList: function () {
		var e = this.game.prodigy.create.element(this.content, 660, 170);
		this.game.prodigy.create.panel(e, 0, 0, 10, 8), this.game.prodigy.create.font(e, 10, -25, "Prodigy Pets I Own", {
			size: 20
		}), this.icons = [];
		for (var t = 0; 20 > t; t++) this.icons.push(e.add(this.game.prodigy.create.sprite(30 + t % 5 * 90, 25 + 90 * Math.floor(t / 5), "icons", "icon-base"))), this.icons[t].inputEnabled = !0, this.icons[t].events.onInputDown.add(this.showInfo.bind(this, this.icons[t], null));
		this.scrollUp = this.game.prodigy.create.button(e, -20, 135, "icons", "next", this.scrollList.bind(this, -1)), this.scrollUp.sprite.angle = -90, this.scrollDown = this.game.prodigy.create.button(e, 30, 265, "icons", "next", this.scrollList.bind(this, 1)), this.scrollDown.sprite.angle = 90
	},
	createBoxes: function () {
		this.box = this.game.prodigy.create.element(this.content, 120, 170), this.game.prodigy.create.panel(this.box, 0, 0, 10, 8), this.icons = [];
		for (var e = 0; 20 > e; e++) this.icons.push(this.box.add(this.game.prodigy.create.sprite(30 + e % 5 * 90, 25 + 90 * Math.floor(e / 5), "icons", "icon-base"))), this.icons[e].inputEnabled = !0, this.icons[e].events.onInputDown.add(this.selectIcon.bind(this, this.icons[e], null));
		this.btns = [];
		for (var e = 0; 7 > e; e++) {
			var t = 7 - e;
			this.btns.unshift(this.game.prodigy.create.stackButton(this.box, 440 - 55 * e, -40, [{
				tag: "empty"
			}, {
				text: t + "",
				y: 8,
				x: -15
			}], this.openBox.bind(this, t - 1)))
		}
		var i = function (e, t) {
				e.inspect = !e.inspect, t.tint = e.inspect ? 4473924 : 16777215, Util.isDefined(e.preview) && (e.preview.destroy(), e.preview = null)
			},
			a = this.box.add(this.game.prodigy.create.sprite(10, -40, "icons", "inspect"));
		a.inputEnabled = !0, a.events.onInputDown.add(i.bind(this, this, a))
	},
	createTeam: function () {
		this.panel = this.game.prodigy.create.element(this.content, 660, 170), this.game.prodigy.create.panel(this.panel, 0, 0, 10, 3), this.game.prodigy.create.font(this.panel, 10, -25, "My Team", {
			size: 20
		}), this.ticons = [];
		for (var e = 0; 5 > e; e++) this.panel.add(this.game.prodigy.create.sprite(30 + 90 * e, e % 2 * 20 + 25, "icons", "icon-base-active")), this.ticons.push(this.panel.add(this.game.prodigy.create.sprite(30 + 90 * e, e % 2 * 20 + 25, "icons", "icon-base"))), this.ticons[e].inputEnabled = !0, this.ticons[e].events.onInputDown.add(this.selectIcon.bind(this, this.ticons[e], e))
	},
	switchTeam: function () {
		this.mode = Prodigy.Menu.Pets.TEAM, Util.isDefined(this.content) && this.content.destroy(), this.content = this.game.prodigy.create.element(this, 0, 0), this.inspect = !1, this.createBoxes(), this.createTeam(), this.openBox(0), this.refreshTeam();
		var e = this.game.prodigy.player;
		if (e.tutorial.getMenuValue(this.menuID, 0) < 1 && e.kennel.getPets().length > 0) {
			e.tutorial.setMenuValue(this.menuID, 0, 1);
			var t = this.game.prodigy.dialogue.create();
			t.setText(19), t.setText({
				callback: Util.highlightAll.bind(Util, [this.box], !0)
			}), t.setText(20), t.setText({
				callback: Util.highlightAll.bind(Util, [this.box], !1)
			}), t.setText({
				callback: Util.highlightAll.bind(Util, [this.panel], !0)
			}), t.setText(21), t.setText({
				callback: Util.highlightAll.bind(Util, [this.panel], !1)
			}), t.start("noot")
		}
	},
	allPets: function () {
		this.mode = Prodigy.Menu.Pets.ALL, Util.isDefined(this.content) && this.content.destroy(), this.content = this.game.prodigy.create.element(this, 0, 0), this.fullIndex = 0, this.createList(), this.scrollList(0)
	},
	selectIcon: function (e, t) {
		if (this.inspect) {
			if (Util.isDefined(e.srcData)) {
				if (Util.isDefined(this.preview) && this.preview.destroy(), e.srcData instanceof Player) return;
				this.preview = new Prodigy.Container.Hearts(this.game, this.content, 660, 350, new Monster(e.srcData)), this.game.prodigy.create.textButton(this.preview, 150, 130, {
					size: Prodigy.Control.TextButton.MED,
					text: "Set Free",
					icon: "close"
				}, this.openLeavePetConfirmation.bind(this, e.srcData))
			}
		} else Util.isDefined(this.tween) && (this.tween.stop(), this.tween = null, this.current.y = this.current.oldY), Util.isDefined(this.current) ? (e !== this.current ? Util.isDefined(e.srcData) ? this.current.srcData instanceof Player ? Util.isDefined(t) ? (this.game.prodigy.audio.playSFX("heart"), this.game.prodigy.player.kennel.setTeam(e.srcData, this.current.srcData.data.team), this.current.srcData.data.team = t, this.current.srcData.updated = !0) : this.game.prodigy.audio.playSFX("blop") : e.srcData instanceof Player ? Util.isDefined(this.current.srcData.team) ? (this.game.prodigy.audio.playSFX("heart"), e.srcData.data.team = this.current.srcData.team, e.srcData.updated = !0, this.game.prodigy.player.kennel.setTeam(this.current.srcData, t)) : this.game.prodigy.audio.playSFX("blop") : (this.game.prodigy.audio.playSFX("heart"), this.game.prodigy.player.kennel.setTeam(this.current.srcData, e.srcData)) : this.current.srcData instanceof Player ? Util.isDefined(t) ? (this.game.prodigy.audio.playSFX("heart"), this.current.srcData.data.team = t, this.current.srcData.updated = !0) : this.game.prodigy.audio.playSFX("blop") : (this.game.prodigy.audio.playSFX("heart"), this.game.prodigy.player.kennel.setTeam(this.current.srcData, t)) : this.game.prodigy.audio.playSFX("blop"), this.current = null, this.openBox(this.currentBox), this.refreshTeam()) : Util.isDefined(e.srcData) && (this.game.prodigy.audio.playSFX("pop"), this.current = e, e.oldY = e.y, this.tween = this.game.add.tween(e).to({
			y: e.y - 10
		}, 500, Phaser.Easing.Quadratic.InOut, !0, 0, Number.MAX_VALUE, !0))
	},
	scrollList: function (e) {
		var t = Math.floor(Monsters.MAX_ID / 5);
		this.fullIndex = this.game.prodigy.math.range(this.fullIndex + e, 0, t), this.fullIndex <= 0 ? this.scrollUp.setInactive() : this.scrollUp.setActive(), this.fullIndex >= t ? this.scrollDown.setInactive() : this.scrollDown.setActive();
		for (var i = Monsters.getRange(5 * this.fullIndex + 1, 5 * this.fullIndex + 20), a = 0; a < this.icons.length; a++) this.icons[a].alpha = 1, a >= i.length || !Util.isDefined(i[a]) || !this.game.prodigy.player.kennel.hasPet(i[a].ID) ? (this.icons[a].frameName = "mystery", 5 * this.fullIndex + 1 + a > Monsters.MAX_ID && (this.icons[a].alpha = 0), this.icons[a].srcData = null) : (this.icons[a].frameName = Util.convertItemToIcon({
			type: "pet",
			ID: i[a].ID
		}), this.icons[a].srcData = i[a])
	},
	openBox: function (e) {
		Util.isDefined(this.tween) && (this.tween.stop(), this.tween = null), Util.isDefined(this.current) && (this.current.y = this.current.oldY, this.current = null);
		for (var t = 0; t < this.btns.length; t++) e === t ? this.btns[t].select() : this.btns[t].deselect();
		this.currentBox = e;
		for (var i = this.game.prodigy.player.kennel.getPets(this.mode === Prodigy.Menu.Pets.TEAM), a = 20 * e, t = 0; t < this.icons.length; t++) t + a >= i.length ? (this.icons[t].frameName = "icon-base", this.icons[t].alpha = 0, this.icons[t].srcData = null) : (this.icons[t].alpha = 1, this.icons[t].frameName = Util.convertItemToIcon({
			type: "pet",
			ID: i[t + a].ID
		}), this.icons[t].srcData = i[t + a])
	},
	showInfo: function (e) {
		Util.isDefined(this.preview) && this.preview.destroy();
		var t = Util.isDefined(e.srcData) ? Monsters.getItemData(e.srcData.ID) : null;
		this.preview = this.game.prodigy.create.element(this.content, 120, 170), this.game.prodigy.create.panel(this.preview, 0, 0, 10, 2), this.game.prodigy.create.panel(this.preview, 0, 150, 10, 5), this.game.prodigy.create.font(this.preview, 100, -25, Util.isDefined(t) ? t.name : "???", {
			size: 20
		}), this.game.prodigy.create.font(this.preview, 10, 125, "Description", {
			size: 20
		}), this.game.prodigy.create.font(this.preview, 30, 180, Util.isDefined(t) ? t.flavorText : "- you do not have this pet -", {
			size: 20,
			width: 440
		}), this.preview.add(this.game.prodigy.create.sprite(0, -25, "icons", Util.isDefined(t) ? Util.convertItemToIcon({
			type: "pet",
			ID: t.ID
		}) : "mystery")), Util.isDefined(t) && (this.game.prodigy.create.font(this.preview, 100, 15, "TYPE: " + t.element, {
			size: 20
		}), this.game.prodigy.create.font(this.preview, 100, 60, "LIFE: " + t.life, {
			size: 20
		}), this.game.prodigy.create.font(this.preview, 300, 15, "POWER: " + t.power, {
			size: 20
		}), this.game.prodigy.create.font(this.preview, 300, 60, "GROWTH: " + t.growth, {
			size: 20
		}))
	},
	refreshTeam: function () {
		for (var e = this.game.prodigy.player.kennel.getTeam(), t = 0; t < this.ticons.length; t++) {
			var i = e[t];
			this.ticons[t].srcData = null, Util.isDefined(i) ? i instanceof Player ? (this.ticons[t].frameName = "player", this.ticons[t].srcData = i) : i instanceof Monster && (this.ticons[t].frameName = Util.convertItemToIcon({
				type: "pet",
				ID: i.getID()
			}), this.ticons[t].srcData = i.data) : this.ticons[t].frameName = "icon-base"
		}
	},
	openLeavePetConfirmation: function (e) {
		this.game.prodigy.open.confirm("Are you sure you want to leave your pet? You will lose them forever.", this.releasePet.bind(this, e))
	},
	releasePet: function (e) {
		this.game.prodigy.player.kennel.remove(e), Util.isDefined(this.preview) && this.preview.destroy(), this.openBox(this.currentBox), this.refreshTeam(), this.game.prodigy.network.log("release-pet", {
			data: e.ID
		})
	}
}), Prodigy.Menu.Mailbox = function (e, t) {
	Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.create()
}, Prodigy.extends(Prodigy.Menu.Mailbox, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.Mailbox,
	create: function () {
		this.addTransparent();
		var e = this.game.prodigy.create.panel(this, 320, 80, 16, 14, "shine");
		e.setRenderState(!0), e.add(new Phaser.TileSprite(this.game, 11, 100, 618, 40, "core", "blue-top")), e.add(new Phaser.TileSprite(this.game, 11, 140, 618, 340, "core", "blue-mid")), e.add(new Phaser.TileSprite(this.game, 11, 480, 618, 40, "core", "blue-top2")), e = this.game.prodigy.create.panel(this, 400, 60, 12, 2, "banner"), e.setRenderState(!0), this.scroll = this.game.prodigy.create.slider(this, 865, 200, 380, !0, !0), this.content = this.game.prodigy.create.element(this, 345, 200), this.title = this.game.prodigy.create.font(this, 320, 80, "[mail] Mailbox [mail]", {
			size: 36,
			font: "button",
			width: 640,
			align: "center"
		}), this.game.prodigy.create.button(this, 920, 70, "icons", "close", this.close.bind(this)), Prodigy.RenderMenu.prototype.create.call(this), this.scroll.reset(this.game.prodigy.mail.getMailCount(), 1, -1, this.setMail.bind(this)), this.game.prodigy.mail.addUpdateCallback(this.process.bind(this))
	},
	setMail: function (e) {
		this.lastIndex = e || 0, this.lastSize = this.game.prodigy.mail.getMailCount(), this.content.removeAll(!0);
		for (var t = this.game.prodigy.mail.getMail(e || 0, 4), i = 0; i < t.length; i++) this.createChallenge(20, 100 * i, t[i])
	},
	process: function (e) {
		if (Util.isDefined(this.game)) {
			var t = this.lastIndex + e - this.lastSize;
			(0 > t || 5 > e) && (t = 0), this.scroll.reset(this.game.prodigy.mail.getMailCount(), 1, this.lastIndex || 0, this.setMail.bind(this))
		}
	},
	createChallenge: function (e, t, i) {
		this.game.prodigy.create.panel(this.content, e, t, 12, 2, "mail"), this.content.add(this.game.prodigy.create.sprite(e + 3, t + 3, "icons", "mail-challenge")), this.game.prodigy.create.font(this.content, e + 40, t + 8, i.data.player.appearance.name + " (lvl " + i.data.player.data.level + ")", {
			size: 16
		}), this.game.prodigy.create.font(this.content, e + 20, t + 50, "Accept challenge?", {
			font: "black",
			size: 16
		}), this.game.prodigy.create.button(this.content, e + 360, t + 25, "icons", "yes", this.processChallenge.bind(this, i, !0)), this.game.prodigy.create.button(this.content, e + 360 + 60, t + 25, "icons", "close", this.processChallenge.bind(this, i, !1))
	},
	processChallenge: function (e, t) {
		if (this.game.prodigy.mail.remove(e), t) {
			var i = function (e) {
					e.prodigy.world.teleport(e.prodigy.player.data.zone, e.prodigy.player.appearance.data.x, e.prodigy.player.appearance.data.y)
				},
				a = new Player;
			a.init({
				equipment: e.data.player.equipment,
				appearance: e.data.player.appearance,
				data: e.data.player.data,
				isMember: e.data.player.isMember
			}), this.game.prodigy.pvp.start(e.data.userID, this.game.prodigy.player, a, i.bind(this, this.game), !1, "Arena")
		}
	}
}), Prodigy.Menu.BountyBoard = function (e, t) {
	Prodigy.RenderMenu.call(this, e, t, 0, 0, e.prodigy.textureMenu), this.create()
}, Prodigy.extends(Prodigy.Menu.BountyBoard, Prodigy.RenderMenu, {
	constructor: Prodigy.Menu.BountyBoard,
	create: function () {
		this.addTransparent(), this.createBaseSetup(27, 16, "shine", null, null, !0);
		var e = this.game.prodigy.create.element(this, -5, 20);
		e.add(this.game.prodigy.create.sprite(145, 60, "core", "board-corner"));
		for (var t = 0; 21 > t; t++) e.add(this.game.prodigy.create.sprite(225 + 40 * t, 60, "core", "board-top")), e.add(this.game.prodigy.create.sprite(225 + 40 * t, 100, "core", "board-panel-mid"));
		e.add(this.game.prodigy.create.sprite(1065, 60, "core", "board-corner2")), this.content = this.game.prodigy.create.element(this, e.x, e.y), this.game.prodigy.create.panel(e, 145, 140, 25, 12, "board-panel"), Prodigy.RenderMenu.prototype.create.call(this)
	},
	process: function () {
		Prodigy.RenderMenu.prototype.process.call(this), this.content.removeAll(!0), this.content.add(this.game.prodigy.create.sprite(128, 107, "core", "lantern")), this.content.add(this.game.prodigy.create.sprite(1104, 107, "core", "lantern")), this.cont = [1, 2, 3];
		for (var e = 0; e < this.game.prodigy.player.state.get("world-bounties").length; e++) this.cont[e] = new Prodigy.Container.BountyContainer(this.game, this, 205 + 300 * e, 150, {
			seed: this.game.prodigy.player.state.get("world-bounties")[e]
		}, e)
	}
}), Prodigy.Container.CreatureContainer = function (e, t, i, a, s, r) {
	Prodigy.Control.Element.call(this, e, t), this.source = i, this.setScale = a || 1, this.x = s, this.y = r, this.speed = 10, this.sprites = this.game.prodigy.create.element(this, 0, 0), this.indicatorE = this.game.prodigy.create.element(this), this.name = this.game.prodigy.create.font(this, -200, this.source.npc ? -150 : 1 === a ? -100 : -200, "", {
		width: 400,
		align: "center",
		size: 16
	})
}, Prodigy.extends(Prodigy.Container.CreatureContainer, Prodigy.Control.Element, {
	constructor: Prodigy.Container.CreatureContainer,
	reload: function () {
		this.outOfDate = !0
	},
	startLoad: function () {
		this.outOfDate = !1
	},
	update: function () {
		if (Prodigy.Control.Element.prototype.update.call(this), !this.loading && this.outOfDate && this.startLoad(), Util.isDefined(this.source.emoteID) && (this.chat(this.source.emoteID), this.source.emoteID = null), Util.isDefined(this.source.chatID) && (this.chatText(this.source.chatID), this.source.chatID = null), this.source.firework) {
			"object" == typeof this.source.firework && this.game.prodigy.network.emitMessage(this.source.firework);
			var e = this.game.prodigy.event.create();
			e.firework(this.x + 20, this.y - 200), e.start(), delete this.source.firework
		}
		if (this.source.confetti) {
			"object" == typeof this.source.confetti && this.game.prodigy.network.emitMessage(this.source.confetti);
			var e = this.game.prodigy.event.create();
			e.confetti(this.x + 20, this.y - 200), e.start(), delete this.source.confetti
		}
		if (this.source.goldwork) {
			"object" == typeof this.source.goldwork && this.game.prodigy.network.emitMessage(this.source.goldwork);
			var e = this.game.prodigy.event.create();
			e.goldwork(this.x + 20, this.y - 200), e.start(), delete this.source.goldwork
		}
	},
	chat: function (e, t) {
		Util.isDefined(this.game) && (Util.isDefined(this.chatBubble) || (this.chatBubble = new Prodigy.Container.ChatBubble(this.game, this, 0, -t || -100)), this.chatBubble.setID(e))
	},
	chatText: function (e) {
		if (Util.isDefined(this.game)) {
			var t = this.game.prodigy.chat.getPhrase(e);
			Util.isDefined(t) && (Util.isDefined(this.timer) && window.clearInterval(this.timer), this.game.add.tween(this.name).to({
				y: this.name.y - 10
			}, 500, Phaser.Easing.Quadratic.Out).to({
				y: this.name.y
			}, 500, Phaser.Easing.Quadratic.In).start(), this.name.setText('"' + t + '"'), this.timer = setInterval(this.endChat.bind(this), 5e3))
		}
	},
	endChat: function () {
		Util.isDefined(this.timer) && window.clearInterval(this.timer), this.showName(this.name.visible)
	},
	"float": function (e) {
		Util.isDefined(this.floatTween) ? this.floatTween.stop() : (this.sprites.oldY = this.sprites.y, this.sprites.y = this.sprites.y - 10, this.floatTween = this.game.add.tween(this.sprites).to({
			y: "-20"
		}, 1400, Phaser.Easing.Quadratic.InOut).to({
			y: "20"
		}, 1400, Phaser.Easing.Quadratic.InOut).loop()), e ? this.floatTween.start() : (this.floatTween.stop(), this.sprites.y = this.sprites.oldY)
	},
	setValidPath: function (e, t, i, a) {
		var s = function (e, t) {
			this.setPath(t, e)
		};
		Util.isDefined(a) ? e.findPath(this.x, this.y, t, i, s.bind(this, a)) : e.findPath(this.x, this.y, t, i, this.setPath.bind(this))
	},
	setPath: function (e, t, i) {
		if (Util.isDefined(e)) {
			this.game.tweens.removeFrom(this, !1), this.game.tweens.removeFrom(this.sprites), Util.isDefined(i) || (i = 1);
			for (var a = null, s = null, r = this.x, o = this.y, n = e.length - 1; n >= 0; n--) {
				var l = e[n];
				Util.isDefined(l.x) || (l.x = r), Util.isDefined(l.y) || (l.y = o);
				var h = this.game.prodigy.math.distance(l.x, l.y, r, o);
				0 !== h && (Util.isDefined(a) || (a = this.game.add.tween(this), s = this.game.add.tween(this.sprites.scale)), a.to({
					x: l.x,
					y: l.y
				}, 6 * h / i, Phaser.Easing.Linear.None), s.to({
					x: l.x > r ? 1 : -1
				}, 1, Phaser.Easing.Linear.None), s.to({}, 6 * h / i - 100, Phaser.Easing.Linear.None), r = l.x, o = l.y)
			}
			Util.isDefined(a) ? (a.onComplete.addOnce(this.stand, this), Util.isDefined(t) && a.onComplete.addOnce(t), this.walk(), this.mode = 0, Util.isDefined(a) && a.start(), Util.isDefined(s) && s.start()) : (Util.isDefined(t) && t(), this.stand())
		}
	},
	walk: function () {
		this.sprites.callAll("play", null, "walk", this.speed)
	},
	showName: function (e, t) {
		if (Util.isDefined(this.source.getName)) var i = this.source.getName();
		else if (Util.isDefined(this.source.name)) var i = this.source.name;
		this.source.isMember && (i = "@" + i), t && (i = t), this.name.setText(i), Util.isDefined(this.name) && (this.name.visible = e)
	},
	hop: function (e, t, i, a) {
		i = i || 0, a = a || 20;
		var s = this.game.add.tween(this).to({
			y: this.y - a
		}, e || 100, Phaser.Easing.Quadratic.Out).to({
			y: this.y
		}, e || 100, Phaser.Easing.Quadratic.In).start();
		this.game.add.tween(this).to({
			x: this.x + Math.floor(i / 2)
		}, e || 100, Phaser.Easing.Linear.None).to({
			x: this.x + i
		}, e || 100, Phaser.Easing.Linear.None).start(), Util.isDefined(t) && s.onComplete.addOnce(t)
	},
	stand: function () {
		this.sprites.callAll("play", null, "stand", this.speed), this.mode = 1
	},
	moonwalk: function () {
		this.sprites.callAll("play", null, "walk", this.speed), this.mode = 2
	},
	attack: function () {},
	flip: function () {
		this.sprites.scale.x *= -1
	},
	isFacingLeft: function () {
		return -1 === this.sprites.scale.x
	},
	faceToward: function (e) {
		this.sprites.scale.x = this.x > e ? Math.min(this.scale.x, -1 * this.scale.x) : Math.abs(this.scale.x)
	}
}), Prodigy.MonsterContainerAdv = function (e, t, i, a, s) {
	Prodigy.Container.CreatureContainer.call(this, e, t, s, 1, i, a), this.assets = Prodigy.MonsterContainerAdv.getAssets(this.source)
}, Prodigy.extends(Prodigy.MonsterContainerAdv, Prodigy.Container.CreatureContainer, {
	constructor: Prodigy.MonsterContainerAdv,
	startLoad: function () {
		Prodigy.Container.CreatureContainer.prototype.startLoad.call(this), this.loading = !0, this.assets = Prodigy.MonsterContainerAdv.getAssets(this.source), this.game.prodigy.load.assets(this.assets, this.setup.bind(this))
	},
	setup: function () {
		this.complete = !0, this.loading = !1
	},
	tryAction: function (e) {
		return !this.complete || this.loading ? (window.setTimeout(e, 500), !1) : !0
	},
	removeTweens: function (e) {
		for (var t = 0; t < e.length; t++) this.game.tweens.removeFrom(e[t], !1)
	},
	rig: function () {}
}), Prodigy.MonsterContainerAdv.getAssets = function (e) {
	return ["tmp-" + e.getID()]
}, Prodigy.Container.QuestMap = function (e, t, i, a) {
	Prodigy.Control.Element.call(this, e, t), this.x = i, this.y = a
}, Prodigy.extends(Prodigy.Container.QuestMap, Prodigy.Control.Element, {
	constructor: Prodigy.Container.QuestMap,
	open: function (e, t) {
		this.zone = e, this.visible = !0, Util.isDefined(this.map) && this.map.destroy(), Util.isDefined(this.page) && this.page.destroy(), this.page = this.game.prodigy.create.element(this, 0, 0);
		var i = new Phaser.TileSprite(this.game, 640, 70, 10, 494, "core", "map-mid");
		i.anchor.setTo(.5, 0), this.page.add(i);
		var a = this.game.add.tween(i).to({
				width: 850
			}, 700, Phaser.Easing.Quadratic.InOut, !1, 200).to({
				width: 810
			}, 300, Phaser.Easing.Quadratic.InOut).start(),
			s = this.game.prodigy.create.sprite(640, 70, "core", "map-side");
		s.anchor.setTo(1, 0), this.page.add(s), this.game.add.tween(s).to({
			x: s.x - 420
		}, 700, Phaser.Easing.Quadratic.InOut, !1, 200).to({
			x: s.x - 400
		}, 300, Phaser.Easing.Quadratic.InOut).start(), s = this.game.prodigy.create.sprite(752, 70, "core", "map-side"), s.scale.x = -1, this.page.add(s), this.game.add.tween(s).to({
			x: s.x + 420
		}, 700, Phaser.Easing.Quadratic.InOut, !1, 200).to({
			x: s.x + 400
		}, 300, Phaser.Easing.Quadratic.InOut).start(), a.onComplete.addOnce(this.createMap.bind(this, t), this)
	},
	createMap: function (e) {
		if (this.exists) {
			this.map = this.game.prodigy.create.element(this, 90, 50), this.map.alpha = 0;
			for (var t = this.game.add.graphics(500, 110, this.map), i = this.game.prodigy.player.quests.getCurrentQuest(this.zone.ID), a = this.game.prodigy.player.quests.isQuestStarted(this.zone.ID, i), s = null, r = null, o = 0, n = null, l = 0; l < this.zone.quests.length; l++) {
				var h = this.zone.quests[l],
					d = i - 1 > l || i - 1 === l && a ? 16229944 : 8947848;
				Util.isDefined(s) && (t.lineStyle(7, 0), t.moveTo(s[0], s[1]), t.lineTo(h.coords[0], h.coords[1]), t.lineStyle(5, d), t.moveTo(s[0], s[1]), t.lineTo(h.coords[0], h.coords[1])), this.map.add(this.game.prodigy.create.sprite(t.x + h.coords[0] - 25, t.y + h.coords[1] - 14, "core", i - 1 > l || i - 1 === l && a ? "node" : "node2"));
				var p = this.game.prodigy.create.sprite(t.x + h.coords[0], t.y + h.coords[1] - 20, "icons", "star-small");
				p.inputEnabled = !0, p.oldY = p.y, p.events.onInputDown.add(this.showQuestTargets.bind(this, h, l + 1, p), this), p.anchor.setTo(.5, .5), e && l + 1 === e.complete ? (p.frameName = "yes", n = h, o = l + 1, r = p) : i - 1 > l ? (p.frameName = "yes", n = h, o = l + 1, r = p) : l !== i - 1 && 0 !== l || Util.isDefined(e) && e.complete || (p.frameName = Util.isDefined(h.req) && a ? Util.convertItemToIcon(h.reward[0]) : "star", r = p, n = h, o = l + 1), this.map.add(p), s = h.coords
			}
			this.targetQuest = n, this.targetID = o, this.target = r, this.game.add.tween(this.map).to({
				alpha: 1
			}, 300, Phaser.Easing.Quadratic.Out, !0).onComplete.addOnce(this.showQuestTargets.bind(this, n, o, r), this), this.map.add(this.game.prodigy.create.sprite(270, -15, "icons", this.zone.icon)), this.map.add(this.game.prodigy.create.sprite(750, -15, "icons", this.zone.icon)), this.game.prodigy.create.font(this.map, 300, 15, this.zone.fullName, {
				size: 36,
				align: "center",
				width: 500,
				font: "button"
			})
		}
	},
	showQuestTargets: function (e, t, i) {
		if (i !== this.currentIcon && this.exists) {
			Util.isDefined(this.quest) && this.quest.destroy();
			var a = this.game.prodigy.player.quests.getCurrentQuest(this.zone.ID);
			if (Util.isDefined(this.currentTween) && (this.game.tweens.remove(this.currentTween), this.currentIcon.y = this.currentIcon.oldY), this.currentIcon = i, this.currentTween = this.game.add.tween(i).to({
					y: i.y - 10
				}, 1e3, Phaser.Easing.Quadratic.InOut, !0, 0, 99999, !0), this.quest = this.game.prodigy.create.element(this.map, 154, 80), this.game.prodigy.create.panel(this.quest, 0, 0, 6, 6), t > a || t === a && !this.game.prodigy.player.quests.isQuestStarted(this.zone.ID, a)) return this.game.prodigy.create.font(this.quest, 15, 10, "???", {
				width: 270,
				align: "center"
			}), void 0;
			if (this.game.prodigy.create.font(this.quest, 15, 10, e.name, {
					width: 270,
					align: "center"
				}), Util.isDefined(e.req)) {
				this.game.prodigy.create.font(this.quest, 15, 80, e.desc, {
					width: 270
				});
				for (var s = 150 - 42 * (e.req.length - 1), r = 0; r < e.req.length; r++) {
					var o = e.req[r],
						n = 0;
					if (n = "pet" === o.type ? this.game.prodigy.player.quests.getMonsterProgress(this.zone.ID, o.ID) : "boss" === o.type || "player" === o.type ? this.game.prodigy.player.quests.getBossProgress(this.zone.ID) : this.game.prodigy.player.backpack.hasItem(o.type, o.ID), this.quest.add(this.game.prodigy.create.sprite(s - 40, 250, "icons", Util.convertItemToIcon(o))), a > t || n >= o.N) {
						var l = this.game.prodigy.create.sprite(s - 40 + 22, 210, "icons", "yes");
						this.quest.add(l)
					} else this.game.prodigy.create.font(this.quest, s - 50, 215, n + "/" + o.N, {
						width: 100,
						align: "center"
					});
					s += 84
				}
			}
		}
	}
}), Prodigy.Container.PlayerContainer = function (e, t, i, a, s, r, o) {
	Prodigy.Container.CreatureContainer.call(this, e, t, i, a, s, r), this.offs = 1 === a ? new Array(0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 2, 2, 1, 1, 0, 4, 4, 4, 5, 5, 5, 4, 4) : new Array(0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 1, 2, 4, 5, 4, 3), this.assets = Prodigy.Container.PlayerContainer.getAssets(this.source, this.setScale), this.headOnly = o
}, Prodigy.extends(Prodigy.Container.PlayerContainer, Prodigy.Container.CreatureContainer, {
	constructor: Prodigy.Container.PlayerContainer,
	forceOutfit: function (e) {
		this.assets = Prodigy.Container.PlayerContainer.getAssets(this.source, this.setScale, e)
	},
	startLoad: function () {
		Prodigy.Container.CreatureContainer.prototype.startLoad.call(this), this.loading = !0, this.transforming = this.transformID !== this.source.transformID, this.transformID = this.source.transformID, this.assets = this.source.transformID ? Prodigy.Container.MonsterContainer.getAssets(new Monster({
			ID: this.transformID
		}), this.setScale, !1, !0) : Prodigy.Container.PlayerContainer.getAssets(this.source, this.setScale, null, this.headOnly), this.source.transformID ? this.game.prodigy.load.assets(this.assets, this.setupMonster.bind(this)) : this.game.prodigy.load.assets(this.assets, this.setup.bind(this))
	},
	showSmoke: function () {
		Util.isDefined(this.smoke) && this.smoke.destroy(), this.smoke = this.game.prodigy.create.element(this, 0, 0);
		for (var e = 0; 10 > e; e++) {
			var t = this.game.prodigy.create.sprite(0, 0, "icons", "smoke");
			t.scale.x = t.scale.y = .5 * this.setScale, t.anchor.setTo(.5, .5);
			var i = Math.floor(-30 + 60 * Math.random()),
				a = Math.floor(-50 - 50 * Math.random()) * this.setScale;
			this.game.add.tween(t).to({
				y: "" + a,
				x: "" + i,
				angle: Math.floor(-100 + 200 * Math.random()),
				alpha: 0
			}, 500 + Math.floor(1e3 * Math.random()), Phaser.Easing.Quadratic.Out).start(), this.smoke.add(t)
		}
	},
	setupMonster: function (e, t) {
		if (t && Util.isDefined(this.assets) && Util.isDefined(this.game)) {
			this.sprites.removeAll(!0);
			var i = this.assets[0];
			if (this.forceSimple) {
				var a = this.game.prodigy.assets.getImageBounds(i);
				this.body = this.game.prodigy.create.sprite(0, 0, i), this.sprites.add(this.body), this.body.x = -a[0], this.body.y = -this.body.height
			} else {
				var a = this.game.prodigy.assets.getImageBounds(i),
					s = Math.floor(-a[2] / 2);
				s = -a[0];
				var r = -a[3];
				this.body = this.game.prodigy.create.sprite(s, r, i), this.sprites.add(this.body), this.sprites.callAll("animations.add", "animations", "walk", [0, 1, 2, 3, 4, 5, 6, 7], 10, !0, !0), this.sprites.callAll("animations.add", "animations", "stand", [8, 9, 10, 11, 12, 13, 14, 15], 10, !0, !0);
				try {
					var o = this.body.animations.add("attack", [16, 17, 18, 19, 20, 21, 22, 23], 10);
					o.onComplete.add(this.stand, this)
				} catch (n) {}
				this.sprites.callAll("play", null, "stand")
			}
			this.transforming && this.showSmoke(), this.complete = !0, this.loading = !1
		}
	},
	setup: function (e, t) {
		if (t && Util.isDefined(this.assets) && Util.isDefined(this.game)) {
			this.sprites.removeAll(!0);
			var i = this.assets[0],
				a = this.assets[1],
				s = this.assets[2],
				r = this.assets[3],
				o = this.assets[4],
				n = this.assets[5],
				l = this.game.prodigy.assets.getImageBounds(i),
				h = Math.floor(-(64 * this.setScale - l[0])),
				d = -l[3];
			if (null !== a && (this.face = this.game.prodigy.create.sprite(h - (l[0] - (1 != this.setScale ? 93 : 44)), d - (l[1] - (1 != this.setScale ? 82 : 48)), "heads", a), this.face.inputEnabled = !0, this.face.events.onInputDown.add(this.playerClicked.bind(this)), this.sprites.add(this.face), this.faceY = this.face.y), null !== r && (this.eyes = this.game.prodigy.create.sprite(h - (l[0] - (1 != this.setScale ? 113 : 55)), d - (l[1] - (1 != this.setScale ? 114 : 65)), "heads", r), this.sprites.add(this.eyes), this.eyesY = this.eyes.y), null !== s) {
				var p = this.game.prodigy.assets.getImageBounds(s);
				this.hair = this.game.prodigy.create.sprite(h - (l[0] - p[0]), d - (l[1] - p[1]), s), this.sprites.add(this.hair), this.hairY = this.hair.y, this.hair.animations.add("walk", [0, 1, 2, 3], 10, !0, !0), this.hair.animations.add("stand", [0], 10, !0, !0), this.hair.animations.add("fct", [0], 10, !0, !0)
			}
			if (!this.headOnly) {
				this.body = this.game.prodigy.create.sprite(h, d, i), this.body.inputEnabled = !0, this.body.events.onInputDown.add(this.playerClicked.bind(this)), this.sprites.add(this.body), this.animWalk = this.body.animations.add("walk", [0, 1, 2, 3, 4, 5, 6, 7], 10, !0, !0), this.animStand = this.body.animations.add("stand", [8, 9, 10, 11, 12, 13, 14, 15], 10, !0, !0);
				try {
					this.animFunction = this.body.animations.add("fct", [16, 17, 18, 19, 20, 21, 22, 23], 10, !0, !0), this.animFunction.onComplete.add(this.functionComplete.bind(this))
				} catch (c) {}
			}
			if (null !== o) {
				var u = this.game.prodigy.assets.getImageBounds(o);
				this.hat = this.game.prodigy.create.sprite(h - (l[0] - u[0]), d - (l[1] - u[1]), o), this.sprites.add(this.hat), this.hatY = this.hat.y;
				var g = Items.getItemData("hat", this.source.equipment.getEquipment("hat"));
				if (Util.isDefined(g) && 1 === g.standAnimation) this.hat.animations.add("walk", [0, 1, 2, 3], 10, !0, !0), this.hat.animations.add("stand", [0, 1, 2, 3], 10, !0, !0), this.hat.animations.add("fct", [0, 1, 2, 3], 10, !0, !0);
				else {
					try {
						this.hat.animations.add("walk", [0, 1, 2, 3], 10, !0, !0)
					} catch (c) {
						this.hat.animations.add("walk", [0], 10, !0, !0)
					}
					this.hat.animations.add("stand", [0], 10, !0, !0), this.hat.animations.add("fct", [0], 10, !0, !0)
				}
			}
			if (null !== n && !this.headOnly) {
				var m = this.game.prodigy.assets.getImageBounds(n);
				this.weapon = this.game.prodigy.create.sprite(h - (l[0] - m[0]), d - (l[1] - m[1]), n), this.sprites.add(this.weapon), this.weaponY = this.weapon.y
			}
			this.transforming && this.showSmoke(), this.sprites.callAll("play", null, "stand"), this.mode = 1, this.complete = !0, this.loading = !1
		}
	},
	playerClicked: function () {
		Util.isDefined(this.clickCallback) && this.clickCallback()
	},
	performFunction: function (e, t) {
		this.mode = 2, this.animFunction.onComplete.addOnce(t), this.sprites.callAll("play", null, "fct", e, !1)
	},
	functionComplete: function () {
		this.mode = 1, this.sprites.callAll("play", null, "stand")
	},
	attack: function () {
		this.transformID ? this.sprites.callAll("play", null, "attack") : this.game.add.tween(this).to({
			y: this.y - 50,
			angle: -20
		}, 300, Phaser.Easing.Quadratic.Out).to({
			y: this.y,
			angle: 0
		}, 200, Phaser.Easing.Quadratic.In).to({
			y: this.y - 50,
			angle: 20
		}, 300, Phaser.Easing.Quadratic.Out).to({
			y: this.y,
			angle: 0
		}, 200, Phaser.Easing.Quadratic.In).to({
			y: this.y - 50
		}, 300, Phaser.Easing.Quadratic.Out).to({
			y: this.y
		}, 200, Phaser.Easing.Quadratic.In).start()
	},
	update: function () {
		if (Prodigy.Container.CreatureContainer.prototype.update.call(this), this.source.transformID !== this.transformID && this.reload(), !this.transformID && !this.loading && Util.isDefined(this.animWalk) && Util.isDefined(this.animStand)) {
			var e = 0;
			1 === this.mode ? e = this.animStand.currentFrame.index : 0 === this.mode ? e = this.animWalk.currentFrame.index : Util.isDefined(this.animFunction) && Util.isDefined(this.animFunction.currentFrame) && (e = this.animFunction.currentFrame.index), Util.isDefined(this.face) && (this.face.y = this.faceY + this.offs[e]), Util.isDefined(this.hair) && (this.hair.y = this.hairY + this.offs[e]), Util.isDefined(this.eyes) && (this.eyes.y = this.eyesY + this.offs[e]), Util.isDefined(this.hat) && (this.hat.y = this.hatY + this.offs[e]), Util.isDefined(this.weapon) && (this.weapon.y = this.weaponY + this.offs[e])
		}
	}
}), Prodigy.Container.PlayerContainer.getAssets = function (e, t, i, a) {
	var s = new Array;
	t = 1 === t ? "reduced" : "normal", a ? s.push(null) : (Util.isDefined(i) || (i = e.equipment.getEquipment("outfit")), s.push(Util.isDefined(i) ? t + "-outfit-" + e.appearance.getGender() + "-" + i : null)), s.push(t + "/face/" + e.appearance.getSkinColor()), s.push(t + "-hair-" + e.appearance.getGender() + "-" + e.appearance.getHairStyle() + "-" + e.appearance.getHairColor()), s.push(t + "/eyes/" + e.appearance.getEyeColor()), s.push(Util.isDefined(e.equipment.getEquipment("hat")) ? t + "-hat-" + e.equipment.getEquipment("hat") : null), s.push("normal" === t && Util.isDefined(e.equipment.getEquipment("weapon")) ? t + "-weapon-" + e.equipment.getEquipment("weapon") : null), Util.isDefined(s[0]) || (s[0] = t + "-outfit-" + e.appearance.getGender() + "-13");
	var r = e.equipment.getEquipment("hat");
	if (Util.isDefined(r)) {
		var t = Items.getItemData("hat", r).type;
		("cover" === t || "wrap" === t) && (s[2] = null), "mask" === t && (s[2] = null)
	}
	return s
}, Prodigy.Container.MonsterContainer = function (e, t, i, a, s, r, o) {
	Prodigy.Container.CreatureContainer.call(this, e, t, i, a, s, r), this.forceSimple = o || Device.isTablet(), this.assets = Prodigy.Container.MonsterContainer.getAssets(this.source, this.setScale, this.forceSimple)
}, Prodigy.extends(Prodigy.Container.MonsterContainer, Prodigy.Container.CreatureContainer, {
	constructor: Prodigy.Container.MonsterContainer,
	startLoad: function () {
		Prodigy.Container.CreatureContainer.prototype.startLoad.call(this), this.loading = !0, this.assets = Prodigy.Container.MonsterContainer.getAssets(this.source, this.setScale, this.forceSimple), this.game.prodigy.load.assets(this.assets, this.setup.bind(this))
	},
	setup: function (e, t) {
		if (Util.isDefined(this.game) && t && Util.isDefined(this.assets)) {
			this.sprites.removeAll(!0);
			var i = this.assets[0];
			if (this.forceSimple) {
				var a = this.game.prodigy.assets.getImageBounds(i);
				this.body = this.game.prodigy.create.sprite(0, 0, i), this.sprites.add(this.body), this.body.x = -a[0], this.body.y = -this.body.height
			} else {
				var a = this.game.prodigy.assets.getImageBounds(i),
					s = Math.floor(-a[2] / 2);
				s = -a[0];
				var r = -a[3];
				this.body = this.game.prodigy.create.sprite(s, r, i), this.sprites.add(this.body), this.sprites.callAll("animations.add", "animations", "walk", [0, 1, 2, 3, 4, 5, 6, 7], 10, !0, !0), this.sprites.callAll("animations.add", "animations", "stand", [8, 9, 10, 11, 12, 13, 14, 15], 10, !0, !0);
				try {
					var o = this.body.animations.add("attack", [16, 17, 18, 19, 20, 21, 22, 23], 10);
					o.onComplete.add(this.stand, this)
				} catch (n) {}
				this.sprites.callAll("play", null, "stand")
			}
			this.complete = !0, this.loading = !1
		}
	},
	attack: function () {
		this.sprites.callAll("play", null, "attack")
	}
}), Prodigy.Container.MonsterContainer.getAssets = function (e, t, i, a) {
	t = 1 === t ? "reduced-" : "normal-";
	var s = new Array;
	return "normal" !== t || !i && !Device.isTablet() || a || (t = "small-"), s.push("monster-" + t + e.getID()), s
}, Prodigy.Container.BossContainer = function (e, t, i, a, s, r) {
	Prodigy.Container.CreatureContainer.call(this, e, t, i, 2, a, s), this.forceSimple = r || Device.isTablet(), this.assets = Prodigy.Container.BossContainer.getAssets(this.source, this.forceSimple)
}, Prodigy.extends(Prodigy.Container.BossContainer, Prodigy.Container.CreatureContainer, {
	constructor: Prodigy.Container.BossContainer,
	startLoad: function () {
		Prodigy.Container.CreatureContainer.prototype.startLoad.call(this), this.loading = !0, this.assets = Prodigy.Container.BossContainer.getAssets(this.source, this.forceSimple), this.game.prodigy.load.assets(this.assets, this.setup.bind(this))
	},
	setup: function (e, t) {
		if (Util.isDefined(this.game) && t && Util.isDefined(this.assets)) {
			this.sprites.removeAll(!0);
			var i = this.assets[0];
			if (this.forceSimple) {
				var a = this.game.prodigy.assets.getImageBounds(i);
				this.body = this.game.prodigy.create.sprite(0, 0, i), this.sprites.add(this.body), this.body.x = -a[0], this.body.y = -this.body.height
			} else {
				var a = this.game.prodigy.assets.getImageBounds(i),
					s = Math.floor(-a[2] / 2);
				s = -a[0];
				var r = -a[3];
				this.body = this.game.prodigy.create.sprite(s, r, i), this.sprites.add(this.body);
				var o = null;
				try {
					this.sprites.callAll("animations.add", "animations", "walk", [0, 1, 2, 3, 4, 5, 6, 7], 10, !0, !0), this.sprites.callAll("animations.add", "animations", "stand", [0, 1, 2, 3, 4, 5, 6, 7], 10, !0, !0), o = this.body.animations.add("attack", [8, 9, 10, 11, 12, 13, 14, 15], 10)
				} catch (n) {
					this.sprites.callAll("animations.add", "animations", "walk", [0], 10, !0, !0), this.sprites.callAll("animations.add", "animations", "stand", [0], 10, !0, !0), o = this.body.animations.add("attack", [0], 10)
				}
				o.onComplete.add(this.stand, this), this.sprites.callAll("play", null, "stand")
			}
			this.complete = !0, this.loading = !1
		}
	},
	attack: function () {
		this.sprites.callAll("play", null, "attack")
	}
}), Prodigy.Container.BossContainer.getAssets = function (e, t) {
	var i = new Array,
		a = "";
	return (t || Device.isTablet()) && (a = "small-"), i.push("boss-" + a + e.getID()), i
}, Prodigy.Container.Hearts = function (e, t, i, a, s, r) {
	Prodigy.Control.Element.call(this, e, t), this.x = i, this.y = a, this.reverse = r, this.container = this.game.prodigy.create.sprite(0, 0, "core", "hearts-container"), r && (this.container.scale.x = -1, this.container.x += 466), this.add(this.container), this.animating = !1, this.updateFrame = 0;
	var i = r ? 16 : 90,
		a = 33;
	this.hearts = new Array, this.text = this.game.prodigy.create.font(this, 0, 15, "", {
		size: 20
	}), this.game.prodigy.create.font(this, this.reverse ? 376 : 10, 63, "lvl"), this.lvl = this.game.prodigy.create.font(this, (this.reverse ? 416 : 50) - 75, 75, null, {
		size: 40,
		width: 150,
		align: "center"
	}), this.type = this.game.prodigy.create.sprite(this.reverse ? 426 : 40, 30, "icons", "star"), this.type.anchor.setTo(.5, .5), this.add(this.type);
	for (var o = 0; 20 > o; o++) this.hearts[o] = this.add(this.game.prodigy.create.sprite(i + 17 - 18, a + 26 - 15, "core", "heart-4-0")), i += 35, 9 === o && (i = r ? 16 : 90, a += 40);
	this.setSource(s)
}, Prodigy.extends(Prodigy.Container.Hearts, Prodigy.Control.Element, {
	constructor: Prodigy.Container.Hearts,
	setSource: function (e) {
		Util.isDefined(e) && (this.player = e, this.text.setText(e.getName()), this.text.x = this.reverse ? 346 - this.text.width : 120, this.type.frameName = e.getElement(), this.lvl.setText("" + e.getLevel()), this.totalHearts = e.getMaxHearts(), this.currentHearts = this.target = e.getCurrentHearts(), this.setHearts())
	},
	changeHearts: function () {
		if (Util.isDefined(this.game)) {
			if (!(this.target > this.currentHearts)) return this.animating = !1, void 0;
			(!Util.isDefined(this.soundEnabled) || this.soundEnabled) && this.game.prodigy.audio.playSFX("heart"), this.currentHearts++, this.setHearts(), this.game.time.events.add(.2 * Phaser.Timer.SECOND, this.changeHearts, this)
		}
	},
	setHearts: function () {
		for (var e = this.currentHearts, t = this.totalHearts, i = 0; 20 > i; i++) {
			var a = "heart-" + (t > 4 ? 4 : t) + "-" + (e > 4 ? 4 : e >= 0 ? e : 0);
			this.hearts[i].visible = !0, 0 >= t && (a = "heart-4-0", this.hearts[i].visible = !1), this.hearts[i].frameName = a, e -= 4, t -= 4
		}
	},
	update: function () {
		if (Prodigy.Control.Element.prototype.update.call(this), this.updateFrame < 5) return this.updateFrame++, void 0;
		if (this.updateFrame = 0, Util.isDefined(this.player)) {
			var e = this.player.getMaxHearts(),
				t = this.player.getCurrentHearts();
			e !== this.totalHearts ? (this.totalHearts = e, this.currentHearts = t, this.setHearts()) : t !== this.currentHearts && (t < this.currentHearts ? (this.currentHearts = t, this.game.prodigy.audio.playSFX("damage"), this.setHearts()) : (this.target = t, this.animating || (this.animating = !0, this.game.time.events.add(.1 * Phaser.Timer.SECOND, this.changeHearts, this))))
		}
	}
}), Prodigy.Container.Hearts.getAssets = function () {
	return []
}, Prodigy.Container.Chest = function (e, t, i, a, s, r) {
	Prodigy.Control.Element.call(this, e, t), this.callback = r;
	var o = this.add(new Phaser.TileSprite(this.game, 0, 300, 1280, 200, "core", "dialogue"));
	o.alpha = .5, this.rewards = this.game.prodigy.create.element(this, 0, 0);
	var n = "open a chest!";
	if (Math.random() > .6 && this.game.prodigy.player.getLevel() >= -5 && i) {
		var l = Math.floor(2 * Math.random());
		this.createChest(640 + (0 === l ? -230 : 30), a), this.createChest(640 + (1 === l ? -230 : 30), a.concat(s), !0)
	} else this.createChest(540, a), n = "open the chest!";
	this.game.prodigy.create.font(this, 440, 410, n, {
		font: "button",
		size: 36,
		width: 400,
		align: "center"
	})
}, Prodigy.extends(Prodigy.Container.Chest, Prodigy.Control.Element, {
	constructor: Prodigy.Container.Chest,
	createChest: function (e, t, i) {
		var a = this.game.prodigy.create.element(this, e, -200);
		a.reward = t, a.xpBonus = i, a.bot = this.game.prodigy.create.sprite(0, 95, "battle", i ? "chest2-bot" : "chest-bot"), a.bot.inputEnabled = !0, a.add(a.bot), a.top = this.game.prodigy.create.sprite(0, 0, "battle", i ? "chest2-top" : "chest-top"), a.top.inputEnabled = !0, a.add(a.top);
		var s = this.game.add.tween(a).to({
			y: 220
		}, 800, Phaser.Easing.Linear.None).to({
			y: 180
		}, 200, Phaser.Easing.Quadratic.Out).to({
			y: 220
		}, 200, Phaser.Easing.Quadratic.In).start();
		return s.onComplete.add(this.activate.bind(this, a), this), a
	},
	activate: function (e) {
		e.tw = this.game.add.tween(e).to({
			y: e.y - 10
		}, 800, Phaser.Easing.Quadratic.InOut, !0, 0, Number.MAX_VALUE, !0), e.top.events.onInputDown.add(this.onDown.bind(this, e), this), e.bot.events.onInputDown.add(this.onDown.bind(this, e), this)
	},
	onDown: function (e) {
		if (!this.locked) {
			if (e.xpBonus && this.game.prodigy.network.sendAnalytics("Select-Member-Chest"), e.xpBonus && !this.game.prodigy.player.isMember) return this.game.prodigy.open.membership(Prodigy.Menu.MemberAd.MORE_EXP), void 0;
			this.game.tweens.remove(e.tw), e.y = 220, this.locked = !0;
			for (var t = [], i = 0; 10 > i; i++) t.push(this.game.prodigy.create.sprite(0, 0, "icons", "star"));
			for (var i = 0; i < e.reward.length; i++) {
				var a = e.reward[i];
				if ("gold" === a.type)
					for (var s = 0; s < a.N / 10; s++) t.push(this.game.prodigy.create.sprite(0, 0, "icons", "gold"));
				else t.push(this.game.prodigy.create.sprite(0, 0, "icons", Util.convertItemToIcon(a)))
			}
			var r = this.game.prodigy.create.sprite(e.x + 25, e.y + 120, "core", "overlay-light");
			r.width = 150, r.height = 1, r.alpha = .75, this.rewards.add(r), this.game.add.tween(r).to({
				y: 0,
				height: 340
			}, 400, Phaser.Easing.Linear.None).start();
			for (var i = 0; i < t.length; i++) {
				var o = t[i];
				o.anchor.setTo(.5, .5), o.x = e.x + 100, o.y = e.y + 135, this.rewards.add(o), this.game.add.tween(o).to({
					y: -100,
					angle: Math.floor(360 * Math.random()),
					x: Math.floor(o.x - 200 + 400 * Math.random())
				}, 800, Phaser.Easing.Linear.None).delay(Math.floor(1e3 * Math.random())).start()
			}
			this.game.add.tween(e.top).to({
				y: -350
			}, 400, Phaser.Easing.Linear.None).start(), this.game.add.tween(this).to({
				alpha: 0
			}, 300, Phaser.Easing.Linear.None).delay(2200).start().onComplete.add(this.close.bind(this, e.reward, e.xpBonus), this)
		}
	},
	close: function (e, t) {
		for (var i = 0; i < e.length; i++) "gold" === e[i].type && (e[i].N = Math.floor(e[i].N * this.game.prodigy.affixes.getGold()));
		Util.isDefined(this.callback) && this.callback(e, t), this.destroy()
	}
}), Prodigy.MapDisplay = function (e, t, i, a) {
	Prodigy.Control.Element.call(this, e, t);
	var s = this.game.prodigy.create.sprite(0, 0, "map", "map");
	s.inputEnabled = !0, this.add(s);
	for (var r = [[1150, 334], [1163, 122], [1025, 39], [43, 20], [-130, 382], [876, -40], [1073, -30], [-120, 81], [95, -30], [-40, -20]], o = 0; o < r.length; o++) {
		var n = this.game.prodigy.create.sprite(r[o][0], r[o][1], "map", "cloud");
		this.game.add.tween(n).to({
			x: n.x + 40
		}, 5e3, Phaser.Easing.Quadratic.InOut, !0, 100 * o, Number.MAX_VALUE, !0), this.add(n)
	}
	var l = this.game.prodigy.create.panel(this, 30, 615, 10, 2, "banner");
	if (l.alpha = .8, this.game.prodigy.create.panel(this, 850, 615, 10, 2, "banner").alpha = .8, i === Prodigy.MapDisplay.LOAD) return this.text = this.game.prodigy.create.font(this, 45, 630, "Prodigy", {
		size: 36,
		align: "center",
		width: 370,
		font: "button"
	}), Util.isDefined(a) || (a = "Prodigy Island"), this.text.setText(a), a.length <= 0 && (l.visible = !1), this.text.height > 44 && (this.text.y = 610), void 0;
	this.game.prodigy.create.button(this, 50, 610, "icons", "move", this.goTo.bind(this, "Dorm")), this.game.prodigy.create.font(this, 140, 640, "go to your house!", {
		font: "black",
		size: 20
	}), Prodigy.Control.TextButton.createCloseButton(this.game, this, 950, 630, this.parent.close.bind(this.parent));
	for (var o = 0; o < Prodigy.MapDisplay.BTNS.length; o++) {
		var h = this.createIcon(Prodigy.MapDisplay.BTNS[o]);
		this.game.add.tween(h).to({
			y: h.y + 10
		}, 1e3, Phaser.Easing.Quadratic.InOut, !0, 0, Number.MAX_VALUE, !0)
	}
	this.sort()
}, Prodigy.MapDisplay.LOAD = 1, Prodigy.MapDisplay.BTNS = [{
	name: "Firefly Forest",
	x: 198,
	y: 242,
	icon: "key/3",
	target: "forest-C8",
	msg: "Help Flora reclaim her forest from pesky monsters, thieves and a sleeping giant. Learn earth spells and earn the Firefly Gem!",
	lock: "You must complete the tutorial before you unlock this zone!"
}, {
	name: "Shiverchill Mountain",
	x: 257,
	y: 90,
	icon: "key/4",
	target: "shiverchill-A10",
	msg: "Bok needs your help! His mountain is frozen over, and only a wizard can help reclaim his throne! Learn ice spells and earn the Shiverchill Gem!",
	lock: "You must complete Firefly Forest before you unlock this zone!",
	item: {
		type: "key",
		ID: 3
	}
}, {
	name: "Bonfire Spire",
	x: 907,
	y: 91,
	icon: "zone-fire",
	target: "Volcano",
	msg: "Chef Mugs is in need of a wizard just like you! Learn fire spells and defeat a powerful boss!",
	lock: "You must complete the tutorial before you unlock this zone!"
}, {
	name: "Barnacle Cove",
	x: 693,
	y: 575,
	icon: "zone-water",
	target: "Pirate",
	msg: "Captain Eve is in need of a wizard just like you! Learn water spells and defeat a powerful boss!",
	lock: "You must complete the tutorial before you unlock this zone!"
}, {
	name: "Dyno Dig Oasis",
	x: 650,
	y: 20,
	icon: "fossil/5",
	target: "Dino",
	msg: "Professor Scoog is in need of a wizard just like you! Encounter extinct monsters and dig up fossils!",
	lock: "You must complete the tutorial before you unlock this zone!"
}, {
	name: "Skywatch",
	x: 1080,
	y: 160,
	icon: "zone-air",
	target: "Cloud",
	msg: "Cumulo is in need of a wizard just like you! Learn air spells and defeat a powerful boss!",
	lock: "You must complete the tutorial before you unlock this zone!"
}, {
	name: "Dark Tower",
	x: 1100,
	y: 400,
	icon: "wizard",
	target: "TowerBase",
	msg: "The Dark Tower is home to Mira, who has a challenge for wizards like you! Climb to the top and earn a powerful prize!",
	lock: "You must complete the tutorial before you unlock this zone!"
}, {
	name: "Clockwork Town",
	x: 850,
	y: 490,
	icon: "item/47",
	target: "Tech",
	msg: "Boombox has a tournament each day, and is looking for wizards to compete! Adopt a robot and teach it to dance, too!",
	lock: "You must complete the tutorial before you unlock this zone!"
}, {
	name: "Lamplight Town",
	x: 758,
	y: 270,
	icon: "dorm/44",
	target: "lamplight-B1",
	msg: "Home of the famous Academy, the town has all sorts of wonderful things for wizards to do!",
	lock: "You must complete the tutorial before you unlock this zone!"
}, {
	name: "Coliseum",
	x: 239,
	y: 383,
	icon: "trophySilver",
	target: "Arena",
	msg: "Feel like challenging the best of the best? Defeat powerful wizards in duels and earn great rewards!",
	lock: "You must complete the tutorial before you unlock this zone!"
}], Prodigy.extends(Prodigy.MapDisplay, Prodigy.Control.Element, {
	createIcon: function (e) {
		var t = !1;
		Util.isDefined(e.item) && !this.game.prodigy.player.backpack.hasItem(e.item.type, e.item.ID) && (t = !0);
		var i = this.game.prodigy.create.button(this, e.x, e.y, "icons", "map-quest", this.openLocation.bind(this, e, t));
		return t && (i.sprite.tint = 5592405), i
	},
	openLocation: function (e, t) {
		t ? this.game.prodigy.open.message(e.lock, null, e.icon, e.name) : this.game.prodigy.open.confirm(e.msg + " \n\nDo you want to travel here?", this.goTo.bind(this, e.target), null, e.icon, e.name)
	},
	goTo: function (e) {
		"Dorm" === e && (this.game.state.states[e].player = this.game.prodigy.player), e.indexOf("-") > 0 ? this.game.prodigy.world.teleport(e) : this.game.state.start(e)
	}
}), Prodigy.Container.UserEquipment = function (e, t, i, a, s, r, o) {
	Prodigy.Control.Element.call(this, e, t), this.x = i, this.y = a, this.add(this.game.prodigy.create.sprite(0, 0, "core", "char-container")), r || (this.add(this.game.prodigy.create.sprite(0, 174, "icons", "icon-base")), this.add(this.game.prodigy.create.sprite(72, 263, "icons", "icon-base")), this.add(this.game.prodigy.create.sprite(196, 263, "icons", "icon-base")), this.add(this.game.prodigy.create.sprite(268, 174, "icons", "icon-base")), this.hat = this.game.prodigy.create.icon(this, 0, 174, "icons", Util.isDefined(s.equipment.getEquipment("hat")) ? "hat/" + s.equipment.getEquipment("hat") : 0, 1, o ? null : this.unEquipItem.bind(this, "hat")), this.weapon = this.game.prodigy.create.icon(this, 72, 263, "icons", Util.isDefined(s.equipment.getEquipment("weapon")) ? "weapon/" + s.equipment.getEquipment("weapon") : 0, 1, o ? null : this.unEquipItem.bind(this, "weapon")), this.boots = this.game.prodigy.create.icon(this, 196, 263, "icons", Util.isDefined(s.equipment.getEquipment("boots")) ? "boots/" + s.equipment.getEquipment("boots") : 0, 1, o ? null : this.unEquipItem.bind(this, "boots")), this.outfit = this.game.prodigy.create.icon(this, 268, 174, "icons", Util.isDefined(s.equipment.getEquipment("outfit")) ? "outfit/" + s.equipment.getEquipment("outfit") : 0, 1, o ? null : this.unEquipItem.bind(this, "outfit"))), this.setPlayer(s)
}, Prodigy.extends(Prodigy.Container.UserEquipment, Prodigy.Control.Element, {
	constructor: Prodigy.Container.UserEquipment,
	setPlayer: function (e) {
		Util.isDefined(this.user) && this.user.destroy(), this.user = this.game.prodigy.create.player(this, e, 2, 174, 230), this.user.reload(), this.player = e
	},
	equipItem: function (e, t) {
		if (Util.isDefined(this[t]) && this.player.equip(e, t)) {
			this.player.appearanceChanged = !0, this[t].setValue(t + "/" + e, 1, !1, !0), this.game.prodigy.audio.playSFX("whoosh"); {
				Items.getItemData(t, e)
			}
			"boots" !== t && this.user.reload()
		}
	},
	unEquipItem: function (e) {
		Util.isDefined(this[e]) && this.player.unEquip(e) && (this[e].setValue(-1, 1, !1, !0), this.game.prodigy.audio.playSFX("blop"), "boots" !== e && this.user.reload())
	}
}), Prodigy.Container.QuantityIcon = function (e, t, i, a, s, r, o, n) {
	Prodigy.Control.Element.call(this, e, t), this.sprite = this.game.prodigy.create.sprite(0, 0, s, 0), this.sprite.inputEnabled = !0, this.sprite.events.onInputDown.add(this.clicked, this), this.add(this.sprite), this.callback = n, this.x = i, this.y = a, this.font = this.game.prodigy.create.font(this, 0, 60, "", {
		size: 20,
		width: 100,
		align: "left"
	}), this.icon = this.game.prodigy.create.font(this, 0, 0, "@", {
		size: 16
	}), this.icon.alpha = 0, this.add(this.icon), this.visible = !1, this.setValue(r, o)
}, Prodigy.extends(Prodigy.Container.QuantityIcon, Prodigy.Control.Element, {
	constructor: Prodigy.Container.QuantityIcon,
	setValue: function (e, t, i) {
		return -1 !== e && 0 !== e && Util.isDefined(e) ? (this.visible = !0, this.sprite.frameName = e, this.icon.alpha = i ? .75 : 0, this.font.setText(Util.isDefined(t) && (t > 1 || t.length > 1) ? t + "" : ""), void 0) : (this.visible = !1, this.icon.alpha = 0, this.font.setText(""), void 0)
	},
	setCallback: function (e) {
		this.callback = e
	},
	clicked: function () {
		Util.isDefined(this.callback) && this.callback()
	},
	centerAnchor: function () {
		this.sprite.anchor.setTo(.5, .5)
	}
}), Prodigy.Container.StarDisplay = function (e, t, i, a, s, r) {
	Prodigy.Control.Element.call(this, e, t), this.x = i - 77, this.y = a, this.add(this.game.prodigy.create.sprite(0, 0, "battle", "stars")), this.star = this.game.prodigy.create.sprite(35, 3, "battle", "stars-full"), this.add(this.star), this.lvl = this.game.prodigy.create.font(this, 27, 25, "" + s.getLevel(), {
		size: 40,
		width: 100,
		align: "center"
	}), this.source = s, this.giveStars(0);
	for (var o = 0; r > o; o++) {
		var n = this.game.prodigy.create.sprite(77 + Math.floor(-30 + 60 * Math.random()), -600, "battle", "star-icon");
		this.add(n), n.anchor.setTo(.5, .5);
		var l = this.game.add.tween(n).to({
			y: -40
		}, 400, Phaser.Easing.Linear.None).delay(200 * o).to({
			alpha: 0
		}, 1, Phaser.Easing.Linear.None).start();
		l.onComplete.add(this.giveStars.bind(this, 1), this)
	}
}, Prodigy.extends(Prodigy.Container.StarDisplay, Prodigy.Control.Element, {
	constructor: Prodigy.Container.StarDisplay,
	giveStars: function (e) {
		var t = this.source.getLevel();
		this.source.addStars(e);
		var i = this.source.getLevel(),
			a = Math.floor(82 * Creature.getLevelPercent(this.source.getStars()));
		0 >= a && (a = 1), this.star.crop({
			x: 0,
			y: 0 + (82 - a),
			width: 84,
			height: a
		}), this.star.y = 3 + (82 - a), t !== i && (this.source.changeCurrentHearts(400), this.lvl.setText(i + ""), this.game.add.tween(this.lvl).to({
			x: this.lvl.x - 50,
			y: this.lvl.y - 50
		}, 300, Phaser.Easing.Quadratic.Out).to({
			x: this.lvl.x,
			y: this.lvl.y
		}, 300, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(this.lvl.scale).to({
			x: 2,
			y: 2
		}, 300, Phaser.Easing.Quadratic.Out).to({
			x: 1,
			y: 1
		}, 300, Phaser.Easing.Quadratic.In).start())
	}
}), Prodigy.MailIcon = function (e, t, i, a) {
	Prodigy.Control.Button.call(this, e, t, i, a, "icons", "mail", this.clicked.bind(this)), this._updatePanel = e.prodigy.create.panel(this, -170, 0, 4, 2, "mail"), this._updatePanel.add(this.game.prodigy.create.sprite(3, 3, "icons", "mail-challenge")), this._updatePanel.msgTop = this.game.prodigy.create.font(this._updatePanel, 40, 8, "New Mail!", {
		size: 16
	}), this._updatePanel.msgBot = this.game.prodigy.create.font(this._updatePanel, 10, 44, "", {
		font: "black",
		size: 16,
		width: 145,
		align: "center"
	}), this._updatePanel.visible = !1, this._bg = this.add(e.prodigy.create.sprite(0, 56, "icons", "mailCount")), this._bg.visible = !1, this._count = e.prodigy.create.font(this, 0, 53, "", {
		width: 40,
		align: "center"
	}), this.process(e.prodigy.mail.getMailCount()), e.prodigy.mail.addUpdateCallback(this.process.bind(this))
}, Prodigy.extends(Prodigy.MailIcon, Prodigy.Control.Button, {
	constructor: Prodigy.MailIcon,
	clicked: function () {
		this.game.prodigy.open.mailbox()
	},
	process: function (e, t) {
		if (Util.isDefined(this.game) && (this._bg.visible = e > 0, this._count.visible = e > 0, this._count.setText(e + ""), t)) {
			var i = function (e) {
				e.visible = !1
			};
			this.game.prodigy.audio.playSFX("dig"), this.game.tweens.removeFrom(this._updatePanel, !1), this._updatePanel.msgBot.setText(t.action + "!"), this._updatePanel.visible = !0, this._updatePanel.alpha = 1, this.game.add.tween(this._updatePanel).to({
				alpha: 0
			}, 500, Phaser.Easing.Linear.None, !0, 2e3).onComplete.add(i.bind(this, this._updatePanel))
		}
	}
}), Prodigy.Container.ChatBubble = function (e, t, i, a) {
	Prodigy.Control.Element.call(this, e, t), this.x = i, this.y = a, this.chatID = 0, this.add(this.game.prodigy.create.sprite(-38, -72, "icons", "chat/bubble"))
}, Prodigy.extends(Prodigy.Container.ChatBubble, Prodigy.Control.Element, {
	constructor: Prodigy.Container.ChatBubble,
	setID: function (e) {
		if (Util.isDefined(this.game)) {
			this.visible = !0, this.chatID++, this.scale.x = this.scale.y = 0, this.game.add.tween(this.scale).to({
				x: 1.2,
				y: 1.2
			}, 200, Phaser.Easing.Quadratic.Out).to({
				x: .8,
				y: 1
			}, 200, Phaser.Easing.Quadratic.In).to({
				x: 1,
				y: .8
			}, 200, Phaser.Easing.Quadratic.Out).to({
				x: 1,
				y: 1
			}, 200, Phaser.Easing.Quadratic.In).start(), Util.isDefined(this.emote) && this.emote.destroy(), this.emote = this.game.prodigy.create.sprite(0, 0, "icons", "chat/" + this.game.prodigy.chat.getEmote(e)), this.add(this.emote), this.emote.x = 2 - this.emote.width / 2, this.emote.y = -42 - this.emote.height / 2;
			var t = function (e) {
				e === this.chatID && (this.visible = !1)
			};
			this.timer = this.game.time.events.add(5e3, t.bind(this, this.chatID), this)
		}
	}
}), Prodigy.Container.QuestNPC = function (e, t, i, a, s, r, o, n, l) {
	Prodigy.Control.Element.call(this, e, t), this.x = i, this.y = a, this.data = Util.copyObject(s), this.npcData = r, this.npc = this.game.prodigy.create.sprite(0, 0, "npc-sprite-" + this.npcData.atlas, 0), this.npc.animations.add("stand", ["npc_0", "npc_1", "npc_2", "npc_3", "npc_4", "npc_5", "npc_6", "npc_7"], 10, !0, !1), this.npc.animations.play("stand"), this.npc.inputEnabled = !0, this.npc.anchor.setTo(.5, 1), this.npc.events.onInputDown.add(this.process.bind(this), this), n && (this.npc.scale.x = -1), this.add(this.npc), this.dialogue = this.game.prodigy.dialogue.create(), Util.isDefined(s) && Util.isDefined(s.quests) && this.setIndicator("quest"), this.game.prodigy.create.font(this, -200, 0 - this.npc.height - 20, this.npcData.name, {
		width: 400,
		align: "center",
		size: 16
	}), this.clickCallback = o, this.finishCallback = l, this.updateIndicator()
}, Prodigy.extends(Prodigy.Container.QuestNPC, Prodigy.Control.Element, {
	constructor: Prodigy.Container.QuestNPC,
	setIndicator: function (e) {
		Util.isDefined(this.indicator) || (this.indicator = this.game.prodigy.create.sprite(0, -(this.npc.height - 10), "icons", e), this.indicator.anchor.setTo(.5, 1), this.add(this.indicator), this.game.add.tween(this.indicator).to({
			y: this.indicator.y - 50
		}, 1e3, Phaser.Easing.Quadratic.InOut, !0, 0, Number.MAX_VALUE, !0)), this.indicator.frameName = e
	},
	updateIndicator: function () {
		if (Util.isDefined(this.indicator)) {
			if (!Util.isDefined(this.data.ID)) return this.indicator.frameName = "quest", void 0;
			var e = this.game.prodigy.player.quests,
				t = this.data.ID,
				i = e.getCurrentQuest(t),
				a = this.data.quests[i - 1],
				s = e.isQuestComplete(t, i, this.game.prodigy.player, a),
				r = e.isQuestStarted(t, i);
			this.indicator.frameName = s && i > 0 && r ? "quest-complete" : "quest"
		}
	},
	process: function () {
		if (Util.isDefined(this.clickCallback)) this.clickCallback();
		else if (Util.isDefined(this.data) && Util.isDefined(this.data.ID)) {
			this.currentSaveState = this.game.prodigy.player.saveEnabled, this.game.prodigy.player.saveEnabled = !1;
			var e = this.game.prodigy.player.quests;
			console.log(JSON.stringify(e));
			var t = !1,
				i = this.data.ID,
				a = e.getCurrentQuest(i);
			0 === a && (e.startQuestLine(i), a = e.getCurrentQuest(i));
			var s = this.data.quests[a - 1],
				r = e.isQuestComplete(i, a, this.game.prodigy.player, s),
				o = e.isQuestStarted(i, a);
			if (!Util.isDefined(s) && a > 0) {
				if (Util.isDefined(this.finishCallback)) return this.finishCallback(), void 0;
				t = !0
			} else r && o ? (this.dialogue.setText({
				element: this.processMap.bind(this, this.data, {
					complete: a
				})
			}), e.completeQuest(i, a, this.game.prodigy.player, s), this.queueText(s.complete), Util.isDefined(s.reward) && this.dialogue.setText({
				callback: this.game.prodigy.open.gotItem.bind(this.game.prodigy.open, s.reward, this.finishDialogue.bind(this, !0))
			}), this.dialogue.setText({
				callback: this.game.prodigy.effects.flashText.bind(this.game.prodigy.effects, "Quest Complete!")
			})) : o ? (this.queueText(s.during), t = !0) : (e.startQuest(i, a, this.data.quests[a - 1]), this.queueText(s.start), a = e.getCurrentQuest(i), s = this.data.quests[a - 1], this.queueText(s.during), t = !0);
			t && (s ? this.dialogue.setText({
				element: this.processMap.bind(this, this.data, null)
			}) : (s = {}, s.encounter = this.data.battle.encounter), this.dialogue.setText({
				callback: this.finishDialogue.bind(this)
			}), this.dialogue.setText({
				face: this.data.dialogue[1].face,
				text: this.data.dialogue[1].text,
				audio: this.data.dialogue[1].audio,
				yes: this.startBattle.bind(this, s, !0)
			})), this.dialogue.start("" + this.npcData.atlas)
		}
		Util.isDefined(this.data) && Util.isDefined(this.data.quests) && this.updateIndicator()
	},
	finishDialogue: function (e) {
		this.game.prodigy.player.saveEnabled = this.currentSaveState, e && this.process()
	},
	processMap: function (e, t, i) {
		var a = new Prodigy.Container.QuestMap(this.game, i, 0, 0);
		a.open(e, t)
	},
	queueText: function (e) {
		if (Util.isDefined(e))
			for (var t = 0; t < e.length; t++) {
				var i = this.data.dialogue[e[t]];
				this.dialogue.setText(i)
			}
	},
	startBattle: function (e, t) {
		if (t) {
			var i = function (e) {
					e.state.states[this.data.tag].fromQuest = !0, e.state.start(this.data.tag)
				},
				a = e.mods || {};
			a.screen = this.data.battle.screen, a.quest = e, a.encounter = e.encounter, a.zoneID = this.data.ID, a.quest = e, a.drops = Util.isDefined(e.drops) ? e.drops : this.data.battle.drops, a.difficulty = e.difficulty, Util.isDefined(a.difficulty) || (a.difficulty = Math.floor(this.game.prodigy.player.getLevel() / 15)), Util.isDefined(e.boss) && (a.boss = e.boss, a.boss.level = this.game.prodigy.player.getLevel(), a.boss.maxHP = 20 + Math.floor(a.boss.level / 100 * 40 * 4), a.difficulty = Math.floor(a.boss.level / 10)), a.opponent = e.opponent, Util.isDefined(e.pets) && (a.pets = e.pets), (a.boss || a.opponent || a.pets) && (a.catch = !1), this.game.prodigy.battle.start(a, i.bind(this, this.game, !1), i.bind(this, this.game, !0), null, this.data.tag)
		}
	}
}), Prodigy.Container.Timer = function (e, t, i, a, s) {
	if (Prodigy.Control.Element.call(this, e, t), this.x = i, this.y = a, !s) {
		var r = this.game.prodigy.create.panel(this, 0, 0, 6, 2, "white");
		r.alpha = .8
	}
	this.text = this.game.prodigy.create.font(this, 0, 10, "00:00", {
		width: 300,
		size: 40,
		align: "center"
	}), this.msg = this.game.prodigy.create.font(this, 0, 60, "", {
		width: 300,
		size: 16,
		align: "center"
	})
}, Prodigy.extends(Prodigy.Container.Timer, Prodigy.Control.Element, {
	constructor: Prodigy.Container.Timer,
	setTime: function (e) {
		this.target = e, this.text.setText(Prodigy.Container.Timer.processTime(e))
	},
	setMsg: function (e) {
		this.msg.setText(e)
	},
	start: function (e, t) {
		this.setTime(e), this.callback = t, this.targetTime = (new Date).getTime() + this.target, this.clear(), this.timer = setInterval(this.process.bind(this), 100)
	},
	pause: function () {
		this.paused = this.targetTime - (new Date).getTime()
	},
	resume: function () {
		this.targetTime = (new Date).getTime() + this.paused, this.paused = null
	},
	blink: function () {
		this.game.add.tween(this.text).to({
			y: 0
		}, 500, Phaser.Easing.Quadratic.Out).to({
			y: 10
		}, 500, Phaser.Easing.Quadratic.In).start()
	},
	add: function (e) {
		this.targetTime += e, this.process(), this.blink()
	},
	clear: function () {
		Util.isDefined(this.timer) && window.clearInterval(this.timer)
	},
	process: function () {
		if (!Util.isDefined(this.paused)) {
			var e = this.targetTime - (new Date).getTime();
			this.text.setText(Prodigy.Container.Timer.processTime(e)), 0 >= e && (this.clear(), Util.isDefined(this.callback) && this.callback())
		}
	},
	destroy: function () {
		this.clear(), Prodigy.Control.Element.prototype.destroy.call(this)
	}
}), Prodigy.Container.Timer.processTime = function (e) {
	if (0 >= e) return "00:00";
	var t = Math.floor(e / 36e5),
		i = Math.floor((e - 36e5 * t) / 6e4),
		a = Math.floor((e - 36e5 * t - 6e4 * i) / 1e3);
	return 0 === t ? t = "00" : 10 > t && (t = "0" + t), 0 === i ? i = "00" : 10 > i && (i = "0" + i), 0 === a ? a = "00" : 10 > a && (a = "0" + a), "00" === t ? i + ":" + a : 24 > t ? t + ":" + i + ":" + a : Math.floor(t / 24) + " days"
}, Prodigy.Container.CreatureData = function (e, t, i, a, s) {
	Prodigy.Control.Element.call(this, e, t, i, a), this.setup(s)
}, Prodigy.extends(Prodigy.Container.CreatureData, Prodigy.Control.Element, {
	constructor: Prodigy.Container.CreatureData,
	setup: function (e, t) {
		if (this.src = e, this.callback = t, this.removeAll(!0), Util.isDefined(e)) {
			this.content = this.game.prodigy.create.panel(this, 10, 22, 7, 2);
			var i = e instanceof Player ? "player" : "pets/" + e.getID();
			this.add(this.game.prodigy.create.sprite(0, 0, "icons", i)), this.game.prodigy.create.font(this, 90, 0, e.getName()), this.add(this.game.prodigy.create.sprite(310, 0, "icons", "star")), this.game.prodigy.create.font(this, 310, 12, e.getLevel() + "", {
				width: 50,
				align: "center"
			});
			var a = e.getCurrentHearts(),
				s = e.getMaxHearts();
			this.content.add(this.game.prodigy.create.sprite(95, 15, "core", "empty-bar"));
			var r = this.game.prodigy.create.sprite(95, 15, "core", "empty-bar");
			r.tint = 8921634, r.alpha = .6, r.width = Math.floor(a / s * 200), this.content.add(r), this.game.prodigy.create.font(this.content, 95, 17, a + " / " + s, {
				width: 200,
				align: "center"
			}), this.content.add(this.game.prodigy.create.sprite(80, 5, "core", "heart-4-4"));
			var o = e.getStars(),
				n = Creature.levelFromStars(o),
				l = Creature.starsToLevel(n),
				h = Creature.starsToLevel(n - 1);
			a = o - h, s = l - h, this.content.add(this.game.prodigy.create.sprite(95, 55, "core", "empty-bar")), r = this.game.prodigy.create.sprite(95, 55, "core", "empty-bar"), r.tint = 10064418, r.alpha = .6, r.width = Math.floor(a / s * 200), this.content.add(r), this.game.prodigy.create.font(this.content, 95, 57, a + " / " + s, {
				width: 200,
				align: "center"
			}), this.content.add(this.game.prodigy.create.sprite(81, 45, "icons", "star-small"));
			var d = this.game.prodigy.create.sprite(0, 0);
			d.width = 350, d.height = 100, d.inputEnabled = !0, d.events.onInputDown.add(this.itemClicked.bind(this)), this.content.add(d)
		}
	},
	itemClicked: function () {
		Util.isDefined(this.callback) && this.callback(this.src.data)
	}
}), Prodigy.Container.ItemContainer = function (e, t, i, a, s, r, o) {
	Prodigy.Control.Element.call(this, e, t, i, a), this.affix = "", this.level = "";
	var n = Math.floor(22 * Math.random());
	0 === n && (this.affix = "catch-bonus"), 1 === n && (this.affix = "damage-plus"), 2 === n && (this.affix = "earth-damage"), 3 === n && (this.affix = "earth-resist"), 4 === n && (this.affix = "earth-immune"), 5 === n && (this.affix = "fire-damage"), 6 === n && (this.affix = "fire-resist"), 7 === n && (this.affix = "fire-immune"), 8 === n && (this.affix = "ice-damage"), 9 === n && (this.affix = "ice-resist"), 10 === n && (this.affix = "ice-immune"), 11 === n && (this.affix = "storm-damage"), 12 === n && (this.affix = "storm-resist"), 13 === n && (this.affix = "storm-immune"), 14 === n && (this.affix = "water-damage"), 15 === n && (this.affix = "water-resist"), 16 === n && (this.affix = "water-immune"), 17 === n && (this.affix = "run"), 18 === n && (this.affix = "last-chance"), 19 === n && (this.affix = "thorns"), 20 === n && (this.affix = "hearts"), 21 === n && (this.affix = "gold-drop"), n = Math.floor(3 * Math.random()), 0 === n && (this.level = "low"), 1 === n && (this.level = "med"), 2 === n && (this.level = "high"), this.data = s, this.refresh(s.ID, s.type, r, o, s.N)
}, Prodigy.extends(Prodigy.Container.ItemContainer, Prodigy.Control.Element, {
	constructor: Prodigy.Container.ItemContainer,
	refresh: function (e, t, i, a, s) {
		this.ID = e || this.ID, this.type = t || this.type, this.N = s || this.N, this.mode = i || this.mode, this.onClick = a, this.owned = !1, this.price = 0;
		for (var r in this._damage) this._damage[r].destroy();
		for (var r in this._heart) this._heart[r].destroy();
		this._damage = [], this._heart = [], this.drawCard(this.mode)
	},
	drawCard: function (e) {
		var t;
		t = "gold" === this.type || "bounty" === this.type ? {
			type: this.type
		} : "spell" === this.type ? this.game.prodigy.attacks.getAttack(this.ID) : Items.getItemData(this.type, this.ID), "pet" === this.type && Util.isDefined(this.data.data) && Util.isDefined(this.data.data.nickname) && (t.nickname = this.data.data.nickname || t.name), "icon" === e ? this.createSmall(t) : "inv" === e ? this.createInventory(t) : "store" === e ? this.createStore(t) : "card" === e ? this.createCard(t) : "info" === e && this.createLarge(t)
	},
	createPanel: function (e, t, i, a, s) {
		Util.isDefined(this._panel) && this._panel.destroy(), this._panel = Util.isDefined(s) ? this.game.prodigy.create.panel(this, 0, 0, i, a, s) : "gold" === this.type || "bounty" === this.type ? this.game.prodigy.create.panel(this, 0, 0, i, a, "item-currency") : "pet" === this.type || "spell" === this.type || "dorm" === this.type ? this.game.prodigy.create.panel(this, 0, 0, i, a, "item-" + this.type) : "item" === this.type || "fossil" === this.type ? this.game.prodigy.create.panel(this, 0, 0, i, a, "item-common") : Util.isDefined(t) ? this.game.prodigy.create.panel(this, 0, 0, i, a, 0 === t ? "item-common" : 1 === t ? "item-uncommon" : 2 === t ? "item-rare" : 3 === t ? "item-epic" : "item-legend", "equipment" === e ? 1 : "inventory" === e ? 2 : 0) : this.game.prodigy.create.panel(this, 0, 0, i, a, "empty"), Util.isDefined(this.onClick) && this._panel.setClickable(this.clicked.bind(this))
	},
	createSmall: function (e) {
		this._panel = this.game.prodigy.create.element(this, 0, 0);
		var t = null;
		Util.isDefined(e) ? (t = this._panel.add(this.game.prodigy.create.sprite(0, 0, "core", "white-icon")), this._panel.add(this.game.prodigy.create.sprite(10, 10, "icons", Util.convertItemToIcon({
			type: this.type,
			ID: this.ID
		})))) : (t = this._panel.add(this.game.prodigy.create.sprite(0, 0, "core", "empty-icon")), this._panel.add(this.game.prodigy.create.sprite(10, 10, "icons", "empty-" + this.type)).alpha = .6), Util.isDefined(this.onClick) && (t.inputEnabled = !0, t.events.onInputDown.add(this.clicked.bind(this)))
	},
	createMedium: function (e) {
		if (Util.isDefined(e)) {
			this.createPanel(null, e.rarity, 4, 5);
			var t = this.game.prodigy.create.font(this, 10, 0, e.name, {
				width: 140,
				size: 16,
				align: "center",
				lineHeight: 18
			});
			t.y = t.lines > 1 ? 2 : 8, "gold" === this.type ? (this._panel.add(this.game.prodigy.create.sprite(50, 70, "icons", "gold")), t.setText("Gold Coins")) : "bounty" === this.type ? (this._panel.add(this.game.prodigy.create.sprite(40, 50, "icons", "bounty")), t.setText("Bounty Points")) : "spell" === this.type ? this._panel.add(this.game.prodigy.create.sprite(40, 70, "icons", Util.convertItemToIcon({
				type: this.type,
				ID: this.ID,
				element: e.element
			}))) : (this._panel.add(this.game.prodigy.create.sprite(40, 50, "icons", Util.convertItemToIcon({
				type: this.type,
				ID: this.ID
			}))), "pet" === this.type && Util.isDefined(e.nickname) && t.setText(e.nickname), console.log(e)), "gold" === this.type || "bounty" === this.type ? this.game.prodigy.create.font(this._panel, 0, 165, "" + this.N, {
				width: 160,
				align: "center"
			}) : this.N > 1 && (this._panel.add(this.game.prodigy.create.sprite(10, 150, "icons", "mail-empty")), this.game.prodigy.create.font(this._panel, 10, 155, "" + (this.N || 99), {
				width: 40,
				align: "center"
			}))
		}
	},
	createLarge: function (e) {
		if (Util.isDefined(e)) {
			this.createPanel(null, e.rarity, 17, 9);
			var t = new Phaser.TileSprite(this.game, 3, 40, 230, 280, "core", "overlay");
			t.alpha = .1, this._panel.add(t), this.game.prodigy.create.font(this, 0, 0, e.name, {
				font: "button",
				size: 36,
				width: 680,
				align: "center"
			}), this._panel.add(this.game.prodigy.create.sprite(80, 80, "icons", Util.convertItemToIcon({
				type: this.type,
				ID: this.ID
			}))), this.game.prodigy.create.font(this._panel, 260, 60, e.flavorText, {
				size: 20,
				font: "black",
				width: 400,
				lineHeight: 30
			}), "weapon" === this.type ? Util.isDefined(e.effects[0]) && this.game.prodigy.create.font(this, 260, 265, "Damage Bonus: " + this.game.prodigy.affixes.getAffixData(e.effects[0]).value / 4, {
				size: 36,
				width: 400,
				font: "button"
			}) : "outfit" === this.type || "boots" === this.type || "hat" === this.type ? Util.isDefined(e.effects[0]) && this.game.prodigy.create.font(this, 260, 265, "Heart Bonus: " + this.game.prodigy.affixes.getAffixData(e.effects[0]).value / 4, {
				size: 36,
				width: 400,
				font: "button"
			}) : "item" === this.type && Util.isDefined(e.effect) && Util.isDefined(e.effect.hp) && this.game.prodigy.create.font(this, 260, 265, "Heals " + e.effect.hp / 4 + (e.effect.hp / 4 > 1 ? " hearts" : " heart"), {
				size: 36,
				width: 400,
				font: "button"
			})
		}
	},
	createInventory: function (e) {
		Util.isDefined(e) && (this.createMedium(e), this.data.L && !this.game.prodigy.player.isMember && this._panel.add(this.game.prodigy.create.sprite(110, 150, "icons", "mail-member")), this.game.prodigy.player.equipment.getEquipment(this.type) === e.ID && this._panel.add(this.game.prodigy.create.sprite(4, 40, "core", "ribbon")))
	},
	createCard: function (e) {
		Util.isDefined(e) && (this.createMedium(e), e.member && !this.game.prodigy.player.isMember && this._panel.add(this.game.prodigy.create.sprite(110, 150, "icons", "mail-member")))
	},
	createStore: function (e) {
		if (Util.isDefined(e)) {
			this.createMedium(e);
			var t = this.owned = this.game.prodigy.player.backpack.hasItem(this.type, this.ID);
			"dorm" === this.type ? t = this.owned = this.game.prodigy.player.house.getOwned(this.ID) >= 9 : "pet" === this.type && (t = this.owned = this.game.prodigy.player.kennel.hasPet(this.ID));
			var i = this.price = Items.getItemPrice(this.type, this.ID);
			"item" === this.type && t >= 99 || "item" !== this.type && t ? this.game.prodigy.create.font(this._panel, 10, 166, "dorm" === this.type || t >= 99 ? "MAX" : "OWNED", {
				size: 20
			}) : 0 >= i ? this.game.prodigy.create.font(this._panel, 10, 166, "FREE", {
				size: 20
			}) : this.game.prodigy.create.font(this._panel, 6, 166, "[mail-gold] " + Util.numberToString(i), {
				size: 20
			}), e.member && !this.game.prodigy.player.isMember && this._panel.add(this.game.prodigy.create.sprite(110, 150, "icons", "mail-member"))
		}
	},
	clicked: function () {
		Util.isDefined(this.onClick) && this.onClick({
			type: this.type,
			ID: this.ID
		}, this.owned, this.price)
	}
}), Prodigy.Container.BountyContainer = function (e, t, i, a, s, r, o) {
	if (Prodigy.Control.Element.call(this, e, t, i, a), this.parent = t, this.id = r, this.game = e, !this.game.prodigy.player.backpack.hasItem("key", this.id + 5) && this.game.prodigy.player.state.get("world-bounties")[this.id] > 0) this.mode = Util.isDefined(o) ? "empty" : "preaccept";
	else if (this.game.prodigy.player.backpack.hasItem("key", this.id + 5))
		for (var n = this.game.prodigy.bounty.getBounties(), l = 0; l < n.length; l++) n[l].ID - 5 === this.id && (this.mode = Util.isDefined(n[l].complete) ? "preturnin" : "precomplete");
	else this.mode = "turnedin";
	this.setup(s)
}, Prodigy.extends(Prodigy.Container.BountyContainer, Prodigy.Control.Element, {
	constructor: Prodigy.Container.BountyContainer,
	setup: function (e) {
		if ("precomplete" === this.mode || "preturnin" === this.mode || "preaccept" === this.mode) {
			this.game.prodigy.create.panel(this, 0, 0, 7, 11, "paper");
			var t = this.game.prodigy.bounty.getMode(e),
				i = this.game.prodigy.bounty.getReward(e);
			if ("team" === t);
			else if ("pet" === t) {
				var a = "";
				"precomplete" === this.mode || "preaccept" === this.mode ? (a = this.getText(e), "preaccept" === this.mode && (i > 2 && !this.game.prodigy.player.isMember ? this.game.prodigy.create.advButton(this, 150, 310, {
					icon: "membership",
					top: "Member",
					bot: "Bounty"
				}, this.openMessage.bind(this)) : this.game.prodigy.create.advButton(this, 150, 310, {
					icon: "yes",
					top: "Accept",
					bot: "Bounty"
				}, this.accept.bind(this, this.id + 5, this.game.prodigy.player.state.get("world-bounties")[this.id], this.id)))) : a = "You have completed this bounty. Talk to Boardy to turn it in for a reward!";
				var s = this.game.prodigy.bounty.getMonster(e);
				this.add(this.game.prodigy.create.sprite("preaccept" === this.mode ? 30 : 90, 310, "core", "empty-icon")), this.add(this.game.prodigy.create.sprite("preaccept" === this.mode ? 40 : 100, 317, "icons", "pets/" + s))
			}
			this.add(this.game.prodigy.create.sprite(5, 5, "icons", "bounty")), this.game.prodigy.create.font(this, 22, 18, "" + i, {
				size: 40,
				width: 40,
				align: "center"
			}), this.game.prodigy.create.font(this, 20, 110, a, {
				size: 20,
				width: 245
			}), this.game.prodigy.create.font(this, 85, 26, "Bounty Note", {
				size: 20,
				width: 245
			})
		} else this.game.prodigy.create.panel(this, 0, 0, 7, 11, "empty"), "turnedin" === this.mode ? this.game.prodigy.create.font(this, 20, 120, "This bounty has been completed. Come back tomorrow for a new one!", {
			size: 20,
			width: 250
		}) : "empty" === this.mode && this.game.prodigy.create.font(this, 20, 120, "Head to the bounty board in Lamplight Town and accept a new bounty!", {
			size: 20,
			width: 250,
			align: "center"
		})
	},
	getText: function (e) {
		var t = this.game.prodigy.bounty.getMonster(e),
			i = this.game.prodigy.bounty.getZone(e),
			a = this.game.prodigy.bounty.getMap(e),
			s = this.game.prodigy.bounty.getName(e),
			r = "";
		return 0 === this.game.prodigy.bounty.getText(e) ? r = "Defeat " + s + ", " + this.getArticle(Monsters.data[t].name) + " " + Monsters.data[t].name + " at " + this.game.prodigy.world.zones[i].maps[a].getName() + " in the " + this.game.prodigy.world.zones[i].name + "." : 1 === this.game.prodigy.bounty.getText(e) ? r = s + " is causing trouble in the " + this.game.prodigy.world.zones[i].name + ". Stop him at " + this.game.prodigy.world.zones[i].maps[a].getName() + "." : 2 === this.game.prodigy.bounty.getText(e) ? r = s + " has finally come out of hiding. Find her at " + this.game.prodigy.world.zones[i].maps[a].getName() + " in the " + this.game.prodigy.world.zones[i].name + "." : 3 === this.game.prodigy.bounty.getText(e) ? r = s + " has appeared at " + this.game.prodigy.world.zones[i].maps[a].getName() + " in the " + this.game.prodigy.world.zones[i].name + "." : 4 === this.game.prodigy.bounty.getText(e) && (r = s + " has appeared at " + this.game.prodigy.world.zones[i].maps[a].getName() + " in the " + this.game.prodigy.world.zones[i].name + ". Get him before he vanishes!"), r
	},
	accept: function (e, t) {
		this.game.prodigy.player.backpack.hasItem("key", e) || this.game.prodigy.open.gotItem([{
			ID: e,
			type: "key",
			N: 1,
			lvl: this.game.prodigy.bounty.getReward({
				seed: t
			}),
			data: {
				seed: t
			}
		}])
	},
	getArticle: function (e) {
		return "A" === e[0] || "E" === e[0] || "I" === e[0] || "O" === e[0] || "U" === e[0] ? "an" : "a"
	},
	openMessage: function () {
		this.game.prodigy.open.membership()
	}
}), Prodigy.Container.LevelContainer = function (e, t, i, a, s, r, o) {
	Prodigy.Control.Element.call(this, e, t, i, a), this.player = this.game.prodigy.player, this.stars = 3 * o, this.refresh(s, r)
}, Prodigy.extends(Prodigy.Container.LevelContainer, Prodigy.Control.Element, {
	constructor: Prodigy.Container.LevelContainer,
	refresh: function (e, t) {
		this.mode = e, this.team = t, this.xpBar, this.level, this.drawCard(this.mode)
	},
	drawCard: function (e) {
		"player" === e ? this.createPlayer() : "monster" === e ? this.createMonster() : this.createEmpty(), this.stars > 0 && this.getStars()
	},
	createPlayer: function () {
		this.level = this.player.getLevel(), this.game.prodigy.create.panel(this, -2, 40, 12, 3, "item-common"), this.game.prodigy.create.panel(this, -20, 0, 3, 3, "shine"), this.p = this.game.prodigy.create.player(this, this.player, 2, 38, 170, !0), this.p.reload(), this.game.prodigy.create.font(this, 120, 50, this.player.appearance.getName()), this.createBar()
	},
	createMonster: function () {
		this.level = this.team.getLevel();
		var e = this.team.source.name;
		Util.isDefined(this.team.data.nickname) && (e = this.team.data.nickname), this.game.prodigy.create.panel(this, 0, 0, 12, 4, "item-common"), this.game.prodigy.create.panel(this, 20, 10, 2, 2, "shine"), this.game.prodigy.create.icon(this, 20, 10, "icons", "pets/" + this.team.data.ID), this.game.prodigy.create.font(this, 120, 10, e), this.createBar()
	},
	createEmpty: function () {
		this.game.prodigy.create.panel(this, 0, 0, 12, 4, "item-common")
	},
	createBar: function () {
		this.lvl = this.game.prodigy.create.font(this, 120, 85, "Lvl " + this.level);
		var e = Creature.getLevelPercent(this.team.getStars());
		this.xpBar = this.add(new Phaser.TileSprite(this.game, 7, 125, 465, 30, "core", "xp-bar")), this.xpBar.scale.x = 0 === e ? 0 : e, this.fraction = this.game.prodigy.create.font(this, 7, 125, " " + this.team.getStars() + "/" + this.team.getStarsToLevel(), {
			width: 465,
			align: "center"
		})
	},
	getStars: function () {
		this.star = this.game.prodigy.create.sprite(470, 105, "icons", "star"), this.add(this.star), this.star.scale = {
			x: 1.1,
			y: 1.1
		}, this.star.anchor.setTo(.5, .5), this.game.add.tween(this.star).to({
			angle: 270,
			x: 465,
			y: 108
		}, 1e3, Phaser.Easing.Quadratic.In).delay(100).start(), this.game.add.tween(this.star.scale).to({
			x: 1.2,
			y: 1.2
		}, 500, Phaser.Easing.Quadratic.In).to({
			x: 1,
			y: 1
		}, 500, Phaser.Easing.Quadratic.In).start(), this.n = this.game.prodigy.create.font(this, 442, 85, "" + this.stars, {
			font: "button",
			size: 36,
			width: 50,
			align: "center"
		}), this.game.add.tween(this.n).to({
			x: 438,
			y: 81
		}, 400, Phaser.Easing.Quadratic.Out).to({
			x: 442,
			y: 85
		}, 400).delay(1100).start(), this.game.add.tween(this.n.scale).to({
			x: 1.2,
			y: 1.2
		}, 400, Phaser.Easing.Quadratic.Out).to({
			x: 1,
			y: 1
		}, 400, Phaser.Easing.Quadratic.In).delay(1100).start();
		for (var e = 0; e < this.stars; e++) {
			var t = this.game.add.tween().to().delay(300 * e).start();
			t.onComplete.add(this.addStars, this)
		}
	},
	addStars: function () {
		if (this.team.addStars(1), this.stars--, Util.isDefined(this.n) && this.n.destroy(), Util.isDefined(this.fraction) && this.fraction.destroy(), this.fraction = this.game.prodigy.create.font(this, 7, 125, " " + this.team.getStars() + "/" + (this.team.getStars() + this.team.getStarsToLevel()), {
				width: 465,
				align: "center"
			}), this.stars > 0 && (this.n = this.game.prodigy.create.font(this, 442, 85, "" + this.stars, {
				font: "button",
				size: 36,
				width: 50,
				align: "center"
			}), this.game.add.tween(this.n).to({
				x: 438,
				y: 81
			}, 100, Phaser.Easing.Quadratic.Out).to({
				x: 442,
				y: 85
			}, 100).start(), this.game.add.tween(this.n.scale).to({
				x: 1.2,
				y: 1.2
			}, 100, Phaser.Easing.Quadratic.Out).to({
				x: 1,
				y: 1
			}, 100, Phaser.Easing.Quadratic.In).start()), this.stars >= 0) {
			var e = Creature.getLevelPercent(this.team.getStars());
			this.game.add.tween(this.xpBar.scale).to({
				x: e
			}, 100, Phaser.Easing.Quadratic.Out).start(), 0 === this.stars && (this.shootStars(0, 470, 105), this.star.destroy())
		}
		this.team.getLevel() !== this.level && (this.level = this.team.getLevel(), this.levelUp())
	},
	levelUp: function () {
		this.shootStars(0, 180, 110), Util.isDefined(this.lvl) && this.lvl.destroy(), this.lvl = this.game.prodigy.create.font(this, 120, 85, "Lvl " + this.level), this.game.add.tween(this.lvl).to({
			y: 80
		}, 400).to({
			y: 85
		}, 400).start(), this.game.add.tween(this.xpBar.scale).to({
			x: 0
		}, 300, Phaser.Easing.Quadratic.Out).start()
	},
	shootStars: function (e, t, i) {
		for (var a = 0; 5 > a; a++) {
			var s = t - 100 + 50 * a,
				r = i - 150;
			0 === a || 4 === a ? r += 120 : (1 === a || 3 === a) && (r += 50);
			var o = this.game.prodigy.create.sprite(t, i, "icons", "star");
			this.add(o), o.anchor.setTo(.5, .5), o.alpha = 0, this.game.add.tween(o).to({
				alpha: .5
			}, 1, Phaser.Easing.Linear.None).delay(e).to({
				x: s,
				alpha: 0
			}, 1e3, Phaser.Easing.Quadratic.Out).start(), this.game.add.tween(o).to({
				y: r
			}, 1e3, Phaser.Easing.Quadratic.Out).delay(e).start()
		}
	}
}), Prodigy.Container.RegisterPage = function (e, t, i) {
	Prodigy.Control.Element.call(this, e, t), this.data = i, this.visible = !1, this.backBtn = this.game.prodigy.create.textButton(this, 30, 150, {
		icon: "back",
		size: Prodigy.Control.TextButton.TALL
	}, this.back.bind(this)), this.nextBtn = this.game.prodigy.create.textButton(this, 1150, 150, {
		icon: "next",
		size: Prodigy.Control.TextButton.TALL
	}, this.next.bind(this)), this.counter = 11
}, Prodigy.extends(Prodigy.Container.RegisterPage, Prodigy.Control.Element, {
	constructor: Prodigy.Container.RegisterPage,
	init: function (e, t) {
		this.backCallback = e, this.nextCallback = t, this.backBtn.visible = Util.isDefined(e), this.nextBtn.visible = Util.isDefined(t)
	},
	open: function () {
		this.visible = !0
	},
	close: function () {
		this.visible = !1, Util.isDefined(this.dialogue) && this.dialogue.close()
	},
	back: function () {
		Util.isDefined(this.backCallback) && (this.backCallback(), this.close())
	},
	next: function () {
		this.validate() && (this.nextCallback(), this.close())
	},
	validate: function () {
		return !0
	}
}), Prodigy.Container.ClassCodePage = function (e, t, i) {
	Prodigy.Container.RegisterPage.call(this, e, t, i), this.game.prodigy.create.panel(this, 290, 100, 14, 6, "panel-light"), this.codeField = Prodigy.Control.InputField.createInputField(this.game, this, "classcodeg", "", 640 - Prodigy.Control.InputField.WIDTH_MEDIUM / 2, 180, Prodigy.Control.InputField.WIDTH_MEDIUM, Prodigy.Control.InputField.HEIGHT_MEDIUM, "text1g"), this.codeField.setLabel(this, "Class Code:"), this.codeField.hide(0), this.emailField = Prodigy.Control.InputField.createInputField(this.game, this, "emailg", "", 640 - Prodigy.Control.InputField.WIDTH_MEDIUM / 2, 180, Prodigy.Control.InputField.WIDTH_MEDIUM, Prodigy.Control.InputField.HEIGHT_MEDIUM, "text2g"), this.emailField.setLabel(this, "Parent Email:"), this.emailField.hide(0), this.btns = this.game.prodigy.create.element(this, 320, 270), this.spinner = this.add(this.game.prodigy.create.sprite(860, 200, "core", "loading")), this.spinner.anchor.setTo(.5, .5), this.game.add.tween(this.spinner).to({
		angle: 360
	}, 2e3, Phaser.Easing.Linear.None, !0, 0, Number.MAX_VALUE, !1), this.spinner.visible = !1, this.statusIcon = this.add(this.game.prodigy.create.sprite(860, 200, "icons", "close")), this.statusIcon.anchor.setTo(.5, .5), this.statusIcon.visible = !1, this.statusIcon.inputEnabled = !0, this.statusIcon.events.onInputDown.add(this.tryNext.bind(this)), this.dialogue = this.game.prodigy.dialogue.create()
}, Prodigy.extends(Prodigy.Container.ClassCodePage, Prodigy.Container.RegisterPage, {
	setClassCodeContent: function () {
		this.nextBtn.setInactive(), this.codeField.highlight(!1, 180, -35), this.nextBtn.highlight(!1), this.btns.removeAll(!0), this.mode = "cc", this.codeField.show(0), this.emailField.hide(0);
		var e = this.game.prodigy.create.panel(this.btns, 340, 0, 6, 2),
			t = e.add(this.game.prodigy.create.sprite(0, 0, "core", "overlay-light"));
		t.alpha = 0, t.width = 300, t.height = 150, t.inputEnabled = !0, t.events.onInputDown.add(this.getCode, this), this.game.prodigy.create.font(e, 20, 20, "Teachers: click here", {
			size: 20,
			align: "center",
			width: 260
		}), this.game.prodigy.create.font(e, 20, 55, "to get a class code!", {
			size: 20,
			align: "center",
			width: 260
		}), e = this.game.prodigy.create.panel(this.btns, 0, 0, 6, 2), t = e.add(this.game.prodigy.create.sprite(0, 0, "core", "overlay-light")), t.alpha = 0, t.width = 300, t.height = 150, t.inputEnabled = !0, t.events.onInputDown.add(this.setEmailContent, this), this.game.prodigy.create.font(e, 20, 20, "Playing at home?", {
			size: 20,
			align: "center",
			width: 260
		}), this.game.prodigy.create.font(e, 20, 55, "Click here!", {
			size: 20,
			align: "center",
			width: 260
		}), this.dialogue.setText(44), this.dialogue.start("noot", !0)
	},
	validateEmail: function (e) {
		var t = /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;
		return t.test(e) && e.lastIndexOf(".") > 0
	},
	setEmailContent: function () {
		this.nextBtn.setInactive(), this.emailField.highlight(!1, 180, -35), this.nextBtn.highlight(!1), this.btns.removeAll(!0), this.mode = "email", this.emailField.show(0), this.codeField.hide(0);
		var e = this.game.prodigy.create.panel(this.btns, 175, 0, 6, 2),
			t = e.add(this.game.prodigy.create.sprite(0, 0, "core", "overlay-light"));
		t.alpha = 0, t.width = 300, t.height = 150, t.inputEnabled = !0, t.events.onInputDown.add(this.setClassCodeContent, this), this.game.prodigy.create.font(e, 20, 20, "Playing at school?", {
			size: 20,
			align: "center",
			width: 260
		}), this.game.prodigy.create.font(e, 20, 55, "Click here!", {
			size: 20,
			align: "center",
			width: 260
		}), this.dialogue.setText(66), this.dialogue.start("noot", !0)
	},
	tryNext: function () {
		"yes" === this.statusIcon.frameName && this.next()
	},
	getCode: function () {
		this.codeField.clearEvents(!1), this.game.input.keyboard.clearCaptures(), prodigyWeb.getClassCode.open(this.setCode.bind(this))
	},
	setCode: function (e) {
		this.codeField.clearEvents(!0), this.game.input.keyboard.addKeyCapture([Phaser.Keyboard.BACKSPACE]), this.codeField.setValue(e)
	},
	open: function () {
		Prodigy.Container.RegisterPage.prototype.open.call(this), this.status = {}, Util.isDefined(this.data.email) ? this.setEmailContent() : (Util.isDefined(this.data.classCode) && this.setCode(this.data.classCode), this.setClassCodeContent()), this.nextBtn.setInactive()
	},
	close: function () {
		Prodigy.Container.RegisterPage.prototype.close.call(this), this.codeField.hide(0), this.emailField.hide(0)
	},
	update: function () {
		if (Prodigy.Container.RegisterPage.prototype.update.call(this), this.counter++, !(this.counter < 10))
			if (this.counter = 0, "cc" === this.mode) {
				var e = this.codeField.getValue();
				this.statusIcon.visible = Util.isDefined(e) && e.length >= 6, Util.isDefined(e) && 6 === e.length ? e !== this.status.code || !this.status.valid || this.nextBtn.arrow && this.nextBtn.isActive ? this.validating || e === this.status.code || (this.statusIcon.visible = !1, this.nextBtn.setInactive(), this.validateCode(e)) : (this.statusIcon.frameName = "yes", this.nextBtn.setActive(), this.nextBtn.highlight(!0), this.codeField.highlight(!1)) : this.codeField.arrow || (this.statusIcon.frameName = "close", this.nextBtn.setInactive(), this.codeField.highlight(!0, 180, -35), this.nextBtn.highlight(!1))
			} else if ("email" === this.mode) {
			this.statusIcon.visible = !1;
			var t = this.emailField.getValue();
			Util.isDefined(t) && this.validateEmail(t) ? (this.data.email = t, this.data.classCode = null, this.data.teacherID = null, this.nextBtn.arrow && this.nextBtn.isActive || (this.nextBtn.setActive(), this.nextBtn.highlight(!0), this.emailField.highlight(!1))) : this.emailField.arrow || (this.nextBtn.setInactive(), this.emailField.highlight(!0, 180, -35), this.nextBtn.highlight(!1))
		}
	},
	validationComplete: function (e, t, i) {
		this.statusIcon.visible = !0, this.spinner.visible = this.validating = !1, this.status.valid = e, e ? (this.data.email = null, this.data.classCode = t, this.data.teacherID = i.teacherID, this.statusIcon.frameName = "yes") : this.statusIcon.frameName = "close"
	},
	validateCode: function (e) {
		this.statusIcon.visible = !1, this.status = {
			code: e
		}, this.spinner.visible = this.validating = !0, this.game.prodigy.network.verifyClassCode(e, this.validationComplete.bind(this, !0, e), this.validationComplete.bind(this, !1, e))
	}
}), Prodigy.Container.GradePage = function (e, t, i) {
	Prodigy.Container.RegisterPage.call(this, e, t, i), this.panel = this.game.prodigy.create.panel(this, 415, 115, 9, 6, "panel-light"), this.gradeButtons = [];
	for (var a = 0; 8 > a; a++) {
		var s = this.game.prodigy.create.textButton(this, 415 + a % 4 * 105 + 25, 150 + 125 * Math.floor(a / 4), {
			text: a + 1,
			icon: "star",
			size: Prodigy.Control.TextButton.GRADE
		}, this.selectGrade.bind(this, a));
		s.text.x -= 25, s.text.y += 40, s.icon.x += 5, s.icon.y += 20, s.icon.alpha = .25, s.deselect(), this.gradeButtons.push(s)
	}
}, Prodigy.extends(Prodigy.Container.GradePage, Prodigy.Container.RegisterPage, {
	constructor: Prodigy.Container.GradePage,
	open: function () {
		Prodigy.Container.RegisterPage.prototype.open.call(this), Util.isDefined(this.selectedGradeButton) && this.selectedGradeButton.deselect(), this.selectGrade(this.data.grade - 1), this.dialogue = this.game.prodigy.dialogue.create(), this.dialogue.setText(48), this.dialogue.start("noot", !0)
	},
	selectGrade: function (e) {
		Util.isDefined(this.selectedGradeButton) && this.selectedGradeButton.deselect(), this.selectedGradeButton = this.gradeButtons[e], Util.isDefined(this.selectedGradeButton) && this.selectedGradeButton.visible ? (this.selectedGradeButton.select(), this.data.grade = e + 1, this.nextBtn.setActive(), this.nextBtn.highlight(!0), this.panel.highlight(!1)) : (this.selectedGradeButton = null, this.data.grade = null, this.nextBtn.setInactive(), this.nextBtn.highlight(!1), this.panel.highlight(!0, 0, -10))
	}
}), Prodigy.Container.LocationPage = function (e, t, i) {
	Prodigy.Container.RegisterPage.call(this, e, t, i), this.panelA = this.game.prodigy.create.panel(this, 320, 110, 6, 5, "panel-light"), this.game.prodigy.create.font(this.panelA, 0, -30, "[canada] Canada", {
		size: 36,
		font: "button",
		width: 300,
		align: "center",
		iconOffsetY: 7
	}), this.panelB = this.game.prodigy.create.panel(this, 660, 110, 6, 5, "panel-light"), this.game.prodigy.create.font(this.panelB, 0, -30, "[us] USA", {
		size: 36,
		font: "button",
		width: 300,
		align: "center",
		iconOffsetY: 7
	}), this.buttons = [], this.buttons.push(this.game.prodigy.create.textButton(this.panelA, 50, 30, {
		text: "ontario"
	}, this.selectLocation.bind(this, 0, 1, 0))), this.buttons.push(this.game.prodigy.create.textButton(this.panelA, 50, 100, {
		text: "other"
	}, this.selectLocation.bind(this, 1, 1, 0))), this.buttons.push(this.game.prodigy.create.textButton(this.panelB, 50, 30, {
		text: "florida"
	}, this.selectLocation.bind(this, 2, 2, 1))), this.buttons.push(this.game.prodigy.create.textButton(this.panelB, 50, 100, {
		text: "texas"
	}, this.selectLocation.bind(this, 3, 2, 2))), this.buttons.push(this.game.prodigy.create.textButton(this.panelB, 50, 170, {
		text: "other"
	}, this.selectLocation.bind(this, 4, 2, 0))), this.buttons.push(this.game.prodigy.create.textButton(this, 465, 380, {
		text: "other country",
		size: Prodigy.Control.TextButton.LG
	}, this.selectLocation.bind(this, 5, 1, 0)))
}, Prodigy.extends(Prodigy.Container.LocationPage, Prodigy.Container.RegisterPage, {
	constructor: Prodigy.Container.LocationPage,
	open: function () {
		Prodigy.Container.RegisterPage.prototype.open.call(this), Util.isDefined(this.selectedButton) && this.selectedButton.deselect(), this.selectLocation(this.data.locationIndex, this.data.country, this.data.sub), this.dialogue = this.game.prodigy.dialogue.create(), this.dialogue.setText(47), this.dialogue.start("noot", !0)
	},
	selectLocation: function (e, t, i) {
		Util.isDefined(this.selectedButton) && this.selectedButton.deselect(), this.selectedButton = this.buttons[e], Util.isDefined(this.selectedButton) ? (this.selectedButton.select(), this.data.country = t, this.data.sub = i, this.data.locationIndex = e, this.nextBtn.setActive(), this.nextBtn.highlight(!0)) : (this.selectedGradeButton = null, this.data.country = this.data.sub = null, this.nextBtn.setInactive(), this.nextBtn.highlight(!1))
	}
}), Prodigy.Container.NamePage = function (e, t, i) {
	Prodigy.Container.RegisterPage.call(this, e, t, i), this.game.prodigy.create.panel(this, 265, 150, 15, 4, "panel-light"), this.firstNameField = Prodigy.Control.InputField.createInputField(this.game, this, "firstName", "", 640 - Prodigy.Control.InputField.WIDTH_MEDIUM - 20, 220, Prodigy.Control.InputField.WIDTH_MEDIUM, Prodigy.Control.InputField.HEIGHT_MEDIUM, "text"), this.firstNameField.setLabel(this, "First Name:"), this.firstNameField.hide(0), this.lastNameField = Prodigy.Control.InputField.createInputField(this.game, this, "lastName", "", 660, 220, Prodigy.Control.InputField.WIDTH_MEDIUM, Prodigy.Control.InputField.HEIGHT_MEDIUM, "text"), this.lastNameField.setLabel(this, "Last Name:"), this.lastNameField.hide(0)
}, Prodigy.extends(Prodigy.Container.NamePage, Prodigy.Container.RegisterPage, {
	constructor: Prodigy.Container.NamePage,
	open: function () {
		Prodigy.Container.RegisterPage.prototype.open.call(this), this.firstNameField.show(0), this.lastNameField.show(0), Util.isDefined(this.data.firstName) && this.firstNameField.setValue(this.data.firstName), Util.isDefined(this.data.lastName) && this.lastNameField.setValue(this.data.lastName), this.dialogue = this.game.prodigy.dialogue.create(), this.dialogue.setText(45), this.dialogue.start("noot", !0)
	},
	close: function () {
		Prodigy.Container.RegisterPage.prototype.close.call(this), this.firstNameField.hide(0), this.lastNameField.hide(0)
	},
	update: function () {
		if (Prodigy.Container.RegisterPage.prototype.update.call(this), this.counter++, !(this.counter < 10)) {
			this.counter = 0;
			var e = this.firstNameField.getValue(),
				t = this.lastNameField.getValue();
			e = e.replace(" ", ""), t = t.replace(" ", ""), "" !== e && "" !== t ? (this.data.firstName = e, this.data.lastName = t, this.nextBtn.arrow && this.nextBtn.isActive || (this.nextBtn.setActive(), this.nextBtn.highlight(!0), this.firstNameField.highlight(!1), this.lastNameField.highlight(!1))) : this.lastNameField.arrow || (this.nextBtn.setInactive(), this.firstNameField.highlight(!0, 180, -35), this.lastNameField.highlight(!0, 180, -35), this.nextBtn.highlight(!1))
		}
	}
}), Prodigy.Container.PasswordPage = function (e, t, i) {
	Prodigy.Container.RegisterPage.call(this, e, t, i), this.game.prodigy.create.panel(this, 390, 80, 10, 7, "panel-light"), this.pw1 = Prodigy.Control.InputField.createInputField(this.game, this, "pw1", "", 640 - Prodigy.Control.InputField.WIDTH_MEDIUM / 2, 150, Prodigy.Control.InputField.WIDTH_MEDIUM, Prodigy.Control.InputField.HEIGHT_MEDIUM, "text"), this.pw1.setLabel(this, "Password:"), this.pw1.hide(0), this.pw2 = Prodigy.Control.InputField.createInputField(this.game, this, "pw2", "", 640 - Prodigy.Control.InputField.WIDTH_MEDIUM / 2, 250, Prodigy.Control.InputField.WIDTH_MEDIUM, Prodigy.Control.InputField.HEIGHT_MEDIUM, "text"), this.pw2.setLabel(this, "Re-enter password:"), this.pw2.hide(0), this.error = this.game.prodigy.create.font(this, 410, 340, "", {
		align: "center",
		width: 460
	})
}, Prodigy.extends(Prodigy.Container.PasswordPage, Prodigy.Container.RegisterPage, {
	constructor: Prodigy.Container.PasswordPage,
	open: function () {
		Prodigy.Container.RegisterPage.prototype.open.call(this), this.pw1.show(0), this.pw2.show(0), Util.isDefined(this.data.password) && (this.pw2.setValue(this.data.password), this.pw1.setValue(this.data.password)), this.dialogue = this.game.prodigy.dialogue.create(), this.dialogue.setText(46), this.dialogue.start("noot", !0)
	},
	close: function () {
		Prodigy.Container.RegisterPage.prototype.close.call(this), this.pw1.hide(0), this.pw2.hide(0)
	},
	update: function () {
		if (Prodigy.Container.RegisterPage.prototype.update.call(this), this.counter++, !(this.counter < 10)) {
			this.counter = 0;
			var e = this.pw1.getValue(),
				t = this.pw2.getValue(),
				i = "",
				a = !1;
			"" === e || "" === t || (e.length < 4 ? i = "Password is too short\n (4 to 10 letters)" : e.length > 10 ? i = "Password is too long\n (4 to 10 letters)" : e.indexOf(" ") >= 0 ? i = "Password cannot contain spaces" : e !== t ? i = "Passwords match: no" : (i = "Passwords match: yes", this.data.password = e, a = !0)), this.error.text !== i && this.error.setText(i), !a || this.nextBtn.arrow && this.nextBtn.isActive ? a || this.pw1.arrow || (this.nextBtn.setInactive(), this.pw1.highlight(!0, 280, -35), this.pw2.highlight(!0, 280, -35), this.nextBtn.highlight(!1)) : (this.nextBtn.setActive(), this.nextBtn.highlight(!0), this.pw1.highlight(!1), this.pw2.highlight(!1))
		}
	}
}), Prodigy.Container.WizardPage = function (e, t, i) {
	Prodigy.Container.RegisterPage.call(this, e, t, i), this.panel = this.game.prodigy.create.panel(this, 340, 100, 12, 6, "panel-light"), this.playerF = new Player, this.playerF.setDefault("female"), this.wizardF = this.game.prodigy.create.player(this, this.playerF, 2, 640, 360), this.playerM = new Player, this.playerM.setDefault("male"), this.wizardM = this.game.prodigy.create.player(this, this.playerM, 2, 640, 360), this.wizardM.flip(), this.wizardF.clickCallback = this.showChoices.bind(this, this.wizardF, this.wizardM), this.wizardM.clickCallback = this.showChoices.bind(this, this.wizardM, this.wizardF), this.content = this.game.prodigy.create.element(this)
}, Prodigy.Container.WizardPage.SKINS = [16774620, 16772292, 15060139, 12693147, 9140843], Prodigy.Container.WizardPage.HAIR = [16777166, 16768906, 14466221, 11901838, 7103584, 16754058], Prodigy.Container.WizardPage.EYES = [11303522, 7426628, 14844965, 14860069, 7660843, 1657838], Prodigy.Container.WizardPage.SKIN_COLORS = [1, 2, 3, 4, 5], Prodigy.Container.WizardPage.EYE_COLORS = [1, 2, 3, 4, 6, 8], Prodigy.Container.WizardPage.HAIR_COLORS = [1, 2, 3, 4, 5, 6], Prodigy.Container.WizardPage.BOY_HAIR_STYLES = [4, 5, 6, 7], Prodigy.Container.WizardPage.GIRL_HAIR_STYLES = [5, 7, 11, 13], Prodigy.extends(Prodigy.Container.WizardPage, Prodigy.Container.RegisterPage, {
	constructor: Prodigy.Container.WizardPage,
	showChoices: function (e, t) {
		if (this.genderMode) {
			this.panel.alpha = .6, this.nextBtn.setActive(), this.nextBtn.highlight(!0), this.chosenPlayer = e.source, e.highlight(!1), t.visible = !1, this.genderMode = !1, e.x = 640, e.isFacingLeft() && e.flip();
			var i = function (e, t, i, a) {
					t && e.source.appearance.setSkinColor(t), i && e.source.appearance.setEyeColor(i), a && e.source.appearance.setHairColor(a), e.reload(), e.chat(Util.randomArrayElement([10]), 150)
				},
				a = this.game.prodigy.create.element(this.content, 760, 280),
				s = this.game.prodigy.create.panel(a, 0, 0, 5, 3, "panel-light"),
				r = s.add(this.game.prodigy.create.sprite(1, 80, "core", "panel-pointer"));
			r.scale.x = r.scale.y = -1, this.game.prodigy.create.font(a, 0, -18, "Skin Color", {
				width: 250,
				align: "center"
			});
			for (var o = 0; o < Prodigy.Container.WizardPage.SKIN_COLORS.length; o++) {
				var n = Prodigy.Container.WizardPage.SKIN_COLORS[o],
					l = this.game.prodigy.create.button(a, 18 + 80 * (o % 3), 15 + 70 * Math.floor(o / 3), "icons", "empty", i.bind(this, e, n, null, null));
				l.sprite.tint = Prodigy.Container.WizardPage.SKINS[o]
			}
			a = this.game.prodigy.create.element(this.content, 760, 80), s = this.game.prodigy.create.panel(a, 0, 0, 5, 3, "panel-light");
			var r = s.add(this.game.prodigy.create.sprite(1, 100, "core", "panel-pointer"));
			r.scale.x = -1, this.game.prodigy.create.font(a, 0, -18, "Eye Color", {
				width: 250,
				align: "center"
			});
			for (var o = 0; o < Prodigy.Container.WizardPage.EYE_COLORS.length; o++) {
				var n = Prodigy.Container.WizardPage.EYE_COLORS[o],
					h = this.game.prodigy.create.button(a, 18 + 80 * (o % 3), 15 + 70 * Math.floor(o / 3), "icons", "empty", i.bind(this, e, null, n, null));
				h.sprite.tint = Prodigy.Container.WizardPage.EYES[o]
			}
			a = this.game.prodigy.create.element(this.content, 270, 280), s = this.game.prodigy.create.panel(a, 0, 0, 5, 3, "panel-light"), s.add(this.game.prodigy.create.sprite(249, 80, "core", "panel-pointer")).scale.y = -1, this.game.prodigy.create.font(a, 0, -18, "Hair Color", {
				width: 250,
				align: "center"
			});
			for (var o = 0; o < Prodigy.Container.WizardPage.HAIR_COLORS.length; o++) {
				var n = Prodigy.Container.WizardPage.HAIR_COLORS[o],
					d = this.game.prodigy.create.button(a, 18 + 80 * (o % 3), 15 + 70 * Math.floor(o / 3), "icons", "empty", i.bind(this, e, null, null, n));
				d.sprite.tint = Prodigy.Container.WizardPage.HAIR[o]
			}
			var p = function (e, t) {
				t.source.appearance.setHairStyle(e), t.reload(), t.chat(Util.randomArrayElement([10]), 150)
			};
			a = this.game.prodigy.create.element(this.content, 270, 80), s = this.game.prodigy.create.panel(a, 0, 0, 5, 3, "panel-light"), s.add(this.game.prodigy.create.sprite(249, 100, "core", "panel-pointer")), this.game.prodigy.create.font(a, 0, -18, "Hair Styles", {
				width: 250,
				align: "center"
			});
			for (var c = "male" === e.source.appearance.getGender() ? Prodigy.Container.WizardPage.BOY_HAIR_STYLES : Prodigy.Container.WizardPage.GIRL_HAIR_STYLES, o = 0; o < c.length; o++) {
				var d = this.game.prodigy.create.button(a, 18 + 80 * (o % 3), 15 + 70 * Math.floor(o / 3), "icons", "empty", p.bind(this, c[o], e));
				this.game.prodigy.create.font(d, 12, 4, "" + (o + 1), {
					size: 36,
					font: "button"
				}), d.sprite.tint = 8969872
			}
		}
	},
	open: function () {
		Prodigy.Container.RegisterPage.prototype.open.call(this), this.content.removeAll(!0), this.genderMode = !0, this.wizardF.visible = !0, this.wizardF.x = 490, this.wizardF.reload(), this.wizardF.highlight(!0, -50, -200), this.wizardM.visible = !0, this.wizardM.x = 790, this.wizardM.reload(), this.wizardM.highlight(!0, -50, -200), this.wizardM.isFacingLeft() || this.wizardM.flip(), this.panel.alpha = 1, this.nextBtn.setInactive(), this.nextBtn.highlight(!1), this.dialogue = this.game.prodigy.dialogue.create(), this.dialogue.setText(49), this.dialogue.start("noot", !0)
	},
	validate: function () {
		return this.data.player = this.chosenPlayer, !0
	}
}), Prodigy.Container.WizardNamePage = function (e, t, i) {
	Prodigy.Container.RegisterPage.call(this, e, t, i), this.data.player = new Player, this.data.player.setDefault("male"), this.content = this.game.prodigy.create.element(this), this.gender = null, this.oldName = null
}, Prodigy.extends(Prodigy.Container.WizardNamePage, Prodigy.Container.RegisterPage, {
	constructor: Prodigy.Container.WizardNamePage,
	findFirstName: function () {
		for (var e = this.data.firstName.toLowerCase(), t = this.data.player.appearance.getGender(), i = "male" === t ? Names.BOY_NAMES : Names.GIRL_NAMES, a = new RegExp(e.split("").join("\\w*").replace(/\W/, ""), "i"), s = i.filter(function (e) {
				return e.match(a) ? e : void 0
			}), r = 0; r < i.length && s.length > 0; r++)
			if (i[r] == s[0]) return r;
		return Math.floor(Math.random() * i.length)
	},
	showNames: function () {
		this.content.removeAll(!0), (this.gender !== this.data.player.appearance.getGender() || this.oldName !== this.data.firstName) && (this.gender = this.data.player.appearance.getGender(), this.oldName = this.data.firstName, this.fname = this.findFirstName(), this.mname = Math.floor(Math.random() * Names.MIDDLE_NAMES.length), this.lname = Math.floor(Math.random() * Names.LAST_NAMES.length));
		var e = this.game.prodigy.create.element(this.content, 270, 100);
		this.game.prodigy.create.panel(e, 0, 105, 14, 2);
		for (var t = ["male" === this.data.player.appearance.getGender() ? Names.BOY_NAMES : Names.GIRL_NAMES, Names.MIDDLE_NAMES, Names.LAST_NAMES], i = ["fname", "mname", "lname"], a = [], s = 0; 3 > s; s++) {
			a.push([]);
			for (var r = 0; 3 > r; r++) a[s].push(this.game.prodigy.create.font(e, 30 + 220 * s, 80 * r + 60, "name", {
				size: 30
			}));
			this.game.prodigy.create.button(e, 155 + 220 * s, 0, "icons", "back", this.setName.bind(this, a[s], t[s], i[s], -1)).angle = 90, this.game.prodigy.create.button(e, 155 + 220 * s, 270, "icons", "next", this.setName.bind(this, a[s], t[s], i[s], 1)).angle = 90, this.setName(a[s], t[s], i[s], 0)
		}
		var o = function (e, t, i, a) {
			e.mname = Math.floor(Math.random() * Names.MIDDLE_NAMES.length), e.lname = Math.floor(Math.random() * Names.LAST_NAMES.length), t(i[1], a[1], "mname", 1), t(i[2], a[2], "lname", 2)
		};
		this.game.prodigy.create.button(e, 650, 116, "icons", "dice", o.bind(this, this, this.setName.bind(this), a, t))
	},
	setName: function (e, t, i, a) {
		this[i] = this.game.prodigy.math.range(this[i] + a, 0, t.length - 1);
		for (var s = 0; 3 > s; s++) {
			var r = t[this[i] - 1 + s];
			e[s].setText(Util.isDefined(r) ? r : "")
		}
	},
	open: function () {
		Prodigy.Container.RegisterPage.prototype.open.call(this), this.showNames(), this.nextBtn.highlight(!0), this.dialogue = this.game.prodigy.dialogue.create(), this.dialogue.setText(50), this.dialogue.start("noot", !0)
	},
	validate: function () {
		return this.data.player.appearance.setName(Names.createNameFromIndex(this.data.player.appearance.getGender(), this.fname, this.mname, this.lname)), !0
	}
}), Prodigy.Container.Leaderboard = function (e, t, i, a, s) {
	Prodigy.Control.Element.call(this, e, t, i, a), this.player = this.game.prodigy.player, this.classIDs = this.game.prodigy.player.classIDs, this.leaders = s, this.page = 0, this.inClass = Util.isDefined(this.classIDs) && this.classIDs.length > 0, this.leader = this.game.prodigy.create.panel(this, 0, 0, 13, 8, "panel-base"), this.game.prodigy.create.font(this.leader, 0, 0, "Class Leader", {
		font: "button",
		size: 36,
		width: 520,
		align: "center"
	});
	var r = this.game.prodigy.create.sprite(0, 220, "core", "overlay-light");
	if (r.width = 520, r.height = 60, r.alpha = .25, this.leader.add(r), this.leader.top = this.game.prodigy.create.player(this.leader, this.game.prodigy.player, 2, 90, 270), this.leader.topName = this.game.prodigy.create.font(this.leader, 20, 250, "", {
			size: 20,
			align: "right",
			width: 480
		}), this.leader.topStat = this.game.prodigy.create.font(this.leader, 20, 220, "", {
			size: 20,
			align: "right",
			width: 480
		}), !this.game.prodigy.player.isMember) {
		var o = this.game.prodigy.create.panelButton(this, 0, 360, 13, 2, "member", this.game.prodigy.open.membership.bind(this.game.prodigy.open, Prodigy.Menu.MemberAd.MORE_EXP));
		this.game.prodigy.create.font(o.content, 20, 20, "Catch Up to Your Class!", {
			font: "button",
			size: 36,
			width: 480,
			align: "center"
		})
	}
	if (this.list = this.game.prodigy.create.panel(this, 560, 0, 14, 11, "panel-base"), this.game.prodigy.create.font(this.list, 0, 0, "Your Class Leaders", {
			font: "button",
			size: 36,
			width: 560,
			align: "center"
		}), this.list.error = this.game.prodigy.create.font(this.list, 20, 100, "You must be in a class to view the leaderboard", {
			size: 20,
			width: 520,
			align: "center"
		}), this.list.error.visible = !1, !Util.isDefined(this.classIDs) || this.classIDs.length <= 0);
	else {
		this.list.chars = this.game.prodigy.create.element(this.list), this.list.icons = [];
		for (var n = 0; 8 > n; n++) this.list.icons.push(this.createIcon(this.list.chars, 20, 60 + 45 * n));
		this.list.bar = this.game.prodigy.create.slider(this.list, 490, 60, 360, !0, !0)
	}
	Util.isDefined(this.leaders) ? this.loadWizardsComplete("data.level", !0, this.leaders) : this.inClass ? this.loadWizards("data.level") : this.loadWizardsComplete("data.level")
}, Prodigy.extends(Prodigy.Container.Leaderboard, Prodigy.Control.Element, {
	constructor: Prodigy.Container.Leaderboard,
	createIcon: function (e, t, i) {
		var a = this.game.prodigy.create.element(e, t, i),
			s = this.game.prodigy.create.panel(a, 0, 0, 12, 1, "lb");
		return s.setClickable(this.openCard.bind(this, a)), a.curr = this.game.prodigy.create.panel(a, 0, 0, 12, 1, "lb-green"), a.curr.setClickable(this.openCard.bind(this, a)), a.curr.visible = !1, a.place = this.game.prodigy.create.font(a, 10, 0, "", {
			width: 50,
			align: "center",
			size: 30
		}), a.name = this.game.prodigy.create.font(a, 70, 10, "[mail-star] Playername", {
			size: 16,
			width: 350,
			align: "left"
		}), a.type = this.game.prodigy.create.font(a, 100, 8, "win/loss - 0/0", {
			size: 20,
			width: 350,
			align: "right"
		}), this.setIconData(a, null), a
	},
	setIconData: function (e, t) {
		if (Util.isDefined(t)) {
			var i = t.place,
				a = 1 == t.isMember ? "@ " : "",
				s = new Player;
			s.init(t), e.place.setText(i + ""), e.type.setText("lvl " + s.getLevel());
			var r = s.getName();
			r.length > 18 && (r = r.substring(0, 18) + "..."), e.name.setText(a + r), e.curr.visible = t.userID == this.game.prodigy.player.userID, e.data = t
		} else Util.isDefined(e) && delete e.data;
		e.visible = Util.isDefined(t)
	},
	openCard: function (e) {
		var t = new Player;
		t.init(e.data), this.game.prodigy.open.card(t, !0)
	},
	loadWizards: function (e) {
		this.game.prodigy.network.getLeaderboard(e, this.classIDs, this.loadWizardsComplete.bind(this, e, !0), this.loadWizardsComplete.bind(this, e, !1))
	},
	loadWizardsComplete: function (e, t, i) {
		if (Util.isDefined(this.game)) {
			if (this.type = e, this.leaders = i || [], console.log(i), !t || !Util.isDefined(i) || i.length <= 0) return this.list.error.visible = !0, Util.isDefined(this.list.chars) && Util.isDefined(this.list.bar) && (this.list.chars.visible = this.list.bar.visible = !1), this.inClass ? this.list.error.setText("There was an error loading your class...try again later") : this.list.error.setText("You must be in a class to view the leaderboard"), void 0;
			this.list.error.visible = !1, this.list.chars.visible = this.list.bar.visible = !0;
			for (var a = 0; a < this.leaders.length; a++) {
				var s = this.leaders[a];
				s.place = a + 1, s.username = s.username || "???"
			}
			var r = new Player;
			r.init(this.leaders[0]), this.leader.top.destroy(), this.leader.top = this.game.prodigy.create.player(this.leader, r, 2, 90, 270), this.leader.top.reload();
			var o = r.getName();
			o.length > 25 && (o = o.substring(0, 25) + "...");
			var n = 1 == this.leaders[0].isMember ? "@ " : "";
			if (this.leader.topName.setText(n + o), this.leader.topStat.setText("Level " + r.getLevel()), this.inClass && this.leaders.length > 0) {
				var l = Prodigy.Container.Leaderboard.getPlayerPlace(this.leaders, this.game.prodigy.player);
				this.list.bar.reset(this.leaders.length, 8, l, this.setPage.bind(this))
			}
		}
	},
	setPage: function (e) {
		if (e = Math.round(e), Util.isDefined(this.leaders)) {
			this.page = e;
			for (var t = 0; 8 > t; t++) {
				var i = this.page + t;
				this.setIconData(this.list.icons[t], this.leaders[i], this.type)
			}
		}
	}
}), Prodigy.Container.Leaderboard.getPlayerPlace = function (e, t) {
	for (var i = 0; i < e.length; i++)
		if (e[i].userID == t.userID) return i + 1;
	return 31
}, Prodigy.Container.Leaderboard.getPlayerMessage = function (e, t) {
	try {
		var i = Prodigy.Container.Leaderboard.getPlayerPlace(e, t),
			a = t.getLevel(),
			s = e[Util.checkRange(i - 2, 0, e.length - 1)].data.level || 1;
		return 1 === i ? "You're at rank 1! Keep leveling to make sure your friends don't catch up!" : i > 30 ? "You're not on the leaderboard yet...get to level " + s + " or higher!" : s >= a ? "You're at rank " + i + "! Get to level " + (s + 1) + " to go up a rank!" : "Check out the leaderboard and see where your friends are!"
	} catch (r) {
		return "Check out the leaderboard and see where your friends are!"
	}
}, Prodigy.Container.Arena = function (e, t, i, a) {
	Prodigy.Control.Element.call(this, e, t, i, a);
	var s = e.prodigy.player.processDeserter(),
		r = ["Unranked", "Bronze", "Silver", "Gold", "Platinum", "Diamond"],
		o = ["", "{0 - {499", "{500 - {1499", "{1500 - {2499", "{2500 - {3499", "{3500+"],
		n = [[0, 499], [500, 1499], [1500, 2499], [2500, 3499], [3500, 1e5]],
		l = this.game.prodigy.player.getArenaRank(),
		h = this.game.prodigy.player.getArenaScore(),
		d = this.game.prodigy.player.isUnranked();
	this.createMemberBtn(this, 0, 320), this.createChallengeBtn(this, 280, 320);
	var p = this.game.prodigy.create.panel(this, 0, 0, 13, 7, "panel-base"),
		c = p.add(this.game.prodigy.create.sprite(10, 10, "icons", "emblem-rank" + (l + 1)));
	d && (c.tint = 5592405), this.game.prodigy.create.font(p, 20, 0, d ? r[0] : r[l + 1] + " Rank", {
		font: "button",
		size: 36,
		width: 480,
		align: "right"
	}), this.game.prodigy.create.font(p, 20, 48, d ? o[0] : o[l + 1], {
		font: "button",
		size: 36,
		width: 480,
		align: "right"
	}), this.game.prodigy.create.font(p, 20, 180, "[mail-star] Challenge other wizards around the world and earn rewards from the shop!", {
		font: "black",
		size: 20,
		width: 360,
		lineHeight: 30
	});
	var u = Arena.STORE;
	u.callback = this.game.prodigy.player.getArenaRank.bind(this.game.prodigy.player), this.game.prodigy.create.button(p, 400, 180, "icons", "catalogue", this.game.prodigy.open.rankStore.bind(this.game.prodigy.open, u)), d && this.game.prodigy.create.font(p, 140, 48, "Earn a score of [arena]100 or more to reach Bronze Rank!", {
		size: 20,
		width: 360,
		align: "right",
		lineHeight: 30
	});
	var g = this.game.prodigy.create.panel(this, 560, 0, 14, 11, "panel-base");
	this.game.prodigy.create.font(g, 20, -2, "My Score {" + h, {
		font: "button",
		size: 36,
		width: 520,
		align: "right"
	}), this.details = this.createDetails(h, l, d), this.details.visible = d, this.details.visible || (this.leaderboard = this.createLeaderboard(h, l), this.game.prodigy.network.getPVPLeaderboard({
		min: n[l][0],
		max: n[l][1]
	}, {
		stars: this.game.prodigy.player.getStars(),
		arenaScore: h
	}, 0, 30, this.loadWizardsComplete.bind(this, !0), this.loadWizardsComplete.bind(this, !1)), this.game.prodigy.create.button(this, 580, -5, "icons", "info", this.toggle.bind(this))), s && this.game.prodigy.open.message("Each time you close the browser or get disconnected from an arena battle, your score goes down by [arena]50! \n\nBe a good sport and finish your battles!", null, "info", "You Deserted...")
}, Prodigy.extends(Prodigy.Container.Arena, Prodigy.Control.Element, {
	constructor: Prodigy.Container.Arena,
	toggle: function () {
		this.leaderboard.visible = !this.leaderboard.visible, this.details.visible = !this.details.visible
	},
	createDetails: function (e, t, i) {
		for (var a = this.game.prodigy.create.element(this, 560, 0), s = ["Unranked", "Bronze", "Silver", "Gold", "Platinum", "Diamond"], r = ["", "", "[arena]500", "[arena]1500", "[arena]2500", "[arena]3500"], o = 1; 6 > o; o++) {
			var n = 80 + 71 * (5 - o);
			o > 1 && (n += 30);
			var l = 60 + 80 * (o - 1) + Math.floor(Math.pow(2.95, o - 1));
			a.add(new Phaser.TileSprite(this.game, l - 25, n + 20, 50, 400 - n + 20 - 1, "core", "emblem-bar"));
			var h = a.add(this.game.prodigy.create.sprite(l, n + 20, "icons", "emblem-rank" + o));
			h.anchor.setTo(.5, .5), h.scale.x = h.scale.y = .8, (o - 1 > t || i) && (h.tint = 7829367), o - 1 !== t || i || this.game.add.tween(h.scale).to({
				x: .9,
				y: .9
			}, 600, Phaser.Easing.Quadratic.InOut, !0, 0, Number.MAX_VALUE, !0), this.game.prodigy.create.font(a, l - 50, n - 50, s[o], {
				size: 16,
				width: 100,
				align: "center"
			}), this.game.prodigy.create.font(a, l - 50, 405, r[o], {
				size: 16,
				width: 100,
				align: "center"
			})
		}
		return a
	},
	createLeaderboard: function () {
		this.challenge = this.game.prodigy.create.element(this, 560, 0), this.challenge.chars = this.game.prodigy.create.element(this.challenge), this.challenge.icons = [];
		for (var e = 0; 8 > e; e++) this.challenge.icons.push(this.createIcon(this.challenge.chars, 20, 60 + 45 * e));
		return this.challenge.bar = this.game.prodigy.create.slider(this.challenge, 490, 60, 360, !0, !0), this.challenge.error = this.game.prodigy.create.font(this.challenge, 20, 100, "You must be in a class to view the leaderboard", {
			size: 20,
			width: 520,
			align: "center"
		}), this.challenge.error.visible = !1, this.challenge
	},
	createChallengeBtn: function (e, t, i) {
		var a = this.game.prodigy.create.panelButton(e, t, i, 6, 3, "button", this.openMessage.bind(this));
		return this.game.prodigy.create.font(a.content, 8, 20, "Find  Challenger", {
			font: "button",
			size: 36,
			width: 240,
			align: "center"
		}), a.content.add(this.game.prodigy.create.sprite(13, 13, "icons", "inspect")), a.content.add(this.game.prodigy.create.sprite(227, 13, "icons", "inspect")).scale.x = -1, a
	},
	createMemberBtn: function (e, t, i) {
		var a = null;
		if (!this.game.prodigy.player.isMember) {
			var a = this.game.prodigy.create.panelButton(e, t, i, 6, 3, "member", this.game.prodigy.open.membership.bind(this.game.prodigy.open, Prodigy.Menu.MemberAd.MORE_EXP));
			this.game.prodigy.create.font(a.content, 8, 20, "Rank Up  Faster!", {
				font: "button",
				size: 36,
				width: 240,
				align: "center"
			})
		}
		return a
	},
	openMessage: function () {
		Util.isDefined(this.game.prodigy.player.world) ? (this.game.prodigy.network.sendAnalytics("PVP", "try-match", "Events"), this.findChallenger(), this.message = this.game.prodigy.open.message("Searching for a good match based on your current arena ranking... please wait. \n\n(It could take up to a minute or more.) \n\nTime waiting: XTIMERX", this.closeMessage.bind(this, !0), null, "Finding Challenger")) : this.message = this.game.prodigy.open.message("Cannot take part in the arena in Offline Mode.")
	},
	findChallenger: function () {
		if (console.log("retry"), Util.isDefined(this.game)) {
			Util.isDefined(this.timer) && window.clearInterval(this.timer), this.timer = window.setInterval(this.findChallenger.bind(this), 6e4), this.game.prodigy.messageListener.addOnce("arena", this.messageRecieved.bind(this));
			var e = {
				userID: this.game.prodigy.player.userID,
				equipment: this.game.prodigy.player.equipment.data,
				appearance: this.game.prodigy.player.appearance.data,
				data: this.game.prodigy.player.data,
				isMember: this.game.prodigy.player.isMember
			};
			this.game.prodigy.network.startMatchmaking(this.game.prodigy.player.getLevel(), this.game.prodigy.player.getArenaScore(), e, this.success.bind(this, !0), this.success.bind(this, !1))
		}
	},
	success: function (e) {
		console.log(e)
	},
	messageRecieved: function (e) {
		console.log(e), Util.isDefined(this.timer) && window.clearInterval(this.timer), this.message.setText("Match found! Connecting now..."), this.game.prodigy.network.sendAnalytics("PVP", "found-match", "Events");
		var t = function (e) {
				e.state.start("Arena")
			},
			i = new Player;
		e.playerA.id != this.game.prodigy.player.userID ? i.init(e.playerA.data) : e.playerB.id != this.game.prodigy.player.userID && i.init(e.playerB.data), this.game.prodigy.pvp.start(e.playerA.id, this.game.prodigy.player, i, t.bind(this, this.game), !0, "Arena")
	},
	closeMessage: function (e) {
		this.game.prodigy.messageListener.clear("arena"), Util.isDefined(this.timer) && window.clearInterval(this.timer), e && this.game.prodigy.network.quitMatchmaking(this.success.bind(!0), this.success.bind(!1))
	},
	createIcon: function (e, t, i) {
		var a = this.game.prodigy.create.element(e, t, i),
			s = this.game.prodigy.create.panel(a, 0, 0, 12, 1, "lb");
		return s.setClickable(this.openCard.bind(this, a)), a.curr = this.game.prodigy.create.panel(a, 0, 0, 12, 1, "lb-green"), a.curr.setClickable(this.openCard.bind(this, a)), a.curr.visible = !1, a.place = this.game.prodigy.create.font(a, 10, 0, "", {
			width: 50,
			align: "center",
			size: 30
		}), a.name = this.game.prodigy.create.font(a, 70, 10, "[mail-star] Playername", {
			size: 16,
			width: 350,
			align: "left"
		}), a.type = this.game.prodigy.create.font(a, 100, 8, "win/loss - 0/0", {
			size: 20,
			width: 350,
			align: "right"
		}), this.setIconData(a, null), a
	},
	setIconData: function (e, t) {
		if (Util.isDefined(t)) {
			var i = t.place,
				a = 1 == t.isMember ? "@ " : "",
				s = new Player;
			s.init(t), e.place.setText(i + ""), e.type.setText("[arena]" + s.getArenaScore());
			var r = s.getName();
			r.length > 18 && (r = r.substring(0, 18) + "..."), e.name.setText(a + r), e.data = t, e.curr.visible = t.userID == this.game.prodigy.player.userID
		} else Util.isDefined(e) && delete e.data;
		e.visible = Util.isDefined(t)
	},
	openCard: function (e) {
		var t = new Player;
		t.init(e.data), this.game.prodigy.open.card(t, !0)
	},
	loadWizardsComplete: function (e, t) {
		if (console.log(t), Util.isDefined(this.game)) {
			if (!e || !Util.isDefined(t)) return this.challenge.error.visible = !0, Util.isDefined(this.challenge.chars) && Util.isDefined(this.challenge.bar) && (this.challenge.chars.visible = this.challenge.bar.visible = !1), this.challenge.error.setText("There was an error loading the leaderboard...try again later"), void 0;
			this.challenge.error.visible = !1, this.challenge.chars.visible = this.challenge.bar.visible = !0;
			var i = t.player_position;
			(i > 30 || 1 > i) && (i = 1);
			for (var a = t.player_list, s = 0; s < a.length; s++) {
				var r = a[s];
				r.place = s + 1, r.username = r.username || "???"
			}
			this.leaders = a, a.length > 0 && this.challenge.bar.reset(a.length, 8, i, this.setPage.bind(this))
		}
	},
	setPage: function (e) {
		if (e = Math.round(e), Util.isDefined(this.leaders)) {
			this.page = e;
			for (var t = 0; 8 > t; t++) {
				var i = this.page + t;
				this.setIconData(this.challenge.icons[t], this.leaders[i], this.type)
			}
		}
	}
}), Prodigy.Container.ArenaLeaderboard = function (e, t, i, a, s) {
	Prodigy.Control.Element.call(this, e, t, i, a), this.player = this.game.prodigy.player, this.leaders = s, this.page = 0, this.createMemberBtn(this, 0, 320), this.leader = this.game.prodigy.create.panel(this, 0, 0, 13, 7, "panel-base"), this.game.prodigy.create.font(this.leader, 0, 0, "Top Player in the World", {
		font: "button",
		size: 36,
		width: 520,
		align: "center"
	});
	var r = this.game.prodigy.create.sprite(0, 210, "core", "overlay-light");
	r.width = 520, r.height = 60, r.alpha = .25, this.leader.add(r), this.leader.top = this.game.prodigy.create.player(this.leader, this.game.prodigy.player, 2, 90, 270), this.leader.topName = this.game.prodigy.create.font(this.leader, 20, 240, "", {
		size: 20,
		align: "right",
		width: 480
	}), this.leader.topStat = this.game.prodigy.create.font(this.leader, 20, 210, "", {
		size: 20,
		align: "right",
		width: 480
	}), this.list = this.game.prodigy.create.panel(this, 560, 0, 14, 11, "panel-base"), this.game.prodigy.create.font(this.list, 0, 0, "Top Arena Players", {
		font: "button",
		size: 36,
		width: 560,
		align: "center"
	}), this.list.error = this.game.prodigy.create.font(this.list, 20, 100, "", {
		size: 20,
		width: 520,
		align: "center"
	}), this.list.error.visible = !1, this.list.chars = this.game.prodigy.create.element(this.list), this.list.icons = [];
	for (var o = 0; 8 > o; o++) this.list.icons.push(this.createIcon(this.list.chars, 20, 60 + 45 * o));
	this.list.bar = this.game.prodigy.create.slider(this.list, 490, 60, 360, !0, !0), this.game.prodigy.network.getPVPLeaderboard({
		min: 0,
		max: 1e5
	}, {
		stars: 99999,
		arenaScore: this.game.prodigy.player.getArenaScore()
	}, 0, 30, this.loadWizardsComplete.bind(this, !0), this.loadWizardsComplete.bind(this, !1))
}, Prodigy.extends(Prodigy.Container.ArenaLeaderboard, Prodigy.Control.Element, {
	constructor: Prodigy.Container.ArenaLeaderboard,
	createMemberBtn: function (e, t, i) {
		var a = null;
		if (!this.game.prodigy.player.isMember) {
			var a = this.game.prodigy.create.panelButton(e, t, i, 6, 3, "member", this.game.prodigy.open.membership.bind(this.game.prodigy.open, Prodigy.Menu.MemberAd.MORE_EXP));
			this.game.prodigy.create.font(a.content, 8, 20, "Rank Up  Faster!", {
				font: "button",
				size: 36,
				width: 240,
				align: "center"
			})
		}
		return a
	},
	createIcon: function (e, t, i) {
		var a = this.game.prodigy.create.element(e, t, i),
			s = this.game.prodigy.create.panel(a, 0, 0, 12, 1, "lb");
		return s.setClickable(this.openCard.bind(this, a)), a.curr = this.game.prodigy.create.panel(a, 0, 0, 12, 1, "lb-green"), a.curr.setClickable(this.openCard.bind(this, a)), a.curr.visible = !1, a.place = this.game.prodigy.create.font(a, 10, 0, "", {
			width: 50,
			align: "center",
			size: 30
		}), a.name = this.game.prodigy.create.font(a, 70, 10, "[mail-star] Playername", {
			size: 16,
			width: 350,
			align: "left"
		}), a.type = this.game.prodigy.create.font(a, 100, 8, "win/loss - 0/0", {
			size: 20,
			width: 350,
			align: "right"
		}), this.setIconData(a, null), a
	},
	openCard: function (e) {
		var t = new Player;
		t.init(e.data), this.game.prodigy.open.card(t, !0)
	},
	setIconData: function (e, t) {
		if (Util.isDefined(t)) {
			console.log(t);
			var i = t.place,
				a = 1 == t.isMember ? "@ " : "",
				s = new Player;
			s.init(t), e.place.setText(i + ""), e.type.setText("[arena]" + s.getArenaScore());
			var r = s.getName();
			r.length > 18 && (r = r.substring(0, 18) + "..."), e.name.setText(a + r), e.curr.visible = t.userID == this.game.prodigy.player.userID, e.data = t
		} else Util.isDefined(e) && delete e.data;
		e.visible = Util.isDefined(t)
	},
	loadWizardsComplete: function (e, t) {
		if (Util.isDefined(this.game)) {
			if (!e || !Util.isDefined(t)) return this.list.error.visible = !0, Util.isDefined(this.list.chars) && Util.isDefined(this.list.bar) && (this.list.chars.visible = this.list.bar.visible = !1), this.list.error.setText("There was an error loading the leaderboard...try again later"), void 0;
			this.list.error.visible = !1, this.list.chars.visible = this.list.bar.visible = !0;
			var i = (t.player_position, t.player_list);
			this.leaders = i;
			for (var a = 0; a < this.leaders.length; a++) {
				var s = this.leaders[a];
				s.place = a + 1, s.username = s.username || "???"
			}
			var r = new Player;
			r.init(this.leaders[0]), this.leader.top.destroy(), this.leader.top = this.game.prodigy.create.player(this.leader, r, 2, 90, 270), this.leader.top.reload();
			var o = 1 == this.leaders[0].isMember ? "@ " : "",
				n = r.getName();
			n.length > 25 && (n = n.substring(0, 25) + "..."), this.leader.topName.setText(o + n), this.leader.topStat.setText("[arena] " + r.getArenaScore()), this.leaders.length > 0 && this.list.bar.reset(this.leaders.length, 8, 0, this.setPage.bind(this))
		}
	},
	setPage: function (e) {
		if (e = Math.round(e), Util.isDefined(this.leaders)) {
			this.page = e;
			for (var t = 0; 8 > t; t++) {
				var i = this.page + t;
				this.setIconData(this.list.icons[t], this.leaders[i], this.type)
			}
		}
	}
}), Prodigy.Container.Bounties = function (e, t, i, a) {
	Prodigy.Control.Element.call(this, e, t, i, a), this.game.prodigy.create.panel(this, 0, 120, 5, 8, "white"), this.add(this.game.prodigy.create.sprite(-13, 0, "core", "emblem-bounty")), this.game.prodigy.create.font(this, 65, 100, e.prodigy.player.getBountyScore() + "", {
		size: 36,
		font: "button",
		width: 74,
		align: "center"
	}), this.game.prodigy.create.font(this, 10, 300, "Get bounties and defeat monsters to increase your rank!", {
		width: 180
	});
	for (var s = this.game.prodigy.player.state.get("world-bounties"), r = 0; 3 > r; r++) Util.isDefined(s[r]) && new Prodigy.Container.BountyContainer(this.game, this, 230 + 305 * r, 0, {
		seed: s[r]
	}, r, !0)
}, Prodigy.extends(Prodigy.Container.Bounties, Prodigy.Control.Element, {
	constructor: Prodigy.Container.Bounties
}), Prodigy.Browl = function (e, t, i, a, s) {
	Prodigy.MonsterContainerAdv.call(this, e, t, i, a, s)
}, Prodigy.extends(Prodigy.Browl, Prodigy.MonsterContainerAdv, {
	constructor: Prodigy.Browl,
	setup: function (e, t) {
		this.sprites.removeAll(!0);
		var i = -33,
			a = -100;
		this._body = this.game.prodigy.create.element(this.sprites), this._legL = this.game.prodigy.create.element(this._body, i + 36 + 5, a + 58 + 3), this._legL.add(this.game.prodigy.create.sprite(-5, -3, "tmp-13", "upperlimb")), this._legL2 = this.game.prodigy.create.element(this._legL, 0, 16), this._legL2.add(this.game.prodigy.create.sprite(-2, -2, "tmp-13", "lowerlimb")), this._footL = this.game.prodigy.create.element(this._legL2, -1, 13), this._footL.add(this.game.prodigy.create.sprite(-4, -3, "tmp-13", "foot")), this._legR = this.game.prodigy.create.element(this._body, i + 26 + 5, a + 59 + 3), this._legR.add(this.game.prodigy.create.sprite(-5, -3, "tmp-13", "upperlimb")), this._legR2 = this.game.prodigy.create.element(this._legR, 0, 16), this._legR2.add(this.game.prodigy.create.sprite(-2, -2, "tmp-13", "lowerlimb")), this._footR = this.game.prodigy.create.element(this._legR2, -1, 13), this._footR.add(this.game.prodigy.create.sprite(-4, -3, "tmp-13", "foot")), this._wingL = this._body.add(this.game.prodigy.create.sprite(i + 49, a + 36, "tmp-13", "wing")), this._wingL.anchor.setTo(24 / 28, 3 / 22), this._wingL.scale.x = -1, this._body.add(this.game.prodigy.create.sprite(i, a, "tmp-13", "head")), this._face = this._body.add(this.game.prodigy.create.sprite(i + 26, a + 25, "tmp-13", "eyes")), this._wingR = this._body.add(this.game.prodigy.create.sprite(i + 17, a + 44, "tmp-13", "wing")), this._wingR.anchor.setTo(24 / 28, 3 / 22), this.setDefaults(), Prodigy.MonsterContainerAdv.prototype.setup.call(this, e, t)
	},
	setDefaults: function () {
		this._wingR.angle = -25, this._wingL.angle = 25, this._body.y = 0, this._legL.angle = this._legL2.angle = this._footL.angle = 0, this._legR.angle = this._legR2.angle = this._footR.angle = 0
	},
	stand: function () {
		if (Util.isDefined(this.game) && this.tryAction(this.stand.bind(this)))
			if (this.removeTweens([this._body, this._footL, this._footR]), this.setDefaults(), Math.random() < .9) {
				this.flap(25, 70, 1e3, 1, null), this.game.add.tween(this._footL).to({
					angle: 35
				}, 1e3, Phaser.Easing.Quadratic.InOut).to({
					angle: 0
				}, 1e3, Phaser.Easing.Quadratic.InOut).start(), this.game.add.tween(this._footR).to({
					angle: 35
				}, 1e3, Phaser.Easing.Quadratic.InOut).to({
					angle: 0
				}, 1e3, Phaser.Easing.Quadratic.InOut).start();
				var e = this.game.add.tween(this._body).to({
					y: this._body.y - 8
				}, 1e3, Phaser.Easing.Quadratic.InOut).to({
					y: this._body.y
				}, 1e3, Phaser.Easing.Quadratic.InOut).start();
				e.onComplete.addOnce(this.stand.bind(this))
			} else this.flap(25, 80, 100, 2, this.stand.bind(this))
	},
	flap: function (e, t, i, a, s) {
		this.removeTweens([this._wingR, this._wingL]), this._wingR.angle = -e, this._wingL.angle = e, this.game.add.tween(this._wingR).to({
			angle: t
		}, i, Phaser.Easing.Quadratic.InOut, !0, 0, a, !0);
		var r = this.game.add.tween(this._wingL).to({
			angle: -t
		}, i, Phaser.Easing.Quadratic.InOut, !0, 0, a, !0);
		Util.isDefined(s) && r.onComplete.addOnce(s)
	},
	walk: function () {
		if (Util.isDefined(this.game) && this.tryAction(this.walk.bind(this))) {
			this.removeTweens([this._body, this._footL, this._footR, this._legL2, this._legR2]), this.setDefaults(), this.game.add.tween(this._footR).to({
				angle: 20
			}, 200, Phaser.Easing.Linear.None).to({}, 1400, Phaser.Easing.Linear.None).to({
				angle: 0
			}, 200, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(this._footL).to({
				angle: 20
			}, 200, Phaser.Easing.Linear.None).to({}, 1400, Phaser.Easing.Linear.None).to({
				angle: 0
			}, 200, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(this._legR2).to({
				angle: 40
			}, 500, Phaser.Easing.Linear.None).to({}, 900, Phaser.Easing.Linear.None).to({
				angle: 0
			}, 400, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(this._legL2).to({
				angle: 50
			}, 500, Phaser.Easing.Linear.None).to({}, 900, Phaser.Easing.Linear.None).to({
				angle: 0
			}, 400, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(this._wingR).to({
				angle: 50
			}, 500, Phaser.Easing.Quadratic.Out, !0);
			var e = this.game.add.tween(this._wingL).to({
				angle: -50
			}, 500, Phaser.Easing.Quadratic.Out, !0);
			e.onComplete.addOnce(this.flap.bind(this, 20, 100, 100, 11, null));
			var e = this.game.add.tween(this._body).to({
				y: this._body.y - 50
			}, 500, Phaser.Easing.Quadratic.Out).to({
				y: this._body.y
			}, 1300, Phaser.Easing.Quadratic.In).start();
			e.onComplete.addOnce(this.walk.bind(this))
		}
	},
	dance: function (e) {
		if (Util.isDefined(this.game) && this.tryAction(this.dance.bind(this))) {
			this.removeTweens([this._body, this._footL, this._footR, this._legL, this._legR, this._legL2, this._legR2]), this.setDefaults();
			for (var t = [[this._legL, this._legL2, this._footL], [this._legR, this._legR2, this._footR]], i = 0; i < t.length; i++) {
				var a = 0 === i && e || 1 === i && !e;
				this.game.add.tween(t[i][0]).to({
					angle: -40
				}, 500, Phaser.Easing.Quadratic.Out).to({
					angle: a ? -75 : 0
				}, a ? 200 : 400, Phaser.Easing.Quadratic.In).to({}, 300, Phaser.Easing.Linear.None).to({
					angle: 0
				}, a ? 300 : 100, Phaser.Easing.Linear.None).start(), this.game.add.tween(t[i][1]).to({
					angle: 80
				}, 500, Phaser.Easing.Quadratic.Out).to({
					angle: 0
				}, a ? 200 : 400, Phaser.Easing.Quadratic.In).to({}, 300, Phaser.Easing.Linear.None).to({
					angle: 0
				}, a ? 300 : 100, Phaser.Easing.Linear.None).start(), this.game.add.tween(t[i][2]).to({
					angle: -40
				}, 500, Phaser.Easing.Quadratic.Out).to({
					angle: 0
				}, a ? 200 : 400, Phaser.Easing.Quadratic.In).to({}, 300, Phaser.Easing.Linear.None).to({
					angle: 0
				}, a ? 300 : 100, Phaser.Easing.Linear.None).start()
			}
			this.game.add.tween(this._wingR).to({
				angle: 70
			}, 1e3, Phaser.Easing.Quadratic.InOut).to({
				angle: -25
			}, 300, Phaser.Easing.Quadratic.InOut).start(), this.game.add.tween(this._wingL).to({
				angle: -70
			}, 1e3, Phaser.Easing.Quadratic.InOut).to({
				angle: 25
			}, 300, Phaser.Easing.Quadratic.InOut).start();
			var s = this.game.add.tween(this._body).to({
				y: this._body.y + 8
			}, 500, Phaser.Easing.Quadratic.Out).to({
				y: this._body.y
			}, 400, Phaser.Easing.Quadratic.In).to({}, 400, Phaser.Easing.Quadratic.In).start();
			s.onComplete.addOnce(this.dance.bind(this, !e))
		}
	},
	attack: function () {},
	hurt: function () {}
});
var AreaEvent = function () {
		function e(t, i, a, s, r, o, n) {
			Prodigy.Control.Element.call(this, t, i, a.x, a.y), this.updateFrame = 0, this.data = a, this.user = s, this.path = r, this.callback = o, Util.isDefined(n) || (n = a.x < 50 ? a.y < 50 ? e.UP_LEFT : a.y > 670 ? e.DOWN_LEFT : e.LEFT : a.x > 1230 ? a.y < 50 ? e.UP_RIGHT : a.y > 670 ? e.DOWN_RIGHT : e.RIGHT : a.y < 50 ? e.UP : a.y > 670 ? e.DOWN : e.LEFT), this._sprite = this.add(this.game.prodigy.create.sprite(0, 0, "core", "area-pointer")), this._sprite.anchor.setTo(.5, 0), this._sprite.angle = n || 0, this._sprite.inputEnabled = !0, this._sprite.events.onInputDown.add(this.moveTo.bind(this, a.x, a.y));
			var l = n > e.UP && n < e.DOWN ? -30 : n > e.DOWN && 360 > n ? 30 : 0,
				h = n > e.LEFT || n < e.RIGHT ? 30 : n > e.RIGHT && n < e.LEFT ? -30 : 0;
			this._sprite.x = 0, this._sprite.y = 0, this.game.add.tween(this._sprite).to({
				x: this._sprite.x + l,
				y: this._sprite.y + h
			}, 750, Phaser.Easing.Quadratic.InOut, !0, 0, Number.MAX_VALUE, !0), this._overlay = this.game.add.graphics(0, 0);
			var d = 0,
				p = 0;
			a.r ? (l = this.x, h = this.y, d = p = a.r) : a.rect ? (l = this.x, h = this.y, d = a.w, p = a.h) : (l = this.x + (a.x < 100 ? -Math.floor(a.w / 2) : a.x > 1180 ? Math.floor(a.w / 2) : 0), h = this.y + (a.y < 100 ? -Math.floor(a.h / 2) : a.y > 620 ? Math.floor(a.h / 2) : 0), d = a.w * (a.x < 100 || a.x > 1180 ? 1 : .5), p = a.h * (a.y < 100 || a.y > 620 ? 1 : .5)), this._overlay.beginFill(16777215, .25), a.rect ? this._overlay.drawRect(l - d / 2, h - p / 2, d, p) : this._overlay.drawEllipse(l, h, d, p), this.visible = !1, this.count = 0
		}
		return e.prototype = Object.create(Prodigy.Control.Element.prototype), e.UP = 0, e.UP_RIGHT = 45, e.RIGHT = 90, e.DOWN_RIGHT = 135, e.DOWN = 180, e.DOWN_LEFT = 225, e.LEFT = 270, e.UP_LEFT = 315, e.prototype.moveTo = function (e, t) {
			console.log("moving"), console.log(e + " " + t), this.user.setValidPath(this.path, e, t)
		}, e.prototype.update = function () {
			if (Prodigy.Control.Element.prototype.update.call(this), !this.user.evtProc && !this.fired) {
				if (!(this.count <= 0)) return this.count--, void 0;
				this.count = 5, Util.isDefined(this.data.r) && this.game.prodigy.math.distance(this.user.x, this.user.y, this.x, this.y) <= this.data.r ? this.fired = !0 : !Util.isDefined(this.data.r) && Util.isDefined(this.data.w) && this.user.x >= this.x - Math.floor(this.data.w / 2) && this.user.x <= this.x + Math.floor(this.data.w / 2) && this.user.y >= this.y - Math.floor(this.data.h / 2) && this.user.y <= this.y + Math.floor(this.data.h / 2) && (this.fired = !0), this.fired && this.callback()
			}
		}, e.prototype.process = function (e, t) {
			this.visible = !1;
			var i = e.getQuestState();
			if (Util.isDefined(i) && e.isQuestStarted(i.ID)) {
				var a = e.getQuest(i.ID);
				if (Util.isDefined(a) && Util.isDefined(this.data.target)) {
					var s = a.area;
					!a.chain && e.isQuestComplete(i.ID) && Util.isDefined(e.questHub) && (s = [e.questHub]);
					var r = function (e, t, i, a) {
						if (!Util.isDefined(i)) return !1;
						if (Util.inArray(t, i)) return !1;
						if (Util.inArray(a, i)) return !0;
						var s = i.split("-"),
							o = e.getZone(s[0]);
						if (Util.isDefined(o)) {
							for (var n = o.getMap(s[1]), l = n.getAdjacentMaps(), h = 0; h < l.length; h++)
								if (r(e, t.concat([i]), l[h], a)) return !0;
							return !1
						}
					};
					r(this.game.prodigy.world, [e.ID + "-" + t.getTag()], this.data.target, s) && (this.visible = !0)
				}
			}
		}, e.prototype.getEllipse = function () {
			return this._overlay
		}, e
	}(),
	ChestEvent = function () {
		function e(e, t, i, a, s, r, o, n, l, h) {
			Prodigy.Control.Element.call(this, e, t, i, a), this.ID = o, this.callback = h, this.user = s, this.key = l, this.reward = n || [], this.type = "A";
			for (var d = 0; d < n.length; d++) {
				var p = Items.getItemData(n[d].type, n[d].ID);
				p && 1 == p.member && (this.type = "C"), "gold" === n[d].type && n[d].N >= 500 && (this.type = "C")
			}
			this.sprite = this.add(this.game.prodigy.create.sprite(0, 0, "tileset-core", "chest-" + this.type + "-1")), this.sprite.inputEnabled = !0, this.sprite.events.onInputDown.add(this.clicked.bind(this), this), this.sprite.x -= Math.floor(this.sprite.width / 2), this.sprite.y = -this.sprite.height, this.path = r
		}
		return e.prototype = Object.create(Prodigy.Control.Element.prototype), e.prototype.process = function (e) {
			this.zone = e, this.highlight(!1);
			var t = e.getState(this.ID);
			Util.isDefined(t) && 0 !== t && (this.sprite.inputEnabled = !1, this.sprite.frameName = "chest-" + this.type + "-2");
			var i = e.getQuestState();
			if (Util.isDefined(i) && Util.isDefined(i.req))
				for (var a = 0; a < this.reward.length; a++) {
					var s = this.reward[a];
					i.req.type === s.type && i.req.ID == s.ID && i.req.N > this.game.prodigy.player.backpack.hasItem(i.req.type, i.req.ID) && this.highlight(!0, -80, -90)
				}
		}, e.prototype.clicked = function () {
			{
				var e = function (e) {
					Util.isDefined(e) && this.user.setPath(e, this.collect.bind(this))
				};
				this.path.findPath(this.user.x, this.user.y, this.x - 20, this.y + 20, e.bind(this))
			}
		}, e.prototype.collect = function () {
			if (this.user.evtProc || !(this.game.prodigy.math.distance(this.user.x, this.user.y, this.x, this.y) > 50)) {
				if ("C" === this.type && !this.game.prodigy.player.isMember) return this.game.prodigy.open.membership(), void 0;
				if (Util.isDefined(this.key) && !this.game.prodigy.player.backpack.hasItem(this.key.type, this.key.ID)) return this.game.prodigy.open.message("This chest is locked!\n\nYou need a [" + Util.convertItemToIcon(this.key) + "] to open it!"), void 0;
				this.game.prodigy.player.saveEnabled = !1, this.game.input.mouse.enabled = this.game.input.touch.enabled = !1, this.sprite.inputEnabled = !1, this.user.evtProc = !0, this.game.prodigy.audio.playSFX("whoosh");
				var e = this.game.add.tween(this.sprite).to({
					x: "-5"
				}, 50, Phaser.Easing.Linear.None).to({
					x: "+10"
				}, 150, Phaser.Easing.Linear.None).to({
					x: "-10"
				}, 150, Phaser.Easing.Linear.None).to({
					x: "+5"
				}, 50, Phaser.Easing.Linear.None).to({
					y: "-50"
				}, 200, Phaser.Easing.Quadratic.Out).to({
					y: "+50"
				}, 200, Phaser.Easing.Quadratic.In).to({
					y: "-20"
				}, 100, Phaser.Easing.Quadratic.Out).to({
					y: "+20"
				}, 100, Phaser.Easing.Quadratic.In).start();
				e.onComplete.add(this.openChest, this)
			}
		}, e.prototype.openChest = function () {
			this.game.prodigy.audio.playSFX("dig"), this.game.prodigy.audio.playSFX("item"), this.sprite.frameName = "chest-" + this.type + "-2", this.game.input.mouse.enabled = this.game.input.touch.enabled = !0, this.game.prodigy.open.gotItem(this.reward, this.clearState.bind(this))
		}, e.prototype.clearState = function () {
			this.zone.setState(this.ID, 1), Util.isDefined(this.key) && this.game.prodigy.player.backpack.consume(this.key.type, this.key.ID, 1), this.user.evtProc = !1, this.game.prodigy.player.saveEnabled = !0, this.callback()
		}, e
	}(),
	BlockEvent = function () {
		function e(e, t, i, a, s, r) {
			Prodigy.Control.Element.call(this, e, t, i, a), this.sprite = this.add(this.game.prodigy.create.sprite(0, 0, r.atlas, r.tag)), this.sprite.anchor.setTo(r.x, r.y);
			for (var o = Math.floor(this.sprite.width / s.size), n = Math.floor((i - this.sprite.width * r.x) / s.size), l = Math.floor(this.sprite.height / s.size), h = Math.floor((a - this.sprite.height * r.y) / s.size), i = n; n + o > i; i++)
				for (var a = h; h + l > a; a++) s.area[a][i] = 0;
			this.path = s
		}
		return e.prototype = Object.create(Prodigy.Control.Element.prototype), e.prototype.process = function () {}, e
	}(),
	CollectEvent = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			Prodigy.Control.Element.call(this, e, t, i, a), this.user = s, this.path = r, this.ID = o, this.callback = l, this.data = n || {}, this.data.range = n.range || 30;
			var h = this.add(this.game.prodigy.create.sprite(0, 0, "icons", Util.convertItemToIcon(n)));
			h.inputEnabled = !0, h.events.onInputDown.add(this.clicked.bind(this), this), h.x -= Math.floor(h.width / 2), h.y = -h.height
		}
		return e.prototype = Object.create(Prodigy.Control.Element.prototype), e.prototype.process = function (e) {
			this.allowCollect = !1, this.visible = !1, this.highlight(!1);
			var t = e.getQuestState();
			Util.isDefined(t) && Util.isDefined(t.req) && (this.questState = t.state, 1 === t.state[this.ID] || "item" !== t.req.type && "key" !== t.req.type || t.req.ID != this.data.ID || (this.visible = !0, t.req.N > this.game.prodigy.player.backpack.hasItem(t.req.type, t.req.ID) && (this.allowCollect = !0, this.highlight(!0, -80, -90))))
		}, e.prototype.clicked = function () {
			{
				var e = function (e) {
					Util.isDefined(e) && this.user.setPath(e, this.collect.bind(this))
				};
				this.path.findPath(this.user.x, this.user.y, this.x, this.y, e.bind(this))
			}
		}, e.prototype.collect = function () {
			!this.allowCollect || this.game.prodigy.math.distance(this.user.x, this.user.y, this.x, this.y) > this.data.range || (this.questState[this.ID] = 1, this.game.prodigy.player.state.updated = !0, this.game.prodigy.audio.playSFX("dig"), this.game.prodigy.player.backpack.add(this.data.type, this.data.ID), this.callback())
		}, e
	}(),
	MonsterEvent = function () {
		function e(e, t, i, a, s, r, o, n, l, h, d) {
			this.monsterData = e.prodigy.battle.chooseRandomMonster(n.encounter), Prodigy.Container.MonsterContainer.call(this, e, t, new Monster({
				ID: this.monsterData.ID
			}), 1, i, a), this.unique = l || !1, this.onEnc = h, this.encountered = !1, this.ID = o, this.user = s, this.path = r, Util.isDefined(n.range) || (n.range = 200), n.unique = l, this.mods = n, n.randDir && Math.random() < .5 && this.flip(), this.mods.encounter = [this.monsterData], d && (this.alpha = .5, this.respawnTimer = (new Date).getTime() + 1e4), this.reload()
		}
		return e.prototype = Object.create(Prodigy.Container.MonsterContainer.prototype), e.prototype.process = function (e) {
			this.zone = e;
			var t = !1;
			this.highlight(!1);
			var i = e.getQuestState();
			if (Util.isDefined(i) && Util.isDefined(i.req)) {
				this.questState = i, this.visible = !0, this.unique && 1 === i.state[this.ID] && (this.visible = !1);
				var a = Util.isDefined(i.req.U) && i.req.U;
				if ("pet" === i.req.type && i.req.N > 0 && this.source.getID() === i.req.ID && this.unique === a) t = !0;
				else if ("item" === i.req.type && this.game.prodigy.player.backpack.hasItem("item", i.req.ID) < i.req.N) {
					if (Util.isDefined(this.mods.drops))
						for (var s = 0; s < this.mods.drops.length; s++) {
							var r = this.mods.drops[s];
							"item" === r.type && r.ID === i.req.ID && (t = !0)
						}
					if (Util.isDefined(this.monsterData.drops))
						for (var s = 0; s < this.monsterData.drops.length; s++) {
							var r = this.monsterData.drops[s];
							"item" === r.type && r.ID === i.req.ID && (t = !0)
						}
				}
				t && this.highlight(!0, -40, -90)
			}
		}, e.prototype.update = function () {
			Prodigy.Container.MonsterContainer.prototype.update.call(this), this.respawnTimer < (new Date).getTime() && (delete this.respawnTimer, this.alpha = 1), this.visible && !this.respawnTimer && !this.started && !this.user.evtProc && this.game.prodigy.math.distance(this.x, this.y, this.user.x, this.user.y) < this.mods.range && !this.path.isPathBlocked(this.x, this.y, this.user.x, this.user.y) && this.alert()
		}, e.prototype.alert = function () {
			this.started = !0, this.encountered = !0, this.highlight(!1), this.game.prodigy.audio.pauseBGM(), this.game.prodigy.audio.playSFX("monster"), this.user.evtProc = !0, this.chat(1, 80), this.user.setPath([]), this.user.x = Math.floor(this.user.x), this.user.y = Math.floor(this.user.y), this.game.input.mouse.enabled = this.game.input.touch.enabled = !1, this.game.prodigy.network.emitMessage({
				action: "move",
				data: {
					userID: this.game.prodigy.player.userID,
					path: [{
						x: this.user.x,
						y: this.user.y
					}]
				}
			}), this.hop(300, this.engage.bind(this))
		}, e.prototype.engage = function () {
			this.setPath([{
				x: this.user.x,
				y: this.user.y
			}], this.startBattle.bind(this))
		}, e.prototype.startBattle = function () {
			var e = function (e, t, i, a, s, r, o, n) {
				r && (t.defeatMonster(a, s, o), Util.isDefined(n) && n()), r ? e.prodigy.world.teleport(i, this.x, this.y) : e.prodigy.world.teleport(i)
			};
			this.game.input.mouse.enabled = this.game.input.touch.enabled = !0, this.game.prodigy.battle.start(this.mods, e.bind(this, this.game, this.zone, this.mods.onEnd, this.source.getID(), this.ID, !1, this.unique, this.onEnc), e.bind(this, this.game, this.zone, this.mods.onEnd, this.source.getID(), this.ID, !0, this.unique, this.onEnc), null, this.mods.onFaint)
		}, e.prototype.setVisible = function (e) {
			this.visible = e
		}, e.prototype.getVisible = function () {
			return this.visible
		}, e.prototype.patrol = function (e) {
			this.encountered === !1 && this.setPath(e, this.patrol.bind(this, e))
		}, e
	}(),
	WizardEvent = function () {
		function e(e, t, i, a, s, r, o, n) {
			Prodigy.Container.CreatureContainer.call(this, e, t, {}, null, i, a), this.ID = o, this.user = s, this.path = r, Util.isDefined(n.range) || (n.range = 200), this.mods = n;
			var l = new Player,
				h = this.game.prodigy.player.getLevel();
			this.mods.opponent = this.mods.opponent || [{
				data: {
					level: this.game.prodigy.math.randInRange(Math.max(1, h - 2), Math.min(h + 2, 100))
				},
				appearance: l.appearance.data,
				equipment: l.equipment.data
			}];
			for (var d = [], p = Math.min(4, this.game.prodigy.player.kennel.getTeam().length - 2 + 3 * Math.random()), c = 0; p > c; c++) {
				var u = {
					level: this.game.prodigy.math.randInRange(Math.max(1, h - 2), Math.min(h + 2, 100))
				};
				u.ID = Monsters.getRandomItem(), d.push(u)
			}
			this.mods.pets = this.mods.pets || d, this.mods.catch = !1, this.mods.run = !1, this.sprite = this.sprites.add(this.game.prodigy.create.sprite(0, 0, "npc-sprite-wizard")), this.sprite.animations.add("walk", ["npc_0", "npc_1", "npc_2", "npc_3", "npc_4", "npc_5", "npc_6", "npc_7"], 10, !0, !1), this.sprite.animations.add("stand", ["npc_8", "npc_9", "npc_10", "npc_11", "npc_12", "npc_13", "npc_14", "npc_15"], 10, !0, !1), this.sprite.animations.play("stand"), this.sprite.anchor.setTo(.5, 1)
		}
		return e.prototype = Object.create(Prodigy.Container.CreatureContainer.prototype), e.prototype.process = function (e) {
			this.zone = e;
			var t = e.getState(this.ID);
			Util.isDefined(t) && 0 !== t && (this.visible = !1)
		}, e.prototype.update = function () {
			Prodigy.Container.CreatureContainer.prototype.update.call(this), this.visible && !this.started && !this.user.evtProc && this.game.prodigy.math.distance(this.x, this.y, this.user.x, this.user.y) < this.mods.range && !this.path.isPathBlocked(this.x, this.y, this.user.x, this.user.y) && this.alert()
		}, e.prototype.alert = function () {
			this.started = !0, this.highlight(!1), this.game.prodigy.audio.pauseBGM(), this.game.prodigy.audio.playSFX("monster"), this.user.evtProc = !0, this.chat(1, 80), this.user.setPath([]), this.user.x = Math.floor(this.user.x), this.user.y = Math.floor(this.user.y), this.game.input.mouse.enabled = this.game.input.touch.enabled = !1, this.hop(300, this.engage.bind(this))
		}, e.prototype.engage = function () {
			this.setPath([{
				x: this.user.x,
				y: this.user.y
			}], this.startBattle.bind(this))
		}, e.prototype.startBattle = function () {
			var e = function (e, t, i, a) {
				e.prodigy.world.teleport(i, this.x, this.y), t && a.setState(this.ID, 1)
			};
			this.game.input.mouse.enabled = this.game.input.touch.enabled = !0, this.game.prodigy.battle.start(this.mods, e.bind(this, this.game, !1, this.mods.onEnd, this.zone), e.bind(this, this.game, !0, this.mods.onEnd, this.zone), null, this.mods.onFaint)
		}, e
	}(),
	GnomeEvent = function () {
		function e(e, t, i, a, s, r, o, n, l, h) {
			Prodigy.Container.CreatureContainer.call(this, e, t, {
				name: o,
				npc: !0
			}, null, s, r), this.sprite = this.sprites.add(this.game.prodigy.create.sprite(0, 0, "npc-sprite-gnome", "npc_0")), this.sprite.x -= Math.floor(this.sprite.width / 2), this.sprite.y = -this.sprite.height, this.animWalk = this.sprite.animations.add("walk", ["npc_0", "npc_1", "npc_2", "npc_3", "npc_4", "npc_5", "npc_6", "npc_7"], 10, !0, !1), this.animStand = this.sprite.animations.add("stand", ["npc_8", "npc_9", "npc_10", "npc_11", "npc_12", "npc_13", "npc_14", "npc_15"], 10, !0, !1), this.head = this.game.prodigy.create.element(this.sprites, this.sprite.x, 0);
			var d = 13 - (2 === l || 3 === l || 4 === l ? 5 : 5 === l ? 20 : 6 === l ? 22 : 0),
				l = this.head.add(this.game.prodigy.create.sprite(d, 0, "npc-sprite-gnome", "hat_" + (l || 1)));
			l.y = -l.height + 10;
			var n = this.head.add(this.game.prodigy.create.sprite(0, 0, "npc-sprite-gnome", "head_" + (n || 1)));
			this.offs = {
				npc_0: 0,
				npc_1: 0,
				npc_2: 2,
				npc_3: 1,
				npc_4: 0,
				npc_5: 0,
				npc_6: 2,
				npc_7: 1,
				npc_8: 0,
				npc_9: 0,
				npc_10: 1,
				npc_11: 2,
				npc_12: 4,
				npc_13: 5,
				npc_14: 4,
				npc_15: 3
			}, Util.isDefined(h) && (n.inputEnabled = !0, n.events.onInputDown.add(this.clicked.bind(this, i, a, h)), l.inputEnabled = !0, l.events.onInputDown.add(this.clicked.bind(this, i, a, h)), this.sprite.inputEnabled = !0, this.sprite.events.onInputDown.add(this.clicked.bind(this, i, a, h))), this.stand(), this.showName(!0)
		}
		return e.prototype = Object.create(Prodigy.Container.CreatureContainer.prototype), e.prototype.clicked = function (e, t, i) {
			var a = function (e, t) {
				Util.isDefined(t) && e.setPath(t, this.encounter.bind(this, i))
			};
			t.findPath(e.x, e.y, this.x - 20, this.y + 20, a.bind(this, e))
		}, e.prototype.setIndicator = function (e) {
			Util.isDefined(this.indicator) || (this.indicator = this.game.prodigy.create.sprite(0, -70, "icons", e), this.indicator.anchor.setTo(.5, 1), this.indicatorE.add(this.indicator), this.game.add.tween(this.indicator).to({
				y: this.indicator.y - 50
			}, 1e3, Phaser.Easing.Quadratic.InOut, !0, 0, Number.MAX_VALUE, !0)), this.indicator.frameName = e
		}, e.prototype.encounter = function (e) {
			Util.isDefined(e) && e()
		}, e.prototype.update = function () {
			if (Prodigy.Container.CreatureContainer.prototype.update.call(this), Util.isDefined(this.animWalk) && Util.isDefined(this.animStand)) {
				var e = "npc_0";
				1 === this.mode ? e = this.animStand.currentFrame.name : 0 === this.mode && (e = this.animWalk.currentFrame.name), Util.isDefined(this.head) && (this.head.y = this.sprite.y - 15 + this.offs[e])
			}
		}, e
	}(),
	NPCEvent = function () {
		function e(e, t, i, a, s, r, o) {
			Prodigy.Container.CreatureContainer.call(this, e, t, {
				name: o,
				npc: !0
			}, null, i, a), this.sprite = this.sprites.add(this.game.prodigy.create.sprite(0, 0, s, 0)), this.sprite.x -= Math.floor(this.sprite.width / 2), this.sprite.y = -this.sprite.height, this.sprite.animations.add("stand", ["npc_0", "npc_1", "npc_2", "npc_3", "npc_4", "npc_5", "npc_6", "npc_7"], 10, !0, !1), Util.isDefined(r) && (this.sprite.inputEnabled = !0, this.sprite.events.onInputDown.add(r)), Util.isDefined(o) && this.showName(!0)
		}
		return e.prototype = Object.create(Prodigy.Container.CreatureContainer.prototype), e.prototype.animate = function () {
			this.sprite.animations.play("stand")
		}, e
	}(),
	HealEvent = function () {
		function e(e, t, i, a, s, r) {
			Prodigy.Control.Element.call(this, e, t, s, r), this.user = i, this.path = a, this.sprite = this.add(this.game.prodigy.create.sprite(0, 0, "tileset-core")), this.sprite.animations.add("stand", ["heal_0", "heal_1", "heal_2", "heal_3", "heal_4", "heal_5", "heal_6", "heal_7"], 10, !0, !1);
			var o = this.sprite.animations.add("heal", ["heal_8", "heal_9", "heal_10", "heal_11", "heal_12", "heal_13", "heal_14", "heal_15"], 10);
			this.sprite.animations.play("stand"), this.sprite.inputEnabled = !0, this.sprite.events.onInputDown.add(this.interact.bind(this)), this.sprite.anchor.setTo(.5, 1), o.onComplete.add(this.sprite.animations.play.bind(this.sprite.animations, "stand"))
		}
		return e.prototype = Object.create(Prodigy.Control.Element.prototype), e.prototype.interact = function () {
			var e = this.game.prodigy.event.create();
			e.validPath(this.user, this.path, this.x, this.y), e.yesNoText(38, "noot"), e.function(this.startHeal.bind(this)), e.start()
		}, e.prototype.startHeal = function () {
			this.game.prodigy.external.question(this.heal.bind(this), this.game.prodigy.education.isNew)
		}, e.prototype.heal = function (e) {
			if (e) {
				var t = this.game.prodigy.event.create();
				t.text(40, "noot"), t.function(this.sprite.animations.play.bind(this.sprite.animations, "heal")), t.function(this.game.prodigy.player.heal.bind(this.game.prodigy.player)), t.sound("heart"), t.delay(200), t.sound("heart"), t.delay(200), t.sound("heart"), t.start()
			} else {
				var t = this.game.prodigy.event.create();
				t.text(39, "noot"), t.start()
			}
			var i = this.game.prodigy.education.getUpdatedData();
			this.game.prodigy.network.updateUserAbility(i)
		}, e
	}(),
	QuestEvent = function () {
		function e(e, t, i, a, s, r, o, n, l, h) {
			Prodigy.Control.Element.call(this, e, t, s, r), this.npcTag = o, this.screen = i, this.onComplete = h, this.npc = this.add(this.game.prodigy.create.sprite(0, 0, "npc-sprite-" + o, 0)), this.npc.animations.add("stand", ["npc_0", "npc_1", "npc_2", "npc_3", "npc_4", "npc_5", "npc_6", "npc_7"], 10, !0, !1), this.npc.animations.play("stand"), this.npc.inputEnabled = !0, this.npc.anchor.setTo(.5, 1), this.npc.events.onInputDown.add(this.process.bind(this, a, null, !0), this), n && (this.npc.scale.x = -1), this.game.prodigy.create.font(this, -200, 0 - this.npc.height - 20, o.charAt(0).toUpperCase() + o.slice(1), {
				width: 400,
				align: "center",
				size: 16
			}), this.updateCallback = l
		}
		return e.prototype = Object.create(Prodigy.Control.Element.prototype), e.prototype.process = function (e, t, i) {
			if (!Util.isDefined(e.getQuestState())) {
				e.startQuest(1);
				var a = this.queueEventText(e, "onStart", 1);
				return a.function(this.updateCallback), a.start(), void 0
			}
			var s = e.getQuestState().ID,
				r = e.getQuest(s);
			if (e.isQuestComplete(s) && !r.chain) {
				var a = this.queueEventText(e, "onComplete", s);
				a.enableSave(!1), Util.isDefined(r.reward) && a.reward(r.reward), a.function(e.completeQuest.bind(e, s)), a.enableSave(!0), a.function(this.updateCallback), a.start()
			} else if (!e.isQuestStarted(s) && Util.isDefined(r)) {
				var a = this.queueEventText(e, "onStart", s);
				a.function(e.startQuest.bind(e, s)), a.function(this.updateCallback), a.start()
			} else i && Util.isDefined(r) ? this.queueEventText(e, "onStart", s).start() : i && this.onComplete()
		}, e.prototype.queueEventText = function (e, t, i) {
			this.screen.disablePopups = !0;
			var a = e.getQuest(i),
				s = this.game.prodigy.event.create();
			if (Util.isDefined(a[t]))
				for (var r = 0; r < a[t].length; r++) s.text(a[t][r], this.npcTag);
			return s
		}, e
	}(),
	QuestProgress = function () {
		function e(e, t, i) {
			Prodigy.Control.Element.call(this, e, t, 440, 5), this.user = i, this.game.prodigy.create.panel(this, 0, 0, 10, 2, "banner"), this.icon = this.add(this.game.prodigy.create.sprite(50, 5, "icons", "quest")), this.state = this.add(this.game.prodigy.create.sprite(50, 5, "icons", "quest")), this.arrow = this.add(this.game.prodigy.create.sprite(175, 0, "icons", "up")), this.arrow.visible = !1, this.updateFrame = 0
		}
		return e.prototype = Object.create(Prodigy.Control.Element.prototype), e.prototype.process = function (e, t) {
			this.visible = !1;
			var i = null;
			Util.isDefined(this.text) && (i = this.text.text, this.text.destroy()), this.state.frameName = this.icon.frameName = "quest", this.state.visible = this.icon.visible = !0;
			var a = e.getQuestState();
			if (Util.isDefined(a) && Util.isDefined(a.req)) {
				var s = e.getQuest(a.ID);
				if (Util.isDefined(s)) {
					if (e.isQuestComplete(a.ID)) {
						if (this.icon.frameName = this.state.frameName = "quest-complete", this.text = this.game.prodigy.create.font(this, 98, 24, "Job Complete!", {
								align: "center",
								width: 204,
								size: 20
							}), !s.chain && !e.isQuestProc(a.ID) && !t.isQuestHub) {
							e.procQuest(a.ID);
							var r = this.game.prodigy.event.create();
							if (r.set(this.user, "evtProc", !0), Util.isDefined(s.onProc) && s.onProc.length > 0)
								for (var o = 0; o < s.onProc.length; o++) r.text(s.onProc[o], "noot");
							else r.text(41, "noot");
							r.set(this.user, "evtProc", !1), r.start()
						}
					} else if (Util.isDefined(s.area) && !Util.inArray(s.area, this.game.prodigy.player.data.zone)) this.text = this.game.prodigy.create.font(this, 98, 24, "Follow Path", {
						align: "center",
						width: 204,
						size: 20
					});
					else {
						var n = a.req;
						s.desc ? this.text = this.game.prodigy.create.font(this, 98, 24, s.desc, {
							align: "center",
							width: 204,
							size: 20
						}) : Util.inArray(["item", "weapon", "hat", "outfit", "boots", "key"], n.type) ? (this.icon.frameName = Util.convertItemToIcon(n), this.state.visible = !1, this.text = this.game.prodigy.create.font(this, 50, 24, "Collect " + Math.max(0, n.N - this.game.prodigy.player.backpack.hasItem(n.type, n.ID)) + " more", {
							size: 20
						})) : "pet" === n.type ? (this.icon.frameName = Util.convertItemToIcon(n), this.state.visible = !1, this.text = this.game.prodigy.create.font(this, 50, 24, "Defeat " + n.N + " more", {
							size: 20
						})) : "clear" === n.type && (this.state.visible = !1, console.log(n), this.text = this.game.prodigy.create.font(this, 50, 24, "Clear the " + n.T, {
							size: 20
						}))
					}
					if (this.icon.x = 350 - this.icon.width, Util.isDefined(this.text) && i !== this.text.text && Util.isDefined(i)) {
						this.arrow.visible = !0, this.arrow.y = 50, this.arrow.alpha = 1;
						var l = this.game.add.tween(this.arrow).to({
							y: 30,
							alpha: 0
						}, 1e3, Phaser.Easing.Linear.None).start();
						l.onComplete.add(function () {
							this.arrow.visible = !1
						}, this)
					}
					this.visible = !0
				}
			}
		}, e.prototype.toggleVisible = function () {}, e
	}();
Prodigy.ClickableEvent = function (e, t, i, a, s, r, o, n, l) {
	Prodigy.Control.Element.call(this, e, t, i, a);
	var h = this.add(new Phaser.Image(e, 0, 0, "core", "overlay-light"));
	h.width = s, h.height = r, h.inputEnabled = !0, h.alpha = l || 0, this.onProcess = n, this.onClick = o, h.events.onInputDown.add(this.clicked.bind(this))
}, Prodigy.extends(Prodigy.ClickableEvent, Prodigy.Control.Element, {
	constructor: Prodigy.ClickableEvent,
	process: function (e, t) {
		Util.isDefined(this.onProcess) && this.onProcess(e, t)
	},
	clicked: function () {
		this.onClick(this)
	}
});
var BountyEvent = function () {
		function e(e, t, i, a, s, r, o, n, l, h, d) {
			this.monsterData = e.prodigy.battle.chooseRandomMonster(n.encounter), MonsterEvent.call(this, e, t, i, a, s, r, o, n, l, h, d)
		}
		return e.prototype = Object.create(MonsterEvent.prototype), e.prototype.startBattle = function () {
			var e = function (e, t, i, a, s, r, o, n) {
				if (r && (t.defeatMonster(a, s, o), Util.isDefined(n) && n(), e.prodigy.bounty.completeBounty(this.mods.bounty)), r)
					if (0 === e.prodigy.player.getBountyScore()) {
						console.log("huh");
						var l = e.prodigy.event.create();
						l.text(94, "noot"), l.function(e.prodigy.world.teleport.bind(e.prodigy.world, i, this.x, this.y)), l.start()
					} else e.prodigy.world.teleport(i, this.x, this.y);
				else e.prodigy.world.teleport(i)
			};
			this.game.input.mouse.enabled = this.game.input.touch.enabled = !0, this.game.prodigy.battle.start(this.mods, e.bind(this, this.game, this.zone, this.mods.onEnd, this.source.getID(), this.ID, !1, this.unique, this.onEnc), e.bind(this, this.game, this.zone, this.mods.onEnd, this.source.getID(), this.ID, !0, this.unique, this.onEnc), null, this.mods.onFaint)
		}, e
	}(),
	Boot = function () {
		function e() {
			Phaser.State.call(this)
		}
		return e.prototype = Object.create(Phaser.State.prototype), e.prototype.preload = function () {
			this.game.prodigy.load.assets(["font-general", "font-button", "font-black", "map", "core", "heads"], this.loaded.bind(this))
		}, e.prototype.loaded = function (e, t) {
			this.isLoaded = t
		}, e.prototype.create = function () {
			Phaser.State.prototype.create.call(this), this.game.prodigy.init(this.game), this.game.time.advancedTiming = !0, this.game.scale.scaleMode = Phaser.ScaleManager.EXACT_FIT, this.game.scale.refresh(), this.input.maxPointers = 1, this.game.stage.disableVisibilityChange = !0, this.game.device.desktop ? this.game.scale.pageAlignHorizontally = !0 : this.game.scale.forceLandscape = !0, this.extendInput(), this.game.prodigy.load.setLoader(this.game.load), cursors = this.input.keyboard.createCursorKeys()
		}, e.prototype.extendInput = function () {
			this.game.input.keyboard.addKeyCapture([Phaser.Keyboard.BACKSPACE]), this.game.input.setEnterCallback = function (e) {
				this.game.input.enterCallback = e
			}, this.game.input.clearEnterCallback = function () {
				delete this.game.input.enterCallback
			}, $(document).keyup({
				game: this.game
			}, function (e) {
				13 === e.keyCode && Util.isDefined(e.data.game.input.enterCallback) && e.data.game.input.enterCallback()
			})
		}, e.prototype.update = function () {
			Phaser.State.prototype.update.call(this), this.isLoaded && (this.isLoaded = !1, this.game.state.start("Login"))
		}, e
	}();
Boot.init = function () {
	var e = new Phaser.Game(1280, 720, Phaser.CANVAS, "game-container");
	e.prodigy = new Prodigy.GameObj(e), e.state.add("Boot", Boot), e.state.add("TileScreen", TileScreen), e.state.add("Login", Login), e.state.add("Battle", Battle), e.state.add("PVP", PVP), e.state.add("Faint", Faint), e.state.add("Volcano", Volcano), e.state.add("Arena", Arena), e.state.add("Pirate", Pirate), e.state.add("Tower", Tower), e.state.add("TowerBase", TowerBase), e.state.add("Cloud", Cloud), e.state.add("Plains", Plains), e.state.add("Dorm", Dorm), e.state.add("Dino", Dino), e.state.add("Museum", Museum), e.state.add("Tech", Tech), e.state.add("DinoDig", DinoDig), e.state.add("DanceDance", DanceDance), e.state.add("Intro", Intro), e.state.start("Boot")
};
var Screen = function () {
		function e(e, t, i, a) {
			Phaser.State.call(this), this.showMenu = !1, this.screenName = a || "", this.zoneName = i || "zero", this.fullName = t || ""
		}
		return e.prototype = Object.create(Phaser.State.prototype), e.prototype.shutdown = function () {
			this.game.prodigy.cleanup(), this.background.destroy(), this.content.destroy(), this.foreground.destroy(), this.menus.destroy(), this.dialogue.destroy(), this.overlay.destroy(), this.background = null, this.content = null, this.foreground = null, this.menus = null, this.dialogue = null, this.overlay = null, Phaser.State.prototype.shutdown.call(this)
		}, e.prototype.preload = function () {
			this.startTime = (new Date).getTime(), this.complete = !1, this.isLoaded = !1, this.isSaved = !1, this.isProcessed = !1, this.isExternalLoaded = !1, this.background = this.game.add.group(), this.content = this.game.add.group(), this.foreground = this.game.add.group(), this.menus = this.game.add.group(), this.dialogue = this.game.add.group(), this.overlay = this.game.add.group(), this.game.prodigy.open.menuLayer = this.menus, this.game.prodigy.dialogue.create().menuLayer = this.dialogue, this.game.prodigy.effects.setSource(this), this.setupLoadingScreen(), this.game.enableBackground = function (e) {
				this.background.visible = e, this.foreground.visible = e
			}.bind(this), this.game.enableContent = function (e) {
				this.content.visible = e
			}.bind(this), Phaser.State.prototype.preload.call(this)
		}, e.prototype.setupLoadingScreen = function () {
			new Prodigy.MapDisplay(this.game, this.overlay, Prodigy.MapDisplay.LOAD, this.fullName);
			var e = 890,
				t = 622;
			this.loadSpinner = this.overlay.add(this.game.prodigy.create.sprite(e + 25, t + 33, "core", "loading")), this.loadSpinner.anchor.setTo(.5, .5), this.game.add.tween(this.loadSpinner).to({
				angle: 360
			}, 2e3, Phaser.Easing.Linear.None, !0, 0, Number.MAX_VALUE, !1), this.textA = this.game.prodigy.create.font(this.overlay, e + 90, t + 6, "Loading assets...", {
				width: 220,
				align: "right"
			}), this.textB = this.game.prodigy.create.font(this.overlay, e + 90, t + 30, "Saving...", {
				width: 220,
				align: "right"
			})
		}, e.prototype.create = function (e) {
			Phaser.State.prototype.create.call(this), this.screenLoaded = this.externalLoaded = !1, e = e || [], this.game.prodigy.load.assets(["icons"].concat(e), this.loaded.bind(this)), this.game.prodigy.network.loggedIn ? (this.game.prodigy.player.appearance.setCoords(this.playerX || 0, this.playerY || 0), this.game.prodigy.network.setSaveCallback(this.saved.bind(this))) : this.isSaved = !0, this.loadExternal()
		}, e.prototype.loadExternal = function () {
			this.isExternalLoaded = !0
		}, e.prototype.loaded = function (e, t) {
			Util.isDefined(this.game) && (this.isLoaded = t)
		}, e.prototype.checkLoaded = function () {
			this.isLoaded && "Loaded!" !== this.textA.text && this.textA.setText("Loaded!"), this.isSaved && "Saved!" !== this.textB.text && this.textB.setText("Saved!"), this.isExternalLoaded && this.isLoaded && this.isSaved && !this.isConnecting && (this.game.prodigy.network.socketConnectFailed && Util.isDefined(this.game.prodigy.player.world) ? (this.isConnecting = !0, this.game.prodigy.network.joinMultiplayerServer(this.game.prodigy.player.world, "zone-login", this.reconnect.bind(this, !0), this.reconnect.bind(this, !1))) : this.isProcessed = !0)
		}, e.prototype.saved = function () {
			this.isSaved = !0
		}, e.prototype.reconnect = function (e) {
			this.isConnecting = !1, console.log("GREAT " + e), this.isProcessed = !0
		}, e.prototype.update = function () {
			Phaser.State.prototype.update.call(this), this.complete || this.checkLoaded(), !this.complete && this.isProcessed && ((new Date).getTime() - this.startTime) / 1e3 >= 3 && (this.screenSetup(), this.overlay.removeAll(!0), this.complete = !0), this.complete && this.screenUpdate()
		}, e.prototype.addSoundButton = function () {
			return
		}, e.prototype.screenSetup = function () {
			this.game.prodigy.network.setZone(this), this.showMenu && (this.menuBar = new Prodigy.Menu.MenuBar(this.game, this.menus, this.menuDisabled))
		}, e.prototype.screenUpdate = function () {
			this.game.prodigy.update()
		}, e.prototype.showMessage = function (e, t) {
			Util.isDefined(this.msg) || (this.msg = new ScreenMessage(this.game, this.overlay, 140, 10)), this.msg.setMsg(e, t)
		}, e
	}(),
	ScreenMessage = function () {
		function e(e, t, i, a) {
			Prodigy.Control.Element.call(this, e, t), this.x = i, this.y = a, this.ID = 0, this.text = this.game.prodigy.create.font(this, 0, 5)
		}
		return e.prototype = Object.create(Prodigy.Control.Element.prototype), e.prototype.setMsg = function (e, t) {
			this.visible = !0, this.ID++, this.alpha = 0, this.game.add.tween(this).to({
				alpha: 1
			}, 400, Phaser.Easing.Quadratic.Out).start(), this.text.setText(e, this, 500);
			var i = function (e) {
				e === this.ID && (this.visible = !1)
			};
			this.timer = this.game.time.events.add(t, i.bind(this, this.ID), this)
		}, e
	}(),
	Login = function () {
		function e(e) {
			Screen.call(this, e, "Login", "login", "login"), this.showMenu = !1
		}
		return e.prototype = Object.create(Screen.prototype), e.prototype.create = function () {
			try {
				$("#first-loading-screen").remove()
			} catch (e) {}
			try {
				Util.getUrlVariable("iosApp") && webkit.messageHandlers.setGameVisible.postMessage(0)
			} catch (e) {}
			Screen.prototype.create.call(this, ["login", "sfx-main"])
		}, e.prototype.screenSetup = function () {
			this.background.add(this.game.prodigy.create.sprite(0, 0, "login", "bg"));
			var e = this.background.add(this.game.prodigy.create.sprite(this.game.world.centerX, this.game.world.centerY, "login", "login-panel"));
			e.anchor.setTo(.5, .5), this.game.add.tween(e).to({
				angle: 360
			}, 2e4, Phaser.Easing.Linear.None, !0, 0, 99999), this.loginBox = this.game.prodigy.create.element(this.background), this.usernameField = Prodigy.Control.InputField.createInputField(this.game, this.loginBox, "username", "", this.game.world.centerX - Prodigy.Control.InputField.WIDTH_MEDIUM / 2 - 8, 300, Prodigy.Control.InputField.WIDTH_MEDIUM, Prodigy.Control.InputField.HEIGHT_MEDIUM, "text"), this.usernameField.hide(0), this.usernameField.setLabel(this.loginBox, "Username:");
			var t = Util.getCookie("prodigyUsername");
			Util.isDefined(t) && this.usernameField.setValue(t), this.passwordField = Prodigy.Control.InputField.createInputField(this.game, this.loginBox, "password", "", this.game.world.centerX - Prodigy.Control.InputField.WIDTH_MEDIUM / 2 - 8, 300 + Prodigy.Control.InputField.HEIGHT_MEDIUM + 50, Prodigy.Control.InputField.WIDTH_MEDIUM, Prodigy.Control.InputField.HEIGHT_MEDIUM, "password"), this.passwordField.hide(0), this.passwordField.setLabel(this.loginBox, "Password:"), this.loginButton = this.game.prodigy.create.textButton(this.loginBox, this.game.world.centerX - 100, this.game.world.centerY + 150, {
				icon: "yes",
				text: "login"
			}, this.startLogin.bind(this)), this.progressBox = this.game.prodigy.create.element(this.background), this.error = this.game.prodigy.create.font(this.progressBox, this.game.world.centerX - 200, this.game.world.centerY - 10, "", {
				width: 400,
				align: "center"
			}), this.closeButton = this.game.prodigy.create.textButton(this.progressBox, this.game.world.centerX - 100, this.game.world.centerY + 150, {
				icon: "close",
				text: "okay"
			}, this.showLogin.bind(this, !0)), this.progressBox.visible = !1, this.logo = this.background.add(this.game.prodigy.create.sprite(this.game.world.centerX, 150, "login", "prodigy-game-logo")), this.logo.anchor.setTo(.5, .5);
			var i = this.game.prodigy.create.panel(this.background, 10, 610, 8, 2);
			i.alpha = .9, this.createAccountButton = this.game.prodigy.create.textButton(i, 50, 25, {
				size: Prodigy.Control.TextButton.MED,
				icon: "next",
				text: "new student"
			}, this.createAccount.bind(this)), this.game.prodigy.create.font(this.background, this.game.world.centerX - 200, 690, "" + this.game.prodigy.version, {
				width: 400,
				align: "center"
			});
			var i = this.game.prodigy.create.panel(this.background, 870, 610, 8, 2);
			i.alpha = .9, this.game.prodigy.create.font(i, 20, 10, "Lots of New Content Incoming!", {
				font: "button",
				size: 36,
				width: 360,
				align: "center"
			}), this.showLogin(!0)
		}, e.prototype.showLogin = function (e) {
			this.usernameField.setEnabled(e), this.passwordField.setEnabled(e), this.progressBox.visible = !e, this.createAccountButton.visible = this.loginBox.visible = e, e ? (this.game.input.setEnterCallback(this.startLogin.bind(this)), this.usernameField.show(100), this.passwordField.show(100)) : (this.game.input.clearEnterCallback(), this.usernameField.hide(100), this.passwordField.hide(100))
		}, e.prototype.startLogin = function () {
			this.showLogin(!1), this.error.setText("Logging in..."), this.closeButton.visible = !1, this.username = this.usernameField.getValue(), this.password = this.passwordField.getValue(), "" === this.username || "" === this.password ? this.onError(NetworkManager.LOGIN, null, 400) : window.setTimeout(this.login.bind(this), 1e3)
		}, e.prototype.login = function () {
			this.game.prodigy.network.login(this.username, this.password, this.game.prodigy.player, this.onError.bind(this, NetworkManager.LOGIN), this.loadSkills.bind(this))
		}, e.prototype.loadSkills = function () {
			this.game.prodigy.education = new Prodigy.EducationSystem(this.game);
			var e = !this.game.prodigy.player.data.school,
				t = this.game.prodigy.player.data.reset;
			this.game.prodigy.player.username = this.username, t ? this.createAccount(this.username, this.password, this.game.prodigy.player) : e ? this.createAccount(this.username, this.password) : (this.error.setText("Loading skills..."), this.game.prodigy.network.loadSkills(this.game.prodigy.player.userID, this.game.prodigy.player.classIDs, this.loginSuccess.bind(this), this.onError.bind(this, NetworkManager.SKILLS)))
		}, e.prototype.loginSuccess = function (e) {
			this.game.prodigy.education.init(e), this.error.setText("Loading worlds..."), this.game.prodigy.network.getWorldList(this.openPlayer.bind(this), this.openPlayer.bind(this, null))
		}, e.prototype.openPlayer = function (e) {
			this.game.prodigy.open.charSelect(this.openWorlds.bind(this, e))
		}, e.prototype.openWorlds = function (e, t) {
			return t ? (Util.isDefined(e) ? this.game.prodigy.open.server(e, this.chooseServer.bind(this, e)) : (this.game.prodigy.network.sendAnalytics("Get-World-Fail", "", "Login-Events"), this.chooseServer(e, !1)), void 0) : (this.showLogin(!0), void 0)
		}, e.prototype.chooseServer = function (e, t, i) {
			if (i) return this.openPlayer(e), void 0;
			t ? this.game.prodigy.network.sendAnalytics("Socket-Success", "", "Login-Events") : this.game.prodigy.network.sendAnalytics("Socket-Fail", "", "Login-Events");
			var a = this.game.prodigy.player.data.zone;
			Util.isDefined(a) && a.indexOf("-") > 0 ? this.game.prodigy.world.teleport(a) : this.game.state.start("Intro")
		}, e.prototype.createAccount = function (e, t, i) {
			this.showLogin(!1), this.game.prodigy.open.createAccount(e, t, i, this.completeCharCreate.bind(this))
		}, e.prototype.completeCharCreate = function (e, t, i) {
			this.showLogin(!0), this.createAccountButton.visible = !e, e && (this.new_username = t, this.new_password = i, this.usernameField.setValue(""), this.passwordField.setValue(""), this.tutorial = !0)
		}, e.prototype.update = function () {
			if (Screen.prototype.update.call(this), this.tutorial) {
				var e = this.usernameField.getValue() || "";
				if (e = e.toLowerCase(), e !== this.new_username.toLowerCase()) {
					if (this.usernameField.hasTooltip()) return;
					this.usernameField.showTooltip("'" + this.new_username + "'", 330), this.usernameField.setFocus(!0), this.passwordField.showTooltip(null), this.loginButton.highlight(!1)
				} else if (this.passwordField.getValue() !== this.new_password) {
					if (this.passwordField.hasTooltip()) return;
					this.passwordField.showTooltip("'" + this.new_password + "'", 330), this.passwordField.setFocus(!0), this.usernameField.showTooltip(null), this.loginButton.highlight(!1)
				} else {
					if (this.loginButton.isHighlighted()) return;
					this.loginButton.highlight(!0, 0, -20), this.usernameField.showTooltip(null), this.passwordField.showTooltip(null)
				}
			}
		}, e.prototype.showHelp = function () {}, e.prototype.onError = function (e, t, i) {
			this.closeButton.visible = !0;
			var a = this.game.prodigy.network.getErrorMessage(i, e);
			this.error.setText(a, this.loginBox, this.game.world.centerX)
		}, e
	}(),
	WalkableScreen = function () {
		function e(e, t) {
			Screen.call(this, e, t.fullName, t.zoneName, t.atlas), this.assets = [], this.area = null, this.showMenu = !0, this.tileSize = 20, this.bgm = "bgm-intro"
		}
		return e.prototype = Object.create(Screen.prototype), e.prototype.shutdown = function () {
			Screen.prototype.shutdown.call(this), window.clearInterval(this.botTimer);
			try {
				for (var e in this.playerList) this.playerList.hasOwnProperty(e) && this.playerList[e].destroy();
				this.playerList = null, this.user.destroy(), this.user = null
			} catch (t) {}
			this.dataQueue = null
		}, e.prototype.create = function (e, t) {
			this.saveTag = t, e = e || [], e = e.concat([this.screenName, "icons-membership", this.bgm]), e = e.concat(Prodigy.Container.PlayerContainer.getAssets(this.game.prodigy.player, 1)), e = e.concat(this.assets), e = e.concat(this.game.prodigy.skin.assets(this)), Screen.prototype.create.call(this, e), this.fromQuest = !1, Util.isDefined(t) && this.game.prodigy.player.setZone(t), this.game.prodigy.player.saveEnabled = !0, this.path = new Pathfinder(this.area)
		}, e.prototype.createBackground = function () {
			this.bg = this.game.prodigy.create.sprite(0, 0, this.screenName, "bg"), this.bg.inputEnabled = !0, this.bg.events.onInputDown.add(this.listener.bind(this), this), this.background.add(this.bg)
		}, e.prototype.screenSetup = function (e) {
			this.createBackground(), this.memberIcon = this.menus.add(this.game.prodigy.create.sprite(10, 10, "icons-membership")), this.game.prodigy.player.isMember || this.disableMembership ? this.memberIcon.visible = !1 : (this.memberIcon.animations.add("flash", [0, 1, 2, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 10, !0, !0), this.memberIcon.animations.play("flash"), this.memberIcon.inputEnabled = !0, this.memberIcon.events.onInputDown.add(this.game.prodigy.open.membership.bind(this.game.prodigy.open), this)), this.noSoundButton || this.addSoundButton(), this.addMail(), this.dataQueue = [], this.user = this.game.prodigy.create.player(this.content, this.game.prodigy.player, 1, this.playerX || 500, this.playerY || 300), this.user.setup(null, !0), this.user.showName(!0), this.user.clickCallback = this.game.prodigy.open.card.bind(this.game.prodigy.open, this.game.prodigy.player), this.game.prodigy.user = this.user, Screen.prototype.screenSetup.call(this), Device.isTablet() || Device.iPadMini() || 1 == Util.getUrlVariable("iosApp") || (console.log("try music"), this.game.prodigy.audio.playBGM(this.bgm, !0, !0), this.game.prodigy.audio.resumeBGM()), e || this.processPopups(), this.game.prodigy.skin.apply(this)
		}, e.prototype.processPopups = function () {
			this.game.prodigy.player.state.get("zone-tutorial");
			Prodigy.Menu.MemberPrompt.isRequired(this.game.prodigy.player) ? (this.game.prodigy.player.memberPrompt = !0, this.game.prodigy.open.memberPrompt()) : this.game.prodigy.player.justLeveled && this.game.prodigy.player.getLevel() >= 10 && (this.game.prodigy.player.justLeveled = !1, this.game.prodigy.open.rating())
		}, e.prototype.onMessage = function (e) {
			if (console.log(e), Util.isDefined(this.game)) {
				if ("challenge" === e.action && this.game.prodigy.mail.add(e), !Util.isDefined(this.playerList) && Util.isDefined(this.dataQueue)) return this.dataQueue.push(e), void 0;
				"change" === e.action && this.updatePlayer(e.data), "move" === e.action && this.movePlayer(e.data), "chat" === e.action && this.chatPlayer(e.data), "emit" === e.action && this.playerEffect(e.data)
			}
		}, e.prototype.onPlayerList = function (e) {
			if (Util.isDefined(this.game))
				for (var t = 0; t < e.length; t++) e[t] != this.game.prodigy.player.userID && this.game.prodigy.network.getCharData(e[t], ["appearance", "isMember", "equipment", "data"], this.initPlayers.bind(this))
		}, e.prototype.initPlayers = function (e) {
			if (Util.isDefined(this.game)) {
				Util.isDefined(this.playerList) || (this.playerList = {});
				for (var t in e) {
					var i = e[t];
					i.userID = t, this.addPlayer(i)
				}
				console.log(e);
				for (var a = 0; a < this.dataQueue.length; a++) this.onMessage(this.dataQueue[a]);
				this.dataQueue = []
			}
		}, e.prototype.onPlayerJoined = function (e) {
			Util.isDefined(this.playerList) && Util.isDefined(this.playerList[e]) || e != this.game.prodigy.player.userID && this.game.prodigy.network.getCharData(e, ["appearance", "isMember", "equipment", "data"], this.initPlayers.bind(this))
		}, e.prototype.onPlayerLeft = function (e) {
			if (Util.isDefined(this.playerList) && Util.isDefined(this.playerList[e])) {
				var t = this.playerList[e];
				delete this.playerList[e], this.content.remove(t, !0)
			}
		}, e.prototype.addPlayer = function (e) {
			if (!Util.isDefined(this.playerList[e.userID])) {
				var t = new Player;
				t.init(e);
				var i = t.appearance.getCoords(),
					a = this.game.prodigy.create.player(this.content, t, 1, i.x, i.y);
				a.reload(), a.showName(!0), a.clickCallback = this.game.prodigy.open.card.bind(this.game.prodigy.open, t), this.playerList[e.userID] = a
			}
		}, e.prototype.removePlayer = function (e) {
			if (Util.isDefined(this.playerList[e])) {
				var t = this.playerList[e];
				delete this.playerList[e], this.content.remove(t, !0)
			}
		}, e.prototype.updatePlayer = function (e) {
			var t = this.playerList[e.userID];
			Util.isDefined(t) && (t.source.appearance.setAppearance(e.appearance), t.source.equipment.setEquipment(e.equipment), t.reload(), t.showName(!0), console.log("CHANGE"))
		}, e.prototype.playerEffect = function (e) {
			var t = this.playerList[e.userID];
			Util.isDefined(t) && t.source.fx(e.type)
		}, e.prototype.movePlayer = function (e) {
			var t = this.playerList[e.userID];
			Util.isDefined(t) && t.setPath(e.path)
		}, e.prototype.chatPlayer = function (e) {
			var t = this.playerList[e.userID];
			Util.isDefined(t) && t.chat(e.emoteID)
		}, e.prototype.screenUpdate = function () {
			if (Screen.prototype.screenUpdate.call(this), this.content.sort("y", Phaser.Group.SORT_ASCENDING), Util.isDefined(this.user) && (this.playerX = this.user.x, this.playerY = this.user.y, this.game.prodigy.player.appearance.setCoords(this.user.x, this.user.y)), this.game.prodigy.player.appearanceChanged) {
				this.game.prodigy.player.appearanceChanged = !1, this.user.reload();
				var e = this.game.prodigy.player;
				this.game.prodigy.network.emitMessage({
					action: "change",
					data: {
						userID: e.userID,
						appearance: e.appearance.data,
						equipment: e.equipment.data
					}
				})
			}
		}, e.prototype.listener = function () {
			var e = function (e) {
				if (Util.isDefined(e)) {
					var t = this.path.getCallback(Math.floor(e[0].x / this.tileSize), Math.floor(e[0].y / this.tileSize));
					this.user.setPath(e, t);
					var i = this.game.prodigy.player;
					this.user.evtProc || this.game.prodigy.network.emitMessage({
						action: "move",
						data: {
							userID: i.userID,
							path: e
						}
					})
				}
			};
			this.path.findPath(this.user.x, this.user.y, this.game.input.x, this.game.input.y, e.bind(this))
		}, e.prototype.createStoreNPC = function (e, t, i, a) {
			var s = function (e, t) {
					var i = e.prodigy.dialogue.create();
					i.setText({
						text: "Welcome to " + t.name + "! \nWant to see what I have for sale?",
						face: "0",
						yes: e.prodigy.open.store.bind(e.prodigy.open, t)
					}), i.start("merchant")
				},
				r = new Prodigy.Container.QuestNPC(this.game, this.content, e, t, null, {
					atlas: "merchant",
					name: "Merchant"
				}, s.bind(this, this.game, i), a);
			return r.setIndicator("store"), r
		}, e.prototype.addNicknamer = function (e, t, i) {
			var a = this.game.prodigy.create.element(this.content, e, t),
				s = a.add(this.game.prodigy.create.sprite(0, -100, "core", "namer")),
				r = a.add(this.game.prodigy.create.sprite(20, -90, "core", "feather"));
			this.game.add.tween(r).to({
				x: 40,
				y: -98
			}, 1500, Phaser.Easing.Quadratic.InOut, !0, 0, Number.MAX_VALUE, !0), s.inputEnabled = !0, s.events.onInputDown.add(this.game.prodigy.open.nicknamer.bind(this.game.prodigy.open, i, this.user))
		}, e.prototype.addMail = function () {
			new Prodigy.MailIcon(this.game, this.menus, 1190, 10)
		}, e
	}(),
	CutScene = function () {
		function e(e, t) {
			Screen.call(this, e, "", "zone-scene"), this.assets = t || [], this.showMenu = !1, this.sprites = []
		}
		return e.prototype = Object.create(Screen.prototype), e.prototype.shutdown = function () {
			Screen.prototype.shutdown.call(this);
			try {
				for (var e = 0; e < this.sprites.length; e++) this.sprites[e].destroy();
				this.sprites = null, this.events = null
			} catch (t) {}
		}, e.prototype.create = function () {
			Screen.prototype.create.call(this, this.assets), this.game.prodigy.player.saveEnabled = !1
		}, e.prototype.screenSetup = function (e, t, i, a) {
			this.subtitle = this.game.prodigy.create.font(this.content, 0, 660, "", {
				size: 20,
				align: "center",
				width: 1280
			}), Screen.prototype.screenSetup.call(this), this.sprites = e, this.events = t, this.endTime = i, this.endCallback = a, this.events.sort(function (e, t) {
				return e.start - t.start
			}), this.startTime = (new Date).getTime(), this.eventIndex = 0, this.timeCount = 0, this.lastTime = -1;
			var s = this.game.prodigy.create.font(this.menus, 1190, 5, "skip", {
				font: "button",
				size: 36
			});
			s.addClickCallback(this.end.bind(this), 80, 36)
		}, e.prototype.screenUpdate = function () {
			Screen.prototype.screenUpdate.call(this);
			var t = Number.MAX_VALUE;
			if (Util.isDefined(this.game.prodigy.audio.currentBgm) && (t = this.game.prodigy.audio.currentBgm.currentTime), t > this.endTime && Util.isDefined(this.endCallback)) return this.endCallback(), void 0;
			if (t === this.lastTime ? this.timeCount++ : (this.lastTime = t, this.timeCount = 0), this.timeCount > 10) return this.endCallback(), void 0;
			for (var i = null, a = this.eventIndex; a < this.events.length; a++) {
				var s = this.events[a];
				if (!s.finish && s.start <= t) {
					Util.isDefined(i) || (i = a);
					var r = s.src;
					!s.proc && Util.isDefined(s.text) && (this.subtitle.setText(s.text), s.proc = !0, s.finish = !0), Util.isDefined(s.set) && (r[s.attr] = s.set, s.finish = !0), Util.isDefined(s.tween) && (s.start + s.tween.dur <= t ? (s.finish = !0, r[s.attr] = s.tween.to) : r[s.attr] = e.getValue(t - s.start, s.tween.start, s.tween.to - s.tween.start, s.tween.dur, s.tween.type))
				} else if (s.start > t) break
			}
			Util.isDefined(i) && (this.eventIndex = i)
		}, e
	}();
CutScene.getValue = function (e, t, i, a, s) {
	return "in" === s ? (e /= a, i * e * e + t) : "out" === s ? (e /= a, -i * e * (e - 2) + t) : i * e / a + t
};
var TileScreen = function () {
		function e(e) {
			WalkableScreen.call(this, e, {}), this.area = [[]], this.battleHistory = [], this.tileSize = 20
		}
		return e.prototype = Object.create(WalkableScreen.prototype), e.prototype.shutdown = function () {
			try {
				this.data.cleanup()
			} catch (e) {
				console.log("error destroying tilescreen")
			}
			WalkableScreen.prototype.shutdown.call(this)
		}, e.prototype.initMap = function (e, t, i, a, s) {
			this.data = e, this.zone = t, this.transition = s, this.zoneName = e.getZoneName(), this.fullName = e.getName(), this.playerX = i || e.getPlayerStartX(), this.playerY = a || e.getPlayerStartY()
		}, e.prototype.create = function () {
			this.game.prodigy.player.setZone(this.zoneName), WalkableScreen.prototype.create.call(this, this.data.assets.concat(["map-pathing"]), this.zoneName)
		}, e.prototype.screenSetup = function () {
			this.events = [], this.disablePopups = !1, WalkableScreen.prototype.screenSetup.call(this, !0), this.user.evtProc = !1, this.area = this.data.init(this.game, this.tmpBelow, this.tmpAbove, this.content), this.path.init(this.area, this.tileSize), this.data.setup(this.game, this), this.questProgress = new QuestProgress(this.game, this.menus, this.user), this.process(), this.game.prodigy.textureBelow.clear(), this.game.prodigy.textureBelow.renderXY(this.tmpBelow, 0, 0, !0), this.below.add(new Phaser.Image(this.game, 0, 0, this.game.prodigy.textureBelow)), this.game.prodigy.textureAbove.clear(), this.game.prodigy.textureAbove.renderXY(this.tmpAbove, 0, 0, !0), this.above.add(new Phaser.Image(this.game, 0, 0, this.game.prodigy.textureAbove)), this.tmpBelow.destroy(), this.tmpAbove.destroy(), this.disablePopups || this.processPopups()
		}, e.prototype.createBackground = function () {
			var e = this.background.add(this.game.prodigy.create.sprite(0, 0));
			e.width = 1280, e.height = 720, e.inputEnabled = !0, e.events.onInputDown.add(this.listener.bind(this), this), this.tmpBelow = this.game.prodigy.create.element(this.background, 0, 0), this.tmpAbove = this.game.prodigy.create.element(this.foreground, 0, 0), this.below = this.game.prodigy.create.element(this.background, 0, 0), this.above = this.game.prodigy.create.element(this.foreground, 0, 0), this.floor = this.game.prodigy.create.element(this.background, 0, 0)
		}, e.prototype.screenUpdate = function () {
			WalkableScreen.prototype.screenUpdate.call(this), Util.isDefined(this.data) && this.data.update(this.game)
		}, e.prototype.addAreaEvent = function (e, t, i) {
			var a = new AreaEvent(this.game, this.floor, e, this.user, this.path, t, i);
			this.events.push(a), this.tmpBelow.add(a.getEllipse())
		}, e.prototype.addHealEvent = function (e, t) {
			var i = new HealEvent(this.game, this.content, this.user, this.path, e, t);
			return this.events.push(i), i
		}, e.prototype.addQuestNPC = function (e, t, i, a, s) {
			this.events.push(new QuestEvent(this.game, this.content, this, this.zone, e, t, i, a, this.process.bind(this), s))
		}, e.prototype.addChest = function (e, t, i, a, s) {
			var r = new ChestEvent(this.game, this.content, t, i, this.user, this.path, e, a, s, this.process.bind(this));
			return this.events.push(r), r
		}, e.prototype.addCollect = function (e, t, i, a) {
			var s = new CollectEvent(this.game, this.content, t, i, this.user, this.path, e, a, this.process.bind(this));
			return this.events.push(s), s
		}, e.prototype.addClickableEvent = function (e, t, i, a, s, r, o) {
			var n = new Prodigy.ClickableEvent(this.game, this.content, e, t, i, a, s, r, o);
			return this.events.push(n), n
		}, e.prototype.addBounty = function (e, t, i, a, s, r, o) {
			s.minLevel = this.zone.minLevel, s.maxLevel = this.zone.maxLevel;
			var n = new BountyEvent(this.game, this.content, t, i, this.user, this.path, e, s, a, r, o);
			return this.events.push(n), n
		}, e.prototype.addMonster = function (e, t, i, a, s, r, o) {
			s.minLevel = this.zone.minLevel, s.maxLevel = this.zone.maxLevel;
			var n = new MonsterEvent(this.game, this.content, t, i, this.user, this.path, e, s, a, r, o);
			return this.events.push(n), n
		}, e.prototype.addWizard = function (e, t, i, a) {
			var s = new WizardEvent(this.game, this.content, e, t, this.user, this.path, i, a);
			return this.events.push(s), s
		}, e.prototype.addNPC = function (e, t, i, a, s) {
			var r = new NPCEvent(this.game, this.content, e, t, i, a, s);
			return this.events.push(r), r
		}, e.prototype.addGnome = function (e, t, i, a, s, r) {
			var o = new GnomeEvent(this.game, this.content, this.user, this.path, e, t, i, a, s, r);
			return this.events.push(o), o
		}, e.prototype.addBlock = function (e, t, i) {
			var a = new BlockEvent(this.game, i.content ? this.content : this.background, e, t, this.path, i);
			return this.events.push(a), a
		}, e.prototype.process = function () {
			for (var e = 0; e < this.events.length; e++) Util.isDefined(this.events[e].process) && this.events[e].process(this.zone, this.data);
			this.questProgress.process(this.zone, this.data), this.menuBar.openNav(), this.data.process(this.game, this, this.zone)
		}, e.prototype.debug = function () {
			this.menus.removeAll(!0);
			for (var e = new Phaser.Group(this.game), t = 0; 64 > t; t++)
				for (var i = 0; 36 > i; i++)
					if (!this.path.isNodeOpen(t, i)) {
						var a = e.add(this.game.prodigy.create.sprite(20 * t, 20 * i, "core", "overlay-light"));
						a.width = 20, a.height = 20, a.alpha = .2, a.tint = 12255232
					} this.game.prodigy.textureMenu.clear(), this.game.prodigy.textureMenu.renderXY(e, 0, 0, !0), this.menus.add(new Phaser.Image(this.game, 0, 0, this.game.prodigy.textureMenu)), e.destroy()
		}, e
	}(),
	Faint = function () {
		function e(e, t) {
			Screen.call(this, e, "So Sleepy...", "zone-faint"), this.assets = t || [], this.showMenu = !1, this.targetZone = ""
		}
		return e.prototype = Object.create(Screen.prototype), e.prototype.create = function () {
			Screen.prototype.create.call(this), this.game.prodigy.player.saveEnabled = !1
		}, e.prototype.screenSetup = function () {
			Screen.prototype.screenSetup.call(this), this.game.prodigy.player.heal(), this.game.prodigy.player.changeGold(-100);
			var e = this.game.prodigy.dialogue.create();
			e.setText(22), e.setText(23), e.setText({
				callback: this.toZone.bind(this)
			}), e.start("noot")
		}, e.prototype.toZone = function () {
			this.targetZone.indexOf("-") > -1 ? this.game.prodigy.world.teleport(this.targetZone) : (delete this.game.state.states[this.targetZone].playerX, delete this.game.state.states[this.targetZone].playerY, this.game.state.start(this.targetZone))
		}, e
	}(),
	Intro = function () {
		function e(e) {
			CutScene.call(this, e, ["scene-intro", "scene-intro-bg1", "scene-intro-bg2", "scene-intro-bg3", "bgm-intro-1"])
		}
		return e.prototype = Object.create(CutScene.prototype), e.prototype.screenSetup = function () {
			var e = [],
				t = [],
				i = this.game.prodigy.create.element(this.background, 0, 0);
			i.add(this.game.prodigy.create.sprite(0, 0, "scene-intro-bg1")), t.push(i);
			var a = this.game.prodigy.create.element(this.background, 640, 540);
			a.add(this.game.prodigy.create.sprite(-640, -540, "scene-intro-bg3")), t.push(a), t.push(this.background.add(this.game.prodigy.create.sprite(0, 0, "scene-intro-bg2")));
			for (var s = Math.floor(1280 / 7), r = 0; 6 > r; r++) {
				var o = this.background.add(this.game.prodigy.create.sprite((r + 1) * s - 40, 0, "scene-intro", "e" + (r + 1)));
				o.alpha = .75, t.push(o);
				var n = this.background.add(this.game.prodigy.create.sprite(0, 0, "scene-intro", "w" + (r + 1)));
				n.x = (r + 1) * s - Math.floor(n.width / 2), n.y = 360 - Math.floor(n.height / 2), t.push(n)
			}
			t.push(this.background.add(this.game.prodigy.create.sprite(0, 0, "scene-intro", "m1"))), t[15].anchor.setTo(.5, 0), t.push(a.add(this.game.prodigy.create.sprite(-156, -306, "scene-intro", "door")));
			for (var r = 0; 3 > r; r++) {
				var l = 320,
					h = this.background.add(this.game.prodigy.create.sprite(l * (r + 1), 300, "scene-intro", "d" + (r + 1)));
				h.x -= h.width / 2, h.y -= h.height / 2, t.push(h)
			}
			var d = this.game.prodigy.create.element(this.background, 0, 0);
			t.push(d), d.add(this.game.prodigy.create.sprite(0, 0, "scene-intro", "boat"));
			var p = this.game.prodigy.create.element(i, 80, 1180);
			t.push(p.add(this.game.prodigy.create.sprite(50, 50, "scene-intro", "sw3"))), t.push(p.add(this.game.prodigy.create.sprite(200, 50, "scene-intro", "sw1"))), t.push(p.add(this.game.prodigy.create.sprite(100, 0, "scene-intro", "sw4"))), t.push(p.add(this.game.prodigy.create.sprite(100, 50, "scene-intro", "sw6"))), t.push(p.add(this.game.prodigy.create.sprite(150, 70, "scene-intro", "sw2"))), t.push(p.add(this.game.prodigy.create.sprite(0, 50, "scene-intro", "sw5")));
			for (var r = 0; r < t.length; r++) t[r].visible = !1;
			for (var r = 0; 6 > r; r++) t[21 + r].visible = !0;
			e.push({
				start: 0,
				src: t[0],
				attr: "visible",
				set: !0,
				text: "Long ago, in an age of magic and wonder"
			}), e.push({
				start: 0,
				src: t[0],
				attr: "y",
				tween: {
					dur: 16e3,
					start: 0,
					to: -680,
					type: "in"
				}
			}), e.push({
				start: 5e3,
				text: "There were six master wizards, called the Wardens"
			});
			for (var c = [800, 4e3, 0, 2400, 3200, 1600], s = Math.floor(1280 / 7), r = 0; 6 > r; r++) {
				var u = t[2 * r + 3];
				e.push({
					start: 5e3 + c[r],
					src: u,
					attr: "visible",
					set: !0
				}), e.push({
					start: 5e3 + c[r],
					src: u,
					attr: "y",
					tween: {
						dur: 3e3,
						start: -50,
						to: 720
					}
				}), e.push({
					start: 5e3 + c[r] + 3e3,
					src: u,
					attr: "visible",
					set: !1
				}), u = t[2 * r + 3 + 1], e.push({
					start: 5e3 + c[r] + 1500,
					src: u,
					attr: "visible",
					set: !0
				}), e.push({
					start: 5e3 + c[r] + 1500,
					src: u,
					attr: "alpha",
					tween: {
						dur: 600,
						start: 1,
						to: 0
					}
				}), e.push({
					start: 5e3 + c[r] + 1500 + 600,
					src: u,
					attr: "visible",
					set: !1
				})
			}
			e.push({
				start: 9e3,
				text: "Together, the Wardens built a super-fantastic castle, and they called it 'the Academy'"
			}), e.push({
				start: 17500,
				text: "A place where young wizards learned the ways of magic..."
			}), e.push({
				start: 19e3,
				src: t[15],
				attr: "visible",
				set: !0
			}), e.push({
				start: 19e3,
				src: t[15],
				attr: "x",
				tween: {
					dur: 2e3,
					start: 0,
					to: 1280
				}
			}), e.push({
				start: 19e3,
				src: t[15],
				attr: "y",
				tween: {
					dur: 1e3,
					start: 720,
					to: 250,
					type: "out"
				}
			}), e.push({
				start: 2e4,
				src: t[15],
				attr: "y",
				tween: {
					dur: 1e3,
					start: 250,
					to: 720,
					type: "in"
				}
			}), e.push({
				start: 21500,
				text: "monsters..."
			}), e.push({
				start: 21e3,
				src: t[15],
				attr: "frameName",
				set: "m2"
			}), e.push({
				start: 21e3,
				src: t[15],
				attr: "x",
				tween: {
					dur: 2e3,
					start: 0,
					to: 1280
				}
			}), e.push({
				start: 21e3,
				src: t[15],
				attr: "y",
				tween: {
					dur: 1e3,
					start: 720,
					to: 250,
					type: "out"
				}
			}), e.push({
				start: 22e3,
				src: t[15],
				attr: "y",
				tween: {
					dur: 1e3,
					start: 250,
					to: 720,
					type: "in"
				}
			}), e.push({
				start: 22500,
				text: "...and a third...thing..."
			}), e.push({
				start: 26e3,
				src: t[15],
				attr: "visible",
				set: !1
			}), e.push({
				start: 25500,
				text: "But one day, one by one, the Wardens vanished..."
			});
			for (var r = 0; 6 > r; r++) e.push({
				start: 25500 + 500 * r,
				src: t[21 + r],
				attr: "alpha",
				tween: {
					dur: 1300,
					start: 1,
					to: 0
				}
			});
			e.push({
				start: 29500,
				text: "...and the Academy closed its doors until the day they returned"
			}), e.push({
				start: 29500,
				src: t[0],
				attr: "visible",
				set: !1
			}), e.push({
				start: 29500,
				src: t[1],
				attr: "visible",
				set: !0
			}), e.push({
				start: 29500,
				src: t[1].scale,
				attr: "x",
				tween: {
					dur: 2e3,
					start: 1,
					to: 1.1
				}
			}), e.push({
				start: 29500,
				src: t[1].scale,
				attr: "y",
				tween: {
					dur: 2e3,
					start: 1,
					to: 1.1
				}
			}), e.push({
				start: 31500,
				src: t[16],
				attr: "visible",
				set: !0
			}), e.push({
				start: 31500,
				src: t[1].scale,
				attr: "x",
				set: 1.5
			}), e.push({
				start: 31500,
				src: t[1].scale,
				attr: "y",
				set: 1.5
			}), e.push({
				start: 34500,
				src: t[16],
				attr: "visible",
				set: !1
			}), e.push({
				start: 34500,
				text: "Now, the Academy needs...a PRODIGY!"
			}), e.push({
				start: 34500,
				src: t[1],
				attr: "visible",
				set: !1
			}), e.push({
				start: 34500,
				src: t[2],
				attr: "visible",
				set: !0
			}), e.push({
				start: 34500,
				src: t[2],
				attr: "y",
				tween: {
					dur: 16e3,
					start: 0,
					to: -680,
					type: "out"
				}
			}), e.push({
				start: 38e3,
				text: "Someone of courage! Strength! Character!"
			});
			for (var r = 0; 3 > r; r++) e.push({
				start: 38e3 + 1500 * r,
				src: t[17 + r],
				attr: "visible",
				set: !0
			}), e.push({
				start: 38e3 + 1500 * r,
				src: t[17 + r],
				attr: "alpha",
				tween: {
					dur: 1e3,
					start: 0,
					to: 1
				}
			}), e.push({
				start: 39e3 + 1500 * r,
				src: t[17 + r],
				attr: "alpha",
				tween: {
					dur: 1e3,
					start: 1,
					to: 0
				}
			}), e.push({
				start: 4e4 + 1500 * r,
				src: t[17 + r],
				attr: "visible",
				set: !1
			});
			e.push({
				start: 42e3,
				text: "Someone just like you!"
			}), e.push({
				start: 38500,
				src: t[20],
				attr: "visible",
				set: !0
			}), e.push({
				start: 38500,
				src: t[20],
				attr: "y",
				tween: {
					dur: 12e3,
					start: 720,
					to: 160,
					type: "out"
				}
			}), CutScene.prototype.screenSetup.call(this, t, e, 50900, this.end.bind(this)), this.game.prodigy.audio.playBGM("bgm-intro-1"), this.game.prodigy.audio.resumeBGM()
		}, e.prototype.end = function () {
			this.game.prodigy.audio.pauseBGM(), this.game.prodigy.world.teleport("tutorial-B9")
		}, e
	}();
Prodigy.Zone = function (e) {
	this.game = e, this.states = [], this.maps = {}
}, Prodigy.Zone.prototype = {
	getMap: function (e) {
		return this.maps[e]
	},
	teleport: function (e, t, i, a) {
		e = this.getMap(e), Util.isDefined(e) && (this.game.state.states.TileScreen.initMap(e, this, t, i, a), this.process(), this.game.state.start("TileScreen"))
	},
	process: function () {},
	getQuest: function (e) {
		return this.quests[e]
	},
	getState: function (e) {
		var t = -1;
		if ("quest" !== e) {
			for (var i = 0; i < this.states.length; i++) this.states[i] === e && (t = i);
			if (-1 === t) return null
		} else t = e;
		return this.game.prodigy.player.state.get("zone-" + this.ID + "-" + t)
	},
	setState: function (e, t) {
		var i = -1;
		if ("quest" !== e)
			for (var a = 0; a < this.states.length; a++) this.states[a] === e && (i = a);
		else i = e; - 1 !== i && this.game.prodigy.player.state.set("zone-" + this.ID + "-" + i, t)
	},
	getQuestState: function () {
		return this.getState("quest")
	},
	setQuestVar: function (e, t) {
		Util.isDefined(this.getQuestState()) && (this.getQuestState().state[e] = t)
	},
	getQuestVar: function (e) {
		return Util.isDefined(this.getQuestState()) ? this.getQuestState().state[e] : null
	},
	startQuest: function (e) {
		var t = this.getQuestState();
		if (Util.isDefined(t) || (t = {
				ID: 1
			}), t.ID === e) {
			var i = this.getQuest(t.ID);
			t.req = Util.copyObject(i.req), t.state = Util.copyObject(i.state) || {}, t.seq = 0, this.game.prodigy.player.state.set("zone-" + this.ID + "-quest", t)
		}
	},
	isQuestStarted: function (e) {
		var t = this.getQuestState();
		return Util.isDefined(t) && Util.isDefined(t.req) && t.ID === e ? !0 : !1
	},
	isQuestComplete: function (e) {
		if (!this.isQuestStarted(e)) return !1;
		var t = this.getQuestState(),
			i = t.req,
			a = this.getQuest(e);
		return this.getQuestState().ID !== e ? !1 : "pet" === i.type && i.N > 0 ? !1 : "clear" === i.type && i.N > 0 ? !1 : Util.inArray(["item", "weapon", "hat", "outfit", "boots", "key"], i.type) && this.game.prodigy.player.backpack.hasItem(i.type, i.ID) < i.N ? !1 : "state" === i.type && this.game.prodigy.player.state.get(i.state) !== i.target ? !1 : "zone" === i.type && this.game.prodigy.player.data.zone !== a.area[0] ? !1 : "zstate" === i.type && i.N !== this.getState(i.ID) ? !1 : "seq" === i.type && i.N !== t.seq ? !1 : !0
	},
	completeQuest: function (e) {
		if (!this.isQuestStarted(e)) return !1;
		var t = this.getQuestState();
		if (t.ID === e) {
			var i = t.req;
			"item" !== i.type || i.K || this.game.prodigy.player.backpack.consume(i.type, i.ID, i.N), this.game.prodigy.player.state.set("zone-" + this.ID + "-quest", {
				ID: t.ID + 1
			})
		}
	},
	isQuestProc: function (e) {
		return this.isQuestStarted(e) && this.isQuestComplete(e) && this.getQuestState().proc
	},
	procQuest: function (e) {
		this.isQuestStarted(e) && this.isQuestComplete(e) && this.game.prodigy.player.state.set("zone-" + this.ID + "-quest-proc", 1)
	},
	isOnQuest: function (e) {
		var t = this.getQuestState();
		return Util.isDefined(t) && t.ID === e
	},
	defeatMonster: function (e, t, i) {
		var a = this.getQuestState();
		if (Util.isDefined(a) && Util.isDefined(a.req)) {
			var s = a.req,
				r = Util.isDefined(s.U) && s.U;
			"pet" === s.type && s.ID === e && r === i ? (s.N--, i && (a.state[t] = 1), this.game.prodigy.player.state.updated = !0) : "clear" === s.type && r === i && (s.N--, i && (a.state[t] = 1), this.game.prodigy.player.state.updated = !0)
		}
	},
	isOnSequence: function (e, t) {
		var i = this.getQuestState();
		return Util.isDefined(i) && i.ID === e && Util.isDefined(i.req) && i.seq === t ? !0 : !1
	},
	completeSequence: function (e, t) {
		var i = this.getQuestState();
		Util.isDefined(i) && i.ID === e && Util.isDefined(i.req) && i.seq === t && (i.seq++, this.game.prodigy.player.state.updated = !0)
	},
	UTIL_TEST_QUEST: function (e, t) {
		this.game.prodigy.player.state.data.zone[this.ID] = {};
		for (var i = 1; e > i; i++) this.startQuest(i), this.completeQuest(i);
		t && this.startQuest(e)
	}
}, Prodigy.Zone.prototype.constructor = Prodigy.Zone, Prodigy.Map = function (e, t, i, a, s, r, o) {
	this._tag = t, this._name = i, this._zoneName = e.ID + "-" + t, this._x = a, this._y = s, this._file = "map-" + this._zoneName.toLowerCase(), this._onFaint = e.onFaint, this._zone = e, this._battleBG = e.battleBG, this.isQuestHub = e.questHub.indexOf(t) >= 0, this.assets = [this._file, "tileset-core"].concat(o), this._monsters = {}, this._locations = r
}, Prodigy.Map.prototype = {
	getAdjacentMaps: function () {
		return this._locations
	},
	getTag: function () {
		return this._tag
	},
	getName: function () {
		return this._name
	},
	getZoneName: function () {
		return this._zoneName
	},
	getPlayerStartX: function () {
		return this._x
	},
	getPlayerStartY: function () {
		return this._y
	},
	setup: function (e, t) {
		var i = e.prodigy.bounty.hasBounty(this._zone.ID, this._tag);
		i && e.prodigy.bounty.placeBounty(i, t, this)
	},
	process: function () {},
	update: function () {},
	cleanup: function () {},
	addAreaEvent: function (e, t, i, a, s, r, o, n) {
		i.target = a, Util.isDefined(o) || (o = e.prodigy.world.teleport.bind(e.prodigy.world, a, s, r)), t.addAreaEvent(i, o, n)
	},
	addHealEvent: function (e, t, i, a) {
		return t.addHealEvent(i, a)
	},
	addQuestNPC: function (e, t, i, a, s, r, o, n) {
		t.addQuestNPC(i, a, s, r, o, n)
	},
	addClickableEvent: function (e, t, i, a, s, r, o, n, l) {
		return t.addClickableEvent(i, a, s, r, o, n, l)
	},
	addChest: function (e, t, i, a, s, r, o) {
		return t.addChest(i, a, s, r, o)
	},
	addCollect: function (e, t, i, a, s, r) {
		t.addCollect(i, a, s, r)
	},
	addMonster: function (e, t, i, a, s, r, o, n) {
		if (o = Util.copyObject(o), Util.isDefined(this._monsters[i]) || (this._monsters[i] = {}), n || !(this._monsters[i].respawn > (new Date).getTime())) {
			o.onEnd = o.onEnd || this._zoneName, o.onFaint = o.onFaint || this._onFaint, o.screen = o.screen || this._battleBG;
			var l = function (e, t) {
				e[t].monsterData = null, e[t].respawn = (new Date).getTime() + 5e3
			};
			Util.isDefined(this._monsters[i].monsterData) && (o.encounter = [this._monsters[i].monsterData]);
			var h = t.addMonster(i, a, s, r, o, l.bind(this, this._monsters, i), Util.isDefined(this._monsters[i].respawn));
			return this._monsters[i].data = h.monsterData, delete this._monsters[i].respawn, h
		}
	},
	addBounty: function (e, t, i, a, s, r, o, n) {
		if (o = Util.copyObject(o), Util.isDefined(this._monsters[i]) || (this._monsters[i] = {}), n || !(this._monsters[i].respawn > (new Date).getTime())) {
			o.onEnd = o.onEnd || this._zoneName, o.onFaint = o.onFaint || this._onFaint, o.screen = o.screen || this._battleBG;
			var l = function (e, t) {
				e[t].monsterData = null, e[t].respawn = (new Date).getTime() + 5e3
			};
			Util.isDefined(this._monsters[i].monsterData) && (o.encounter = [this._monsters[i].monsterData]);
			var h = t.addBounty(i, a, s, r, o, l.bind(this, this._monsters, i), Util.isDefined(this._monsters[i].respawn));
			return this._monsters[i].data = h.monsterData, delete this._monsters[i].respawn, h
		}
	},
	addWizard: function (e, t, i, a, s, r) {
		return r.onEnd = r.onEnd || this._zoneName, r.onFaint = r.onFaint || this._onFaint, r.screen = r.screen || this._battleBG, t.addWizard(i, a, s, r)
	},
	addNPC: function (e, t, i, a, s, r, o) {
		return t.addNPC(i, a, s, r, o)
	},
	addGnome: function (e, t, i, a, s, r, o, n) {
		return t.addGnome(i, a, s, r, o, n)
	},
	addBlock: function (e, t, i, a, s) {
		return t.addBlock(i, a, s)
	},
	init: function (e, t, i) {
		for (var a = e.cache.getJSON(this._file), s = e.cache.getJSON("map-pathing").tilesets, r = [], o = 0; 36 > o; o++) {
			r.push([]);
			for (var n = 0; 64 > n; n++) r[o][n] = 1
		}
		for (var o = 0; o < a.layers.length; o++) {
			var l = a.layers[o],
				h = l.name;
			h.toUpperCase().indexOf("B") > -1 ? this.initLayer(e, t, l, a.tilesets, s, r) : this.initLayer(e, i, l, a.tilesets, s)
		}
		return r
	},
	initLayer: function (e, t, i, a, s, r) {
		if (Util.isDefined(i)) {
			for (var o = 0; 32 > o; o++)
				for (var n = 0; 18 > n; n++) {
					var l = 32 * n + o,
						h = i.data[l],
						d = this.getTile(e, h, 40 * o, 40 * n, s, r, a);
					Util.isDefined(d) && t.add(d)
				}
			return t
		}
	},
	getTileset: function (e, t) {
		for (var i = 0; i < e.length; i++) {
			var a = e[i],
				s = a.imageheight / a.tileheight * (a.imagewidth / a.tilewidth);
			if (t >= a.firstgid && t < a.firstgid + s) return a
		}
		return null
	},
	getTileProperties: function (e, t, i) {
		for (var a = 0; a < i.length; a++)
			if (i[a].name === e.name && Util.isDefined(i[a].tileproperties)) return i[a].tileproperties[t];
		return null
	},
	getTile: function (game, ID, x, y, path, area, tilesets, walkable) {
		Util.isDefined(tilesets) || (tilesets = game.cache.getJSON(this._file).tilesets);
		var FLIPPED_HORIZONTALLY_FLAG = 2147483648,
			FLIPPED_VERTICALLY_FLAG = 1073741824,
			FLIPPED_DIAGONALLY_FLAG = 536870912,
			flipped_horizontally = ID & FLIPPED_HORIZONTALLY_FLAG,
			flipped_vertically = ID & FLIPPED_VERTICALLY_FLAG,
			flipped_diagonally = ID & FLIPPED_DIAGONALLY_FLAG;
		ID &= ~(FLIPPED_HORIZONTALLY_FLAG | FLIPPED_VERTICALLY_FLAG | FLIPPED_DIAGONALLY_FLAG);
		var tileset = this.getTileset(tilesets, ID);
		if (!Util.isDefined(tileset) || !Util.isDefined(ID)) return null;
		ID -= tileset.firstgid;
		var properties = this.getTileProperties(tileset, ID, path),
			s;
		if (s = Util.isDefined(properties) && Util.isDefined(properties.anim) ? game.prodigy.create.sprite(x, y, tileset.name, ID) : new Phaser.Image(game, x, y, tileset.name, ID), (flipped_diagonally || flipped_vertically || flipped_horizontally) && (s.anchor.setTo(.5, .5), s.x += 20, s.y += 20), flipped_diagonally ? (s.angle = -90, s.scale.x = -1, flipped_horizontally && (s.scale.y = -s.scale.y), flipped_vertically && (s.scale.x = -s.scale.x)) : (flipped_horizontally && (s.scale.y = -s.scale.y), flipped_vertically && (s.scale.x = -s.scale.x)), Util.isDefined(area) && Util.isDefined(properties) && Util.isDefined(properties.x)) {
			var val = properties.x,
				i = Math.floor(x / 40),
				j = Math.floor(y / 40);
			1 == val[0] && (area[2 * j + 0][2 * i + 0] = 0), 1 == val[1] && (area[2 * j + 0][2 * i + 1] = 0), 1 == val[2] && (area[2 * j + 1][2 * i + 0] = 0), 1 == val[3] && (area[2 * j + 1][2 * i + 1] = 0)
		}
		if (Util.isDefined(area) && walkable)
			for (var i = 0; 2 > i; i++)
				for (var j = 0; 2 > j; j++) area[y / 40 * 2 + i][x / 40 * 2 + j] = 1;
		if (Util.isDefined(properties) && Util.isDefined(properties.anim)) {
			var t = eval("[" + properties.anim + "]");
			s.animations.add("ab", t, 3, !0, !0), s.animations.play("ab")
		}
		return s
	}
}, Prodigy.Map.prototype.constructor = Prodigy.Map, Prodigy.World = function (e) {
	this.game = e, this.zones = {
		tutorial: new Prodigy.Tutorial(e),
		forest: new Prodigy.Forest(e),
		shiverchill: new Prodigy.Shiverchill(e),
		lamplight: new Prodigy.Lamplight(e)
	}, this.states = ["bounties"]
}, Prodigy.World.prototype = {
	teleport: function (e, t, i, a) {
		console.log(e), this.process(), this._currentZone = e;
		var s = e.split("-");
		Util.isDefined(this.zones[s[0]]) ? this.zones[s[0]].teleport(s[1], t, i, a) : "cloud-0" === e ? this.game.state.start("Cloud") : "cloud-1" === e ? this.game.state.start("Plains") : "dino-0" === e ? this.game.state.start("Dino") : "dino-1" === e ? this.game.state.start("Museum") : "house-0" === e ? this.game.state.start("Dorm") : "pirate-0" === e ? this.game.state.start("Pirate") : "tech-0" === e ? this.game.state.start("Tech") : "tower-0" === e ? this.game.state.start("TowerBase") : "town-2" === e ? this.game.state.start("Arena") : "volcano-0" === e ? this.game.state.start("Volcano") : this.zones.lamplight.teleport("B1", t, i, a)
	},
	getCurrentMap: function () {
		return this._currentZone
	},
	getState: function (e) {
		var t = e;
		return this.game.prodigy.player.state.get("world-" + t)
	},
	setState: function (e, t) {
		var i = e;
		this.game.prodigy.player.state.set("world-" + i, t)
	},
	getZone: function (e) {
		return this.zones[e]
	},
	process: function () {
		this.getDate() !== this.getTownState("bounty") ? (this.game.prodigy.bounty.generateBounties(this.getDate()), this.setTownState(this.getDate(), "bounty")) : console.log("existing bounties")
	},
	getTownState: function (e) {
		var t = this.getZone("lamplight");
		return t.getState(e)
	},
	setTownState: function (e, t) {
		var i = this.getZone("lamplight");
		i.setState(t, e)
	},
	getDate: function () {
		var e = new Date,
			t = e.getDate(),
			i = e.getMonth() + 1,
			a = e.getFullYear();
		return 10 > t && (t = "0" + t), 10 > i && (i = "0" + i), i + "" + t + a
	}
}, Prodigy.World.prototype.constructor = Prodigy.World, Prodigy.Tutorial = function (e) {
	Prodigy.Zone.call(this, e), this.name = "Tutorial", this.ID = "tutorial", this.battleBG = "bg-battle-forest", this.onFaint = "tutorial-B9", this.questHub = "tutorial-B9", this.states = ["chest1", "chest2"], this.quests = {
		1: {
			ID: 1,
			desc: "Let's Battle!",
			req: {
				type: "seq",
				N: 1
			},
			area: ["tutorial-B9"],
			chain: !0
		},
		2: {
			ID: 2,
			req: {
				type: "pet",
				ID: 20,
				N: 1,
				U: !0
			},
			area: ["tutorial-C9"],
			chain: !0
		},
		3: {
			ID: 3,
			req: {
				type: "item",
				ID: 68,
				N: 2
			},
			area: ["tutorial-D9"],
			chain: !0
		},
		4: {
			ID: 4,
			req: {
				type: "zone"
			},
			area: ["tutorial-D8"],
			chain: !0
		},
		5: {
			ID: 5,
			req: {
				type: "zone"
			},
			area: ["forest-C8"],
			chain: !0
		}
	};
	var t = ["tileset-forest", "tileset-generic", "tileset-outside", "npc-sprite-noot"];
	this.maps = {
		B9: new Tutorial_B9(this, t),
		C9: new Tutorial_C9(this, t),
		D8: new Tutorial_D8(this, t),
		D9: new Tutorial_D9(this, t)
	}
}, Prodigy.Tutorial.prototype = Object.create(Prodigy.Zone.prototype), Tutorial_B9 = function (e, t) {
	Prodigy.Map.call(this, e, "B9", "Firefly Docks", 400, 400, ["tutorial-C9"], t)
}, Tutorial_B9.prototype = Object.create(Prodigy.Map.prototype), Tutorial_B9.prototype.setup = function (e, t) {
	Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
		x: 1240,
		y: 380,
		w: 80,
		h: 440
	}, "tutorial-C9", 90, 400), Util.isDefined(this._zone.getQuestState()) ? this._zone.isOnQuest(1) && this.quest1(e, t) : this.startQuestline(e, t)
}, Tutorial_B9.prototype.endBattle = function (e) {
	this._zone.completeSequence(1, 0), e.prodigy.world.teleport("tutorial-B9", 550, 400)
}, Tutorial_B9.prototype.startQuestline = function (e, t) {
	this._zone.startQuest(1), this.quest1(e, t)
}, Tutorial_B9.prototype.quest1 = function (e, t) {
	var i = this.addNPC(e, t, 1080, 0, "npc-sprite-noot"),
		a = {
			intro: "Wizard Battle!",
			"catch": !1,
			run: !1,
			screen: "bg-battle-forest",
			allowMember: !1,
			switchDisabled: !0,
			boss: {
				ID: 9,
				element: "storm",
				attacks: [],
				name: "Scarecrow",
				maxHP: 12,
				showHP: !0
			},
			events: [{
				action: "turn",
				value: 0,
				callback: function (e, t) {
					var i = e.prodigy.dialogue.create();
					i.setText(3), i.start("noot", !1, t)
				}
			}, {
				action: "miss",
				repeat: 0,
				callback: function (e, t) {
					var i = e.prodigy.dialogue.create();
					i.setText(4), i.start("noot", !1, t)
				}
			}, {
				action: "hit",
				repeat: 0,
				callback: function (e, t) {
					var i = e.prodigy.dialogue.create();
					i.setText(5), i.start("noot", !1, t)
				}
			}]
		},
		s = function (e) {
			e.prodigy.battle.start(a, this.endBattle.bind(this, e), this.endBattle.bind(this, e), this.endBattle.bind(this, e))
		};
	if (this._zone.isOnSequence(1, 0)) {
		t.menuBar.visible = !1, t.user.x = 200, t.user.y = 380;
		var r = e.prodigy.event.create();
		r.enableInput(!1), r.path(t.user, [{
			x: 550,
			y: 380
		}]), r.enableInput(!0), r.text(0, "noot"), r.enableInput(!1), r.sound("whoosh"), r.path(i, [{
			x: 780,
			y: 380
		}], 3), r.sound("dig"), r.hop(i, 150, -50, 50), r.sound("dig"), r.delay(100), r.enableInput(!0), r.text(1, "noot"), r.function(i.float.bind(i, !0)), r.text(2, "noot"), r.text(28, "noot"), r.function(s.bind(this, e)), r.start()
	} else if (this._zone.isOnSequence(1, 1)) {
		i.x = 730, i.y = 380, i.flip(), i.float(!0), t.user.x = 550, t.user.y = 380;
		var r = e.prodigy.event.create();
		r.text(7, "noot"), r.enableInput(!1), r.path(i, [{
			x: 1100,
			y: 380
		}], 2), r.delay(300), r.function(i.flip.bind(i)), r.function(i.chat.bind(i, 1, 80)), r.hop(i, 200), r.delay(100), r.enableInput(!0), r.text(6, "noot"), r.function(this._zone.completeQuest.bind(this._zone, 1)), r.function(this._zone.startQuest.bind(this._zone, 2)), r.function(t.process.bind(t)), r.path(i, [{
			x: 1350,
			y: 380
		}], 2), r.start()
	}
	t.disablePopups = !0, t.memberIcon.visible = !1
}, Tutorial_B9.prototype.quest2 = function (e, t) {
	if (!this._zone.isQuestStarted(2)) {
		var i = this.addNPC(e, t, 730, 380, "npc-sprite-noot");
		i.flip(), i.float(!0), t.user.x = 550, t.user.y = 380;
		var a = e.prodigy.event.create();
		a.text(7, "noot"), a.enableInput(!1), a.path(i, [{
			x: 1100,
			y: 380
		}], 2), a.delay(300), a.function(i.flip.bind(i)), a.function(i.chat.bind(i, 1, 80)), a.hop(i, 200), a.delay(100), a.enableInput(!0), a.text(6, "noot"), a.function(this._zone.startQuest.bind(this._zone, 2)), a.function(t.process.bind(t)), a.path(i, [{
			x: 1350,
			y: 380
		}], 2), a.start(), t.disablePopups = !0, t.memberIcon.visible = !1
	}
}, Tutorial_C9 = function (e, t) {
	Prodigy.Map.call(this, e, "C9", "Firefly Beach", 90, 400, ["tutorial-B9", "tutorial-D9"], t)
}, Tutorial_C9.prototype = Object.create(Prodigy.Map.prototype), Tutorial_C9.prototype.setup = function (e, t) {
	Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
		x: 40,
		y: 380,
		w: 80,
		h: 440
	}, "tutorial-B9", 1190, 400), this.addAreaEvent(e, t, {
		x: 1240,
		y: 340,
		w: 80,
		h: 280
	}, "tutorial-D9", 90, 400), this._zone.isOnQuest(2) && this.quest2(e, t)
}, Tutorial_C9.prototype.quest2 = function (e, t) {
	var i = {
			encounter: [{
				ID: 20
			}],
			level: 2,
			"catch": !1,
			run: !1,
			allowMember: !1,
			switchDisabled: !0,
			events: [{
				action: "turn",
				value: 0,
				callback: function (e, t) {
					var i = e.prodigy.dialogue.create();
					i.setText(34), i.start("noot", !1, t)
				}
			}]
		},
		a = this.addNPC(e, t, 140, 400, "npc-sprite-noot");
	if (a.float(!0), this._zone.isQuestComplete(2)) {
		a.x = 450, a.y = 250;
		var s = function () {
				this._zone.completeQuest(2), this._zone.startQuest(3);
				var i = e.prodigy.dialogue.create();
				i.setText(7), i.setText({
					callback: a.setPath.bind(a, [{
						x: 1350,
						y: 340
					}], null, 2)
				}), i.start("noot"), t.process()
			},
			r = e.prodigy.event.create();
		r.text(27, "noot"), e.prodigy.player.kennel.getPets().length <= 0 ? r.function(e.prodigy.open.choosePet.bind(e.prodigy.open, s.bind(this))) : r.function(s.bind(this)), r.start(), t.disablePopups = !0
	} else if (this._zone.isOnSequence(2, 0)) {
		this.addMonster(e, t, 1, 740, 280, !0, i);
		var r = e.prodigy.event.create();
		r.text(24, "noot"), r.enableInput(!1), r.path(a, [{
			x: 450,
			y: 250
		}], 2), r.hop(a, 150, -50, 50), r.delay(100), r.enableInput(!0), r.text(25, "noot"), r.text(26, "noot"), r.function(this._zone.completeSequence.bind(this._zone, 2, 0)), r.function(t.process.bind(t)), r.start(), t.disablePopups = !0
	} else this._zone.isOnSequence(2, 1) && (this.addMonster(e, t, 1, 740, 280, !0, i), a.x = 450, a.y = 250);
	t.memberIcon.visible = !1
}, Tutorial_D8 = function (e, t) {
	Prodigy.Map.call(this, e, "D8", "Lakeside Crossing", 1040, 630, ["tutorial-D9", "forest-C8"], t)
}, Tutorial_D8.prototype = Object.create(Prodigy.Map.prototype), Tutorial_D8.prototype.setup = function (e, t) {
	Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
		x: 1040,
		y: 680,
		w: 320,
		h: 80
	}, "tutorial-D9", 1040, 90), this.addAreaEvent(e, t, {
		x: 40,
		y: 520,
		w: 80,
		h: 240
	}, "forest-C8", 1190, 520), this.addAreaEvent(e, t, {
		x: 1240,
		y: 260,
		w: 80,
		h: 200
	}, "lamplight-B1", 100, 300), this._zone.isOnQuest(4) && this.quest4(e, t)
}, Tutorial_D8.prototype.quest4 = function (e, t) {
	var i = function () {},
		a = this.addNPC(e, t, 1040, 600, "npc-sprite-noot");
	a.float(!0);
	var s = e.prodigy.event.create();
	s.enableInput(!1), s.path(a, [{
		x: 550,
		y: 300
	}], 2), s.path(t.user, [{
		x: 730,
		y: 300
	}]), s.function(a.flip.bind(a)), s.enableInput(!0), s.text(35, "noot"), s.text(42, "noot"), s.text(43, "noot"), s.text(36, "noot"), s.text(37, "noot"), s.enableInput(!1), s.hop(a, 300, 180, 100), s.set(a, "visible", !1), s.function(this._zone.completeQuest.bind(this._zone, 4)), s.function(this._zone.startQuest.bind(this._zone, 5)), s.function(i.bind(this)), s.function(t.process.bind(t)), s.enableInput(!0), s.start(), t.disablePopups = !0, t.memberIcon.visible = !1
}, Tutorial_D9 = function (e, t) {
	Prodigy.Map.call(this, e, "D9", "The Beach", 90, 300, ["tutorial-C9", "tutorial-D8"], t)
}, Tutorial_D9.prototype = Object.create(Prodigy.Map.prototype), Tutorial_D9.prototype.setup = function (e, t) {
	Prodigy.Map.prototype.setup.call(this, e, t), this._zone.getQuestState() && this._zone.getQuestState().ID > 5 && this.drawBridge(e, t), this.addAreaEvent(e, t, {
		x: 40,
		y: 340,
		w: 80,
		h: 280
	}, "tutorial-C9", 1190, 400), this.addAreaEvent(e, t, {
		x: 1040,
		y: 40,
		w: 320,
		h: 80
	}, "tutorial-D8", 1040, 630), this.noot = this.addNPC(e, t, 0, 400, "npc-sprite-noot"), this.noot.float(!0), this._zone.isOnQuest(3) ? this.quest3(e, t) : (this.drawBridge(e, t), this.noot.destroy())
}, Tutorial_D9.prototype.quest3 = function (e, t) {
	var i = {
			encounter: [{
				ID: 20
			}],
			"catch": !1,
			allowMember: !1
		},
		a = {
			type: "item",
			ID: 68
		};
	if (this._zone.isQuestComplete(3));
	else if (this._zone.isOnSequence(3, 0)) {
		this.addCollect(e, t, 1, 980, 520, a), this.addCollect(e, t, 2, 650, 320, a), this.addMonster(e, t, 1, 900, 450, !1, i);
		var s = e.prodigy.event.create();
		s.enableInput(!1), s.path(this.noot, [{
			x: 400,
			y: 300
		}], 2), s.enableInput(!0), s.text(29, "noot"), s.function(this._zone.completeSequence.bind(this._zone, 3, 0)), s.function(t.process.bind(t)), s.text(30, "noot"), s.text(31, "noot"), s.start(), t.disablePopups = !0
	} else this._zone.isOnSequence(3, 1) && (this.addCollect(e, t, 1, 980, 520, a), this.addCollect(e, t, 2, 650, 320, a), this.addMonster(e, t, 1, 900, 450, !1, i), this.noot.x = 400, this.noot.y = 300);
	t.memberIcon.visible = !1
}, Tutorial_D9.prototype.process = function (e, t) {
	if (this._zone.isQuestComplete(3)) {
		this.noot.x = 400, this.noot.y = 300;
		var i = e.prodigy.event.create();
		i.text(32, "noot"), i.enableInput(!1), i.path(this.noot, [{
			x: 1040,
			y: 250
		}], 3), i.explode(960, 150, 160, 240, 4), i.function(this.drawBridge.bind(this, e, t)), i.enableInput(!0), i.text(33, "noot"), i.path(this.noot, [{
			x: 1040,
			y: 0
		}], 2), i.function(this._zone.completeQuest.bind(this._zone, 3)), i.function(this._zone.startQuest.bind(this._zone, 4)), i.function(t.process.bind(t)), i.start()
	}
}, Tutorial_D9.prototype.drawBridge = function (e, t) {
	for (var i = 0; 2 > i; i++)
		for (var a = 0; 3 > a; a++) t.floor.add(this.getTile(e, 342, 40 * (25 + i), 40 * (5 + a), t.path, t.area, null, !0))
}, Prodigy.Forest = function (e) {
	Prodigy.Zone.call(this, e), this.name = "Firefly Forest", this.ID = "forest", this.battleBG = "bg-battle-forest", this.onFaint = "forest-C8", this.questHub = "forest-C8", this.minLevel = 1, this.maxLevel = 25, this.states = ["chest1", "chest2", "chest3", "chest4", "wizard1", "wizard2", "wizard3", "wizard4"], this.monsters = [25, 29, 32, 55, 59, 69, 81];
	var t = ["tileset-forest", "tileset-generic", "tileset-outside", "npc-sprite-wizard"];
	this.maps = {
		A3: new Forest_A3(this, t),
		A4: new Forest_A4(this, t),
		A5: new Forest_A5(this, t),
		B5: new Forest_B5(this, t),
		B6: new Forest_B6(this, t),
		B7: new Forest_B7(this, t),
		B8: new Forest_B8(this, t),
		C4: new Forest_C4(this, t),
		C7: new Forest_C7(this, t),
		C8: new Forest_C8(this, t),
		D3: new Forest_D3(this, t)
	}, this.quests = {
		1: {
			ID: 1,
			req: {
				type: "pet",
				ID: 81,
				N: 2,
				U: !0
			},
			area: ["forest-B8"],
			onStart: [0, 1, 2, 3],
			onComplete: [39],
			reward: [{
				type: "gold",
				N: 200
			}]
		},
		2: {
			ID: 2,
			req: {
				type: "weapon",
				ID: 1,
				N: 1
			},
			area: ["forest-B7"],
			onStart: [4, 5, 6],
			onComplete: [7],
			reward: [{
				type: "gold",
				N: 200
			}]
		},
		3: {
			ID: 3,
			req: {
				type: "pet",
				ID: 52,
				N: 3
			},
			area: ["forest-B6"],
			onStart: [8, 9, 10],
			onComplete: [39],
			reward: [{
				type: "gold",
				N: 200
			}]
		},
		4: {
			ID: 4,
			req: {
				type: "item",
				ID: 66,
				N: 3
			},
			area: ["forest-B5"],
			onStart: [11, 12, 13],
			onComplete: [39],
			reward: [{
				type: "spell",
				ID: 13
			}, {
				type: "item",
				ID: 67
			}]
		},
		5: {
			ID: 5,
			desc: "Talk to Merchant",
			req: {
				type: "seq",
				N: 1
			},
			area: ["forest-C4"],
			onStart: [14, 15],
			onComplete: [39],
			reward: [{
				type: "gold",
				N: 200
			}]
		},
		6: {
			ID: 6,
			req: {
				type: "item",
				ID: 24,
				N: 1
			},
			area: ["forest-D3"],
			onStart: [16, 17],
			onComplete: [39],
			reward: [{
				type: "gold",
				N: 200
			}]
		},
		7: {
			ID: 7,
			req: {
				type: "item",
				ID: 24,
				N: 5
			},
			area: ["forest-A4", "forest-A5"],
			onStart: [18, 19, 20],
			onComplete: [39],
			reward: [{
				type: "gold",
				N: 200
			}]
		},
		8: {
			ID: 8,
			desc: "Defeat the Trio!",
			req: {
				type: "seq",
				N: 2
			},
			area: ["forest-A3"],
			onStart: [21, 22, 23],
			onComplete: [39],
			reward: [{
				type: "spell",
				ID: 14
			}]
		},
		9: {
			ID: 9,
			desc: "Find Gerald",
			req: {
				type: "seq",
				N: 1
			},
			area: ["forest-D3"],
			onStart: [24, 25],
			onComplete: [26],
			reward: [{
				type: "gold",
				N: 200
			}]
		},
		10: {
			ID: 10,
			desc: "Fix the Flute",
			req: {
				type: "seq",
				N: 1
			},
			area: ["forest-A5"],
			onStart: [27, 28, 29],
			onComplete: [30],
			reward: [{
				type: "gold",
				N: 200
			}]
		},
		11: {
			ID: 11,
			req: {
				type: "item",
				ID: 70,
				N: 1
			},
			area: ["forest-A3", "forest-D3"],
			onStart: [31, 32],
			onComplete: [39],
			reward: [{
				type: "gold",
				N: 200
			}]
		},
		12: {
			ID: 12,
			desc: "Wake up Gerald",
			req: {
				type: "seq",
				N: 1
			},
			area: ["forest-D3"],
			onStart: [33, 34],
			onComplete: [35],
			reward: [{
				type: "spell",
				ID: 15
			}, {
				type: "key",
				ID: 3
			}]
		},
		13: {
			ID: 13,
			desc: "Head to the Gate",
			req: {
				type: "seq",
				N: 1
			},
			area: ["forest-A3"],
			onStart: [36, 37],
			onComplete: [39]
		}
	}, this.store = {
		name: "Firefly Outfitters",
		items: [{
			ID: 33,
			type: "hat"
		}, {
			ID: 24,
			type: "weapon"
		}, {
			ID: 29,
			type: "outfit"
		}, {
			ID: 36,
			type: "pet"
		}]
	}
}, Prodigy.Forest.prototype = Object.create(Prodigy.Zone.prototype), Forest_A3 = function (e, t) {
	Prodigy.Map.call(this, e, "A3", "Mountain Gate", 1080, 630, ["forest-A4"], t)
}, Forest_A3.prototype = Object.create(Prodigy.Map.prototype), Forest_A3.prototype.setup = function (e, t) {
	if (Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
			x: 1080,
			y: 680,
			w: 320,
			h: 80
		}, "forest-A4", 1080, 90), this.addHealEvent(e, t, 270, 435), this._zone.isOnQuest(8) ? this.quest8(e, t) : this._zone.isOnQuest(11) ? this.quest11(e, t) : this._zone.isOnQuest(13) && this.quest13(e, t), this._zone.getQuestState() && this._zone.getQuestState().ID >= 13) {
		var i = t.above.add(e.prodigy.create.sprite(440, 80, "core", "overlay-light"));
		i.alpha = 0, i.width = 400, i.height = 200, i.inputEnabled = !0, i.events.onInputDown.add(this.enterGate.bind(this, e, t))
	}
}, Forest_A3.prototype.endBattle = function (e) {
	this._zone.completeSequence(8, 0), e.prodigy.world.teleport("forest-A3", 640, 400)
}, Forest_A3.prototype.quest8 = function (e, t) {
	var i = {
			intro: "TripTrop Trio!",
			"catch": !1,
			run: !1,
			screen: "bg-battle-forest",
			drops: [{
				ID: 69,
				type: "item"
			}],
			pets: [{
				ID: 59,
				nickname: "TripTrop Ted"
			}, {
				ID: 59,
				nickname: "TripTrop Tom"
			}, {
				ID: 59,
				nickname: "TripTrop Tak"
			}]
		},
		a = function (e) {
			e.prodigy.battle.start(i, null, this.endBattle.bind(this, e, !0), null, this._onFaint)
		};
	if (!this._zone.isQuestComplete(8))
		if (this._zone.isOnSequence(8, 0)) {
			var s = this.addMonster(e, t, 1, 640, 330, !1, {
				encounter: [{
					ID: 59
				}]
			});
			s.flip();
			var r = this.addMonster(e, t, 2, 540, 360, !1, {
				encounter: [{
					ID: 59
				}]
			});
			r.flip();
			var o = this.addMonster(e, t, 3, 740, 360, !1, {
				encounter: [{
					ID: 59
				}]
			});
			o.flip(), t.user.evtProc = !0;
			var n = e.prodigy.event.create();
			n.enableInput(!1), n.path(t.user, [{
				x: 910,
				y: 480
			}]), n.delay(100), n.function(s.chat.bind(s, 1, 80)), n.hop(s, 200), n.function(s.flip.bind(s)), n.function(r.chat.bind(r, 1, 80)), n.hop(r, 200), n.function(r.flip.bind(r)), n.function(o.chat.bind(o, 1, 80)), n.hop(o, 200), n.function(o.flip.bind(o)), n.enableInput(!0), n.text(56, "noot"), n.function(a.bind(this, e)), n.start(), t.disablePopups = !0
		} else if (this._zone.isOnSequence(8, 1)) {
		var n = e.prodigy.event.create();
		n.text(57, "noot"), n.text(58, "noot"), n.function(this._zone.completeSequence.bind(this._zone, 8, 1)), n.function(t.process.bind(t)), n.start(), t.disablePopups = !0
	}
}, Forest_A3.prototype.quest11 = function (e, t) {
	var i = {
		"catch": !1,
		drops: [{
			ID: 70,
			type: "item"
		}],
		encounter: [{
			ID: 69,
			nickname: "Forest Thief"
		}]
	};
	this.addMonster(e, t, 1, 384, 463, !0, i)
}, Forest_A3.prototype.quest13 = function (e, t) {
	if (!this._zone.isQuestComplete(13) && this._zone.isOnSequence(13, 0)) {
		var i = e.prodigy.event.create();
		i.enableInput(!1), i.path(t.user, [{
			x: 640,
			y: 420
		}]), i.delay(100), i.enableInput(!0), i.text(64, "noot"), i.text(65, "noot"), i.enableInput(!1), i.path(t.user, [{
			x: 640,
			y: 260
		}]), i.function(this.enterGate.bind(this, e, t)), i.enableInput(!0), i.start(), t.disablePopups = !0
	}
}, Forest_A3.prototype.enterGate = function (e) {
	this._zone.isOnSequence(13, 0) && this._zone.completeSequence(13, 0), e.prodigy.world.teleport("shiverchill-A11", 200, 630)
}, Forest_A4 = function (e, t) {
	Prodigy.Map.call(this, e, "A4", "Mountain Pass", 1080, 520, ["forest-A3", "forest-A5", "forest-B5"], t), this.coord = [{
		x: 200,
		y: 500
	}, {
		x: 755,
		y: 400
	}]
}, Forest_A4.prototype = Object.create(Prodigy.Map.prototype), Forest_A4.prototype.setup = function (e, t) {
	Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
		x: 1080,
		y: 40,
		w: 320,
		h: 80
	}, "forest-A3", 1080, 630), this.addAreaEvent(e, t, {
		x: 1280,
		y: 720,
		r: 200
	}, "forest-B5", 200, 200), this.addAreaEvent(e, t, {
		x: 220,
		y: 680,
		w: 280,
		h: 80
	}, "forest-A5", 220, 90), this._zone.isOnQuest(7) && this.quest7(e, t);
	var i = {
		randDir: !0,
		encounter: [{
			ID: 59
		}, {
			ID: 52
		}, {
			ID: 36
		}]
	};
	this.addMonster(e, t, 1, 606, 510, !1, i);
	var i = {
		opponent: [{
			data: {
				level: 9
			},
			appearance: {
				name: "Lucky Jack",
				gender: "male",
				hairStyle: 1,
				hairColor: 3,
				skinColor: 1,
				eyeColor: 4
			},
			equipment: {
				hat: 8,
				outfit: 16,
				weapon: 24
			}
		}],
		pets: [{
			ID: 36,
			level: 5
		}, {
			ID: 69,
			level: 3
		}, {
			ID: 61,
			level: 5
		}]
	};
	this.addWizard(e, t, 1046, 208, "wizard4", i).flip()
}, Forest_A4.prototype.quest7 = function (e, t) {
	if (!this._zone.isQuestComplete(7)) {
		var i = {
			type: "item",
			ID: 24
		};
		this.addCollect(e, t, 1, 162, 391, i), this.addCollect(e, t, 2, 780, 314, i)
	}
}, Forest_A5 = function (e, t) {
	Prodigy.Map.call(this, e, "A5", "Firefly Crossing", 220, 90, ["forest-A4"], t), this.coord = [{
		x: 160,
		y: 600
	}, {
		x: 1e3,
		y: 510
	}, {
		x: 50,
		y: 420
	}]
}, Forest_A5.prototype = Object.create(Prodigy.Map.prototype), Forest_A5.prototype.setup = function (e, t) {
	if (Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
			x: 220,
			y: 40,
			w: 280,
			h: 80
		}, "forest-A4", 220, 630), this._zone.isOnQuest(7) ? this.quest7(e, t) : this._zone.isOnQuest(10) && this.quest10(e, t), !this._zone.isOnQuest(10)) {
		var i = {
			randDir: !0,
			encounter: [{
				ID: 32
			}, {
				ID: 52
			}, {
				ID: 55
			}, {
				ID: 59
			}, {
				ID: 69
			}, {
				ID: 36
			}]
		};
		this.addMonster(e, t, 1, 414, 482, !1, i), this.addMonster(e, t, 2, 697, 343, !1, i), this.addMonster(e, t, 3, 755, 601, !1, i)
	}
	this.addChest(e, t, "chest3", 830, 240, [{
		type: "outfit",
		ID: 12
	}])
}, Forest_A5.prototype.quest7 = function (e, t) {
	if (!this._zone.isQuestComplete(7)) {
		var i = {
			type: "item",
			ID: 24
		};
		this.addCollect(e, t, 3, 154, 511, i), this.addCollect(e, t, 4, 1e3, 380, i), this.addCollect(e, t, 5, 552, 210, i)
	}
}, Forest_A5.prototype.quest10 = function (e, t) {
	if (!this._zone.isQuestComplete(10)) {
		var i = e.prodigy.create.element(t.content, 520, 375),
			a = i.add(e.prodigy.create.sprite(0, 0, "core", "overlay-light"));
		a.alpha = 0, a.width = 120, a.height = 80, i.highlight(!0, 0, -20), a.inputEnabled = !0, a.events.onInputDown.add(this.clickStump.bind(this, e, t, i))
	}
}, Forest_A5.prototype.clickStump = function (e, t, i) {
	var a = t.content.add(e.prodigy.create.sprite(578, 380, "icons", "item/69"));
	a.anchor.setTo(.5, 1), e.add.tween(a).to({
		y: 370
	}, 1e3, Phaser.Easing.Quadratic.InOut, !0, 0, Number.MAX_VALUE, !0), a.visible = !1;
	var s = this.addMonster(e, t, 1, 982, 626, !1, {
		encounter: [{
			ID: 69
		}]
	});
	s.visible = !1;
	var r = e.prodigy.event.create();
	r.function(i.highlight.bind(i, !1)), r.enableInput(!1), r.path(t.user, [{
		x: 537,
		y: 460
	}]), r.set(t.user, "evtProc", !0), r.function(e.prodigy.player.backpack.consume.bind(e.prodigy.player.backpack, "item", 69, 1)), r.delay(100), r.set(a, "visible", !0), r.delay(500), r.explode(548, 325, 80, 80, 3), r.set(a, "frameName", "item/70"), r.delay(500), r.set(s, "visible", !0), r.path(s, [{
		x: 708,
		y: 383
	}], 1), r.hop(s, 500, -140, 100), r.set(a, "visible", !1), r.function(t.user.chat.bind(t.user, 1, 80)), r.sound("dig"), r.hop(s, 500, -160, 100), r.path(s, [{
		x: 218,
		y: 0
	}], 2), r.set(s, "visible", !1), r.enableInput(!0), r.text(60, "noot"), r.function(i.destroy.bind(i)), r.function(this._zone.completeSequence.bind(this._zone, 10, 0)), r.set(t.user, "evtProc", !1), r.function(t.process.bind(t)), r.start()
}, Forest_B5 = function (e, t) {
	Prodigy.Map.call(this, e, "B5", "The Crossroads", 1100, 630, ["forest-A4", "forest-C4", "forest-B6"], t), this.coord = [{
		x: 1250,
		y: 180
	}, {
		x: 200,
		y: 200
	}, {
		x: 690,
		y: 125
	}]
}, Forest_B5.prototype = Object.create(Prodigy.Map.prototype), Forest_B5.prototype.setup = function (e, t) {
	Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
		x: 0,
		y: 0,
		r: 200
	}, "forest-A4", 1080, 520), this.addAreaEvent(e, t, {
		x: 1280,
		y: 0,
		r: 200
	}, "forest-C4", 200, 520), this.addAreaEvent(e, t, {
		x: 1100,
		y: 680,
		w: 280,
		h: 80
	}, "forest-B6", 1100, 90), this._zone.isOnQuest(4) && this.quest4(e, t);
	var i = {
		opponent: [{
			data: {
				level: 4
			},
			appearance: {
				name: "Woodsman Mike",
				gender: "male",
				hairStyle: 4,
				hairColor: 2,
				skinColor: 2,
				eyeColor: 3
			},
			equipment: {
				hat: 7,
				outfit: 12,
				weapon: 1
			}
		}],
		pets: [{
			ID: 32,
			level: 3
		}]
	};
	this.addWizard(e, t, 335, 371, "wizard2", i)
}, Forest_B5.prototype.quest4 = function (e, t) {
	if (!this._zone.isQuestComplete(4)) {
		var i = {
			type: "item",
			ID: 66
		};
		this.addCollect(e, t, 1, 426, 472, i), this.addCollect(e, t, 2, 904, 472, i), this.addCollect(e, t, 3, 696, 241, i);
		var a = {
			randDir: !0,
			randRange: 200,
			encounter: [{
				ID: 81
			}]
		};
		this.addMonster(e, t, 1, 899, 297, !1, a), this.addMonster(e, t, 2, 562, 307, !1, a)
	}
}, Forest_B6 = function (e, t) {
	Prodigy.Map.call(this, e, "B6", "Grassy Clearing", 200, 630, ["forest-B5", "forest-B7"], t), this.coord = [{
		x: 80,
		y: 460
	}, {
		x: 240,
		y: 130
	}, {
		x: 540,
		y: 260
	}]
}, Forest_B6.prototype = Object.create(Prodigy.Map.prototype), Forest_B6.prototype.setup = function (e, t) {
	Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
		x: 1100,
		y: 40,
		w: 280,
		h: 80
	}, "forest-B5", 1100, 630), this.addAreaEvent(e, t, {
		x: 200,
		y: 680,
		w: 320,
		h: 80
	}, "forest-B7", 200, 90);
	var i = this.addHealEvent(e, t, 980, 443);
	this._zone.isOnQuest(3) ? this.quest3(e, t, i) : this.showMonsters(e, t)
}, Forest_B6.prototype.quest3 = function (e, t) {
	if (this._zone.isQuestComplete(3)) this.showMonsters(e, t);
	else {
		var i = {
			randDir: !0,
			randRange: 200,
			encounter: [{
				ID: 52
			}]
		};
		if (this.addMonster(e, t, 1, 369, 152, !1, i), this.addMonster(e, t, 2, 819, 218, !1, i), this.addMonster(e, t, 3, 558, 416, !1, i), this._zone.isOnSequence(3, 0)) {
			var a = e.prodigy.event.create();
			a.text(53, "noot"), a.start(), this._zone.completeSequence(3, 0), t.disablePopups = !0
		}
	}
}, Forest_B6.prototype.showMonsters = function (e, t) {
	var i = {
		randDir: !0,
		encounter: [{
			ID: 29
		}, {
			ID: 32
		}, {
			ID: 59
		}, {
			ID: 81
		}]
	};
	this.addMonster(e, t, 1, 369, 152, !1, i), this.addMonster(e, t, 2, 819, 218, !1, i), this.addMonster(e, t, 3, 558, 416, !1, i)
}, Forest_B7 = function (e, t) {
	Prodigy.Map.call(this, e, "B7", "Fisherman's Pond", 1190, 240, ["forest-B6", "forest-C7"], t), this.coord = [{
		x: 955,
		y: 690
	}, {
		x: 130,
		y: 530
	}, {
		x: 255,
		y: 680
	}]
}, Forest_B7.prototype = Object.create(Prodigy.Map.prototype), Forest_B7.prototype.setup = function (e, t) {
	Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
		x: 200,
		y: 40,
		w: 320,
		h: 80
	}, "forest-B6", 200, 630), this.addAreaEvent(e, t, {
		x: 1240,
		y: 240,
		w: 80,
		h: 280
	}, "forest-C7", 90, 240);
	var i = {
		randDir: !0,
		encounter: [{
			ID: 29
		}, {
			ID: 32
		}, {
			ID: 59
		}, {
			ID: 81
		}]
	};
	this.addMonster(e, t, 1, 253, 288, !1, i), this.addMonster(e, t, 2, 205, 536, !1, i), this.addMonster(e, t, 3, 632, 542, !1, i), this.addChest(e, t, "chest1", 820, 280, [{
		type: "weapon",
		ID: 1
	}])
}, Forest_B8 = function (e, t) {
	Prodigy.Map.call(this, e, "B8", "Firefly Clearing", 1190, 480, ["forest-C8"], t.concat("npc-sprite-merchant")), this.coord = [{
		x: 490,
		y: 570
	}, {
		x: 785,
		y: 170
	}, {
		x: 440,
		y: 200
	}]
}, Forest_B8.prototype = Object.create(Prodigy.Map.prototype), Forest_B8.prototype.setup = function (e, t) {
	Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
		x: 1240,
		y: 480,
		w: 80,
		h: 200
	}, "forest-C8", 90, 480);
	var i = this.addNPC(e, t, 378, 313, "npc-sprite-merchant", this.chatWithMerchant.bind(this, e));
	i.flip(), i.animate("stand"), this._zone.isOnQuest(1) && this.quest1(e, t, i), this.addChest(e, t, "chest4", 1136, 264, [{
		type: "gold",
		N: 500
	}])
}, Forest_B8.prototype.quest1 = function (e, t, i) {
	this._zone.isOnSequence(1, 0) && (i.chat(1, 80), this.chatWithMerchant(e), this._zone.completeSequence(1, 0), t.disablePopups = !0);
	var a = {
		run: !1,
		encounter: [{
			ID: 81
		}]
	};
	this.addMonster(e, t, 1, 384, 463, !0, a), this.addMonster(e, t, 2, 554, 338, !0, a)
}, Forest_B8.prototype.chatWithMerchant = function (e) {
	var t = e.prodigy.event.create();
	this._zone.isOnQuest(1) && !this._zone.isQuestComplete(1) ? t.text(1, "merchant") : t.text(2, "merchant"), t.start()
}, Forest_C4 = function (e, t) {
	Prodigy.Map.call(this, e, "C4", "The Old Road", 200, 520, ["forest-B5", "forest-D3"], t.concat(["npc-sprite-merchant"])), this.coord = [{
		x: 400,
		y: 680
	}, {
		x: 820,
		y: 680
	}, {
		x: 800,
		y: 330
	}]
}, Forest_C4.prototype = Object.create(Prodigy.Map.prototype), Forest_C4.prototype.setup = function (e, t) {
	Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
		x: 0,
		y: 720,
		r: 200
	}, "forest-B5", 1080, 200), this.addAreaEvent(e, t, {
		x: 1280,
		y: 0,
		r: 200
	}, "forest-D3", 200, 520), this.npc = this.addNPC(e, t, 378, 313, "npc-sprite-merchant", this.chatWithMerchant.bind(this, e, t)), this.npc.flip(), this.npc.animate("stand"), this._zone.isOnQuest(5) && this.quest5(e, t);
	var i = {
		randDir: !0,
		encounter: [{
			ID: 29
		}, {
			ID: 55
		}, {
			ID: 69
		}]
	};
	this.addMonster(e, t, 1, 608, 488, !1, i), this.addMonster(e, t, 2, 787, 200, !1, i);
	var i = {
		opponent: [{
			data: {
				level: 7
			},
			appearance: {
				name: "Caleb Forestmaster",
				gender: "male",
				hairStyle: 6,
				hairColor: 3,
				skinColor: 1,
				eyeColor: 4
			},
			equipment: {
				hat: 15,
				outfit: 29,
				weapon: 8
			}
		}],
		pets: [{
			ID: 55,
			level: 5
		}, {
			ID: 29,
			level: 7
		}]
	};
	this.addWizard(e, t, 1040, 450, "wizard3", i).flip(), this.addChest(e, t, "chest2", 234, 357, [{
		type: "gold",
		N: 250
	}])
}, Forest_C4.prototype.quest5 = function () {
	this._zone.isQuestComplete(5) || this.npc.highlight(!0, -120, -130)
}, Forest_C4.prototype.chatWithMerchant = function (e, t) {
	var i = e.prodigy.event.create();
	this._zone.isOnQuest(5) ? this._zone.isOnSequence(5, 0) ? (i.function(this.npc.highlight.bind(this.npc, !1)), i.text(3, "merchant"), i.enableInput(!1), i.function(this.npc.chat.bind(this.npc, 7, 100)), i.delay(2e3), i.function(this.npc.chat.bind(this.npc, 1, 100)), i.delay(500), i.enableInput(!0), i.text(4, "merchant"), i.text(5, "merchant"), i.function(this._zone.completeSequence.bind(this._zone, 5, 0)), i.function(t.process.bind(t))) : i.text(6, "merchant") : i.text(6, "merchant"), i.start()
}, Forest_C7 = function (e, t) {
	Prodigy.Map.call(this, e, "C7", "Stonefish Beach", 200, 630, ["forest-B7", "forest-C8"], t), this.coord = [{
		x: 640,
		y: 570
	}, {
		x: 330,
		y: 110
	}, {
		x: 160,
		y: 260
	}]
}, Forest_C7.prototype = Object.create(Prodigy.Map.prototype), Forest_C7.prototype.setup = function (e, t) {
	Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
		x: 40,
		y: 220,
		w: 80,
		h: 200
	}, "forest-B7", 1190, 240), this.addAreaEvent(e, t, {
		x: 200,
		y: 680,
		w: 240,
		h: 80
	}, "forest-C8", 200, 90), this.addCollect(e, t, 1, 980, 520, {
		type: "item",
		ID: "51"
	});
	var i = {
		opponent: [{
			data: {
				level: 2
			},
			appearance: {
				name: "Milly",
				gender: "female",
				hairStyle: 1,
				hairColor: 3,
				skinColor: 1,
				eyeColor: 2
			},
			equipment: {
				hat: 12
			}
		}],
		pets: []
	};
	this.addWizard(e, t, 406, 344, "wizard1", i)
}, Forest_C8 = function (e, t) {
	Prodigy.Map.call(this, e, "C8", "The Big Tree", 1190, 520, ["forest-C7", "forest-B8", "tutorial-D8"], t.concat("npc-sprite-flora", "npc-sprite-merchant"))
}, Forest_C8.prototype = Object.create(Prodigy.Map.prototype), Forest_C8.prototype.setup = function (e, t) {
	Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
		x: 200,
		y: 40,
		w: 240,
		h: 80
	}, "forest-C7", 200, 630), this.addAreaEvent(e, t, {
		x: 40,
		y: 480,
		w: 80,
		h: 200
	}, "forest-B8", 1190, 480), this.addAreaEvent(e, t, {
		x: 1240,
		y: 520,
		w: 80,
		h: 240
	}, "tutorial-D8", 90, 520), this.addHealEvent(e, t, 148, 286), e.prodigy.world.getZone("tutorial").completeQuest(5);
	var i = function (e) {
		var t = e.prodigy.event.create();
		t.text(39, "flora"), t.start()
	};
	this.addQuestNPC(e, t, 756, 390, "flora", !0, i.bind(this, e)), t.menuBar.addStore(), t.createStoreNPC(1117, 316, this._zone.store)
}, Forest_D3 = function (e, t) {
	Prodigy.Map.call(this, e, "D3", "Old Road Remains", 200, 520, ["forest-C4"], t.concat("zone-forest")), this.coord = [{
		x: 500,
		y: 640
	}, {
		x: 750,
		y: 120
	}, {
		x: 1230,
		y: 485
	}]
}, Forest_D3.prototype = Object.create(Prodigy.Map.prototype), Forest_D3.prototype.setup = function (e, t) {
	if (Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
			x: 0,
			y: 720,
			r: 200
		}, "forest-C4", 1080, 200), this._zone.isOnQuest(6)) this.quest6(e, t);
	else if (this._zone.isOnQuest(9)) this.quest9(e, t);
	else if (this._zone.isOnQuest(12)) this.quest12(e, t);
	else {
		var i = {
			randDir: !0,
			encounter: [{
				ID: 52
			}, {
				ID: 55
			}, {
				ID: 69
			}, {
				ID: 81
			}, {
				ID: 61
			}]
		};
		this.addMonster(e, t, 1, 481, 239, !1, i), this.addMonster(e, t, 2, 634, 428, !1, i), this.addMonster(e, t, 3, 926, 230, !1, i), this.addMonster(e, t, 4, 940, 533, !1, i)
	}
	if (this._zone.getQuestState() && this._zone.getQuestState().ID > 8 && this._zone.getQuestState().ID < 14 && !this._zone.isQuestComplete(12)) {
		var a = t.content.add(e.prodigy.create.sprite(880, 420, "zone-forest", "golem"));
		a.anchor.setTo(.5, 1)
	}
}, Forest_D3.prototype.quest6 = function (e, t) {
	if (!this._zone.isQuestComplete(6)) {
		if (this._zone.isOnSequence(6, 0)) {
			var i = e.prodigy.event.create();
			i.text(54, "noot"), i.text(55, "noot"), i.function(this._zone.completeSequence.bind(this._zone, 6, 0)), i.start(), t.disablePopups = !0
		}
		var a = {
			randDir: !0,
			encounter: [{
				ID: 32,
				drops: [{
					type: "item",
					ID: 24,
					R: .5
				}]
			}]
		};
		this.addMonster(e, t, 1, 481, 239, !1, a), this.addMonster(e, t, 2, 634, 428, !1, a), this.addMonster(e, t, 3, 926, 230, !1, a), this.addMonster(e, t, 4, 940, 533, !1, a)
	}
}, Forest_D3.prototype.quest9 = function (e, t) {
	if (!this._zone.isQuestComplete(9) && this._zone.isOnSequence(9, 0)) {
		var i = e.prodigy.event.create();
		i.text(59, "noot"), i.function(this._zone.completeSequence.bind(this._zone, 9, 0)), i.function(t.process.bind(t)), i.start(), t.disablePopups = !0
	}
}, Forest_D3.prototype.quest12 = function (e, t) {
	if (!this._zone.isQuestComplete(12)) {
		var i = {
				intro: "Boss Battle!",
				"catch": !1,
				run: !1,
				screen: "bg-battle-forest",
				boss: {
					ID: 10,
					element: "earth",
					attacks: [13, 14, 15, 16],
					name: "Gerald",
					maxHP: 112,
					starBonus: 40
				}
			},
			a = function (e) {
				e.prodigy.battle.start(i, null, this.endBattle.bind(this, e, !0), null, this._onFaint)
			};
		if (this._zone.isOnSequence(12, 0)) {
			var s = e.prodigy.event.create();
			s.enableInput(!1), s.path(t.user, [{
				x: 572,
				y: 342
			}]), s.enableInput(!0), s.text(61, "noot"), s.text(62, "noot"), s.text(63, "noot"), s.function(a.bind(this, e)), s.start()
		}
	}
	t.disablePopups = !0
}, Forest_D3.prototype.endBattle = function (e) {
	this._zone.completeSequence(12, 0), e.prodigy.world.teleport("forest-D3", 572, 342)
}, Prodigy.Shiverchill = function (e) {
	Prodigy.Zone.call(this, e), this.name = "Shiverchill Mountain", this.ID = "shiverchill", this.battleBG = "bg-battle-mountain", this.onFaint = "shiverchill-A10", this.questHub = "shiverchill-A10", this.minLevel = 15, this.maxLevel = 45, this.states = ["chest1", "chest2", "chest3", "chest4", "chest5", "wizard1", "wizard2", "wizard3", "wizard4", "furnace", "chest6"], this.monsters = [16, 50, 122, 78, 87];
	var t = ["tileset-railruins", "tileset-outsidesnow", "tileset-icecave", "npc-sprite-wizard"];
	this.maps = {
		A11: new Prodigy.Shiverchill_A11(this, t),
		A10: new Prodigy.Shiverchill_A10(this, t),
		A9: new Prodigy.Shiverchill_A9(this, t),
		A7: new Prodigy.Shiverchill_A7(this, t),
		A6: new Prodigy.Shiverchill_A6(this, t),
		A5: new Prodigy.Shiverchill_A5(this, t),
		B3: new Prodigy.Shiverchill_B3(this, t),
		B6: new Prodigy.Shiverchill_B6(this, t),
		B7: new Prodigy.Shiverchill_B7(this, t),
		B8: new Prodigy.Shiverchill_B8(this, t),
		B9: new Prodigy.Shiverchill_B9(this, t),
		B10: new Prodigy.Shiverchill_B10(this, t),
		A4: new Prodigy.Shiverchill_A4(this, t),
		A2: new Prodigy.Shiverchill_A2(this, t),
		A3: new Prodigy.Shiverchill_A3(this, t),
		B2: new Prodigy.Shiverchill_B2(this, t),
		B1: new Prodigy.Shiverchill_B1(this, t)
	}, this.quests = {
		1: {
			ID: 1,
			req: {
				type: "pet",
				ID: 122,
				N: 3,
				U: !0
			},
			area: ["shiverchill-B10"],
			onStart: [3, 4, 5, 6],
			onComplete: [0],
			reward: [{
				type: "gold",
				N: 100
			}]
		},
		2: {
			ID: 2,
			req: {
				type: "item",
				N: 1,
				ID: 71,
				K: !0
			},
			area: ["shiverchill-A9"],
			onStart: [7, 2, 8, 9],
			onComplete: [0],
			reward: [{
				type: "gold",
				N: 100
			}]
		},
		3: {
			ID: 3,
			desc: "Activate Furnace",
			req: {
				type: "zstate",
				ID: "furnace",
				N: 1
			},
			area: ["shiverchill-B10"],
			onStart: [10, 11],
			onComplete: [0, 1],
			reward: [{
				type: "spell",
				ID: 19
			}]
		},
		4: {
			ID: 4,
			desc: "Explore Caves",
			req: {
				type: "seq",
				N: 2
			},
			area: ["shiverchill-A7"],
			onStart: [12, 13],
			onProc: [69],
			onComplete: [14, 15, 2, 16],
			reward: [{
				type: "item",
				ID: 75
			}]
		},
		5: {
			ID: 5,
			desc: "Find the Shovel",
			req: {
				type: "item",
				ID: 73,
				N: 1
			},
			area: ["shiverchill-B6"],
			onStart: [17],
			onProc: [70],
			onComplete: [18, 2, 19],
			reward: [{
				type: "gold",
				N: 100
			}, {
				type: "item",
				ID: 72
			}]
		},
		6: {
			ID: 6,
			desc: "Help the Miner",
			req: {
				type: "seq",
				N: 2
			},
			area: ["shiverchill-A7"],
			onStart: [20],
			onComplete: [0],
			reward: [{
				type: "hat",
				ID: 54
			}]
		},
		7: {
			ID: 7,
			desc: "???",
			req: {
				type: "seq",
				N: 1
			},
			area: ["shiverchill-B8"],
			onStart: [21, 22],
			onProc: [69],
			onComplete: [0],
			reward: [{
				type: "gold",
				N: 100
			}]
		},
		8: {
			ID: 8,
			req: {
				type: "pet",
				ID: 90,
				N: 3
			},
			area: ["shiverchill-B7", "shiverchill-B6"],
			onStart: [23, 24, 2, 25],
			onComplete: [0],
			reward: [{
				type: "gold",
				N: 100
			}]
		},
		9: {
			ID: 9,
			req: {
				type: "item",
				ID: 71,
				N: 1,
				K: !0
			},
			area: ["shiverchill-A6"],
			onStart: [26],
			onComplete: [0],
			reward: [{
				type: "gold",
				N: 100
			}]
		},
		10: {
			ID: 10,
			desc: "Activate Furnace",
			req: {
				type: "zstate",
				ID: "furnace",
				N: 2
			},
			area: ["shiverchill-B10"],
			onStart: [10, 11],
			onComplete: [0, 1],
			reward: [{
				type: "spell",
				ID: 20
			}]
		},
		11: {
			ID: 11,
			desc: "Check Throne",
			req: {
				type: "seq",
				N: 1
			},
			area: ["shiverchill-B3"],
			onStart: [27, 28],
			onComplete: [29],
			reward: [{
				type: "gold",
				N: 100
			}]
		},
		12: {
			ID: 12,
			req: {
				type: "item",
				ID: 74,
				N: 5,
				K: !0
			},
			area: ["shiverchill-A3", "shiverchill-B3"],
			onStart: [30, 2, 31, 32, 33],
			onComplete: [0],
			reward: [{
				type: "outfit",
				ID: 47
			}]
		},
		13: {
			ID: 13,
			desc: "Defeat Worm",
			req: {
				type: "seq",
				N: 1
			},
			area: ["shiverchill-A4"],
			onStart: [34, 2, 35],
			onComplete: [0],
			reward: [{
				type: "gold",
				N: 100
			}]
		},
		14: {
			ID: 14,
			desc: "Activate Furnace",
			req: {
				type: "zstate",
				ID: "furnace",
				N: 3
			},
			area: ["shiverchill-B10"],
			onStart: [10, 11],
			onComplete: [0, 1],
			reward: [{
				type: "spell",
				ID: 21
			}]
		},
		15: {
			ID: 15,
			req: {
				type: "key",
				N: 1,
				K: !0,
				ID: 4
			},
			area: ["shiverchill-B2"],
			onStart: [36, 37],
			onComplete: [0],
			reward: [{
				type: "weapon",
				ID: 74
			}]
		},
		16: {
			ID: 16,
			desc: "Head to the Gate",
			req: {
				type: "seq",
				N: 2
			},
			area: ["shiverchill-B1"],
			onStart: [38, 2, 39],
			onComplete: [0]
		}
	}, this.store = {
		name: "Snowday Sales",
		items: [{
			ID: 37,
			type: "hat"
		}, {
			ID: 63,
			type: "weapon"
		}, {
			ID: 33,
			type: "outfit"
		}, {
			ID: 50,
			type: "pet"
		}]
	}
}, Prodigy.Shiverchill.prototype = Object.create(Prodigy.Zone.prototype), Prodigy.Shiverchill.prototype.smoke = function (e, t, i, a) {
	for (var s = 0; 4 > s; s++) {
		var r = e.prodigy.create.sprite(40 * i + 20, 40 * a + 20, "core", "smoke");
		t.foreground.add(r), r.anchor.setTo(.5, .5), r.scale.x = r.scale.y = .1, r.alpha = 1, e.add.tween(r).to({
			y: r.y - 150,
			alpha: 0
		}, 2e3, Phaser.Easing.Linear.None, !1, 0, 1e3, !1).delay(500 * s).start(), e.add.tween(r.scale).to({
			x: .75,
			y: .75
		}, 2e3, Phaser.Easing.Linear.None, !1, 0, 1e3, !1).delay(500 * s).start()
	}
}, Prodigy.Shiverchill_A11 = function (e, t) {
	Prodigy.Map.call(this, e, "A11", "Borderland", 200, 630, ["shiverchill-A10"], t), this.coord = [{
		x: 640,
		y: 625
	}, {
		x: 540,
		y: 230
	}, {
		x: 80,
		y: 400
	}]
}, Prodigy.extends(Prodigy.Shiverchill_A11, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_A11,
	setup: function (e, t) {
		Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
			x: 1150,
			y: 150,
			w: 160,
			h: 100
		}, "shiverchill-A10", 189, 549, null, AreaEvent.UP_RIGHT), this.addAreaEvent(e, t, {
			x: 0,
			y: 720,
			r: 150
		}, "forest-A3", 640, 340);
		var i = {
			opponent: [{
				data: {
					level: 15
				},
				appearance: {
					name: "Ivira of the Greenwood",
					gender: "female",
					hairStyle: 1,
					hairColor: 3,
					skinColor: 1,
					eyeColor: 4
				},
				equipment: {
					hat: 1,
					outfit: 3,
					weapon: 1
				}
			}],
			pets: [{
				ID: 25,
				level: 15
			}, {
				ID: 33,
				level: 15
			}, {
				ID: 53,
				level: 15
			}]
		};
		this.addWizard(e, t, 770, 370, "wizard1", i).flip()
	}
}), Prodigy.Shiverchill_A10 = function (e, t) {
	Prodigy.Map.call(this, e, "A10", "Bok's Cave", 189, 549, ["shiverchill-B10", "shiverchill-A11", "shiverchill-A9"], t.concat(["npc-sprite-merchant", "npc-sprite-bok"]))
}, Prodigy.extends(Prodigy.Shiverchill_A10, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_A10,
	setup: function (e, t) {
		Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
			x: 88,
			y: 680,
			r: 120
		}, "shiverchill-A11", 1070, 220, null, AreaEvent.DOWN_LEFT), this.addAreaEvent(e, t, {
			x: 220,
			y: 0,
			w: 200,
			h: 120
		}, "shiverchill-A9", 200, 630, null, AreaEvent.UP), this.addAreaEvent(e, t, {
			x: 1160,
			y: 180,
			w: 100,
			h: 30,
			rect: !0
		}, "shiverchill-B10", 120, 600, null, AreaEvent.UP), this.addClickableEvent(e, t, 1120, 40, 80, 120, this.doorClick.bind(this, e, t));
		var i = function (e) {
			var t = e.prodigy.event.create();
			t.text(0, "bok"), t.start()
		};
		this.addQuestNPC(e, t, 932, 313, "bok", 0, i.bind(this, e)), t.createStoreNPC(468, 288, this._zone.store), this.addHealEvent(e, t, 812, 596), t.menuBar.addStore()
	},
	doorClick: function (e, t) {
		t.user.setValidPath(t.path, 1160, 160)
	}
}), Prodigy.Shiverchill_A9 = function (e, t) {
	Prodigy.Map.call(this, e, "A9", "Treasure Room", 200, 630, ["shiverchill-A10", "shiverchill-B8"], t.concat(["zone-shiverchill"]))
}, Prodigy.extends(Prodigy.Shiverchill_A9, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_A9,
	setup: function (e, t) {
		if (Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
				x: 200,
				y: 720,
				w: 280,
				h: 120
			}, "shiverchill-A10", 221, 82, null, AreaEvent.DOWN), this._zone.isOnQuest(2)) this.quest2(e, t);
		else {
			var i = {
				randDir: !0,
				encounter: [{
					ID: 122
				}, {
					ID: 78
				}]
			};
			this.addMonster(e, t, 1, 490, 510, !1, i), this.addMonster(e, t, 2, 720, 200, !1, i), this.addMonster(e, t, 3, 1150, 460, !1, i), this.addMonster(e, t, 4, 200, 230, !1, i)
		}
		this._zone.getState("furnace") >= 1 ? (this._zone.smoke(e, t, 29, 5), this.addAreaEvent(e, t, {
			x: 1150,
			y: 150,
			w: 150,
			h: 50
		}, "shiverchill-B8", 220, 650, null, AreaEvent.UP_RIGHT)) : this.addBlock(e, t, 1160, 180, {
			x: .5,
			y: 1,
			atlas: "zone-shiverchill",
			tag: "ice-big"
		}), this._zone.getState("furnace") >= 2 ? (this._zone.smoke(e, t, 11, 6), this.addClickableEvent(e, t, 160, 40, 80, 80, this.doorClick.bind(this, e, t)), this.addAreaEvent(e, t, {
			x: 200,
			y: 86,
			w: 40,
			h: 72,
			rect: !0
		}, "shiverchill-A6", 1e3, 300, null, AreaEvent.UP)) : this.addBlock(e, t, 200, 160, {
			x: .5,
			y: 1,
			atlas: "zone-shiverchill",
			tag: "ice-small"
		});
		var a = t.content.add(new Phaser.Image(e, 1066, 600, "zone-shiverchill", "frozen-loot"));
		a.anchor.setTo(.5, 1), a.visible = !1, this._zone.getState("furnace") >= 4 ? (this._zone.smoke(e, t, 21, 12), this.addChest(e, t, "chest6", 1066, 550, [{
			type: "weapon",
			ID: 73
		}])) : a.visible = !0
	},
	quest2: function (e, t) {
		var i = {
			randDir: !0,
			encounter: [{
				ID: 122
			}, {
				ID: 78
			}]
		};
		this._zone.isQuestComplete(2) || (i.encounter = [{
			ID: 122,
			drops: [{
				type: "item",
				ID: 71,
				R: .3
			}]
		}, {
			ID: 78,
			drops: [{
				type: "item",
				ID: 71,
				R: .2
			}]
		}]), this.addMonster(e, t, 1, 490, 510, !1, i), this.addMonster(e, t, 2, 720, 200, !1, i), this.addMonster(e, t, 3, 1150, 460, !1, i), this.addMonster(e, t, 4, 200, 230, !1, i)
	},
	doorClick: function (e, t) {
		t.user.setValidPath(t.path, 200, 100)
	}
}), Prodigy.Shiverchill_A7 = function (e, t) {
	Prodigy.Map.call(this, e, "A7", "Ruined Entrance", 189, 549, ["shiverchill-B7", "shiverchill-B8"], t.concat(["npc-sprite-merchant", "zone-shiverchill"])), this.coord = [{
		x: 55,
		y: 360
	}, {
		x: 720,
		y: 600
	}]
}, Prodigy.extends(Prodigy.Shiverchill_A7, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_A7,
	setup: function (e, t) {
		Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
			x: 88,
			y: 680,
			r: 120
		}, "shiverchill-B8", 1100, 200, null, AreaEvent.DOWN_LEFT), this.addAreaEvent(e, t, {
			x: 1280,
			y: 220,
			w: 120,
			h: 280
		}, "shiverchill-B7", 110, 220), this._zone.getQuestState().ID < 7 && (this.npc = this.addNPC(e, t, 378, 313, "npc-sprite-merchant", this.chatWithMerchant.bind(this, e, t), "Miner"), this.npc.flip(), this.npc.animate("stand"), this.npc.showName(!0), this.block = this.addBlock(e, t, 385, 325, {
			x: .5,
			y: 1,
			atlas: "zone-shiverchill",
			tag: "ice-small",
			content: !0
		})), this.addHealEvent(e, t, 900, 470), this._zone.isOnQuest(4) ? this.quest4(e, t) : this._zone.isOnQuest(6) && this.quest6(e, t)
	},
	chatWithMerchant: function (e, t) {
		var i = e.prodigy.event.create();
		this._zone.isOnQuest(4) ? (i.enableInput(!1), i.validPath(t.user, t.path, 324, 348), i.enableInput(!0), this._zone.isOnSequence(4, 1) ? (i.function(this.npc.highlight.bind(this.npc, !1)), i.text(7, "merchant"), i.text(8, "merchant"), i.function(this._zone.completeSequence.bind(this._zone, 4, 1)), i.function(t.process.bind(t))) : i.text(8, "merchant")) : this._zone.isOnQuest(6) && i.text(12, "merchant"), i.start()
	},
	endBattle: function (e) {
		this._zone.completeSequence(6, 0), e.prodigy.world.teleport("shiverchill-A7", 328, 343)
	},
	quest4: function () {
		this._zone.isQuestComplete(4) || this.npc.highlight(!0, -120, -130)
	},
	quest6: function (e, t) {
		var i = this.addMonster(e, t, 1, 0, 0, !1, {
				encounter: [{
					ID: 87
				}]
			}),
			a = this.addMonster(e, t, 1, 0, 0, !1, {
				encounter: [{
					ID: 87
				}]
			}),
			s = this.addMonster(e, t, 1, 0, 0, !1, {
				encounter: [{
					ID: 87
				}]
			}),
			r = function (e, t, i) {
				i.x = e, i.y = t
			},
			o = e.prodigy.event.create();
		if (this._zone.isOnSequence(6, 0)) {
			var n = {
					intro: "Snowball Fight!!",
					"catch": !1,
					run: !1,
					screen: "bg-battle-mountain",
					pets: [{
						ID: 87,
						nickname: "Chilly"
					}, {
						ID: 87,
						nickname: "Frosty"
					}, {
						ID: 87,
						nickname: "Freezy"
					}]
				},
				l = function (e) {
					e.prodigy.battle.start(n, null, this.endBattle.bind(this, e, !0), null, this._onFaint)
				};
			o.enableInput(!1), o.set(t.user, "evtProc", !0), o.path(t.user, [{
				x: 537,
				y: 460
			}]), o.delay(500), o.function(r.bind(this, 900, 600, i)), o.function(r.bind(this, 950, 650, a)), o.function(r.bind(this, 950, 550, s)), o.function(t.user.chat.bind(t.user, 1, 80)), o.path(i, [{
				x: 658,
				y: 333
			}], 1, !0), o.path(a, [{
				x: 708,
				y: 383
			}], 1, !0), o.path(s, [{
				x: 658,
				y: 283
			}], 1, !1), o.hop(i, 500, -140, 100, !0), o.hop(a, 500, -140, 100, !0), o.hop(s, 500, -140, 100, !1), o.enableInput(!0), o.function(l.bind(this, e))
		} else this._zone.isOnSequence(6, 1) && (Util.isDefined(this.block) && (this.block.visible = !1), o.text(9, "merchant"), o.text(), o.text(71, "noot"), o.text(), o.text(10, "merchant"), o.text(11, "merchant"), o.text(), o.text(72, "noot"), o.text(), o.text(12, "merchant"), o.function(e.prodigy.player.backpack.consume.bind(e.prodigy.player.backpack, "item", 72, 1)), o.function(this._zone.completeSequence.bind(this._zone, 6, 1)), o.function(t.process.bind(t)));
		o.start()
	}
}), Prodigy.Shiverchill_A6 = function (e, t) {
	Prodigy.Map.call(this, e, "A6", "Rail Ruins", 1170, 400, ["shiverchill-A5", "shiverchill-B6"], t.concat(["zone-shiverchill"])), this.coord = [{
		x: 530,
		y: 230
	}, {
		x: 1e3,
		y: 680
	}]
}, Prodigy.extends(Prodigy.Shiverchill_A6, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_A6,
	setup: function (e, t) {
		Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
			x: 1280,
			y: 400,
			w: 120,
			h: 280
		}, "shiverchill-B6", 110, 400);
		var i = {
			type: "item",
			ID: 71
		};
		this.addCollect(e, t, 1, 674, 245, i);
		var a = {
			encounter: [{
				ID: 90,
				R: 1
			}, {
				ID: 92,
				R: 15
			}]
		};
		this.addMonster(e, t, 1, 770, 540, !1, a);
		var a = {
			opponent: [{
				data: {
					level: 15
				},
				appearance: {
					name: "Rutherford Aguafencer",
					gender: "male",
					hairStyle: 1,
					hairColor: 3,
					skinColor: 1,
					eyeColor: 4
				},
				equipment: {
					hat: 1,
					outfit: 3,
					weapon: 1
				}
			}],
			pets: [{
				ID: 99,
				level: 15
			}, {
				ID: 56,
				level: 15
			}, {
				ID: 67,
				level: 15
			}]
		};
		this.addWizard(e, t, 350, 370, "wizard2", a), this._zone.getState("furnace") >= 2 ? (this._zone.smoke(e, t, 12, 14), this.addClickableEvent(e, t, 960, 200, 80, 80, this.doorClick.bind(this, e, t)), this.addAreaEvent(e, t, {
			x: 1e3,
			y: 246,
			w: 40,
			h: 72,
			rect: !0
		}, "shiverchill-A9", 200, 130, null, AreaEvent.UP), this.addClickableEvent(e, t, 120, 160, 120, 80, this.doorClick2.bind(this, e, t)), this.addAreaEvent(e, t, {
			x: 160,
			y: 226,
			w: 60,
			h: 112,
			rect: !0
		}, "shiverchill-A5", 1100, 500, null, AreaEvent.UP)) : (this.addBlock(e, t, 1e3, 320, {
			x: .5,
			y: 1,
			atlas: "zone-shiverchill",
			tag: "ice-small"
		}), this.addBlock(e, t, 160, 320, {
			x: .5,
			y: 1,
			atlas: "zone-shiverchill",
			tag: "ice-small"
		}))
	},
	doorClick: function (e, t) {
		t.user.setValidPath(t.path, 1e3, 260)
	},
	doorClick2: function (e, t) {
		t.user.setValidPath(t.path, 160, 260)
	}
}), Prodigy.Shiverchill_A5 = function (e, t) {
	Prodigy.Map.call(this, e, "A5", "Mountain Valley", 1100, 500, ["shiverchill-A4", "shiverchill-A6"], t), this.coord = [{
		x: 75,
		y: 540
	}, {
		x: 780,
		y: 580
	}, {
		x: 1025,
		y: 115
	}]
}, Prodigy.extends(Prodigy.Shiverchill_A5, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_A5,
	setup: function (e, t) {
		Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
			x: 1192,
			y: 680,
			r: 175
		}, "shiverchill-A6", 160, 330, null, AreaEvent.DOWN_RIGHT), this.addAreaEvent(e, t, {
			x: 100,
			y: 130,
			w: 150,
			h: 50
		}, "shiverchill-A4", 1100, 590), this.addChest(e, t, "chest4", 552, 313, [{
			type: "outfit",
			ID: 48
		}]);
		var i = {
			randDir: !0,
			encounter: [{
				ID: 50,
				"catch": !1
			}]
		};
		this.addMonster(e, t, 1, 490, 510, !1, i)
	}
}), Prodigy.Shiverchill_B7 = function (e, t) {
	Prodigy.Map.call(this, e, "B7", "Ruined Passage", 110, 220, ["shiverchill-A7", "shiverchill-B6"], t), this.coord = [{
		x: 220,
		y: 110
	}, {
		x: 380,
		y: 620
	}]
}, Prodigy.extends(Prodigy.Shiverchill_B7, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_B7,
	setup: function (e, t) {
		Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
			x: 1060,
			y: 0,
			w: 280,
			h: 120
		}, "shiverchill-B6", 1060, 610), this.addAreaEvent(e, t, {
			x: 0,
			y: 220,
			w: 120,
			h: 280
		}, "shiverchill-A7", 1170, 220);
		var i = {
			encounter: [{
				ID: 90
			}]
		};
		this.addMonster(e, t, 1, 674, 283, !1, i);
		var a = this.addMonster(e, t, 2, 95, 645, !1, i);
		if (Util.isDefined(a)) {
			t.user.evtProc = !0;
			var s = e.add.tween(a).to({
				x: 268
			}, 1500, Phaser.Easing.Linear.None).delay(2e3).start();
			e.add.tween(a).to({
				y: 450
			}, 750, Phaser.Easing.Quadratic.Out).delay(2e3).to({
				y: 500
			}, 750, Phaser.Easing.Quadratic.In).start(), s.onComplete.add(this.startPath.bind(this, t, a))
		}
	},
	startPath: function (e, t) {
		Util.isDefined(t) && t.patrol([{
			x: 270,
			y: 480
		}, {
			x: 1070,
			y: 480
		}]), e.user.evtProc = !1
	}
}), Prodigy.Shiverchill_B6 = function (e, t) {
	Prodigy.Map.call(this, e, "B6", "Ruined Steps", 1060, 610, ["shiverchill-A6", "shiverchill-B7"], t), this.coord = [{
		x: 315,
		y: 635
	}, {
		x: 45,
		y: 600
	}, {
		x: 790,
		y: 120
	}]
}, Prodigy.extends(Prodigy.Shiverchill_B6, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_B6,
	setup: function (e, t) {
		Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
			x: 1060,
			y: 720,
			w: 280,
			h: 120
		}, "shiverchill-B7", 1060, 110), this.addAreaEvent(e, t, {
			x: 0,
			y: 400,
			w: 120,
			h: 280
		}, "shiverchill-A6", 1170, 400), this.addChest(e, t, "chest1", 481, 271, [{
			type: "item",
			ID: 73
		}, {
			type: "gold",
			N: 250
		}], {
			type: "item",
			ID: 75
		});
		var i = {
			randDir: !1,
			encounter: [{
				ID: 90
			}]
		};
		this.addMonster(e, t, 1, 420, 400, !1, i);
		var a = this.addMonster(e, t, 2, 700, 160, !1, i);
		this.startPath(t, a)
	},
	startPath: function (e, t) {
		Util.isDefined(t) && t.patrol([{
			x: 700,
			y: 160
		}, {
			x: 980,
			y: 160
		}, {
			x: 1148,
			y: 423
		}, {
			x: 980,
			y: 160
		}])
	}
}), Prodigy.Shiverchill_B3 = function (e, t) {
	Prodigy.Map.call(this, e, "B3", "Royal Passage", 110, 280, ["shiverchill-B1", "shiverchill-A3", "shiverchill-B2"], t.concat(["zone-shiverchill", "npc-sprite-noot"]))
}, Prodigy.extends(Prodigy.Shiverchill_B3, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_B3,
	setup: function (e, t) {
		Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
			x: 0,
			y: 240,
			w: 150,
			h: 240
		}, "shiverchill-A3", 1160, 230), this._zone.getState("furnace") >= 3 ? (this._zone.smoke(e, t, 25, 13), this.addClickableEvent(e, t, 520, 270, 80, 120, this.doorClick.bind(this, e, t)), this.addAreaEvent(e, t, {
			x: 560,
			y: 375,
			w: 80,
			h: 30,
			rect: !0
		}, "shiverchill-B2", 640, 550, null, AreaEvent.UP), this.addAreaEvent(e, t, {
			x: 1190,
			y: 135,
			w: 150,
			h: 50
		}, "shiverchill-B1", 100, 600, null, AreaEvent.UP_RIGHT)) : (this.addBlock(e, t, 560, 400, {
			x: .5,
			y: 1,
			atlas: "zone-shiverchill",
			tag: "ice-small"
		}), this.addBlock(e, t, 1160, 180, {
			x: .5,
			y: 1,
			atlas: "zone-shiverchill",
			tag: "ice-big"
		})), this._zone.isOnQuest(11) ? this.quest11(e, t) : this._zone.isOnQuest(12) && this.quest12(e, t)
	},
	doorClick: function (e, t) {
		t.user.setValidPath(t.path, 560, 370)
	},
	quest12: function (e, t) {
		var i = {
			type: "item",
			ID: 74
		};
		this.addCollect(e, t, 4, 530, 570, i), this.addCollect(e, t, 5, 860, 580, i)
	},
	quest11: function (e, t) {
		if (!this._zone.isQuestComplete(11) && this._zone.isOnSequence(11, 0)) {
			this.boss = t.content.add(new Phaser.Image(e, 800, 250, "zone-shiverchill", "worm")), this.boss.visible = !1, this.crystal = t.content.add(new Phaser.Image(e, 750, 400, "icons", "item/71"));
			var i = this.addNPC(e, t, 250, 400, "npc-sprite-noot");
			i.visible = !1, i.float(!0);
			var a = e.prodigy.event.create();
			a.enableInput(!1), a.path(t.user, [{
				x: 250,
				y: 400
			}]), a.set(i, "visible", !0), a.hop(i, 300, 50, 50), a.enableInput(!0), a.text(74, "noot"), a.enableInput(!1), a.delay(500), a.function(i.chat.bind(i, 1, 100)), a.delay(500), a.path(i, [{
				x: 550,
				y: 450
			}]), a.enableInput(!0), a.text(75, "noot"), a.enableInput(!1), a.path(i, [{
				x: 750,
				y: 500
			}]), a.shake(0, 3e3, 10, "v", !0), a.function(i.chat.bind(i, 1, 100)), a.explode(810, 350, 150, 150, 1, !0), a.delay(500), a.hop(i, 110, -140, 100, !0), a.delay(700), a.explode(810, 200, 150, 250, 2, !0), a.delay(1e3), a.set(this.boss, "visible", !0), a.explode(810, 350, 150, 150, 1), a.delay(1e3), a.shake(0, 3e3, 10, "v", !0), a.explode(790, 350, 200, 150, 1, !0), a.delay(700), a.explode(790, 200, 200, 250, 2, !0), a.delay(700), a.set(this.boss, "visible", !1), a.set(this.crystal, "visible", !1), a.explode(810, 350, 150, 150, 1), a.enableInput(!0), a.text(76, "noot"), a.enableInput(!1), a.path(i, [{
				x: 300,
				y: 400
			}]), a.hop(i, 300, -50, 50), a.set(i, "visible", !1), a.enableInput(!0), a.function(this._zone.completeSequence.bind(this._zone, 11, 0)), a.function(t.process.bind(t)), a.start()
		}
		t.disablePopups = !0
	}
}), Prodigy.Shiverchill_B8 = function (e, t) {
	Prodigy.Map.call(this, e, "B8", "Mountain Pass", 189, 549, ["shiverchill-A9", "shiverchill-A7"], t.concat(["zone-shiverchill"])), this.coord = [{
		x: 1230,
		y: 530
	}, {
		x: 640,
		y: 130
	}, {
		x: 445,
		y: 700
	}]
}, Prodigy.extends(Prodigy.Shiverchill_B8, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_B8,
	setup: function (e, t) {
		Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
			x: 88,
			y: 680,
			r: 120
		}, "shiverchill-A9", 1100, 200, null, AreaEvent.DOWN_LEFT), this.addAreaEvent(e, t, {
			x: 1150,
			y: 150,
			w: 150,
			h: 50
		}, "shiverchill-A7", 189, 549, null, AreaEvent.UP_RIGHT), this.addChest(e, t, "chest2", 896, 202, [{
			type: "hat",
			ID: 55
		}]);
		var i = {
			encounter: [{
				ID: 16,
				R: 1
			}, {
				ID: 61,
				R: 25
			}]
		};
		this.addMonster(e, t, 1, 769, 220, !1, i), this.addMonster(e, t, 2, 1018, 622, !1, i), this._zone.isOnQuest(4) ? this.quest4(e, t) : this._zone.isOnQuest(7) && this.quest7(e, t)
	},
	quest4: function (e, t) {
		if (this._zone.isOnSequence(4, 0)) {
			var i = e.prodigy.event.create();
			i.enableInput(!1), i.path(t.user, [{
				x: 384,
				y: 384
			}]), i.function(t.user.chat.bind(t.user, 1, 100)), i.shake(0, 3e3, 10, "v"), i.enableInput(!0), i.text(68, "noot"), i.function(this._zone.completeSequence.bind(this._zone, 4, 0)), i.start(), t.disablePopups = !0
		}
	},
	quest7: function (e, t) {
		if (!this._zone.isQuestComplete(7)) {
			var i = {
					intro: "Scary Worm Battle!",
					"catch": !1,
					run: !1,
					screen: "bg-battle-mountain",
					boss: {
						ID: 11,
						level: 20,
						element: "ice",
						attacks: [19, 20, 21],
						name: "???",
						maxHP: 72,
						starBonus: 30
					}
				},
				a = function (e) {
					e.prodigy.battle.start(i, null, this.endBattle.bind(this, e, !0), null, this._onFaint)
				};
			if (this._zone.isOnSequence(7, 0)) {
				this.boss = t.content.add(new Phaser.Image(e, 530, 150, "zone-shiverchill", "worm")), this.boss.visible = !1;
				var s = e.prodigy.event.create();
				s.enableInput(!1), s.path(t.user, [{
					x: 404,
					y: 326
				}]), s.shake(0, 3e3, 10, "v", !0), s.function(t.user.chat.bind(t.user, 1, 100)), s.explode(540, 250, 150, 150, 1, !0), s.delay(700), s.explode(540, 100, 150, 250, 2, !0), s.delay(1e3), s.set(this.boss, "visible", !0), s.explode(540, 250, 150, 150, 1), s.delay(500), s.enableInput(!0), s.text(73, "noot"), s.function(a.bind(this, e)), s.start()
			}
		}
		t.disablePopups = !0
	},
	endBattle: function (e) {
		this._zone.completeSequence(7, 0), e.prodigy.world.teleport("shiverchill-B8", 480, 320)
	}
}), Prodigy.Shiverchill_B10 = function (e, t) {
	Prodigy.Map.call(this, e, "B10", "Furnace Room", 120, 600, ["shiverchill-A10"], t)
}, Prodigy.extends(Prodigy.Shiverchill_B10, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_B10,
	setup: function (e, t) {
		Prodigy.Map.prototype.setup.call(this, e, t);
		for (var i = [[200, 80], [440, 240], [720, 160], [1e3, 200]], a = [], s = 0; s < i.length; s++) a.push(this.addClickableEvent(e, t, i[s][0], i[s][1], 160, 120, this.furnaceClick.bind(this, e, t, s + 1)));
		this.addAreaEvent(e, t, {
			x: 0,
			y: 720,
			r: 150
		}, "shiverchill-A10", 1160, 230), this.addAreaEvent(e, t, {
			x: 680,
			y: 167,
			w: 40,
			h: 72,
			rect: !0
		}, "shiverchill-B9", 645, 500), this._zone.isOnQuest(1) && this.quest1(e, t), e.prodigy.player.backpack.hasItem("item", 71) && this.highlightFurnace(e, t, a), this.processFurnaces(e, t)
	},
	quest1: function (e, t) {
		var i = {
			randDir: !0,
			encounter: [{
				ID: 122
			}]
		};
		if (this.addMonster(e, t, 1, 198, 255, !0, i), this.addMonster(e, t, 2, 928, 338, !0, i), this.addMonster(e, t, 3, 417, 408, !0, i), this._zone.isOnSequence(1, 0)) {
			var a = e.prodigy.event.create();
			a.text(67, "noot"), a.function(this._zone.completeSequence.bind(this._zone, 1, 0)), a.start(), t.disablePopups = !0
		}
	},
	highlightFurnace: function (e, t, i) {
		var a = this._zone.getState("furnace");
		Util.isDefined(a) ? a < i.length && i[a].highlight(!0) : i[0].highlight(!0)
	},
	furnaceClick: function (e, t, i, a) {
		console.log(s + ", " + i);
		var s = this._zone.getState("furnace");
		s === i - 1 || Util.isDefined(s) || 1 === i || (s = 0);
		var r = e.prodigy.event.create();
		if (r.validPath(t.user, t.path, a.x + 10, a.y + 170), s >= i) r.popup("This furnace is already lit!");
		else if (i > s + 1) r.popup("You must light the furnaces in order!");
		else if (e.prodigy.player.backpack.hasItem("item", 71)) {
			var o = function (e, t) {
				var i = t.content.add(e.prodigy.create.sprite(t.user.x, t.user.y, "icons", "item/71"));
				i.anchor.setTo(.5, 1), e.add.tween(i).to({
					x: "+70"
				}, 2e3, Phaser.Easing.Linear.None).to({
					alpha: 0
				}, 10, Phaser.Easing.Linear.None).start(), e.add.tween(i).to({
					y: "-200"
				}, 1e3, Phaser.Easing.Quadratic.Out).to({
					y: "+100"
				}, 1e3, Phaser.Easing.Quadratic.In).start()
			};
			r.enableInput(!1), r.enableSave(!1), r.function(e.prodigy.player.backpack.consume.bind(e.prodigy.player.backpack, "item", 71, 1)), r.function(this._zone.setState.bind(this._zone, "furnace", i)), r.function(a.highlight.bind(a, !1)), r.function(o.bind(this, e, t)), r.delay(2e3), r.function(this.processFurnaces.bind(this, e, t)), r.enableSave(!0), r.enableInput(!0), r.function(t.process.bind(t))
		} else r.popup("This furnace needs some kind of fuel source...");
		r.start()
	},
	processFurnaces: function (e, t) {
		for (var i = this._zone.getState("furnace"), a = [[6, 3], [12, 7], [19, 5], [26, 6]], s = 0; s < a.length; s++) {
			var r = a[s][0],
				o = a[s][1];
			i >= s + 1 && (t.floor.add(this.getTile(e, 719, 40 * r, 40 * o, t.path, t.area, null, !0)), t.floor.add(this.getTile(e, 720, 40 * (r + 1), 40 * o, t.path, t.area, null, !0)))
		}
	}
}), Prodigy.Shiverchill_A3 = function (e, t) {
	Prodigy.Map.call(this, e, "A3", "Frozen Pass", 200, 630, ["shiverchill-A2", "shiverchill-A4", "shiverchill-B3"], t.concat(["zone-shiverchill"])), this.coord = [{
		x: 750,
		y: 95
	}, {
		x: 1150,
		y: 130
	}]
}, Prodigy.extends(Prodigy.Shiverchill_A3, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_A3,
	setup: function (e, t) {
		Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
			x: 1275,
			y: 235,
			w: 150,
			h: 240
		}, "shiverchill-B3", 100, 290), this.addAreaEvent(e, t, {
			x: 222,
			y: 700,
			w: 240,
			h: 75
		}, "shiverchill-A4", 220, 80);
		var i = {
			randDir: !0,
			encounter: [{
				ID: 87
			}, {
				ID: 122
			}]
		};
		this.addMonster(e, t, 1, 200, 300, !1, i), this.addMonster(e, t, 3, 960, 360, !1, i), this._zone.getState("furnace") >= 3 ? (this._zone.smoke(e, t, 10, 3), this.addAreaEvent(e, t, {
			x: 90,
			y: 135,
			w: 150,
			h: 50
		}, "shiverchill-A2", 1100, 600)) : this.addBlock(e, t, 120, 180, {
			x: .5,
			y: 1,
			atlas: "zone-shiverchill",
			tag: "ice-big"
		}), this._zone.isOnQuest(12) && this.quest12(e, t)
	},
	quest12: function (e, t) {
		var i = {
			type: "item",
			ID: 74
		};
		this.addCollect(e, t, 1, 900, 100, i), this.addCollect(e, t, 2, 80, 270, i), this.addCollect(e, t, 3, 670, 400, i)
	}
}), Prodigy.Shiverchill_A4 = function (e, t) {
	Prodigy.Map.call(this, e, "A4", "Worm's Rest", 1100, 590, ["shiverchill-A3", "shiverchill-A5"], t.concat(["zone-shiverchill"])), this.coord = [{
		x: 115,
		y: 465
	}, {
		x: 490,
		y: 270
	}, {
		x: 150,
		y: 630
	}]
}, Prodigy.extends(Prodigy.Shiverchill_A4, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_A4,
	setup: function (e, t) {
		if (Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
				x: 220,
				y: 0,
				w: 240,
				h: 75
			}, "shiverchill-A3", 220, 650), this.addAreaEvent(e, t, {
				x: 1192,
				y: 680,
				r: 120
			}, "shiverchill-A5", 160, 200, null, AreaEvent.DOWN_RIGHT), this._zone.isOnQuest(13)) this.quest13(e, t, this._zone);
		else {
			var i = {
				randDir: !0,
				encounter: [{
					ID: 87
				}, {
					ID: 122
				}]
			};
			this.addMonster(e, t, 1, 200, 300, !1, i), this.addMonster(e, t, 2, 900, 405, !1, i), this.addMonster(e, t, 3, 500, 500, !1, i)
		}
	},
	quest13: function (e, t) {
		if (!this._zone.isQuestComplete(13)) {
			var i = {
					intro: "Boss Battle!",
					"catch": !1,
					run: !1,
					screen: "bg-battle-mountain",
					boss: {
						ID: 11,
						level: 30,
						element: "ice",
						attacks: [19, 20, 21],
						name: "Ice Worm",
						maxHP: 160,
						starBonus: 50
					},
					drops: [{
						type: "item",
						ID: 71
					}]
				},
				a = function (e) {
					e.prodigy.battle.start(i, null, this.endBattle.bind(this, e, !0), null, this._onFaint)
				};
			if (this._zone.isOnSequence(13, 0)) {
				var s = function (e, t, i) {
						var a = t.background.add(e.prodigy.create.sprite(t.user.x, t.user.y, "icons", "crystal"));
						a.anchor.setTo(.5, 1), e.add.tween(a).to({
							x: i
						}, 500, Phaser.Easing.Linear.None).start(), e.add.tween(a).to({
							y: "-50"
						}, 250, Phaser.Easing.Quadratic.Out).to({
							y: "+50"
						}, 250, Phaser.Easing.Quadratic.In).start()
					},
					r = function () {
						this.boss = t.content.add(new Phaser.Image(e, 350, 310, "zone-shiverchill", "worm"))
					},
					o = e.prodigy.event.create();
				o.set(t.user, "evtProc", !0), o.enableInput(!1), o.path(t.user, [{
					x: 640,
					y: 530
				}]), o.function(e.prodigy.player.backpack.consume.bind(e.prodigy.player.backpack, "item", 74, 5)), o.function(s.bind(this, e, t, "-50")), o.delay(500), o.path(t.user, [{
					x: 310,
					y: 600
				}]), o.function(s.bind(this, e, t, "-50")), o.delay(500), o.path(t.user, [{
					x: 200,
					y: 430
				}]), o.function(s.bind(this, e, t, "-50")), o.delay(500), o.path(t.user, [{
					x: 250,
					y: 340
				}]), o.function(s.bind(this, e, t, "+50")), o.delay(500), o.path(t.user, [{
					x: 470,
					y: 380
				}]), o.function(s.bind(this, e, t, "+50")), o.delay(500), o.path(t.user, [{
					x: 300,
					y: 460
				}]), o.path(t.user, [{
					x: 301,
					y: 460
				}]), o.delay(500), o.shake(0, 3e3, 10, "v", !0), o.function(t.user.chat.bind(t.user, 1, 100)), o.explode(360, 410, 150, 150, 1, !0), o.delay(700), o.explode(360, 260, 150, 250, 2, !0), o.delay(1e3), o.function(r.bind(this)), o.explode(360, 410, 150, 150, 1), o.delay(500), o.enableInput(!0), o.function(a.bind(this, e)), o.start()
			}
		}
		t.disablePopups = !0
	},
	endBattle: function (e) {
		this._zone.completeSequence(13, 0), e.prodigy.world.teleport("shiverchill-A4", 300, 460)
	}
}), Prodigy.Shiverchill_A2 = function (e, t) {
	Prodigy.Map.call(this, e, "A2", "The Chasm", 1100, 590, ["shiverchill-A3"], t)
}, Prodigy.extends(Prodigy.Shiverchill_A2, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_A2,
	setup: function (e, t) {
		Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
			x: 1192,
			y: 680,
			r: 120
		}, "shiverchill-A3", 100, 230, null, AreaEvent.DOWN_RIGHT), this.addChest(e, t, "chest3", 530, 370, [{
			type: "item",
			ID: 71
		}]);
		var i = {
			opponent: [{
				data: {
					level: 25
				},
				appearance: {
					name: "Firia the Chandragon",
					gender: "female",
					hairStyle: 4,
					hairColor: 12,
					skinColor: 1,
					eyeColor: 4
				},
				equipment: {
					hat: 8,
					outfit: 34,
					weapon: 56
				}
			}],
			pets: [{
				ID: 82,
				level: 25
			}, {
				ID: 48,
				level: 25
			}, {
				ID: 61,
				level: 25
			}, {
				ID: 37,
				level: 24
			}]
		};
		this.addWizard(e, t, 460, 360, "wizard4", i)
	}
}), Prodigy.Shiverchill_B2 = function (e, t) {
	Prodigy.Map.call(this, e, "B2", "Throne Room", 640, 550, ["shiverchill-B3"], t)
}, Prodigy.extends(Prodigy.Shiverchill_B2, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_B2,
	setup: function (e, t) {
		Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
			x: 645,
			y: 670,
			r: 120
		}, "shiverchill-B3", 560, 415, null, AreaEvent.DOWN), this._zone.isOnQuest(15) && this.quest15(e, t)
	},
	quest15: function (e, t) {
		console.log("butts");
		var i = {
			type: "key",
			ID: 4
		};
		this.addCollect(e, t, 1, 640, 350, i)
	}
}), Prodigy.Shiverchill_B1 = function (e, t) {
	Prodigy.Map.call(this, e, "B1", "Shiverchill Gate", 200, 630, ["shiverchill-B3"], t)
}, Prodigy.extends(Prodigy.Shiverchill_B1, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_B1,
	setup: function (e, t) {
		Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
			x: 0,
			y: 720,
			r: 150
		}, "shiverchill-B3", 1160, 230), this.addHealEvent(e, t, 270, 435);
		var i = {
			opponent: [{
				data: {
					level: 20
				},
				appearance: {
					name: "Gerome of the North",
					gender: "male",
					hairStyle: 4,
					hairColor: 12,
					skinColor: 1,
					eyeColor: 4
				},
				equipment: {
					hat: 25,
					outfit: 33,
					weapon: 31
				}
			}],
			pets: [{
				ID: 92,
				level: 20
			}, {
				ID: 17,
				level: 20
			}, {
				ID: 18,
				level: 20
			}]
		};
		this.addWizard(e, t, 960, 500, "wizard3", i).flip(), this._zone.isOnQuest(16) && (this.addClickableEvent(e, t, 440, 80, 400, 200, this.enterGate.bind(this, e, t)), this.quest16(e, t)), this._zone.getQuestState() && this._zone.getQuestState().ID >= 16 && this.addClickableEvent(e, t, 440, 80, 400, 200, this.enterGate.bind(this, e, t))
	},
	quest16: function (e, t) {
		if (!this._zone.isQuestComplete(16) && this._zone.isOnSequence(16, 0)) {
			var i = e.prodigy.event.create();
			i.text(78, "noot"), i.text(79, "noot"), i.function(this._zone.completeSequence.bind(this._zone, 16, 0)), i.start(), t.disablePopups = !0
		}
	},
	enterGate: function (e, t) {
		this._zone.isOnSequence(16, 1) && this._zone.completeSequence(16, 1);
		var i = e.prodigy.event.create();
		i.enableInput(!1), i.path(t.user, [{
			x: 640,
			y: 270
		}]), i.enableInput(!0), i.set(e.state.states.Dino, "playerX", 210), i.set(e.state.states.Dino, "playerY", 522), i.function(e.state.start.bind(e.state, "Dino")), i.start()
	}
}), Prodigy.Shiverchill_B9 = function (e, t) {
	Prodigy.Map.call(this, e, "B9", "Hidden Room", 645, 500, ["shiverchill-B10"], t.concat(["zone-shiverchill"]))
}, Prodigy.extends(Prodigy.Shiverchill_B9, Prodigy.Map, {
	constructor: Prodigy.Shiverchill_B9,
	setup: function (e, t) {
		Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
			x: 645,
			y: 690,
			r: 140
		}, "shiverchill-B10", 670, 250, null, AreaEvent.DOWN), this.addChest(e, t, "chest5", 530, 370, [{
			type: "item",
			ID: 2
		}, {
			type: "item",
			ID: 5
		}, {
			type: "item",
			ID: 6
		}, {
			type: "item",
			ID: 7
		}, {
			type: "item",
			ID: 15
		}])
	}
});
var Volcano = function () {
	function e(t) {
		WalkableScreen.call(this, t, e.DATA), this.assets = ["npc-sprite-mugs", "npc-sprite-merchant", "tileset-core"], this.area = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0], [3, 3, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 4, 4, 0, 0], [3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 0, 0], [3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 0], [3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 0], [3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 0], [3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4]], this.playerX = 540, this.playerY = 460
	}
	return e.prototype = Object.create(WalkableScreen.prototype), e.prototype.create = function () {
		WalkableScreen.prototype.create.call(this, [], "volcano-0")
	}, e.prototype.screenSetup = function () {
		WalkableScreen.prototype.screenSetup.call(this), this.path.addCallback(3, this.toDino.bind(this)), this.path.addCallback(4, this.toPlains.bind(this)), new Prodigy.Container.QuestNPC(this.game, this.content, 800, 500, e.DATA, {
			name: "Chef Mugs",
			atlas: "mugs"
		}), this.createStoreNPC(630, 280, e.STORE);
		for (var t = 0; 30 > t; t++) {
			var i = this.game.prodigy.create.sprite(1032, 234, "icons", "smoke");
			this.background.add(i), i.anchor.setTo(.5, .5), i.scale.x = i.scale.y = .1, i.x = 1032 + Math.floor(-20 + 40 * Math.random()), i.y = 234, i.alpha = 1, i.angle = Math.floor(360 * Math.random()), this.game.add.tween(i).to({
				y: 0,
				alpha: 0
			}, 4e3, Phaser.Easing.Linear.None, !1, 0, 1e3, !1).delay(100 * t).start(), this.game.add.tween(i.scale).to({
				x: .75,
				y: .75
			}, 4e3, Phaser.Easing.Linear.None, !1, 0, 1e3, !1).delay(100 * t).start()
		}
		var a = [{
			pre: "Firelord ",
			req: [{
				rtype: "item",
				type: "outfit",
				ID: 34
			}, {
				rtype: "item",
				type: "hat",
				ID: 38
			}, {
				rtype: "item",
				type: "weapon",
				ID: 64
			}],
			fail: "You need to buy the Bonfire Spire set to unlock!"
		}, {
			pre: "Flamewielder ",
			req: [{
				rtype: "quest",
				zone: 5,
				Q: 15
			}],
			fail: "You need to complete the Bonfire Spire quests to unlock!"
		}, {
			pre: "Pyromancer ",
			req: [{
				rtype: "pet",
				ID: 97
			}],
			fail: "You need to catch an Embershed to unlock!"
		}, {
			pre: "Coalwalker ",
			member: !0,
			fail: "You need to become a member to unlock!"
		}, {
			post: " the Firedancer",
			member: !0,
			fail: "You need to become a member to unlock!"
		}];
		this.addNicknamer(340, 540, a), this.menuBar.addStore(), new HealEvent(this.game, this.content, this.user, this.path, 253, 434)
	}, e.prototype.toDino = function () {
		this.game.state.states.Dino.playerX = 1195, this.game.state.states.Dino.playerY = 560, this.game.state.start("Dino")
	}, e.prototype.toPlains = function () {
		this.game.state.states.Plains.playerX = 150, this.game.state.states.Plains.playerY = 115, this.game.state.start("Plains")
	}, e
}();
Volcano.STORE = {
	name: "Hot Hot Threads",
	items: [{
		ID: 38,
		type: "hat"
	}, {
		ID: 64,
		type: "weapon"
	}, {
		ID: 34,
		type: "outfit"
	}, {
		ID: 48,
		type: "pet"
	}]
}, Volcano.AUDIO = [{
	tag: "voice-7",
	s: 0,
	d: 1
}, {
	tag: "voice-7",
	s: 1,
	d: 1
}, {
	tag: "voice-7",
	s: 2,
	d: 2
}, {
	tag: "voice-7",
	s: 4,
	d: 2
}, {
	tag: "voice-7",
	s: 6,
	d: 2
}, {
	tag: "voice-7",
	s: 8,
	d: 2
}], Volcano.DATA = {
	ID: 5,
	tag: "Volcano",
	zoneName: "zone-volcano",
	atlas: "zone-volcano",
	fullName: "Bonfire Spire",
	icon: "zone-fire",
	battle: {
		screen: "bg-battle-volcano",
		encounter: [{
			ID: 7
		}, {
			ID: 23
		}, {
			ID: 27
		}, {
			ID: 34
		}, {
			ID: 37
		}, {
			ID: 38
		}, {
			ID: 45
		}, {
			ID: 48
		}, {
			ID: 63
		}, {
			ID: 75
		}, {
			ID: 94
		}, {
			ID: 97
		}]
	},
	dialogue: [{
		face: 1,
		anim: 2,
		text: "Well lookit that! You're some assistant!",
		audio: Volcano.AUDIO[3]
	}, {
		face: 0,
		anim: 2,
		text: "Think ye can help me out, shortstuff?",
		audio: Volcano.AUDIO[2]
	}, {
		face: 3,
		anim: 4,
		text: "HO THERE! WHAT ARE YE DOIN'?!",
		audio: Volcano.AUDIO[1]
	}, {
		face: 6,
		anim: 0,
		text: "Ye can't just walk away without tastin' me favorite recipe: \n\nSauteed Octupus Stew!",
		audio: Volcano.AUDIO[0]
	}, {
		face: 5,
		anim: 1,
		text: "...Well? What do ye think?"
	}, {
		face: 5,
		anim: 0,
		text: "..."
	}, {
		face: 6,
		anim: 0,
		text: "...It's terrible, isn't it?"
	}, {
		face: 7,
		anim: 3,
		text: "ARGH! I KNEW IT! \nI may be a dwarf, but I can't cook a carrot's worth!",
		audio: Volcano.AUDIO[1]
	}, {
		face: 3,
		anim: 0,
		text: "Me name is Chef Mugs, I own that restaurant you see over there, and I could really use a new assistant wizard.",
		audio: Volcano.AUDIO[5]
	}, {
		face: 0,
		anim: 0,
		text: "If ye want to help, first go defeat some Tinygers for me. Those blasted monsters keep stealin' my ingredients!"
	}, {
		face: 0,
		anim: 0,
		text: "Bonfire Spire is home to the dwarves, and it makes a PERFECT oven for fine cookin'!",
		audio: Volcano.AUDIO[4]
	}, {
		face: 6,
		anim: 4,
		text: "Sure it's dangerous, but we're DWARVES! We ain't scared o' nothin'!",
		audio: Volcano.AUDIO[0]
	}, {
		face: 2,
		anim: 0,
		text: "But monsters live here too and cause problems. Go defeat some sprites and take back my ingredients!"
	}, {
		face: 3,
		anim: 1,
		text: "A good start, but even with these ingredients, I still can't cook! I need an UNBEATABLE recipe!",
		audio: Volcano.AUDIO[1]
	}, {
		face: 2,
		anim: 0,
		text: "I have an idea, but first you'll need to clear out the entrance to the volcano for me."
	}, {
		face: 6,
		anim: 4,
		text: "BWAHAHA! You're good enough for a new spell, I think!",
		audio: Volcano.AUDIO[0]
	}, {
		face: 5,
		anim: 4,
		text: "There's an old legend that says an AMAZING recipe is hidden inside the volcano.",
		audio: Volcano.AUDIO[1]
	}, {
		face: 6,
		anim: 0,
		text: "Its ingredients are the rarest, and the recipe itself is guarded by the scariest monsters around!"
	}, {
		face: 4,
		anim: 2,
		text: "With this recipe, I'd become the GREATEST DWARF CHEF EVER!",
		audio: Volcano.AUDIO[4]
	}, {
		face: 2,
		anim: 0,
		text: "... But first, I need to find the darn thing. The volcano is dark, so we need a light! Go gather me some fire flowers from Pucks."
	}, {
		face: 2,
		anim: 0,
		text: "We should be able to find the recipe behind the Door of the Secret Recipe. \nThe door is locked, of course.",
		audio: Volcano.AUDIO[1]
	}, {
		face: 6,
		anim: 0,
		text: "I've heard that the Volcano Lord gave the key to an Emburn. I guess you should just defeat some until they drop it?"
	}, {
		face: 2,
		anim: 4,
		text: "You got the key! Now, to find the door...",
		audio: Volcano.AUDIO[3]
	}, {
		face: 1,
		anim: 0,
		text: "The volcano is a tricky maze, but with a map, it should be easy as pie! I'll bet we can find one on a monster inside!"
	}, {
		face: 5,
		anim: 4,
		text: "You found it! With the key and the location, I'll find the recipe in no time!",
		audio: Volcano.AUDIO[3]
	}, {
		face: 2,
		anim: 0,
		text: "...it looks like it's in the lowest cavern of the volcano. Lots of monsters down there...clear the way for me, assistant!",
		audio: Volcano.AUDIO[1]
	}, {
		face: 5,
		anim: 2,
		text: "AHA! I've got it! The legendary recipe for BONFIRE MEATBALL SANDWICHES!",
		audio: Volcano.AUDIO[4]
	}, {
		face: 6,
		anim: 0,
		text: "My beard is twitching with excitement! Let's read it!",
		audio: Volcano.AUDIO[1]
	}, {
		face: 2,
		anim: 0,
		text: "The first ingredient is chicken. Easy...I think. Just go defeat some dragic, they love chicken!"
	}, {
		face: 7,
		anim: 0,
		text: "I guess they didn't have it. Maybe some draglings will?",
		audio: Volcano.AUDIO[1]
	}, {
		face: 3,
		anim: 0,
		text: "These next few ingredients I already have...or at least I HAD them before they were stolen."
	}, {
		face: 7,
		anim: 3,
		text: "I used to have another assistant named Alfredo, but when he left, he stole them from me."
	}, {
		face: 6,
		anim: 0,
		text: "Do me a favor: find Alfredo and GET MY INGREDIENTS BACK!",
		audio: Volcano.AUDIO[1]
	}, {
		face: 7,
		anim: 4,
		text: "This is only ONE of the ingredients! I need MORE for this recipe!",
		audio: Volcano.AUDIO[1]
	}, {
		face: 2,
		anim: 0,
		text: "I suppose he must have given them to HIS assistant Pesto, and Pesto's assistants! Track them down, and get them for me!"
	}, {
		face: 1,
		anim: 4,
		text: "Now that we have all the ingredients, we need to cook it in an oven!"
	}, {
		face: 3,
		anim: 1,
		text: "...Which would be easy, except mine is broken. That's okay, go defeat some hotpots, they're basically ovens anyways!",
		audio: Volcano.AUDIO[0]
	}, {
		face: 5,
		anim: 4,
		text: "The recipe is completed! It looks even better than it sounds! I MUST HAVE A BITE!",
		audio: Volcano.AUDIO[4]
	}, {
		face: 2,
		anim: 1,
		text: "...But I won't! I must save it for the food critics, and I'll need their help to save my reputation!"
	}, {
		face: 3,
		anim: 0,
		text: "Unfortunately, this recipe is useless to me unless we get rid of the Spice Guys!"
	}, {
		face: 6,
		anim: 0,
		text: "They're the meanest food critics around, and they really hate my restaurant! Challenge them and maybe you'll change their minds!"
	}, {
		face: 3,
		anim: 4,
		text: "OH NO! While you were battling the Spice Guys, their 5th member came and stole my recipe!"
	}, {
		face: 2,
		anim: 0,
		text: "I didn't even KNOW there were 5 of them anymore! Go get it back, assistant!",
		audio: Volcano.AUDIO[0]
	}, {
		face: 3,
		anim: 0,
		text: "Uh oh...I was afraid of this..."
	}, {
		face: 6,
		anim: 4,
		text: "The Volcano Lord - Slow-Cooker - heard about our recipe, and he's come to gobble it up for himself!"
	}, {
		face: 5,
		anim: 2,
		text: "You must defeat him, assistant! For me! For the dwarves! FOR BONFIRE SPIRE!",
		audio: Volcano.AUDIO[1]
	}, {
		face: 6,
		anim: 4,
		text: "Slow-Cooker is here, and he's HUNGRY!"
	}, {
		face: 5,
		anim: 2,
		text: "BWAHAHA! Ya beat Slow-Cooker! And he's supposed to be the VOLCANO LORD!",
		audio: Volcano.AUDIO[0]
	}, {
		face: 0,
		anim: 0,
		text: "With him gone and this new recipe, my restaurant will be the most popular on the island!"
	}, {
		face: 6,
		anim: 4,
		text: "You're the best assistant I ever had! Feel free to visit my restaurant anytime!"
	}],
	quests: [{
		coords: [110, 300],
		name: "Chef's Assistant",
		desc: "Mugs needs your help! Defeat the Tinygers that stole his ingredients",
		start: [2, 3, 4, 5, 6, 7, 8, 9],
		during: [],
		complete: [0],
		encounter: [{
			ID: 23
		}],
		req: [{
			type: "pet",
			ID: 23,
			N: 2
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [0, 225],
		name: "Three Bags o' Problems",
		desc: "Defeat sprites and take back Mugs's ingredients.",
		start: [10, 11, 12],
		during: [],
		complete: [0],
		encounter: [{
			ID: 63,
			drops: [{
				ID: 44,
				type: "item",
				R: 1
			}]
		}],
		req: [{
			type: "item",
			ID: 44,
			N: 3
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [0, 75],
		name: "Out Of My Way!",
		desc: "Defeat the monsters blocking the way into the volcano",
		start: [13, 14],
		during: [],
		complete: [15],
		encounter: [{
			ID: 27,
			R: 1
		}, {
			ID: 63,
			R: 1
		}],
		req: [{
			type: "pet",
			ID: 27,
			N: 2
		}, {
			type: "pet",
			ID: 63,
			N: 3
		}],
		reward: [{
			type: "spell",
			ID: 1
		}]
	}, {
		coords: [110, 0],
		name: "To Light the Way",
		desc: "Gather fire flowers from monsters to light the way inside",
		start: [16, 17, 18, 19],
		during: [],
		complete: [0],
		encounter: [{
			ID: 75,
			R: 2,
			drops: [{
				ID: 33,
				type: "item",
				R: .5
			}]
		}, {
			ID: 27,
			R: 1,
			drops: [{
				ID: 33,
				type: "item",
				R: .75
			}]
		}],
		req: [{
			type: "item",
			ID: 33,
			N: 3
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [110, 110],
		name: "Needle in a Haystack",
		desc: "Defeat Emburns until one of them drops the key",
		start: [20, 21],
		during: [],
		complete: [0],
		encounter: [{
			ID: 38,
			R: .75,
			drops: [{
				ID: 59,
				type: "item",
				R: .25
			}]
		}, {
			ID: 23,
			R: .25
		}],
		req: [{
			type: "item",
			ID: 59,
			N: 1
		}],
		reward: [{
			type: "boots",
			N: 1,
			ID: 28
		}]
	}, {
		coords: [225, 60],
		name: "Who, What, WHERE?",
		desc: "One of these monsters is carrying a map...check it out!",
		start: [22, 23],
		during: [],
		complete: [15],
		encounter: [{
			ID: 63,
			nickname: "Map-Carrying Neek",
			R: .2,
			drops: [{
				ID: 56,
				type: "item",
				R: 1
			}]
		}, {
			ID: 63,
			R: .8
		}],
		req: [{
			type: "item",
			N: 1,
			ID: 56
		}],
		reward: [{
			type: "spell",
			ID: 2
		}]
	}, {
		coords: [335, 110],
		name: "Too Many Monsters",
		desc: "Mugs needs you to clear out the lower caverns. Defeat some monsters for him",
		start: [24, 25],
		during: [],
		complete: [0],
		encounter: [{
			ID: 94,
			R: 5
		}, {
			ID: 37,
			R: 1
		}],
		req: [{
			type: "pet",
			ID: 94,
			N: 5
		}, {
			type: "pet",
			ID: 37,
			N: 2
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [335, 0],
		name: "The Legendary Shopping List",
		desc: "You've got a list of ingredients, and the first is chicken! Gather it from the dragic",
		start: [26, 27, 5, 28],
		during: [],
		complete: [0],
		encounter: [{
			ID: 7,
			R: 1
		}, {
			ID: 27,
			R: 4
		}],
		req: [{
			type: "pet",
			ID: 7,
			N: 3
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [450, 75],
		name: "I Feel Like Chicken Tonight!",
		desc: "It looks like the dragling are the ones with the chicken! Defeat them!",
		start: [29],
		during: [],
		complete: [15],
		encounter: [{
			ID: 8,
			R: 3,
			nickname: "Chicken-loving Dragling",
			drops: [{
				ID: 22,
				type: "item",
				R: .5
			}]
		}, {
			ID: 7,
			R: 1
		}, {
			ID: 23,
			R: 1
		}],
		req: [{
			type: "item",
			ID: 22,
			N: 4
		}],
		reward: [{
			type: "spell",
			ID: 3
		}]
	}, {
		coords: [450, 225],
		name: "Main Dish Alfredo",
		desc: "Mugs' assistant Alfredo has stolen the spices! Find him and take it back.",
		start: [30, 31, 32],
		during: [],
		complete: [0],
		encounter: [{
			ID: 23,
			nickname: "Assistant Alfredo",
			R: 1,
			drops: [{
				ID: 45,
				type: "item",
				R: 1
			}]
		}, {
			ID: 27,
			R: 4
		}, {
			ID: 64,
			R: 4
		}, {
			ID: 94,
			R: 4
		}],
		req: [{
			type: "item",
			ID: 45,
			N: 1
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [335, 300],
		name: "Pesto On the Side",
		desc: "Find the remaining assistants and get those ingredients!",
		start: [33, 34],
		during: [],
		complete: [0],
		encounter: [{
			ID: 76,
			nickname: "Assistant Pesto",
			R: 1,
			drops: [{
				ID: 13,
				type: "item",
				R: 1
			}]
		}, {
			ID: 63,
			nickname: "Pesto's Assistant",
			R: 7,
			drops: [{
				ID: 1,
				type: "item",
				R: .5
			}]
		}, {
			ID: 75,
			nickname: "Pesto's Assistant",
			R: 3,
			drops: [{
				ID: 4,
				type: "item",
				R: .75
			}]
		}],
		req: [{
			type: "item",
			ID: 13,
			N: 1
		}, {
			type: "item",
			ID: 1,
			N: 4
		}, {
			type: "item",
			ID: 4,
			N: 2
		}],
		reward: [{
			type: "hat",
			N: 1,
			ID: 11
		}]
	}, {
		coords: [335, 190],
		name: "Shake and Bake",
		desc: "Defeat some hotpots to cook the sandwich",
		start: [35, 36],
		during: [],
		complete: [15],
		encounter: [{
			ID: 34,
			R: .25
		}, {
			ID: 27,
			R: .25
		}, {
			ID: 37,
			R: .25
		}, {
			ID: 63,
			R: .25
		}],
		req: [{
			type: "pet",
			ID: 34,
			N: 3
		}],
		reward: [{
			type: "spell",
			ID: 4
		}]
	}, {
		coords: [225, 240],
		name: "Spice Up Your Life",
		desc: "Defeat the Spice Guys for Mugs to save his reputation",
		start: [37, 38, 39, 40],
		during: [],
		complete: [0],
		pets: [{
			ID: 27,
			nickname: "Tasty Spice"
		}, {
			ID: 8,
			nickname: "Bitter Spice"
		}, {
			ID: 64,
			nickname: "Flavor Spice"
		}, {
			ID: 45,
			nickname: "Much Spice"
		}],
		req: [{
			type: "boss",
			N: 1
		}],
		reward: [{
			type: "weapon",
			N: 1,
			ID: 18
		}]
	}, {
		coords: [110, 190],
		name: "Too Much Spice",
		desc: "The fifth Spice Guy stole the sandwich! Find him and get it back!",
		start: [41, 42],
		during: [],
		complete: [0],
		encounter: [{
			ID: 97,
			nickname: "Super Spice",
			R: 1
		}, {
			ID: 63,
			R: 4
		}, {
			ID: 34,
			R: 3
		}, {
			ID: 27,
			R: 4
		}, {
			ID: 37,
			R: 1
		}],
		req: [{
			type: "pet",
			ID: 97,
			N: 1
		}],
		reward: [{
			type: "outfit",
			N: 1,
			ID: 8
		}]
	}, {
		coords: [225, 150],
		name: "Turn Up the Heat",
		desc: "The Volcano Lord is coming for your sandwich! Defeat him!",
		start: [43, 44, 45],
		during: [46],
		complete: [47, 48, 49],
		boss: {
			ID: 7,
			element: "fire",
			attacks: [1, 2, 3, 4, 5, 6, 10, 16, 22, 29],
			name: "Slow-Cooker"
		},
		req: [{
			type: "boss",
			N: 1
		}],
		reward: [{
			type: "spell",
			ID: 5
		}]
	}]
};
var Arena = function () {
	function e(t) {
		WalkableScreen.call(this, t, e.DATA), this.assets = ["npc-sprite-clankboot", "tileset-core", "npc-sprite-gnome"], this.area = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], this.noSnow = !0, this.playerX = 640, this.playerY = 500
	}
	return e.prototype = Object.create(WalkableScreen.prototype), e.prototype.create = function () {
		WalkableScreen.prototype.create.call(this, [], "town-2")
	}, e.prototype.screenSetup = function () {
		WalkableScreen.prototype.screenSetup.call(this), new Prodigy.Container.QuestNPC(this.game, this.content, 310, 400, null, {
			name: "Clankboot",
			atlas: "clankboot"
		}, this.openArena.bind(this), !0), this.path.addCallback(3, this.toTown.bind(this));
		var e = this.game.prodigy.create.sprite(216, 574, this.screenName, "vase");
		e.anchor.setTo(.5, 1), this.content.add(e), e = this.game.prodigy.create.sprite(1064, 574, this.screenName, "vase"), e.anchor.setTo(.5, 1), e.scale.x = -1, this.content.add(e), e = this.game.prodigy.create.sprite(311, 515, this.screenName, "vase2"), e.anchor.setTo(.5, 1), this.content.add(e), e = this.game.prodigy.create.sprite(969, 515, this.screenName, "vase2"), e.anchor.setTo(.5, 1), e.scale.x = -1, this.content.add(e), e = this.game.prodigy.create.sprite(519, 468, this.screenName, "vase3"), e.anchor.setTo(.5, 1), this.content.add(e), e = this.game.prodigy.create.sprite(761, 468, this.screenName, "vase3"), e.anchor.setTo(.5, 1), e.scale.x = -1, this.content.add(e), new HealEvent(this.game, this.content, this.user, this.path, 165, 390), new GnomeEvent(this.game, this.content, this.user, this.path, 944, 376, "Arena Caller", 1, 2, this.openArenaMenu.bind(this)).flip(), new GnomeEvent(this.game, this.content, this.user, this.path, 1135, 430, "Arena Merchant", 2, 4, this.openStore.bind(this)).flip()
	}, e.prototype.openStore = function () {
		var t = this.game.prodigy.event.create(),
			i = e.STORE;
		i.callback = this.game.prodigy.player.getArenaRank.bind(this.game.prodigy.player), t.yesNoText(14, "merchant"), t.function(this.game.prodigy.open.rankStore.bind(this.game.prodigy.open, i, "arena")), t.start()
	}, e.prototype.openArenaMenu = function () {
		var e = this.game.prodigy.event.create();
		Util.isDefined(this.game.prodigy.player.world) ? (e.yesNoText(15, "merchant"), e.function(this.game.prodigy.open.social.bind(this.game.prodigy.open, 1))) : e.text(16, "merchant"), e.start()
	}, e.prototype.openArena = function () {
		var t = e.DATA.dialogue[0];
		t.yes = this.game.prodigy.open.arena.bind(this.game.prodigy.open);
		var i = this.game.prodigy.dialogue.create();
		i.setText(t), i.start("clankboot")
	}, e.prototype.toTown = function () {
		this.game.prodigy.world.teleport("lamplight-C1", 715, 365)
	}, e
}();
Arena.AUDIO = [{
	tag: "voice-3",
	s: 0,
	d: 1
}], Arena.DATA = {
	tag: "Arena",
	zoneName: "zone-arena",
	atlas: "zone-arena",
	fullName: "Coliseum",
	battle: {
		screen: "bg-battle-arena"
	},
	dialogue: [{
		text: "Do you want to train in the arena?",
		face: 0,
		anim: 4,
		audio: Arena.AUDIO[0]
	}]
}, Arena.STORE = {
	tag: "emblem-rank1",
	atlas: "icons",
	pages: [{
		btn: {
			icon: "star",
			top: "Silver",
			bot: "Rank"
		},
		icon: "emblem-rank2",
		rank: 2,
		top: "Silver Rank",
		items: [{
			ID: 76,
			type: "item"
		}, {
			ID: 77,
			type: "item"
		}]
	}, {
		btn: {
			icon: "star",
			top: "Gold",
			bot: "Rank"
		},
		icon: "emblem-rank3",
		rank: 3,
		top: "Gold Rank",
		items: [{
			ID: 59,
			type: "hat"
		}, {
			ID: 75,
			type: "weapon"
		}, {
			ID: 50,
			type: "outfit"
		}]
	}, {
		btn: {
			icon: "star",
			top: "Platinum",
			bot: "Rank"
		},
		icon: "emblem-rank4",
		rank: 4,
		top: "Platinum Rank",
		items: [{
			ID: 60,
			type: "hat"
		}, {
			ID: 76,
			type: "weapon"
		}, {
			ID: 51,
			type: "outfit"
		}]
	}, {
		btn: {
			icon: "star",
			top: "Diamond",
			bot: "Rank"
		},
		icon: "emblem-rank5",
		rank: 5,
		top: "Diamond Rank",
		items: [{
			ID: 61,
			type: "hat"
		}, {
			ID: 77,
			type: "weapon"
		}, {
			ID: 52,
			type: "outfit"
		}]
	}]
}, Prodigy.Lamplight = function (e) {
	Prodigy.Zone.call(this, e), this.name = "Lamplight", this.ID = "lamplight", this.game = e, this.battleBG = "bg-battle-arena", this.onFaint = "lamplight-B1", this.questHub = "lamplight-B1", this.states = ["event", "1stpresent", "bounty"];
	var t = ["tileset-town", "tileset-generic", "zone-lamplight", "npc-sprite-gnome"];
	this.maps = {
		A1: new Prodigy.Lamplight_A1(this, t),
		B1: new Prodigy.Lamplight_B1(this, t),
		B2: new Prodigy.Lamplight_B2(this, t),
		B3: new Prodigy.Lamplight_B3(this, t),
		C1: new Prodigy.Lamplight_C1(this, t)
	}, this.quests = {
		1: {
			ID: 1,
			desc: "West Gate",
			req: {
				type: "seq",
				N: 1
			},
			area: ["lamplight-C1"],
			chain: !0
		},
		2: {
			ID: 2,
			desc: "Coliseum",
			req: {
				type: "seq",
				N: 1
			},
			area: ["lamplight-C1"],
			chain: !0
		},
		3: {
			ID: 3,
			desc: "Shopping District",
			req: {
				type: "seq",
				N: 2
			},
			area: ["lamplight-A1"],
			chain: !0
		},
		4: {
			ID: 4,
			desc: "Town Square",
			req: {
				type: "seq",
				N: 2
			},
			area: ["lamplight-B2"],
			chain: !0
		},
		5: {
			ID: 5,
			desc: "East Gate",
			req: {
				type: "seq",
				N: 1
			},
			area: ["lamplight-B3"]
		}
	}, this.store = null
}, Prodigy.extends(Prodigy.Lamplight, Prodigy.Zone, {
	constructor: Prodigy.Lamplight
}), Prodigy.Lamplight_A1 = function (e, t) {
	Prodigy.Map.call(this, e, "A1", "Shopping District", 1140, 580, ["lamplight-B1"], t.concat(["npc-sprite-noot"]))
}, Prodigy.extends(Prodigy.Lamplight_A1, Prodigy.Map, {
	constructor: Prodigy.Lamplight_A1,
	setup: function (e, t) {
		Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
			x: 1140,
			y: 720,
			w: 122,
			h: 200,
			rect: !0
		}, "lamplight-B1", 1140, 150), this.addClickableEvent(e, t, 216, 312, 50, 88, this.stylist.bind(this, e, t), null), this.addClickableEvent(e, t, 1095, 230, 50, 90, this.equipmentStore.bind(this, e, t), null);
		var i = t.content.add(e.prodigy.create.sprite(669, 0, "zone-lamplight", "fan1"));
		i.animations.add("spin", ["fan1", "fan2", "fan3", "fan4"], 10, !0, !1), i.animations.play("spin");
		var a = t.content.add(e.prodigy.create.sprite(540, 360, "zone-lamplight", "lamppost-right"));
		a.anchor.setTo(.5, 1), this.addGnome(e, t, 640, 255, "Peddler", 6, 6, this.openStore.bind(this, e)), this.addGnome(e, t, 1020, 390, "Shopkeeper Figg", 4, 2, e.prodigy.open.store.bind(e.prodigy.open, Prodigy.Menu.Store.DATA)).setIndicator("store"), this.addGnome(e, t, 253, 570, "Stylist Snips", 13, 1, e.prodigy.open.stylist.bind(e.prodigy.open)).setIndicator("store");
		var s = t.content.add(e.prodigy.create.sprite(141, 585, "zone-lamplight", "planta")),
			r = t.content.add(e.prodigy.create.sprite(99, 670, "zone-lamplight", "planta"));
		s.anchor.setTo(.5, 1), r.anchor.setTo(.5, 1), this._zone.isOnQuest(3) && this.quest3(e, t)
	},
	stylist: function (e, t) {
		var i = e.prodigy.event.create();
		i.validPath(t.user, t.path, 235, 450), i.function(e.prodigy.open.stylist.bind(e.prodigy.open)), i.start()
	},
	equipmentStore: function (e, t) {
		var i = e.prodigy.event.create();
		i.validPath(t.user, t.path, 1120, 365), i.function(e.prodigy.open.store.bind(e.prodigy.open, Prodigy.Menu.Store.DATA)), i.start()
	},
	openStore: function (e, t) {
		for (var i = Util.getDateSeed(), a = [], s = 0; s < Items.data.item.length; s++) 1 === Items.data.item[s].drop && a.push(s + 1);
		var r = a[Math.floor(Util.pseudoRandomNumber(i) * a.length)],
			o = e.prodigy.player.backpack.hasItem("item", r),
			n = "You have " + o + "...do you want to sell me one of yours?",
			l = e.prodigy.dialogue.create();
		t && (n = "Thanks! You have " + o + " left, do you want to sell me another one?"), t || l.setText({
			text: "Hey there, do you have any [item/" + r + "]? \n\nToday only, I'll buy them for \n[gold] 100 each!"
		}), o ? l.setText({
			text: n,
			yes: this.sellItem.bind(this, e, r)
		}) : l.setText({
			text: "Come back tomorrow, and I'll buy something else!"
		}), l.start("merchant")
	},
	sellItem: function (e, t) {
		e.prodigy.player.changeGold(100), e.prodigy.player.backpack.consume("item", t, 1), this.openStore(e, !0)
	},
	quest3: function (e, t) {
		var i = this.addNPC(e, t, 1110, 520, "npc-sprite-noot");
		i.flip(), i.float(!0);
		var a = e.prodigy.event.create();
		a.enableInput(!1), a.path(i, [{
			x: 816,
			y: 430
		}], null, !0), a.delay(500), a.validPath(t.user, t.path, 762, 389), a.enableInput(!0), a.text(85, "noot"), a.enableInput(!1), a.delay(500), a.validPath(i, t.path, 1071, 434), a.enableInput(!0), a.text(86, "noot"), a.enableInput(!1), a.delay(500), a.validPath(i, t.path, 388, 528), a.enableInput(!0), a.text(87, "noot"), a.enableInput(!1), a.function(this._zone.completeSequence.bind(this._zone, 3, 1)), a.function(this._zone.completeQuest.bind(this._zone, 3)), a.function(this._zone.startQuest.bind(this._zone, 4)), a.function(t.process.bind(t)), a.enableInput(!0), a.validPath(i, t.path, 1140, 860), a.start(), t.disablePopups = !0
	}
}), Prodigy.Lamplight_B1 = function (e, t) {
	Prodigy.Map.call(this, e, "B1", "West Gate", 100, 300, ["lamplight-B2", "lamplight-A1", "lamplight-C1"], t.concat(["npc-sprite-noot"]))
}, Prodigy.Lamplight_B1.MAX_BOUNTIES = 3, WHEELDATA = {
	tag: "Lamplight",
	zoneName: "zone-lamplight",
	atlas: "zone-lamplight",
	fullName: "Town Square",
	dialogue: [{
		text: "Hello there! Do you want to spin the Wheel of Wonder?",
		anim: 4
	}, {
		text: "Let's spin that wheel!",
		anim: 4
	}, {
		text: "Sorry, you'll have to come back tomorrow to spin again!",
		anim: 1
	}, {
		text: "Fantastic! Want to spin again?",
		anim: 4
	}]
}, Prodigy.extends(Prodigy.Lamplight_B1, Prodigy.Map, {
	constructor: Prodigy.Lamplight_B1,
	setup: function (e, t) {
		Prodigy.Map.prototype.setup.call(this, e, t), this.game = e, Util.isDefined(this._zone.getQuestState()) ? this._zone.isOnQuest(1) ? this.quest1(e, t) : this._zone.isOnQuest(3) ? this.quest3(e, t) : this._zone.isOnQuest(4) && this.quest4(e, t) : this.startQuestline(e, t);
		var i = t.content.add(e.prodigy.create.sprite(108, 0, "zone-lamplight", "fan1"));
		i.animations.add("spin", ["fan1", "fan2", "fan3", "fan4"], 10, !0, !1), i.animations.play("spin");
		var a = e.prodigy.create.sprite(940, 330, "zone-lamplight", "wheel");
		a.inputEnabled = !0, a.anchor.setTo(.5, 1), t.content.add(a);
		var s = t.content.add(e.prodigy.create.sprite(265, 200, "zone-lamplight", "lamppost"));
		s.anchor.setTo(.5, 1);
		var r = t.content.add(e.prodigy.create.sprite(65, 400, "zone-lamplight", "lamppost"));
		r.anchor.setTo(.5, 1), this.addAreaEvent(e, t, {
			x: 116,
			y: 720,
			r: 80
		}, "lamplight-C1", 114, 150), this.addAreaEvent(e, t, {
			x: 1140,
			y: 0,
			w: 122,
			h: 200,
			rect: !0
		}, "lamplight-A1", 1140, 580), this.addAreaEvent(e, t, {
			x: 1280,
			y: 415,
			r: 80
		}, "lamplight-B2", 160, 415), this.addAreaEvent(e, t, {
			x: 0,
			y: 240,
			r: 80
		}, "tutorial-D8", 1175, 255), this.addGnome(e, t, 864, 336, "Wheeler", 7, 5, this.openText.bind(this, e, t));
		var o = t.content.add(e.prodigy.create.sprite(373, 565, "zone-lamplight", "planta")),
			n = t.content.add(e.prodigy.create.sprite(334, 640, "zone-lamplight", "plantb"));
		o.anchor.setTo(.5, 1), n.anchor.setTo(.5, .4), this.addClickableEvent(e, t, 560, 260, 160, 139, this.openBoard.bind(this, e, t), null), this.addGnome(e, t, 495, 385, "Boardy", 4, 3, this.boardText.bind(this, e, t)).flip(), this.img = t.content.add(e.prodigy.create.sprite(561, 240, "zone-lamplight", "board")), this.pages = [1, 2, 3];
		for (var l = 0; l < this.game.prodigy.player.state.get("world-bounties").length; l++) !this.game.prodigy.player.backpack.hasItem("key", l + 5) && this.game.prodigy.player.state.get("world-bounties")[l] < 0 || (this.pages[l] = t.content.add(e.prodigy.create.sprite(603 + 20 * l, 322, "zone-lamplight", "page")))
	},
	startQuestline: function (e, t) {
		this._zone.startQuest(1), this.quest1(e, t)
	},
	quest1: function (e, t) {
		t.user.x = 238, t.user.y = 406;
		var i = this.addNPC(e, t, 238, 406, "npc-sprite-noot");
		i.visible = !1, i.float(!0);
		var a = e.prodigy.event.create();
		a.enableInput(!1), a.set(i, "visible", !0), a.hop(i, 300, 50, 50), a.enableInput(!0), a.text(80, "noot"), a.text(81, "noot"), a.text(82, "noot"), a.path(i, [{
			x: 115,
			y: 840
		}, {
			x: 246,
			y: 413
		}], 2, !0), a.function(this._zone.completeSequence.bind(this._zone, 1, 0)), a.function(this._zone.completeQuest.bind(this._zone, 1)), a.function(this._zone.startQuest.bind(this._zone, 2)), a.function(t.process.bind(t)), a.start(), t.disablePopups = !0
	},
	quest3: function (e, t) {
		if (this._zone.isOnSequence(3, 0)) {
			var i = this.addNPC(e, t, 115, 560, "npc-sprite-noot");
			i.float(!0);
			var a = e.prodigy.event.create();
			a.function(this._zone.completeSequence.bind(this._zone, 3, 0)), a.path(i, [{
				x: 1140,
				y: 0
			}, {
				x: 1140,
				y: 415
			}, {
				x: 245,
				y: 415
			}], 2, !0), a.start(), t.disablePopups = !0
		}
	},
	quest4: function (e, t) {
		if (this._zone.isOnSequence(4, 0)) {
			var i = this.addNPC(e, t, 1140, 160, "npc-sprite-noot");
			i.float(!0);
			var a = e.prodigy.event.create();
			a.function(this._zone.completeSequence.bind(this._zone, 4, 0)), a.path(i, [{
				x: 1340,
				y: 415
			}, {
				x: 1140,
				y: 415
			}], 2, !0), a.start(), t.disablePopups = !0
		}
	},
	openBoard: function (e, t) {
		var i = e.prodigy.event.create();
		i.validPath(t.user, t.path, 520, 400), i.function(e.prodigy.open.bountyBoard.bind(e.prodigy.open)), i.start()
	},
	openText: function (e, t) {
		new Wheel(e, t.foreground, e.prodigy.player)
	},
	destroyPage: function (e) {
		this.pages[e].destroy()
	},
	boardText: function (e) {
		for (var t = e.prodigy.bounty.getBounties(), i = 0, a = 0; a < t.length; a++)
			if (Util.isDefined(t[a].complete)) {
				this.game.prodigy.network.sendAnalytics("Bounty", "complete", "Events"), i += e.prodigy.bounty.getReward(t[a]);
				var s = this.game.prodigy.player.state.get("world-bounties");
				s[t[a].ID - 5] = -1 * s[t[a].ID - 5], this.game.prodigy.player.state.set("world-bounties", s), this.destroyPage(t[a].ID - 5), e.prodigy.player.backpack.consume("key", t[a].ID, 1)
			} if (i > 0) {
			console.log(i);
			var r = e.prodigy.event.create();
			r.text(13, "merchant"), r.function(this.game.prodigy.open.gotItem.bind(this.game.prodigy.open, [{
				type: "bounty",
				N: i
			}])), r.start(), e.prodigy.player.addBountyScore(i)
		} else this.openStore(e)
	},
	getState: function (e) {
		var t = this.game.prodigy.world.getZone("lamplight");
		return t.getState(e)
	},
	setState: function (e, t) {
		var i = this.game.prodigy.world.getZone("lamplight");
		i.setState(t, e)
	},
	getDate: function () {
		var e = new Date,
			t = e.getDate(),
			i = e.getMonth() + 1,
			a = e.getFullYear();
		return 10 > t && (t = "0" + t), 10 > i && (i = "0" + i), i + "" + t + a
	},
	openStore: function () {
		var e = this.game.prodigy.event.create(),
			t = {
				tag: "emblem-rank1",
				atlas: "icons",
				callback: this.game.prodigy.player.getBountyScore.bind(this.game.prodigy.player),
				pages: [{
					btn: {
						icon: "emblem-bounty",
						top: "5",
						bot: "BP"
					},
					icon: "emblem-bounty",
					rank: 5,
					top: "5 Bounty Pts.",
					items: [{
						ID: 76,
						type: "item"
					}, {
						ID: 77,
						type: "item"
					}]
				}, {
					btn: {
						icon: "emblem-bounty",
						top: "20",
						bot: "BP"
					},
					icon: "emblem-bounty",
					rank: 20,
					top: "20 Bounty Pts.",
					items: [{
						ID: 63,
						type: "hat"
					}, {
						ID: 54,
						type: "outfit"
					}]
				}, {
					btn: {
						icon: "emblem-bounty",
						top: "50",
						bot: "BP"
					},
					icon: "emblem-bounty",
					rank: 50,
					top: "50 Bounty Pts.",
					items: [{
						ID: 62,
						type: "hat"
					}, {
						ID: 53,
						type: "outfit"
					}]
				}, {
					btn: {
						icon: "emblem-bounty",
						top: "100",
						bot: "BP"
					},
					icon: "emblem-bounty",
					rank: 100,
					top: "100 Bounty Pts.",
					items: [{
						ID: 78,
						type: "weapon"
					}, {
						ID: 79,
						type: "weapon"
					}]
				}]
			};
		e.yesNoText(17, "merchant"), e.function(this.game.prodigy.open.rankStore.bind(this.game.prodigy.open, t, "bounty")), e.start()
	}
});
var Wheel = function () {
	function e(e, t, i) {
		this.player = i, Prodigy.Control.Element.call(this, e, t, 0, 25), this.setup();
		var a = WHEELDATA.dialogue[0];
		a.yes = this.trySpin.bind(this), a.no = this.close.bind(this);
		var s = e.prodigy.dialogue.create();
		s.setText(a), s.start("stache")
	}
	return e.prototype = Object.create(Prodigy.Control.Element.prototype), e.prototype.setup = function () {
		this.wheelItems = this.getWheelItems();
		var e = this.game.world.centerX,
			t = this.game.world.centerY - 80;
		this.add(this.game.prodigy.create.sprite(e - 250, t - 225, "zone-lamplight", "wheelFrame")), this.wheel = this.game.prodigy.create.element(this, e, t), this.wheelAngle = 18, this.wheel.angle = this.wheelAngle, this.spinAngle = 0;
		var i = this.wheel.add(this.game.prodigy.create.sprite(0, 0, "zone-lamplight", "wheelBig"));
		i.anchor.setTo(.5, .5);
		for (var a, s = 0; s < this.wheelItems.length; s++) a = this.game.prodigy.create.icon(this.wheel, 0, 0, "icons", Util.convertItemToIcon(this.wheelItems[s].item), 1), a.sprite.anchor.setTo(.5, 3), a.sprite.scale.setTo(.7, .7), a.sprite.angle = 36 * s + 18;
		this.add(this.game.prodigy.create.sprite(e - 250 + 220, t - 225 + 3, "zone-lamplight", "wheelPointer"))
	}, e.prototype.getWheelItems = function () {
		var e, t, i, a = [],
			s = new Date,
			r = new Date(s.getUTCFullYear(), s.getUTCMonth(), s.getUTCDay()),
			o = r.getTime(),
			n = ["outfit", "weapon", "boots"];
		switch (Util.shuffleArray(n, o), Math.floor(3 * Util.pseudoRandomNumber(o))) {
		case 0:
			if (e = Util.randomArrayElement(Items.getItems(n[0], 0), o), t = Util.randomArrayElement(Items.getItems(n[1], 3), o), i = Util.randomArrayElement(Items.getItems(n[2], 0), o), Util.isDefined(e) && Util.isDefined(t) && Util.isDefined(i)) {
				a[0] = {
					item: e,
					weight: 4
				}, a[4] = {
					item: t,
					weight: 1
				}, a[7] = {
					item: i,
					weight: 4
				};
				break
			}
			case 1:
				if (e = Util.randomArrayElement(Items.getItems(n[0], 1), o), t = Util.randomArrayElement(Items.getItems(n[1], 2), o), i = Util.randomArrayElement(Items.getItems(n[2], 0), o), Util.isDefined(e) && Util.isDefined(t) && Util.isDefined(i)) {
					a[0] = {
						item: e,
						weight: 3
					}, a[4] = {
						item: t,
						weight: 2
					}, a[7] = {
						item: i,
						weight: 4
					};
					break
				}
				case 2:
					if (e = Util.randomArrayElement(Items.getItems(n[0], 1), o), t = Util.randomArrayElement(Items.getItems(n[1], 1), o), i = Util.randomArrayElement(Items.getItems(n[2], 1), o), Util.isDefined(e) && Util.isDefined(t) && Util.isDefined(i)) {
						a[0] = {
							item: e,
							weight: 3
						}, a[4] = {
							item: t,
							weight: 3
						}, a[7] = {
							item: i,
							weight: 3
						};
						break
					}
		}
		for (var l = Items.getItems("item", 0), h = 0; 10 > h; h++)
			if (!Util.isDefined(a[h])) {
				var d = {
					item: {
						type: "gold",
						N: 100
					},
					weight: 13
				};
				h % 3 === 0 && (d = {
					item: Util.randomArrayElement(l, o + 7 * h % 13),
					weight: 13
				}), a[h] = d
			} return a
	}, e.prototype.trySpin = function () {
		if (this.player.data.numSpins > 0 && this.game.prodigy.network.sendAnalytics("Second-Wheel-Spin"), this.dialogue = this.game.prodigy.dialogue.create(), this.player.canSpin()) {
			var e = WHEELDATA.dialogue[1];
			e.hideNext = !0, this.dialogue.setText(e), this.startSpin()
		} else this.dialogue.setText(WHEELDATA.dialogue[2]), this.player.isMember || this.dialogue.setText({
			callback: this.game.prodigy.open.membership.bind(this.game.prodigy.open, Prodigy.Menu.MemberAd.WHEEL_SPIN)
		}), this.dialogue.setText({
			callback: this.close.bind(this)
		});
		this.dialogue.start("stache")
	}, e.prototype.close = function () {
		this.destroy()
	}, e.prototype.startSpin = function () {
		var e = 15e3;
		this.selectedIndex = this.wheelItems.indexOf(Util.weightedArrayElement(this.wheelItems)), this.spinAngle = -36 * (this.selectedIndex + 1) - this.spinAngle, this.playSound(e, 100), this.wheelAngle += 2880 + this.spinAngle;
		var t = this.game.add.tween(this.wheel).to({
			angle: this.wheelAngle
		}, e, Phaser.Easing.Cubic.Out).start();
		t.onComplete.addOnce(this.endSpin, this), this.player.spinWheel()
	}, e.prototype.playSound = function (e, t) {
		if (!(0 >= e)) {
			this.game.prodigy.audio.playSFX("tick");
			var i = t + 9e-7 * Math.pow(t, 3);
			setTimeout(this.playSound.bind(this, e - i, i), t)
		}
	}, e.prototype.endSpin = function () {
		this.dialogue.close(), this.game.prodigy.open.gotItem([this.wheelItems[this.selectedIndex].item], this.tryAgain.bind(this))
	}, e.prototype.tryAgain = function () {
		var e = WHEELDATA.dialogue[3];
		e.yes = this.trySpin.bind(this), e.no = this.close.bind(this), this.dialogue.setText(e), this.dialogue.start("stache")
	}, e
}();
Prodigy.Lamplight_B2 = function (e, t) {
	Prodigy.Map.call(this, e, "B2", "Town Square", 160, 415, ["lamplight-B1", "lamplight-B3"], t.concat("npc-sprite-noot"))
}, Prodigy.extends(Prodigy.Lamplight_B2, Prodigy.Map, {
	constructor: Prodigy.Lamplight_B2,
	setup: function (e, t) {
		Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
			x: 0,
			y: 420,
			r: 80
		}, "lamplight-B1", 1120, 415), this.addAreaEvent(e, t, {
			x: 1280,
			y: 420,
			r: 80
		}, "lamplight-B3", 160, 415);
		var i = t.content.add(e.prodigy.create.sprite(580, 394, "zone-lamplight", "fountain1"));
		i.anchor.setTo(0, 1), i.animations.add("flow", ["fountain1", "fountain2", "fountain3", "fountain4"], 10, !0, !1), i.animations.play("flow");
		var a = t.content.add(e.prodigy.create.sprite(146, 562, "zone-lamplight", "plantb")),
			s = t.content.add(e.prodigy.create.sprite(1133, 561, "zone-lamplight", "plantb")),
			r = t.background.add(e.prodigy.create.sprite(940, 320, "zone-lamplight", "banner-left"));
		r.anchor.setTo(.5, .8);
		var o = t.content.add(e.prodigy.create.sprite(340, 320, "zone-lamplight", "banner-right"));
		o.anchor.setTo(.5, .8), a.anchor.setTo(.5, .4), s.anchor.setTo(.5, .4), t.content.add(e.prodigy.create.sprite(965, 110, "zone-lamplight", "plantb")), t.content.add(e.prodigy.create.sprite(1115, 110, "zone-lamplight", "plantb")), this._zone.isOnQuest(4) && this.quest4(e, t)
	},
	quest4: function (e, t) {
		var i = this.addNPC(e, t, 230, 415, "npc-sprite-noot");
		i.float(!0);
		var a = e.prodigy.event.create();
		a.enableInput(!1), a.delay(500), a.enableInput(!0), a.text(88, "noot"), a.enableInput(!1), a.delay(500), a.path(i, [{
			x: 460,
			y: 500
		}]), a.delay(500), a.enableInput(!0), a.text(89, "noot"), a.enableInput(!1), a.delay(500), a.validPath(t.user, t.path, 1040, 410, !0), a.path(i, [{
			x: 1085,
			y: 410
		}], !0), a.delay(500), a.enableInput(!0), a.text(90, "noot"), a.function(this._zone.completeSequence.bind(this._zone, 4, 0)), a.function(this._zone.completeQuest.bind(this._zone, 4)), a.function(this._zone.startQuest.bind(this._zone, 5)), a.function(t.process.bind(t)), a.path(i, [{
			x: 1280,
			y: 410
		}]), a.set(i, "visible", !1), a.start(), t.disablePopups = !0
	}
}), Prodigy.Lamplight_B3 = function (e, t) {
	Prodigy.Map.call(this, e, "B3", "East Gate", 160, 415, ["lamplight-B2"], t.concat("npc-sprite-noot"))
}, Prodigy.extends(Prodigy.Lamplight_B3, Prodigy.Map, {
	constructor: Prodigy.Lamplight_B3,
	setup: function (e, t) {
		Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
			x: 0,
			y: 415,
			r: 80
		}, "lamplight-B2", 1120, 415);
		var i = t.content.add(e.prodigy.create.sprite(64, 565, "zone-lamplight", "plantb")),
			a = t.content.add(e.prodigy.create.sprite(147, 600, "zone-lamplight", "plantb"));
		i.anchor.setTo(.5, .4), a.anchor.setTo(.5, .4), this.addBlock(e, t, 950, 30, {
			x: 0,
			y: 0,
			atlas: "zone-lamplight",
			tag: "machine"
		}), this.addGnome(e, t, 1124, 370, "Rolly", 4, 3, this.openText.bind(this, e, t)).flip(), this._zone.isOnQuest(5) && this.quest5(e, t)
	},
	openText: function (e, t) {
		var i = e.prodigy.dialogue.create();
		i.setText({
			text: "This is the TRANSFORMOTRON! \nFor [gold] 200, it will transform you into a monster! Want to try?",
			yes: this.tryTransform.bind(this, e, t)
		}), i.start("guard")
	},
	tryTransform: function (e) {
		var t = [2, 20, 34, 36, 46, 61, 90],
			i = t[Math.floor(Math.random() * t.length)],
			a = e.prodigy.dialogue.create();
		e.prodigy.player.getGold() < 200 ? a.setText({
			text: "Uh oh! You don't have enough gold!"
		}) : e.prodigy.player.isMember ? (e.prodigy.network.sendAnalytics("Use-Transformatron"), e.prodigy.player.changeGold(-200), e.prodigy.player.transform(i, 6e5), a.setText({
			text: "The transformation only lasts 10 minutes, so come back when you want to transform again!"
		})) : (e.prodigy.network.sendAnalytics("Use-Transformatron"), e.prodigy.player.transform(i, 1e3), a.setText({
			text: "Uh oh! Only members can transform!"
		}), a.setText({
			callback: e.prodigy.open.membership.bind(e.prodigy.open)
		})), a.start("guard")
	},
	quest5: function (e, t) {
		var i = this.addNPC(e, t, 250, 415, "npc-sprite-noot");
		i.float(!0);
		var a = e.prodigy.event.create();
		a.enableInput(!1), a.delay(500), a.path(i, [{
			x: 1085,
			y: 410
		}], null, !0), a.delay(500), a.validPath(t.user, t.path, 1040, 410), a.enableInput(!0), a.text(91, "noot"), a.text(92, "noot"), a.text(93, "noot"), a.enableInput(!1), a.hop(i, 300, -40, 50), a.set(i, "visible", !1), a.enableInput(!0), a.function(this._zone.completeSequence.bind(this._zone, 5, 0)), a.function(this._zone.completeQuest.bind(this._zone, 5)), a.function(t.process.bind(t)), a.start(), t.disablePopups = !0
	}
}), Prodigy.Lamplight_C1 = function (e, t) {
	Prodigy.Map.call(this, e, "C1", "Battle District", 114, 150, ["lamplight-B1"], t.concat(["npc-sprite-noot", "npc-sprite-wizard"]))
}, Prodigy.extends(Prodigy.Lamplight_C1, Prodigy.Map, {
	constructor: Prodigy.Lamplight_C1,
	setup: function (e, t) {
		Prodigy.Map.prototype.setup.call(this, e, t), this.addAreaEvent(e, t, {
			x: 111,
			y: 0,
			r: 92
		}, "lamplight-B1", 150, 610);
		var i = t.content.add(e.prodigy.create.sprite(655, 0, "zone-lamplight", "fire1"));
		i.animations.add("flicker", ["fire1", "fire2", "fire3", "fire4"], 10, !0, !1), i.animations.play("flicker");
		var a = t.content.add(e.prodigy.create.sprite(655, 120, "zone-lamplight", "fire1"));
		a.animations.add("flicker", ["fire1", "fire2", "fire3", "fire4"], 10, !0, !1), a.animations.play("flicker");
		var s = t.content.add(e.prodigy.create.sprite(655, 240, "zone-lamplight", "fire1"));
		s.animations.add("flicker", ["fire1", "fire2", "fire3", "fire4"], 10, !0, !1), s.animations.play("flicker");
		var r = t.content.add(e.prodigy.create.sprite(775, 120, "zone-lamplight", "fire1"));
		r.animations.add("flicker", ["fire1", "fire2", "fire3", "fire4"], 10, !0, !1), r.animations.play("flicker");
		var o = t.content.add(e.prodigy.create.sprite(775, 240, "zone-lamplight", "fire1"));
		o.animations.add("flicker", ["fire1", "fire2", "fire3", "fire4"], 10, !0, !1), o.animations.play("flicker");
		var n = t.content.add(e.prodigy.create.sprite(775, 0, "zone-lamplight", "fire1"));
		n.animations.add("flicker", ["fire1", "fire2", "fire3", "fire4"], 10, !0, !1), n.animations.play("flicker");
		var l = t.content.add(e.prodigy.create.sprite(980, 440, "zone-lamplight", "lamppost-right"));
		l.anchor.setTo(.5, 1);
		var h = t.content.add(e.prodigy.create.sprite(475, 440, "zone-lamplight", "lamppost-left"));
		h.anchor.setTo(.5, 1);
		var d = t.content.add(e.prodigy.create.sprite(261, 200, "zone-lamplight", "lamppost"));
		d.anchor.setTo(.5, 1);
		var p = t.content.add(e.prodigy.create.sprite(1185, 200, "zone-lamplight", "lamppost"));
		p.anchor.setTo(.5, 1), this.addClickableEvent(e, t, 682, 282, 78, 82, this.doorClick.bind(this, e, t), null), this._zone.isOnQuest(2) && this.quest2(e, t)
	},
	quest2: function (e, t) {
		var i = this.addNPC(e, t, 114, 200, "npc-sprite-noot");
		i.float(!0);
		var a = e.prodigy.event.create();
		a.enableInput(!1), a.delay(500), a.path(i, [{
			x: 460,
			y: 500
		}], null, !0), a.delay(500), a.validPath(t.user, t.path, 420, 550), a.delay(500), a.enableInput(!0), a.text(83, "noot"), a.text(84, "noot"), a.enableInput(!1), a.delay(500), a.enableInput(!0), a.function(this._zone.completeSequence.bind(this._zone, 2, 0)), a.function(this._zone.completeQuest.bind(this._zone, 2)), a.function(this._zone.startQuest.bind(this._zone, 3)), a.function(t.process.bind(t)), a.path(i, [{
			x: 114,
			y: 0
		}, {
			x: 212,
			y: 391
		}], 2, !0), a.start(), t.disablePopups = !0
	},
	doorClick: function (e, t) {
		var i = e.prodigy.event.create();
		i.validPath(t.user, t.path, 715, 365), i.set(e.state.states.Arena, "playerX", 640), i.set(e.state.states.Arena, "playerY", 410), i.function(e.state.start.bind(e.state, "Arena")), i.start()
	}
});
var Pirate = function () {
	function e(t) {
		WalkableScreen.call(this, t, e.DATA), this.assets = ["npc-sprite-eve", "npc-sprite-merchant", "tileset-core"], this.area = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], this.playerX = 710, this.playerY = 520
	}
	return e.prototype = Object.create(WalkableScreen.prototype), e.prototype.create = function () {
		WalkableScreen.prototype.create.call(this, [], "pirate-0")
	}, e.prototype.screenSetup = function () {
		WalkableScreen.prototype.screenSetup.call(this), new Prodigy.Container.QuestNPC(this.game, this.content, 270, 320, e.DATA, {
			name: "Captain Eve",
			atlas: "eve"
		}), this.createStoreNPC(1080, 390, e.STORE);
		var t = this.game.prodigy.create.sprite(316, 422, this.screenName, "anchor");
		t.anchor.setTo(.5, 1), this.content.add(t);
		var i = this.game.prodigy.create.sprite(1147, 42, this.screenName, "anchor");
		i.animations.add("stand", ["flag1", "flag2", "flag3"], 8, !0, !1), i.animations.play("stand"), this.background.add(i);
		var a = this.game.prodigy.create.sprite(854, 516, this.screenName, "boat");
		a.inputEnabled = !0, a.events.onInputDown.add(this.toTown, this), this.game.add.tween(a).to({
			y: 505
		}, 1500, Phaser.Easing.Quadratic.InOut, !0, 0, 1e4, !0), this.content.add(a);
		var s = [{
			pre: "Buccaneer ",
			req: [{
				rtype: "item",
				type: "outfit",
				ID: 36
			}, {
				rtype: "item",
				type: "hat",
				ID: 40
			}, {
				rtype: "item",
				type: "weapon",
				ID: 66
			}],
			fail: "You need to buy the Pirate set to unlock!"
		}, {
			pre: "Captain ",
			req: [{
				rtype: "quest",
				zone: 4,
				Q: 15
			}],
			fail: "You need to complete the Barnacle Cove quests to unlock!"
		}, {
			pre: "Treasure Hunter ",
			req: [{
				rtype: "pet",
				ID: 98
			}],
			fail: "You need to catch a Mimic to unlock!"
		}, {
			pre: "First-mate ",
			member: !0,
			fail: "You need to become a member to unlock!"
		}, {
			post: "beard the Pirate",
			member: !0,
			fail: "You need to become a member to unlock!"
		}];
		this.addNicknamer(185, 615, s), this.menuBar.addStore(), new HealEvent(this.game, this.content, this.user, this.path, 702, 347)
	}, e.prototype.toTown = function () {
		this.game.state.states.Docks.playerX = 634, this.game.state.states.Docks.playerY = 560, this.game.state.start("Docks")
	}, e
}();
Pirate.STORE = {
	name: "Plank's Tanks",
	items: [{
		ID: 40,
		type: "hat"
	}, {
		ID: 66,
		type: "weapon"
	}, {
		ID: 36,
		type: "outfit"
	}, {
		ID: 99,
		type: "pet"
	}, {
		ID: 39,
		type: "hat"
	}, {
		ID: 65,
		type: "weapon"
	}, {
		ID: 35,
		type: "outfit"
	}, {
		ID: 102,
		type: "pet"
	}]
}, Pirate.AUDIO = [{
	tag: "voice-5",
	s: 0,
	d: 1
}, {
	tag: "voice-5",
	s: 1,
	d: 1
}, {
	tag: "voice-5",
	s: 2,
	d: 1
}, {
	tag: "voice-5",
	s: 3,
	d: 1
}, {
	tag: "voice-5",
	s: 4,
	d: 1
}, {
	tag: "voice-5",
	s: 5,
	d: 1
}, {
	tag: "voice-5",
	s: 6,
	d: 2
}, {
	tag: "voice-5",
	s: 8,
	d: 2
}], Pirate.DATA = {
	ID: 4,
	tag: "Pirate",
	zoneName: "zone-pirate",
	atlas: "zone-pirate",
	fullName: "Barnacle Cove",
	icon: "zone-water",
	battle: {
		screen: "bg-battle-pirate",
		encounter: [{
			ID: 10
		}, {
			ID: 25
		}, {
			ID: 33
		}, {
			ID: 66
		}, {
			ID: 98
		}, {
			ID: 99
		}, {
			ID: 102
		}]
	},
	dialogue: [{
		face: 1,
		anim: 2,
		text: "Lookit you, shilling! I guess you're pretty helpful, ain'tcha?",
		audio: Pirate.AUDIO[1]
	}, {
		face: 0,
		anim: 2,
		text: "Ready to help me out, shilling?",
		audio: Pirate.AUDIO[2]
	}, {
		face: 3,
		anim: 4,
		text: "HEY! THERE YOU ARE!",
		audio: Pirate.AUDIO[4]
	}, {
		face: 3,
		anim: 1,
		text: "HOP TO IT! That blasted Captain Bully and his men have stolen ANOTHER one of my chests!"
	}, {
		face: 2,
		anim: 0,
		text: "...wait a minute..."
	}, {
		face: 1,
		anim: 3,
		text: "You're not a pirate! You're just a...\njust a...\njust a SHILLING!",
		audio: Pirate.AUDIO[0]
	}, {
		face: 4,
		anim: 0,
		text: "The name's Eve Windsail, and I'll bet you're from the Academy...probably looking for water spells huh?",
		audio: Pirate.AUDIO[7]
	}, {
		face: 0,
		anim: 4,
		text: "Fine then! We have a deal! YOU help me deal with Captain Bully, and I'LL teach you all the water spells I know!",
		audio: Pirate.AUDIO[1]
	}, {
		face: 2,
		anim: 0,
		text: "...You don't know who Captain Bully is...?",
		audio: Pirate.AUDIO[3]
	}, {
		face: 0,
		anim: 0,
		text: "Don't you worry about it...you're not a pirate just yet! First, go defeat those gnawdys that STOLE MY CHEST!",
		audio: Pirate.AUDIO[5]
	}, {
		face: 0,
		anim: 4,
		text: "Good job! I guess Captain Bully forgot the first rule of the sea:\n\nDON'T STEAL A PIRATE'S TREASURE!",
		audio: Pirate.AUDIO[6]
	}, {
		face: 2,
		anim: 0,
		text: "..."
	}, {
		face: 2,
		anim: 0,
		text: "Uhh...I guess these ones didn't have my treasure...Go defeat more for me, and bring back my gold coins!"
	}, {
		face: 3,
		anim: 0,
		text: "Captain Bully is a pirate, and he LOVES stealing my stuff. He's the SECOND meanest pirate EVER.",
		audio: Pirate.AUDIO[5]
	}, {
		face: 2,
		anim: 0,
		text: "Who's the MEANEST pirate, you say?"
	}, {
		face: 3,
		anim: 4,
		text: "IT'S ME, YOU BONEHEAD!",
		audio: Pirate.AUDIO[2]
	}, {
		face: 4,
		anim: 0,
		text: "We need to defeat him, but first you need to be stronger. Go defeat a few monsters for me, then we'll talk."
	}, {
		face: 1,
		anim: 2,
		text: "Wow! I guess you're ready to learn a water spell after all!",
		audio: Pirate.AUDIO[1]
	}, {
		face: 0,
		anim: 4,
		text: "While Captain Bully is busy, I think it's time to collect more treasure!",
		audio: Pirate.AUDIO[2]
	}, {
		face: 1,
		anim: 4,
		text: "After all, what's the first rule of the sea? \n\nPIRATES NEED LOTS OF TREASURE!",
		audio: Pirate.AUDIO[6]
	}, {
		face: 0,
		anim: 4,
		text: "Good work, shilling! My treasure chest is full again, which means Captain Bonehead will send his men to take it soon...",
		audio: Pirate.AUDIO[0]
	}, {
		face: 4,
		anim: 0,
		text: "Captain Bully has 3 first mates - Lock, Stock and Barrel. They're not as mean as he is, but they're annoying."
	}, {
		face: 0,
		anim: 0,
		text: "I don't know where they are, but his men do! Go defeat monsters until one of them drops a note.",
		audio: Pirate.AUDIO[2]
	}, {
		face: 1,
		anim: 3,
		text: "AHA! This note says that Lock and his henchmen are nearby! Let's send a message to Captain Bully and defeat them!",
		audio: Pirate.AUDIO[3]
	}, {
		face: 1,
		anim: 3,
		text: "One first mate down, two to go! After all, what's the first rule of the sea? \n\nPIRATES ONLY HAVE 1 FIRST MATE!",
		audio: Pirate.AUDIO[6]
	}, {
		face: 0,
		anim: 0,
		text: "It'll take time to track down his other first mate, Stock. In the meantime, go defeat some squibbles for me!"
	}, {
		face: 3,
		anim: 1,
		text: "I think I figured out how to find first mate Stock! See, Stock is a funkeel, and funkeels LOVE shells!",
		audio: Pirate.AUDIO[1]
	}, {
		face: 0,
		anim: 0,
		text: "Go defeat some aquasters...they usually carry a few shells with them."
	}, {
		face: 0,
		anim: 0,
		text: "You've got the shells, and HERE COME THE FUNKEELS! Look for first mate Stock among them, and defeat him!",
		audio: Pirate.AUDIO[1]
	}, {
		face: 2,
		anim: 1,
		text: "BLAST IT! While you were away, first mate Barrel came and stole my treasure AGAIN!",
		audio: Pirate.AUDIO[4]
	}, {
		face: 3,
		anim: 0,
		text: "At this rate, I'll be SINKING broke! And you know the first rule of the sea:\n\nPIRATES DON'T USE PUNS!",
		audio: Pirate.AUDIO[6]
	}, {
		face: 4,
		anim: 0,
		text: "I think it's time to steal from Captain Bully instead! Go defeat more of his men, and bring back their medallions!"
	}, {
		face: 1,
		anim: 4,
		text: "There, that'll get their attention, shilling! Next, look for mimics and bring their treasure back!",
		audio: Pirate.AUDIO[1]
	}, {
		face: 4,
		anim: 0,
		text: "Hmmm...it looks like we upset Captain Bully. It's only a matter of time before he sends Barrel."
	}, {
		face: 1,
		anim: 3,
		text: "HA! Here he comes now! Get ready, shilling! This'll be a good battle for sure!",
		audio: Pirate.AUDIO[0]
	}, {
		face: 1,
		anim: 3,
		text: "HUZZAH! That'll show Captain Bully! Without his first mates, he'll come after us for sure!",
		audio: Pirate.AUDIO[1]
	}, {
		face: 2,
		anim: 0,
		text: "Uh...I guess we should get ready for him, shouldn't we?"
	}, {
		face: 4,
		anim: 0,
		text: "First, we should fix up my ship. Go defeat some monsters and bring back what I need."
	}, {
		face: 0,
		anim: 4,
		text: "Okay shilling, my ship is fixed and I've just heard that Captain Bully is on the way!",
		audio: Pirate.AUDIO[2]
	}, {
		face: 3,
		anim: 0,
		text: "We'll be ready for him, but first go find my stolen lucky spyglass. We'll need all the luck we can get!"
	}, {
		face: 0,
		anim: 4,
		text: "Alright! This is it! Captain Bully is here, and it's now or never!",
		audio: Pirate.AUDIO[1]
	}, {
		face: 1,
		anim: 2,
		text: "I'll take care of his henchmen with my ship, and you have the honor of challenging Bully.",
		audio: Pirate.AUDIO[0]
	}, {
		face: 3,
		anim: 0,
		text: "Just remember the first rule of the sea... \nNO ONE MESSES WITH EVE WINDSAIL AND SHILLING!",
		audio: Pirate.AUDIO[6]
	}, {
		face: 3,
		anim: 4,
		text: "HERE COMES CAPTAIN BULLY! AVAST, YE SHILLING!"
	}, {
		face: 1,
		anim: 3,
		text: "WOW! YOU DID IT, SHILLING!",
		audio: Pirate.AUDIO[0]
	}, {
		face: 4,
		anim: 0,
		text: "I guess you're not a shilling anymore, are you? From now on, I will call you..."
	}, {
		face: 1,
		anim: 4,
		text: "DOUBLOON!",
		audio: Pirate.AUDIO[2]
	}, {
		face: 1,
		anim: 0,
		text: "You've earned it, buddy! Barnacle Cove will forever be in your debt!"
	}],
	quests: [{
		coords: [110, 0],
		name: "A Fistful of Shillings",
		desc: "Eve needs you to defeat the gnawdys that stole her treasure",
		start: [2, 3, 4, 5, 6, 7, 8, 9],
		during: [],
		complete: [0],
		encounter: [{
			ID: 46
		}],
		req: [{
			type: "pet",
			ID: 46,
			N: 2
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [335, 0],
		name: "A Few Shillings More",
		desc: "The gnawdys you defeated had nothing...defeat more and bring back her doubloons",
		start: [10, 11, 12],
		during: [],
		complete: [0],
		encounter: [{
			ID: 46,
			drops: [{
				ID: 55,
				type: "item",
				R: 1
			}]
		}],
		req: [{
			type: "item",
			ID: 55,
			N: 3
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [450, 75],
		name: "Pirate 101: Strength Training!",
		desc: "Only the strongest can become pirates; defeat more monsters!",
		start: [13, 14, 11, 15, 16],
		during: [],
		complete: [17],
		encounter: [{
			ID: 25,
			R: 1
		}, {
			ID: 66,
			R: 1
		}],
		req: [{
			type: "pet",
			ID: 25,
			N: 2
		}, {
			type: "pet",
			ID: 66,
			N: 1
		}],
		reward: [{
			type: "spell",
			ID: 7
		}]
	}, {
		coords: [450, 225],
		name: "Eve the Hoarder",
		desc: "Eve needs to refill her treasure stash with rare shells!",
		start: [18, 19],
		during: [],
		complete: [0],
		encounter: [{
			ID: 33,
			R: 2,
			drops: [{
				ID: 40,
				type: "item",
				R: .5
			}]
		}, {
			ID: 66,
			R: 1,
			drops: [{
				ID: 40,
				type: "item",
				R: .75
			}]
		}],
		req: [{
			type: "item",
			ID: 40,
			N: 3
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [335, 300],
		name: "Pirates Need GPS",
		desc: "To find Captain Bully's men, you'll need to find a map to their location.",
		start: [20, 21, 22],
		during: [],
		complete: [0],
		encounter: [{
			ID: 46,
			R: .75,
			drops: [{
				ID: 56,
				type: "item",
				R: .25
			}]
		}, {
			ID: 102,
			R: .25
		}],
		req: [{
			type: "item",
			ID: 56,
			N: 1
		}],
		reward: [{
			type: "boots",
			N: 1,
			ID: 3
		}]
	}, {
		coords: [110, 300],
		name: "Pick that Lock!",
		desc: "Your note led you right to first mate Stock! Defeat him!",
		start: [23],
		during: [],
		complete: [17],
		pets: [{
			ID: 98,
			nickname: "First Mate Lock"
		}, {
			ID: 102,
			nickname: "Henchman"
		}, {
			ID: 102,
			nickname: "Henchman"
		}],
		req: [{
			type: "boss",
			N: 1
		}],
		reward: [{
			type: "spell",
			ID: 8
		}]
	}, {
		coords: [0, 225],
		name: "The Trouble with Squibbles",
		desc: "Eve needs time to track down Stock, but for now go defeat some squibbles.",
		start: [24, 25],
		during: [],
		complete: [0],
		encounter: [{
			ID: 102,
			R: 5
		}, {
			ID: 103,
			R: 1
		}],
		req: [{
			type: "pet",
			ID: 102,
			N: 5
		}, {
			type: "pet",
			ID: 103,
			N: 2
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [0, 75],
		name: "Gimme Your Shells!",
		desc: "First mate Stock is attracted to shells, so collect them from aquasters.",
		start: [26, 27],
		during: [],
		complete: [0],
		encounter: [{
			ID: 33,
			R: 2,
			drops: [{
				ID: 41,
				type: "item",
				R: 1
			}]
		}, {
			ID: 10,
			R: 2
		}, {
			ID: 66,
			R: 2
		}],
		req: [{
			type: "item",
			ID: 41,
			N: 4
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [110, 110],
		name: "And Heeeere Come the Funkeels!",
		desc: "The shells are attracting lots of funkeels! Look for Stock and defeat him!",
		start: [28],
		during: [],
		complete: [17],
		encounter: [{
			ID: 100,
			R: 1,
			nickname: "First Mate Stock"
		}, {
			ID: 99,
			R: 9
		}],
		req: [{
			type: "pet",
			ID: 100,
			N: 1
		}],
		reward: [{
			type: "spell",
			ID: 9
		}]
	}, {
		coords: [225, 60],
		name: "To Steal From Thieves",
		desc: "Barrel stole from Eve again, so Eve wants you to take medallions from Bully Henchmen.",
		start: [29, 30, 31],
		during: [],
		complete: [0],
		encounter: [{
			ID: 67,
			nickname: "Bully Henchman",
			R: 1,
			drops: [{
				ID: 48,
				type: "item",
				R: 1
			}]
		}, {
			ID: 102,
			nickname: "Bully Henchman",
			R: 1,
			drops: [{
				ID: 48,
				type: "item",
				R: 1
			}]
		}, {
			ID: 10,
			R: 1
		}, {
			ID: 102,
			R: 1
		}],
		req: [{
			type: "item",
			ID: 48,
			N: 5
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [335, 110],
		name: "Are They Treasure Chests, or Monsters?",
		desc: "The mimics hold more treasure, seek them out and defeat them.",
		start: [32],
		during: [],
		complete: [0],
		encounter: [{
			ID: 98,
			R: 2,
			drops: [{
				ID: 13,
				type: "item",
				R: .25
			}, {
				ID: 14,
				type: "item",
				R: .5
			}, {
				ID: 55,
				type: "item",
				R: .5
			}]
		}, {
			ID: 66,
			R: 1
		}, {
			ID: 10,
			R: 1
		}],
		req: [{
			type: "item",
			ID: 13,
			N: 1
		}, {
			type: "item",
			ID: 14,
			N: 2
		}, {
			type: "item",
			ID: 55,
			N: 3
		}],
		reward: [{
			type: "hat",
			N: 1,
			ID: 6
		}]
	}, {
		coords: [335, 190],
		name: "Shark Attack!",
		desc: "First mate Barrel and his henchmen are coming! Help Eve and defeat them.",
		start: [33, 11, 34],
		during: [],
		complete: [17],
		pets: [{
			ID: 47,
			nickname: "First Mate Barrel"
		}, {
			ID: 46,
			nickname: "Henchman"
		}, {
			ID: 46,
			nickname: "Henchman"
		}, {
			ID: 46,
			nickname: "Henchman"
		}],
		req: [{
			type: "boss",
			N: 1
		}],
		reward: [{
			type: "spell",
			ID: 10
		}]
	}, {
		coords: [225, 240],
		name: "We're Gonna Need a Bigger Boat",
		desc: "Help Eve repair her ship by finding some spare parts.",
		start: [35, 11, 36, 37],
		during: [],
		complete: [0],
		encounter: [{
			ID: 10,
			R: .2,
			drops: [{
				ID: 50,
				type: "item",
				R: .5
			}]
		}, {
			ID: 25,
			R: .2,
			drops: [{
				ID: 50,
				type: "item",
				R: .75
			}]
		}, {
			ID: 102,
			R: .2,
			drops: [{
				ID: 51,
				type: "item",
				R: 1
			}]
		}, {
			ID: 99,
			R: .2,
			drops: [{
				ID: 51,
				type: "item",
				R: 1
			}]
		}, {
			ID: 100,
			R: .2,
			drops: [{
				ID: 49,
				type: "item",
				R: .25
			}]
		}, {
			ID: 46,
			R: .2,
			drops: [{
				ID: 49,
				type: "item",
				R: .5
			}]
		}],
		req: [{
			type: "item",
			ID: 50,
			N: 2
		}, {
			type: "item",
			ID: 51,
			N: 4
		}, {
			type: "item",
			ID: 49,
			N: 1
		}],
		reward: [{
			type: "weapon",
			N: 1,
			ID: 19
		}]
	}, {
		coords: [110, 190],
		name: "With a Little Luck",
		desc: "Eve won't help unless you can find her lucky spyglass. I'm sure some monster has it.",
		start: [38, 39],
		during: [],
		complete: [0],
		encounter: [{
			ID: 98,
			R: 1,
			drops: [{
				ID: 57,
				type: "item",
				R: .2
			}]
		}, {
			ID: 25,
			R: 1
		}, {
			ID: 66,
			R: 1
		}],
		req: [{
			type: "item",
			ID: 57,
			N: 1
		}],
		reward: [{
			type: "outfit",
			N: 1,
			ID: 4
		}]
	}, {
		coords: [225, 150],
		name: "The SECOND Meanest Pirate EVER",
		desc: "Captain Bully and his crew are here, and it's up to you to defeat him!",
		start: [40, 41, 42],
		during: [43],
		complete: [44, 45, 46, 47],
		boss: {
			ID: 4,
			element: "water",
			attacks: [7, 8, 9, 10, 11, 12, 19, 20, 21],
			name: "Captain Bully"
		},
		req: [{
			type: "boss",
			N: 1
		}],
		reward: [{
			type: "spell",
			ID: 11
		}]
	}]
};
var Tower = function () {
		function e(t) {
			WalkableScreen.call(this, t, e.DATA), this.assets = ["npc-sprite-mira"], this.area = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], this.bgm = "bgm-space", this.menuDisabled = {
				pets: !0
			}, this.noSnow = !0
		}
		return e.prototype = Object.create(WalkableScreen.prototype), e.prototype.create = function () {
			this.zoneName = "zone-tower-" + this.floor, WalkableScreen.prototype.create.call(this, [])
		}, e.prototype.screenSetup = function () {
			WalkableScreen.prototype.screenSetup.call(this);
			this.game.prodigy.player.getTowerProgress();
			if (this.cleared) {
				for (var t = function (e, t) {
						e.completeTower(t)
					}, i = !1, a = 0; a < e.REWARDS.length; a++) {
					var s = e.REWARDS[a];
					if (s.floor === this.floor) {
						for (var r = this.game.prodigy.dialogue.create(), o = 0; o < s.text.length; o++) r.setText(s.text[o]);
						r.setText({
							callback: this.game.prodigy.open.gotItem.bind(this.game.prodigy.open, s.reward, t.bind(this, this.game.prodigy.player, this.floor))
						}), r.start("mira"), i = !0
					}
				}
				i || t(this.game.prodigy.player, this.floor), this.path.addCallback(4, this.toFloor.bind(this, this.floor + 1))
			} else {
				var n = this.game.prodigy.create.sprite(640, 360, this.screenName, "orb");
				n.alpha = .5, n.inputEnabled = !0, n.anchor.setTo(.5, 1), n.events.onInputDown.add(this.battle.bind(this, n), this), this.content.add(n), this.game.add.tween(n).to({
					y: n.y + 10
				}, 1e3, Phaser.Easing.Quadratic.InOut, !0, 0, Number.MAX_VALUE, !0);
				var l = this.game.prodigy.create.font(this.content, 590, 280, "" + this.floor, {
					size: 40,
					width: 100,
					align: "center"
				});
				this.game.add.tween(l).to({
					y: l.y + 10
				}, 1e3, Phaser.Easing.Quadratic.InOut, !0, 0, Number.MAX_VALUE, !0);
				var h = this.game.prodigy.create.sprite(1049, 0, this.screenName, "barrier");
				h.inputEnabled = !0, h.events.onInputDown.add(this.blockDoor.bind(this), this), h.alpha = .8, this.game.add.tween(h).to({
					alpha: .3
				}, 1500, Phaser.Easing.Linear.None, !0, 0, 1e4, !0), this.background.add(h)
			}
			this.floor % 5 === 0 && new Prodigy.Container.QuestNPC(this.game, this.content, 900, 230, null, {
				name: "Mira Shade",
				atlas: "mira"
			}, this.npcDialogue.bind(this)), this.path.addCallback(3, this.toBase.bind(this))
		}, e.prototype.blockDoor = function () {
			var t = this.game.prodigy.dialogue.create();
			t.setText({
				text: "Before you can move on, you must defeat the challenger on this floor. Click on the orb in the room to begin!",
				face: 3,
				anim: 1,
				audio: e.AUDIO[1]
			}), t.start("mira")
		}, e.prototype.setPlayerAsOpponent = function (e) {
			var t = this.game.prodigy.player,
				i = {
					data: '{"level":100}',
					appearance: '{"name":"' + t.appearance.getName() + '", "gender":"' + t.appearance.getGender() + '", "hairStyle":' + t.appearance.getHairStyle() + ', "hairColor":' + t.appearance.getHairColor() + ', "skinColor":' + t.appearance.getSkinColor() + ', "eyeColor":' + t.appearance.getEyeColor() + "}",
					equipment: '{"outfit":' + t.equipment.getEquipment("outfit") + ', "weapon":' + t.equipment.getEquipment("weapon") + ', "hat":' + t.equipment.getEquipment("hat") + "}"
				};
			e.wizards = [i], e.pets = [];
			for (var a = this.game.prodigy.player.kennel.getTeam(), s = 0; s < a.length; s++) {
				var r = a[s].getID();
				Util.isDefined(Monsters.data[r]) && e.pets.push({
					ID: r,
					level: 100
				})
			}
		}, e.prototype.npcDialogue = function () {
			var t = this.game.prodigy.dialogue.create();
			t.setText({
				text: "The next challenge awaits!",
				face: 3,
				anim: 4,
				audio: e.AUDIO[2]
			}), t.start("mira")
		}, e.prototype.battle = function (t) {
			t.inputEnabled = !1;
			var i = e.OPPONENTS[this.floor - 1],
				a = Math.min(Math.floor(this.floor / 10), 10);
			if (90 === this.floor && this.setPlayerAsOpponent(i), this.mods = {
					boss: Util.copyObject(i.boss),
					screen: "bg-battle-tower",
					opponent: Util.copyObject(i.wizards),
					drops: Util.copyObject(i.drops),
					"catch": !1,
					pets: Util.copyObject(i.pets),
					difficulty: a
				}, this.floor % 5 !== 0) new Roulette(this.game, this.menus, this.mods, this.startBattle.bind(this));
			else {
				var s = e.DIALOGUE[Math.floor(this.floor / 5 - 1)];
				if (Util.isDefined(s)) {
					for (var r = this.game.prodigy.dialogue.create(), o = 0; o < s.length; o++) r.setText(s[o]);
					r.setText({
						callback: this.startBattle.bind(this)
					}), r.start("mira")
				} else this.startBattle()
			}
		}, e.prototype.startBattle = function () {
			var e = function () {
					this.game.state.start("TowerBase")
				},
				t = function () {
					this.game.state.states.Tower.cleared = !0, this.game.state.start("Tower")
				};
			this.game.prodigy.battle.start(this.mods, e.bind(this), t.bind(this, this.floor, this.mods.boss), null, "TowerBase")
		}, e.prototype.toFloor = function (e) {
			return e > 100 ? (this.toBase(), void 0) : (this.game.state.states.Tower.playerX = 602, this.game.state.states.Tower.playerY = 150, this.game.state.states.Tower.floor = e, this.game.state.states.Tower.cleared = !1, this.game.state.start("Tower"), void 0)
		}, e.prototype.toBase = function () {
			var t = function (e) {
					e.state.states.TowerBase.playerX = 1200, e.state.states.TowerBase.playerY = 400, e.state.start("TowerBase")
				},
				i = this.game.prodigy.player.getTowerProgress();
			i = i - i % 5 + 1, dialogue.setText({
				text: "If you leave now, you'll have to start back at floor " + i + ". Are you sure you want to leave?",
				face: 3,
				anim: 1,
				audio: e.AUDIO[1],
				yes: t.bind(this, this.game)
			}), dialogue.start("mira")
		}, e
	}(),
	Roulette = function () {
		function e(e, t, i, a) {
			Prodigy.Control.Element.call(this, e, t), this.team = this.game.prodigy.player.kennel.getTeam(), this.callback = a, this.mods = i, this.game.prodigy.effects.flashText("Chance Wheel Time!", this.createWheel.bind(this))
		}
		return e.prototype = Object.create(Prodigy.Control.Element.prototype), e.prototype.createWheel = function () {
			var e = this.game.prodigy.create.sprite(0, 0, "core", "overlay");
			e.width = this.game.world.width, e.height = this.game.world.height, e.alpha = .5, this.add(e), e.inputEnabled = !0;
			var t = this.game.prodigy.create.sprite(395, 85, "zone-tower", "wings");
			t.alpha = 0, this.add(t), this.game.add.tween(t).to({
				alpha: 1
			}, 300, Phaser.Easing.Quadratic.Out).delay(600).start();
			var i = this.game.prodigy.create.sprite(640, 360, "zone-tower", "wheel");
			i.anchor.setTo(.5, .5), i.scale.x = i.scale.y = 0, this.add(i), this.game.add.tween(i.scale).to({
				x: 1.2,
				y: 1.2
			}, 400, Phaser.Easing.Quadratic.Out).to({
				x: 1,
				y: 1
			}, 200, Phaser.Easing.Quadratic.In).start();
			var a = this.game.prodigy.create.sprite(542, 90, "zone-tower", "pointer");
			a.alpha = 0, this.add(a);
			var s = this.game.add.tween(a).to({
				alpha: 1
			}, 300, Phaser.Easing.Quadratic.Out).delay(600).start();
			s.onComplete.addOnce(this.startWheel.bind(this, i), this)
		}, e.prototype.startWheel = function (e) {
			var t = 15e3,
				i = 8,
				a = Math.floor(10 * Math.random()),
				s = 36 * a + 18,
				r = this.game.add.tween(e).to({
					angle: 360 * i - s
				}, t, Phaser.Easing.Cubic.Out).start();
			r.onComplete.addOnce(this.showResult.bind(this, a), this), this.playSound(t, 100)
		}, e.prototype.showResult = function (e) {
			var t = "",
				i = 0;
			0 === e || 6 === e ? (t = "Lose 1 heart...", i = -4) : 1 === e || 5 === e ? (t = "Gain 1 heart!", i = 4) : 2 === e ? (t = "Lose 3 hearts...", i = -12) : 7 === e ? (t = "Gain 3 hearts!", i = 12) : 3 === e ? (t = "Damage increased!", this.mods.dmgMod = 2) : 8 === e ? (t = "Damage reduced...", this.mods.dmgMod = -2) : 9 === e ? (t = "Double stars!", this.mods.starMod = 2) : 4 === e && (t = "Switching disabled!", this.mods.switchDisabled = !0);
			for (var a = 0; a < this.team.length; a++) Util.isDefined(this.team[a]) && this.team[a].getCurrentHearts() > 0 && (this.team[a].changeCurrentHearts(i), this.team[a].getCurrentHearts() <= 0 && this.team[a].changeCurrentHearts(2));
			this.game.prodigy.effects.flashText(t, this.close.bind(this))
		}, e.prototype.close = function () {
			var e = this.game.add.tween(this).to({
				alpha: 0
			}, 1e3, Phaser.Easing.Linear.None).start();
			e.onComplete.addOnce(this.callback, this)
		}, e.prototype.playSound = function (e, t) {
			if (!(0 >= e)) {
				this.game.prodigy.audio.playSFX("tick");
				var i = t + 9e-7 * Math.pow(t, 3);
				setTimeout(this.playSound.bind(this, e - i, i), t)
			}
		}, e
	}();
Tower.AUDIO = [{
	tag: "voice-2",
	s: 0,
	d: 1
}, {
	tag: "voice-2",
	s: 1,
	d: 1
}, {
	tag: "voice-2",
	s: 2,
	d: 1
}, {
	tag: "voice-2",
	s: 3,
	d: 1
}, {
	tag: "voice-2",
	s: 4,
	d: 2
}, {
	tag: "voice-2",
	s: 6,
	d: 1
}, {
	tag: "voice-2",
	s: 7,
	d: 2
}, {
	tag: "voice-2",
	s: 9,
	d: 1
}], Tower.DATA = {
	tag: "Tower",
	zoneName: "zone-tower",
	atlas: "zone-tower",
	fullName: "Dark Tower",
	dialogue: [{
		text: "Oh no! Only members can access the tower right now!",
		face: 0,
		anim: 4,
		audio: Tower.AUDIO[0]
	}, {
		text: "Hello there young one...welcome to the Dark Tower.",
		face: 0,
		anim: 4,
		audio: Tower.AUDIO[4]
	}, {
		text: "The name's Mira, and this tower was once the home to a powerful wizard, who built it to test the power of other wizards.",
		face: 2,
		audio: Tower.AUDIO[7]
	}, {
		text: "It is said that whoever can conquer every floor and make it to the top is a true wizard.",
		face: 2
	}, {
		text: "But there is a catch! The battles here are harder, and once you leave the tower, you must start over.",
		face: 1,
		anim: 4,
		audio: Tower.AUDIO[0]
	}, {
		text: "However, if you defeat the opponents on every 5th floor, you can return to that floor if you leave.",
		face: 2,
		audio: Tower.AUDIO[3]
	}, {
		text: "Well hello there! If it isn't mister fancy wizard?",
		face: 0,
		anim: 4,
		audio: Tower.AUDIO[4]
	}, {
		text: "You already beat my tower...but come back someday...I may have more challenges for you!",
		face: 0
	}, {
		text: "Oh no....you don't have enough gold!",
		face: 0,
		anim: 1,
		audio: Tower.AUDIO[0]
	}]
}, Tower.REWARDS = [{
	floor: 10,
	reward: [{
		type: "gold",
		N: 500
	}],
	text: [{
		text: "Hey, you're doing great! Here's a little reward...",
		face: 0,
		audio: Tower.AUDIO[6]
	}]
}, {
	floor: 20,
	reward: [{
		type: "gold",
		N: 500
	}],
	text: [{
		text: "Hey, you're doing great! Here's a little reward...",
		face: 0,
		audio: Tower.AUDIO[6]
	}]
}, {
	floor: 30,
	reward: [{
		type: "gold",
		N: 500
	}],
	text: [{
		text: "Hey, you're doing great! Here's a little reward...",
		face: 0,
		audio: Tower.AUDIO[6]
	}]
}, {
	floor: 40,
	reward: [{
		type: "gold",
		N: 500
	}],
	text: [{
		text: "Hey, you're doing great! Here's a little reward...",
		face: 0,
		audio: Tower.AUDIO[6]
	}]
}, {
	floor: 50,
	reward: [{
		type: "gold",
		N: 500
	}],
	text: [{
		text: "Hey, you're doing great! Here's a little reward...",
		face: 0,
		audio: Tower.AUDIO[6]
	}]
}, {
	floor: 60,
	reward: [{
		type: "gold",
		N: 500
	}],
	text: [{
		text: "Hey, you're doing great! Here's a little reward...",
		face: 0,
		audio: Tower.AUDIO[6]
	}]
}, {
	floor: 70,
	reward: [{
		type: "gold",
		N: 500
	}],
	text: [{
		text: "Hey, you're doing great! Here's a little reward...",
		face: 0,
		audio: Tower.AUDIO[6]
	}]
}, {
	floor: 80,
	reward: [{
		type: "gold",
		N: 500
	}],
	text: [{
		text: "Hey, you're doing great! Here's a little reward...",
		face: 0,
		audio: Tower.AUDIO[6]
	}]
}, {
	floor: 90,
	reward: [{
		type: "gold",
		N: 500
	}],
	text: [{
		text: "Hey, you're doing great! Here's a little reward...",
		face: 0,
		audio: Tower.AUDIO[6]
	}]
}, {
	floor: 100,
	reward: [{
		type: "outfit",
		ID: 38
	}, {
		type: "hat",
		ID: 42
	}, {
		type: "weapon",
		ID: 68
	}],
	text: [{
		text: "Wow...You beat me...I'm speechless...",
		face: 3,
		audio: Tower.AUDIO[3]
	}, {
		text: "I can't believe I lost to a wizard from the Academy...I thought I was the strongest!",
		face: 3
	}, {
		text: "Well then! It looks like I was wrong about you...and about the Academy! You really are the best of the best!",
		face: 1,
		audio: Tower.AUDIO[6]
	}, {
		text: "Here...please accept this new robe as a gift from me. And tell all your friends to come here as well!",
		face: 2
	}, {
		text: "I'd love to meet as many wizards as possible...especially if they're as strong as you!",
		face: 1,
		audio: Tower.AUDIO[0]
	}]
}], Tower.DIALOGUE = [[{
	text: "Here's your first boss...there is one on every fifth floor. Let's see how well you do!",
	face: 0,
	audio: Tower.AUDIO[2]
}], [{
	text: "The wizard of this tower was once a student at the Academy, just like you...",
	face: 2
}, {
	text: "But the wizard was MUCH stronger! WAAAAAY stronger!",
	face: 1,
	audio: Tower.AUDIO[0]
}], [{
	text: "The wizard practiced alone, not wanting any help from the other Academy students.",
	face: 0
}, {
	text: "He didn't want to waste time on them - they would only hold him back.",
	face: 0,
	audio: Tower.AUDIO[0]
}], [{
	text: "So the wizard left the Academy a long long time ago...to train alone.",
	face: 2
}, {
	text: "He came here and built this tower using his awesome power! What a guy!",
	face: 1
}], [{
	text: "You made it to floor 25! One quarter of the way there...not bad, but not great.",
	face: 0,
	audio: Tower.AUDIO[6]
}], [{
	text: "For years and years the wizard trained here alone. He mastered all the elements, learned all the spells.",
	face: 2
}, {
	text: "...But the wizard didn't need any help from the dumb Academy to do it!",
	face: 1,
	audio: Tower.AUDIO[0]
}], [{
	text: "One day, the wizard decided he was done training - he was already the best wizard ever!",
	face: 2
}, {
	text: "So he decided to challenge the other wizards at the Academy, to prove he was the best.",
	face: 2,
	audio: Tower.AUDIO[0]
}], [{
	text: "No wizard could match him, and so the wizard created this super-cool test to challenge wizards instead!",
	face: 1
}, {
	text: "He called it the 'Really Really Hard Test of Trials'!",
	face: 2,
	audio: Tower.AUDIO[1]
}], [{
	text: "For this test, the wizard summoned the strongest monsters possible to challenge wizards at each floor.",
	face: 2
}, {
	text: "These monsters are the bosses of this tower. Here's another one now!",
	face: 0
}], [{
	text: "Floor 50 already....you've come all this way to challenge the strongest, have you?",
	face: 2,
	audio: Tower.AUDIO[1]
}, {
	text: "If so, then you must first challenge the father of all dragons...Grandoff!",
	face: 0,
	audio: Tower.AUDIO[2]
}], [{
	text: "You are certainly something special...are you sure you're from the Academy?",
	face: 3,
	audio: Tower.AUDIO[3]
}], [{
	text: "The test you are on now...this is the very same test created by the wizard himself.",
	face: 2
}, {
	text: "Many wizards from the Academy tried it, but they ALL failed!",
	face: 1,
	audio: Tower.AUDIO[0]
}], [{
	text: "For each new student that tried the test and failed, the wizard added a new floor...and a new challenge.",
	face: 2
}, {
	text: "When no more floors could be added, the wizard made the challenges harder and harder.",
	face: 2
}], [{
	text: "Eventually, it became obvious that no wizards would be able to climb the tower.",
	face: 2
}, {
	text: "So the legendary wizard disappeared, and the tower began to crumble.",
	face: 2
}], [{
	text: "The wizard has not been seen since, but students from the Academy still try to climb the tower.",
	face: 2
}, {
	text: "He hoped that someday a student would be strong enough to challenge him, and so he would return to accept the challenge.",
	face: 1
}], [{
	text: "Things have been easy up until now...I think it's time to step things up!",
	face: 1,
	audio: Tower.AUDIO[2]
}], [{
	text: "You're still going? I'm...impressed!",
	face: 0,
	audio: Tower.AUDIO[1]
}], [{
	text: "This can't be...no wizards have ever made it this far...",
	face: 3
}, {
	text: "...Who are you...?",
	face: 3,
	audio: Tower.AUDIO[3]
}], [{
	text: "No...you will NOT make it to the top of this tower!",
	face: 3
}, {
	text: "Face your next challenge...it will be your last here!",
	face: 3,
	audio: Tower.AUDIO[2]
}], [{
	text: "Astounding. You have made it to the top of my tower...",
	face: 3,
	audio: Tower.AUDIO[1]
}, {
	text: "And so you have earned the greatest of rewards...you must challenge the legendary wizard herself...",
	face: 3
}, {
	text: "ME! THE GREAT AND POWERFUL MIRA SHADE!",
	face: 0,
	audio: Tower.AUDIO[7]
}, {
	text: "HAHAHA! It was me all along! You should see the look on your face right now!",
	face: 1,
	audio: Tower.AUDIO[0]
}, {
	text: "Come, wizard! It's time for you to face the strongest wizard of all time!",
	face: 3,
	audio: Tower.AUDIO[2]
}]], Tower.OPPONENTS = [{
	pets: [{
		ID: 99,
		level: 5
	}]
}, {
	pets: [{
		ID: 102,
		level: 5
	}]
}, {
	pets: [{
		ID: 100,
		level: 5
	}]
}, {
	pets: [{
		ID: 103,
		level: 5
	}]
}, {
	pets: [{
		ID: 101,
		level: 5
	}, {
		ID: 104,
		level: 5
	}]
}, {
	pets: [{
		ID: 31,
		level: 10
	}]
}, {
	pets: [{
		ID: 55,
		level: 10
	}]
}, {
	pets: [{
		ID: 60,
		level: 10
	}]
}, {
	pets: [{
		ID: 29,
		level: 10
	}]
}, {
	pets: [{
		ID: 92,
		level: 10
	}, {
		ID: 93,
		level: 10
	}]
}, {
	pets: [{
		ID: 27,
		level: 15
	}]
}, {
	pets: [{
		ID: 45,
		level: 15
	}]
}, {
	pets: [{
		ID: 48,
		level: 15
	}]
}, {
	pets: [{
		ID: 96,
		level: 15
	}]
}, {
	pets: [{
		ID: 28,
		level: 15
	}, {
		ID: 49,
		level: 15
	}]
}, {
	pets: [{
		ID: 4,
		level: 20
	}]
}, {
	pets: [{
		ID: 10,
		level: 20
	}]
}, {
	pets: [{
		ID: 5,
		level: 20
	}]
}, {
	pets: [{
		ID: 11,
		level: 20
	}]
}, {
	pets: [{
		ID: 6,
		level: 20
	}, {
		ID: 12,
		level: 20
	}]
}, {
	pets: [{
		ID: 1,
		level: 25
	}]
}, {
	pets: [{
		ID: 52,
		level: 25
	}]
}, {
	pets: [{
		ID: 2,
		level: 25
	}]
}, {
	pets: [{
		ID: 53,
		level: 25
	}]
}, {
	pets: [{
		ID: 3,
		level: 25
	}, {
		ID: 54,
		level: 25
	}]
}, {
	pets: [{
		ID: 78,
		level: 30
	}]
}, {
	pets: [{
		ID: 46,
		level: 30
	}]
}, {
	pets: [{
		ID: 40,
		level: 30
	}]
}, {
	pets: [{
		ID: 79,
		level: 30
	}]
}, {
	pets: [{
		ID: 80,
		level: 30
	}, {
		ID: 47,
		level: 30
	}, {
		ID: 50,
		level: 30
	}]
}, {
	pets: [{
		ID: 94,
		level: 35
	}]
}, {
	pets: [{
		ID: 85,
		level: 35
	}]
}, {
	pets: [{
		ID: 82,
		level: 35
	}]
}, {
	pets: [{
		ID: 76,
		level: 35
	}]
}, {
	pets: [{
		ID: 35,
		level: 35
	}, {
		ID: 36,
		level: 35
	}, {
		ID: 37,
		level: 35
	}]
}, {
	pets: [{
		ID: 87,
		level: 40
	}]
}, {
	pets: [{
		ID: 99,
		level: 40
	}]
}, {
	pets: [{
		ID: 94,
		level: 40
	}]
}, {
	pets: [{
		ID: 102,
		level: 40
	}]
}, {
	pets: [{
		ID: 95,
		level: 40
	}, {
		ID: 80,
		level: 40
	}, {
		ID: 23,
		level: 40
	}]
}, {
	pets: [{
		ID: 16,
		level: 45
	}]
}, {
	pets: [{
		ID: 47,
		level: 45
	}]
}, {
	pets: [{
		ID: 40,
		level: 45
	}]
}, {
	pets: [{
		ID: 80,
		level: 45
	}]
}, {
	pets: [{
		ID: 62,
		level: 45
	}, {
		ID: 26,
		level: 45
	}, {
		ID: 44,
		level: 45
	}]
}, {
	pets: [{
		ID: 63,
		level: 50
	}]
}, {
	pets: [{
		ID: 66,
		level: 50
	}]
}, {
	pets: [{
		ID: 69,
		level: 50
	}]
}, {
	pets: [{
		ID: 72,
		level: 50
	}]
}, {
	boss: {
		ID: 1,
		level: 50,
		element: "fire",
		attacks: [1, 2, 3, 4, 25, 26, 27],
		maxHP: 160,
		name: "Dargon",
		starBonus: 100
	}
}, {
	pets: [{
		ID: 23,
		level: 55
	}]
}, {
	pets: [{
		ID: 46,
		level: 56
	}]
}, {
	pets: [{
		ID: 23,
		level: 57
	}]
}, {
	pets: [{
		ID: 46,
		level: 58
	}]
}, {
	pets: [{
		ID: 46,
		level: 60
	}, {
		ID: 23,
		level: 60
	}, {
		ID: 47,
		level: 60
	}]
}, {
	pets: [{
		ID: 75,
		level: 65
	}]
}, {
	pets: [{
		ID: 78,
		level: 66
	}]
}, {
	pets: [{
		ID: 81,
		level: 67
	}]
}, {
	pets: [{
		ID: 84,
		level: 68
	}]
}, {
	pets: [{
		ID: 80,
		level: 70
	}, {
		ID: 83,
		level: 70
	}, {
		ID: 86,
		level: 70
	}]
}, {
	pets: [{
		ID: 43,
		level: 75
	}]
}, {
	pets: [{
		ID: 12,
		level: 76
	}]
}, {
	pets: [{
		ID: 54,
		level: 77
	}]
}, {
	pets: [{
		ID: 6,
		level: 78
	}]
}, {
	pets: [{
		ID: 58,
		level: 80
	}, {
		ID: 25,
		level: 80
	}, {
		ID: 61,
		level: 80
	}]
}, {
	pets: [{
		ID: 75,
		level: 85
	}]
}, {
	pets: [{
		ID: 78,
		level: 86
	}]
}, {
	pets: [{
		ID: 81,
		level: 87
	}]
}, {
	pets: [{
		ID: 84,
		level: 88
	}]
}, {
	pets: [{
		ID: 31,
		level: 30
	}, {
		ID: 33,
		level: 30
	}, {
		ID: 31,
		level: 30
	}, {
		ID: 33,
		level: 30
	}, {
		ID: 31,
		level: 30
	}, {
		ID: 33,
		level: 30
	}, {
		ID: 31,
		level: 30
	}, {
		ID: 33,
		level: 30
	}]
}, {
	pets: [{
		ID: 63,
		level: 50
	}, {
		ID: 64,
		level: 85
	}]
}, {
	pets: [{
		ID: 66,
		level: 55
	}, {
		ID: 67,
		level: 85
	}]
}, {
	pets: [{
		ID: 69,
		level: 60
	}, {
		ID: 70,
		level: 85
	}]
}, {
	pets: [{
		ID: 72,
		level: 65
	}, {
		ID: 73,
		level: 85
	}]
}, {
	pets: [{
		ID: 2,
		level: 90
	}, {
		ID: 5,
		level: 90
	}, {
		ID: 8,
		level: 90
	}, {
		ID: 11,
		level: 90
	}]
}, {
	pets: [{
		ID: 1,
		level: 95
	}]
}, {
	pets: [{
		ID: 4,
		level: 96
	}]
}, {
	pets: [{
		ID: 7,
		level: 97
	}]
}, {
	pets: [{
		ID: 10,
		level: 98
	}]
}, {
	wizards: [{
		data: '{"level":100}',
		appearance: '{"name":"Frozine", "gender":"female", "hairStyle":11, "hairColor":9, "skinColor":1, "eyeColor":13}',
		equipment: '{"hat":37, "outfit":33, "weapon":63}'
	}, {
		data: '{"level":100}',
		appearance: '{"name":"Charcole", "gender":"male", "hairStyle":3, "hairColor":6, "skinColor":2, "eyeColor":3}',
		equipment: '{"hat":11, "outfit":8, "weapon":64}'
	}, {
		data: '{"level":100}',
		appearance: '{"name":"Sprout", "gender":"female", "hairStyle":7, "hairColor":8, "skinColor":3, "eyeColor":6}',
		equipment: '{"hat":33, "outfit":29, "weapon":24}'
	}, {
		data: '{"level":100}',
		appearance: '{"name":"Thundane", "gender":"male", "hairStyle":4, "hairColor":16, "skinColor":2, "eyeColor":9}',
		equipment: '{"hat":8, "outfit":24, "weapon":23}'
	}, {
		data: '{"level":100}',
		appearance: '{"name":"Pounce", "gender":"male", "hairStyle":8, "hairColor":5, "skinColor":4, "eyeColor":14}',
		equipment: '{"hat":32, "outfit":31, "weapon":60}'
	}]
}, {
	pets: [{
		ID: 38,
		level: 100
	}]
}, {
	pets: [{
		ID: 87,
		level: 100
	}]
}, {
	pets: [{
		ID: 39,
		level: 100
	}]
}, {
	pets: [{
		ID: 72,
		level: 100
	}]
}, {
	pets: [{
		ID: 43,
		level: 100
	}, {
		ID: 26,
		level: 100,
		evolve: [{
			ID: 25,
			lvl: 53
		}]
	}, {
		ID: 44,
		level: 100,
		evolve: [{
			ID: 43,
			lvl: 43
		}]
	}, {
		ID: 61,
		level: 100
	}]
}, {
	pets: [{
		ID: 57,
		level: 100
	}]
}, {
	pets: [{
		ID: 61,
		level: 100
	}]
}, {
	pets: [{
		ID: 15,
		level: 100
	}]
}, {
	pets: [{
		ID: 98,
		level: 100
	}]
}, {}, {
	pets: [{
		ID: 49,
		level: 100
	}]
}, {
	pets: [{
		ID: 50,
		level: 100
	}]
}, {
	pets: [{
		ID: 54,
		level: 100
	}]
}, {
	pets: [{
		ID: 39,
		level: 100,
		evolve: [{
			ID: 38,
			lvl: 50
		}]
	}]
}, {
	pets: [{
		ID: 97,
		level: 100
	}, {
		ID: 89,
		level: 100,
		evolve: [{
			ID: 87,
			lvl: 50
		}, {
			ID: 88,
			lvl: 55
		}]
	}, {
		ID: 12,
		level: 100,
		evolve: [{
			ID: 11,
			lvl: 55
		}]
	}, {
		ID: 42,
		level: 100,
		evolve: [{
			ID: 40,
			lvl: 58
		}, {
			ID: 41,
			lvl: 60
		}]
	}]
}, {
	pets: [{
		ID: 63,
		level: 50
	}, {
		ID: 66,
		level: 50
	}, {
		ID: 69,
		level: 50
	}, {
		ID: 72,
		level: 50
	}]
}, {
	pets: [{
		ID: 64,
		level: 75
	}, {
		ID: 67,
		level: 75
	}, {
		ID: 70,
		level: 75
	}, {
		ID: 73,
		level: 75
	}]
}, {
	pets: [{
		ID: 65,
		level: 100
	}, {
		ID: 68,
		level: 100
	}, {
		ID: 71,
		level: 100
	}, {
		ID: 74,
		level: 100
	}]
}, {
	pets: [{
		ID: 63,
		level: 50
	}, {
		ID: 66,
		level: 50
	}, {
		ID: 69,
		level: 50
	}, {
		ID: 72,
		level: 50
	}]
}, {
	boss: {
		ID: 2,
		level: 100,
		element: "wizard",
		attacks: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36],
		maxHP: 240,
		name: "Mira Shade"
	}
}];
var TowerBase = function () {
	function e(t) {
		WalkableScreen.call(this, t, e.DATA), this.assets = ["npc-sprite-mira", "tileset-core"], this.area = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], this.playerX = 110, this.playerY = 645
	}
	return e.prototype = Object.create(WalkableScreen.prototype), e.prototype.create = function () {
		WalkableScreen.prototype.create.call(this, [], "tower-0")
	}, e.prototype.screenSetup = function () {
		WalkableScreen.prototype.screenSetup.call(this), new Prodigy.Container.QuestNPC(this.game, this.content, 1155, 340, null, {
			name: "Mira Shade",
			atlas: "mira"
		}, this.openTower.bind(this)), new HealEvent(this.game, this.content, this.user, this.path, 538, 239)
	}, e.prototype.openTower = function () {
		var t = this.game.prodigy.player.getTowerProgress();
		t = t - t % 5 + 1, t > 100 && (t = 100), this.game.prodigy.network.sendAnalytics("Dark-Tower");
		var i = this.game.prodigy.dialogue.create();
		if (this.game.prodigy.player.isMember)
			if (0 === this.game.prodigy.player.getTowerProgress()) {
				for (var a = 1; 6 > a; a++) i.setText(e.DATA.dialogue[a]);
				var s = {
					text: "Do you want to start climbing the tower from floor " + t + "?",
					face: 0,
					yes: this.changeTeam.bind(this, t),
					audio: e.AUDIO[0]
				};
				i.setText(s)
			} else if (this.game.prodigy.player.getTowerProgress() > 99)
			for (var a = 6; 8 > a; a++) i.setText(e.DATA.dialogue[a]);
		else {
			var s = {
				text: "Do you want to continue climbing the tower from floor " + t + "? \n\nIt will cost you [gold] 500.",
				face: 0,
				yes: this.changeTeam.bind(this, t, 500),
				audio: e.AUDIO[0]
			};
			i.setText(s)
		} else i.setText(e.DATA.dialogue[0]), i.setText({
			callback: this.game.prodigy.open.membership.bind(this.game.prodigy.open, Prodigy.Menu.MemberAd.TOWER)
		});
		i.start("mira")
	}, e.prototype.changeTeam = function (t, i) {
		var a = !0;
		if (Util.isDefined(i))
			if (this.game.prodigy.player.getGold() >= i) this.game.prodigy.player.changeGold(-500);
			else {
				var s = this.game.prodigy.dialogue.create();
				s.setText(e.DATA.dialogue[8]), s.start("mira"), a = !1
			} a && this.toFloor(t, !0)
	}, e.prototype.toTown = function () {
		this.game.state.states.TownSquare.playerX = 602, this.game.state.states.TownSquare.playerY = 150, this.game.state.start("TownSquare")
	}, e.prototype.toFloor = function (e, t) {
		t && (this.game.state.states.Tower.playerX = 602, this.game.state.states.Tower.playerY = 150, this.game.state.states.Tower.floor = e, this.game.state.states.Tower.cleared = !1, this.game.state.start("Tower"))
	}, e
}();
TowerBase.AUDIO = [{
	tag: "voice-2",
	s: 0,
	d: 1
}, {
	tag: "voice-2",
	s: 1,
	d: 1
}, {
	tag: "voice-2",
	s: 2,
	d: 1
}, {
	tag: "voice-2",
	s: 3,
	d: 1
}, {
	tag: "voice-2",
	s: 4,
	d: 2
}, {
	tag: "voice-2",
	s: 6,
	d: 1
}, {
	tag: "voice-2",
	s: 7,
	d: 2
}, {
	tag: "voice-2",
	s: 9,
	d: 1
}], TowerBase.DATA = {
	tag: "TowerBase",
	zoneName: "zone-towerbase",
	atlas: "zone-towerbase",
	fullName: "Dark Tower",
	dialogue: [{
		text: "Oh no! Only members can access the tower right now!",
		face: 0,
		anim: 4,
		audio: Tower.AUDIO[0]
	}, {
		text: "Hello there young one...welcome to the Dark Tower.",
		face: 0,
		anim: 4,
		audio: Tower.AUDIO[4]
	}, {
		text: "The name's Mira, and this tower was once the home to a powerful wizard, who built it to test the power of other wizards.",
		face: 2,
		audio: Tower.AUDIO[7]
	}, {
		text: "It is said that whoever can conquer every floor and make it to the top is a true wizard.",
		face: 2
	}, {
		text: "But there is a catch! The battles here are harder, and once you leave the tower, you must start over.",
		face: 1,
		anim: 4,
		audio: Tower.AUDIO[0]
	}, {
		text: "However, if you defeat the opponents on every 5th floor, you can return to that floor if you leave.",
		face: 2,
		audio: Tower.AUDIO[3]
	}, {
		text: "Well hello there! If it isn't mister fancy wizard?",
		face: 0,
		anim: 4,
		audio: Tower.AUDIO[4]
	}, {
		text: "You already beat my tower...but come back someday...I may have more challenges for you!",
		face: 0
	}, {
		text: "Oh no....you don't have enough gold!",
		face: 0,
		anim: 1,
		audio: Tower.AUDIO[0]
	}]
};
var Plains = function () {
	function e(t) {
		WalkableScreen.call(this, t, e.DATA), this.assets = ["npc-sprite-cumulo"], this.area = [[0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], this.playerX = 880, this.playerY = 370
	}
	return e.prototype = Object.create(WalkableScreen.prototype), e.prototype.create = function () {
		WalkableScreen.prototype.create.call(this, [], "cloud-1")
	}, e.prototype.screenSetup = function () {
		WalkableScreen.prototype.screenSetup.call(this), new Prodigy.Container.QuestNPC(this.game, this.content, 800, 530, null, {
			name: "Stratus",
			atlas: "cumulo"
		}, this.startText.bind(this), !0), this.path.addCallback(3, this.toVolcano.bind(this)), this.path.addCallback(4, this.toTech.bind(this))
	}, e.prototype.toVolcano = function () {
		this.game.state.states.Volcano.playerX = 1190, this.game.state.states.Volcano.playerY = 590, this.game.state.start("Volcano")
	}, e.prototype.toTech = function () {
		this.game.state.states.Tech.playerX = 890, this.game.state.states.Tech.playerY = 260, this.game.state.start("Tech")
	}, e.prototype.toClouds = function () {
		this.game.state.states.Cloud.playerX = 1065, this.game.state.states.Cloud.playerY = 277, this.game.state.start("Cloud")
	}, e.prototype.startText = function () {
		var e = {
				text: "Hey there! Want to take a ride on my airship into the clouds?",
				face: 0,
				yes: this.toClouds.bind(this)
			},
			t = this.game.prodigy.dialogue.create();
		t.setText(e), t.start("cumulo")
	}, e
}();
Plains.DATA = {
	tag: "Plains",
	zoneName: "zone-plains",
	atlas: "zone-plains",
	fullName: "Airship Landing"
};
var Cloud = function () {
	function e(t) {
		WalkableScreen.call(this, t, e.DATA), this.assets = ["npc-sprite-cumulo", "npc-sprite-merchant", "tileset-core"], this.area = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0]], this.playerX = 1065, this.playerY = 277
	}
	return e.prototype = Object.create(WalkableScreen.prototype), e.prototype.create = function () {
		WalkableScreen.prototype.create.call(this, [], "cloud-0")
	}, e.prototype.screenSetup = function () {
		WalkableScreen.prototype.screenSetup.call(this), new Prodigy.Container.QuestNPC(this.game, this.content, 1098, 240, null, {
			atlas: "cumulo",
			name: "Nimbus"
		}, this.startText.bind(this), !0), new Prodigy.Container.QuestNPC(this.game, this.content, 190, 215, e.DATA, {
			atlas: "cumulo",
			name: "Cumulo"
		}), this.createStoreNPC(230, 450, e.STORE, !0);
		var t = [{
			pre: "Pilot ",
			req: [{
				rtype: "item",
				type: "outfit",
				ID: 37
			}, {
				rtype: "item",
				type: "hat",
				ID: 41
			}, {
				rtype: "item",
				type: "weapon",
				ID: 67
			}],
			fail: "You need to buy the Skywatch set to unlock!"
		}, {
			post: " the Skyfolk",
			req: [{
				rtype: "quest",
				zone: 3,
				Q: 15
			}],
			fail: "You need to complete the Skywatch quests to unlock!"
		}, {
			pre: "Cloudeater ",
			req: [{
				rtype: "pet",
				ID: 57
			}],
			fail: "You need to catch a Cloud Gobbler to unlock!"
		}, {
			post: " Stormchaser",
			member: !0,
			fail: "You need to become a member to unlock!"
		}, {
			post: ", Puyoy!",
			member: !0,
			fail: "You need to become a member to unlock!"
		}];
		this.addNicknamer(840, 250, t), this.menuBar.addStore(), new HealEvent(this.game, this.content, this.user, this.path, 623, 406)
	}, e.prototype.toCloud = function () {
		this.game.state.states.Plains.playerX = 880, this.game.state.states.Plains.playerY = 370, this.game.state.start("Plains")
	}, e.prototype.startText = function () {
		var e = {
				text: "Hey there! Want to hitch a ride back down?",
				face: 0,
				yes: this.toCloud.bind(this)
			},
			t = this.game.prodigy.dialogue.create();
		t.setText(e), t.start("cumulo")
	}, e
}();
Cloud.STORE = {
	name: "Sky-High Values",
	items: [{
		ID: 41,
		type: "hat"
	}, {
		ID: 67,
		type: "weapon"
	}, {
		ID: 37,
		type: "outfit"
	}, {
		ID: 15,
		type: "pet"
	}]
}, Cloud.AUDIO = [{
	tag: "voice-6",
	s: 0,
	d: 1
}, {
	tag: "voice-6",
	s: 1,
	d: 1
}, {
	tag: "voice-6",
	s: 2,
	d: 1
}, {
	tag: "voice-6",
	s: 3,
	d: 1
}, {
	tag: "voice-6",
	s: 4,
	d: 1
}, {
	tag: "voice-6",
	s: 5,
	d: 2
}, {
	tag: "voice-6",
	s: 7,
	d: 2
}, {
	tag: "voice-6",
	s: 9,
	d: 2
}], Cloud.DATA = {
	ID: 3,
	tag: "Cloud",
	zoneName: "zone-cloud",
	atlas: "zone-cloud",
	fullName: "Skywatch",
	icon: "zone-air",
	battle: {
		screen: "bg-battle-cloud",
		encounter: [{
			ID: 4
		}, {
			ID: 5
		}, {
			ID: 6
		}, {
			ID: 13
		}, {
			ID: 14
		}, {
			ID: 15
		}, {
			ID: 18
		}, {
			ID: 19
		}, {
			ID: 20
		}, {
			ID: 21
		}, {
			ID: 22
		}, {
			ID: 41
		}, {
			ID: 42
		}, {
			ID: 43
		}, {
			ID: 44
		}, {
			ID: 56
		}, {
			ID: 57
		}, {
			ID: 72
		}, {
			ID: 73
		}, {
			ID: 74
		}, {
			ID: 84
		}, {
			ID: 85
		}, {
			ID: 86
		}, {
			ID: 90
		}, {
			ID: 91
		}]
	},
	dialogue: [{
		face: 2,
		anim: 2,
		text: "WOW! You really are helpful, puyoy!",
		audio: Cloud.AUDIO[1]
	}, {
		face: 0,
		anim: 2,
		text: "Want to enter the station to help, puyoy?",
		audio: Cloud.AUDIO[1]
	}, {
		face: 4,
		anim: 4,
		text: "HEY! OVER HERE!",
		audio: Cloud.AUDIO[0]
	}, {
		face: 4,
		anim: 0,
		text: "You are a wizard, right? Puyoy, just what we need! The station is under attack, and we need your help!",
		audio: Cloud.AUDIO[1]
	}, {
		face: 4,
		anim: 1,
		text: "Help us defeat these monsters before they bring the station down!",
		audio: Cloud.AUDIO[2]
	}, {
		face: 4,
		anim: 1,
		text: "OH NO! Those hobs damaged the station! Go collect spare parts from luminites.",
		audio: Cloud.AUDIO[4]
	}, {
		face: 0,
		anim: 2,
		text: "Phew! That should scare them away, puyoy!",
		audio: Cloud.AUDIO[1]
	}, {
		face: 1,
		anim: 0,
		text: "...you look confused. Maybe you have never seen a poffin before...?",
		audio: Cloud.AUDIO[3]
	}, {
		face: 2,
		anim: 2,
		text: "Well, take a look! I am a poffin, and my name is Cumulo! Nice to meet you!",
		audio: Cloud.AUDIO[6]
	}, {
		face: 0,
		anim: 0,
		text: "We poffins live up in the clouds. We LOVE wizards, but since you cannot fly, we built this station so you could visit!"
	}, {
		face: 0,
		anim: 0,
		text: "Since you are a wizard, you want to learn storm spells, right?"
	}, {
		face: 2,
		anim: 4,
		text: "Of course! I can teach you spells, but you must first pass the CLOUD TRAILS! ...I mean TRIALS, not TRAILS...",
		audio: Cloud.AUDIO[5]
	}, {
		face: 0,
		anim: 0,
		text: "TRIAL NUMBER ONE: Defeat cloud gobblers!",
		audio: Cloud.AUDIO[7]
	}, {
		face: 2,
		anim: 4,
		text: "TRIAL COMPLETE! Let me teach you a new spell!",
		audio: Cloud.AUDIO[3]
	}, {
		face: 1,
		anim: 4,
		text: "Ok then! Ready for the next trial?",
		audio: Cloud.AUDIO[0]
	}, {
		face: 0,
		anim: 0,
		text: "TRIAL NUMBER TWO: Repair the station!",
		audio: Cloud.AUDIO[7]
	}, {
		face: 1,
		anim: 0,
		text: "It looks like those hobs did more damage to the station than I thought. Defeat some more, and bring back the parts they stole."
	}, {
		face: 0,
		anim: 0,
		text: "Okay! To fix the ship, I will also need a new wrench. Cloud neeks like to play with tools, so go find some!",
		audio: Cloud.AUDIO[0]
	}, {
		face: 1,
		anim: 0,
		text: "These parts are all missing something...",
		audio: Cloud.AUDIO[4]
	}, {
		face: 2,
		anim: 4,
		text: "AHA! The hobs took off the power source! They probably brought it to their captain. Defeat the captain and take back that power source!",
		audio: Cloud.AUDIO[2]
	}, {
		face: 1,
		anim: 3,
		text: "It is a well-known fact that poffins love all animals...",
		audio: Cloud.AUDIO[5]
	}, {
		face: 3,
		anim: 4,
		text: "EXCEPT BIRDS! Poffins don't like birds! Always making a mess of our station! For your next trial, defeat pesky birds, puyoy!",
		audio: Cloud.AUDIO[2]
	}, {
		face: 3,
		anim: 4,
		text: "Good job! But do not stop there! Go defeat lots of squawks...they make their nests in our machinery!",
		audio: Cloud.AUDIO[2]
	}, {
		face: 4,
		anim: 2,
		text: "Uh oh...I think we made their leader angry! HELP! DEFEAT IT!",
		audio: Cloud.AUDIO[2]
	}, {
		face: 0,
		anim: 4,
		text: "One trial left, puyoy! This one is a two-parter!",
		audio: Cloud.AUDIO[7]
	}, {
		face: 0,
		anim: 0,
		text: "First, we need to build a lightning rod. To do so, I need you to collect a green feather from an evolotus."
	}, {
		face: 1,
		anim: 0,
		text: "Good! Next...I think we need a steel rod. You might find it on any monster that has hands.",
		audio: Cloud.AUDIO[0]
	}, {
		face: 1,
		anim: 0,
		text: "OK! Next, we just need someone to build it...",
		audio: Cloud.AUDIO[5]
	}, {
		face: 0,
		anim: 4,
		text: "I KNOW! Look for Mechanic Lumiot, I bet he would help you if you can find and defeat him!",
		audio: Cloud.AUDIO[1]
	}, {
		face: 2,
		anim: 4,
		text: "Now that you have the lightning rod, it is time for part two of the trial!",
		audio: Cloud.AUDIO[7]
	}, {
		face: 4,
		anim: 1,
		text: "We will use this rod to summon King Turtox, the sky turtle. He is the meanest monster in the clouds, and your job is to defeat him!",
		audio: Cloud.AUDIO[0]
	}, {
		face: 0,
		anim: 0,
		text: "But first, we need to charge the lightning rod! Collect a charge stone from the rare cloaker!"
	}, {
		face: 1,
		anim: 0,
		text: "Next, we just need to charge the stone and place it in the rod. Defeat different storm monsters to charge the rod!"
	}, {
		face: 1,
		anim: 1,
		text: "Ok...here we go! First, I just need to place the charged stone into the lightning rod...",
		audio: Cloud.AUDIO[5]
	}, {
		face: 1,
		anim: 0,
		text: "..."
	}, {
		face: 4,
		anim: 2,
		text: "AND HERE COMES KING TORTOX!",
		audio: Cloud.AUDIO[2]
	}, {
		face: 2,
		anim: 2,
		text: "HOORAY! YOU DID IT!",
		audio: Cloud.AUDIO[3]
	}, {
		face: 2,
		anim: 4,
		text: "You completed the four Cloud Trials, and I now declare you an honorary poffin, puyoy!",
		audio: Cloud.AUDIO[1]
	}, {
		face: 0,
		anim: 0,
		text: "Feel free to visit anytime! You will always be welcome in the clouds!"
	}],
	quests: [{
		coords: [110, 0],
		name: "They Are Coming",
		desc: "The Skywatch is under attack! Defeat the incoming hobs!",
		start: [2, 3, 4],
		during: [],
		complete: [0],
		encounter: [{
			ID: 84
		}],
		req: [{
			type: "pet",
			ID: 84,
			N: 2
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [0, 75],
		name: "The Sky is Falling!",
		desc: "Look for spare parts to repair the station. Luminites should carry them.",
		start: [5],
		during: [],
		complete: [0],
		encounter: [{
			ID: 20,
			drops: [{
				ID: 49,
				type: "item",
				R: 1
			}]
		}],
		req: [{
			type: "item",
			ID: 49,
			N: 3
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [110, 110],
		name: "Cloud TRIALS",
		desc: "Defeat cloud nibblers for Cumulo to pass the first trial.",
		start: [6, 7, 8, 9, 10, 11, 12],
		during: [],
		complete: [13],
		encounter: [{
			ID: 56,
			R: 1
		}, {
			ID: 13,
			R: 1
		}, {
			ID: 84,
			R: 1
		}],
		req: [{
			type: "pet",
			ID: 56,
			N: 3
		}],
		reward: [{
			type: "spell",
			ID: 25
		}]
	}, {
		coords: [225, 60],
		name: "Vandals and Thieves",
		desc: "Cumulo needs you to track down the hobs that stole the parts to the station.",
		start: [14, 15, 16],
		during: [],
		complete: [0],
		encounter: [{
			ID: 84,
			nickname: "Part-carrying hob",
			R: 1,
			drops: [{
				ID: 47,
				type: "item",
				R: 1
			}]
		}, {
			ID: 84
		}, {
			ID: 20
		}],
		req: [{
			type: "item",
			ID: 47,
			N: 3
		}],
		reward: [{
			type: "boots",
			N: 1,
			ID: 25
		}]
	}, {
		coords: [335, 0],
		name: "Wrench in the Gears",
		desc: "You'll need a wrench to fix the station. Defeat cloud neeks and take their tools.",
		start: [17],
		during: [],
		complete: [0],
		encounter: [{
			ID: 72,
			R: .75,
			drops: [{
				ID: 53,
				type: "item",
				R: .25
			}]
		}, {
			ID: 84,
			R: .25
		}],
		req: [{
			type: "item",
			ID: 53,
			N: 1
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [450, 75],
		name: "Head Hob",
		desc: "Defeat the leader of the hobs and take back the power source.",
		start: [18, 19],
		during: [],
		complete: [13],
		pets: [{
			ID: 85,
			nickname: "Hob Leader"
		}, {
			ID: 84,
			nickname: "Grunt Hob"
		}, {
			ID: 84,
			nickname: "Grunt Hob"
		}],
		req: [{
			type: "boss",
			N: 1
		}],
		reward: [{
			type: "spell",
			ID: 26
		}]
	}, {
		coords: [335, 110],
		name: "The Birds",
		desc: "Cumulo needs you to go defeat birds, 'cause they're messin' up the place!",
		start: [14, 20, 21],
		during: [],
		complete: [0],
		encounter: [{
			ID: 13,
			R: 5
		}, {
			ID: 4,
			R: 1
		}],
		req: [{
			type: "pet",
			ID: 13,
			N: 5
		}, {
			type: "pet",
			ID: 4,
			N: 2
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [335, 190],
		name: "Bird is the Word",
		desc: "According to Cumulo, squawks are the worst. Go defeat them!",
		start: [22],
		during: [],
		complete: [0],
		encounter: [{
			ID: 18,
			R: 4
		}, {
			ID: 72,
			R: 2
		}, {
			ID: 85,
			R: 1
		}],
		req: [{
			type: "pet",
			ID: 18,
			N: 6
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [450, 225],
		name: "Big Bird",
		desc: "All your bird-challenging has caught the attention of the bird leader!",
		start: [23],
		during: [],
		complete: [13],
		encounter: [{
			ID: 42,
			R: 1,
			nickname: "Big Bird"
		}, {
			ID: 41,
			R: 9
		}],
		req: [{
			type: "pet",
			ID: 42,
			N: 1
		}],
		reward: [{
			type: "spell",
			ID: 27
		}]
	}, {
		coords: [335, 300],
		name: "I Have the Power!",
		desc: "To build a lightning rod, first you need to collect a green feather from an evolotus.",
		start: [24, 25],
		during: [],
		complete: [0],
		encounter: [{
			ID: 43,
			R: 2,
			drops: [{
				ID: 10,
				type: "item",
				R: .15
			}]
		}, {
			ID: 72,
			R: 1
		}, {
			ID: 84,
			R: 1
		}],
		req: [{
			type: "item",
			ID: 10,
			N: 1
		}],
		reward: [{
			type: "hat",
			N: 1,
			ID: 8
		}]
	}, {
		coords: [225, 240],
		name: "Rod! Rod! Rod!",
		desc: "Defeat monsters that have hands in order to collect a steel rod.",
		start: [26],
		during: [],
		complete: [0],
		encounter: [{
			ID: 84,
			R: 1,
			drops: [{
				ID: 52,
				type: "item",
				R: .2
			}]
		}, {
			ID: 85,
			R: 1,
			drops: [{
				ID: 52,
				type: "item",
				R: .25
			}]
		}, {
			ID: 72,
			R: 1,
			drops: [{
				ID: 52,
				type: "item",
				R: .2
			}]
		}, {
			ID: 14,
			R: 1
		}, {
			ID: 41,
			R: 1
		}],
		req: [{
			type: "item",
			ID: 52,
			N: 1
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [110, 300],
		name: "Popular Mechanic",
		desc: "Look for Mechanic Lumiot and defeat him.",
		start: [27, 28],
		during: [],
		complete: [13],
		encounter: [{
			ID: 21,
			nickname: "Mechanic Lumiot",
			R: 1
		}, {
			ID: 20,
			R: 3
		}, {
			ID: 13,
			R: 3
		}, {
			ID: 56,
			R: 3
		}, {
			ID: 41,
			R: 3
		}],
		req: [{
			type: "pet",
			ID: 21,
			N: 1
		}],
		reward: [{
			type: "spell",
			ID: 28
		}]
	}, {
		coords: [0, 225],
		name: "Who's in Charge?",
		desc: "Find and defeat a cloaker, and collect its charge stone.",
		start: [29, 30, 31],
		during: [],
		complete: [0],
		encounter: [{
			ID: 90,
			R: 1,
			drops: [{
				ID: 54,
				type: "item",
				R: 1
			}]
		}, {
			ID: 56,
			R: 3
		}, {
			ID: 5,
			R: 1
		}, {
			ID: 85,
			R: 3
		}, {
			ID: 4,
			R: 3
		}],
		req: [{
			type: "item",
			ID: 54,
			N: 1
		}],
		reward: [{
			type: "outfit",
			N: 1,
			ID: 5
		}]
	}, {
		coords: [110, 190],
		name: "Stormy Weather",
		desc: "Defeat different storm monsters to charge the stone.",
		start: [32],
		during: [],
		complete: [0],
		encounter: [{
			ID: 15,
			R: 1
		}, {
			ID: 21,
			R: 2
		}, {
			ID: 57,
			R: 3
		}, {
			ID: 5,
			R: 2
		}, {
			ID: 41,
			R: 2
		}],
		req: [{
			type: "pet",
			ID: 15,
			N: 1
		}, {
			type: "pet",
			ID: 21,
			N: 3
		}, {
			type: "pet",
			ID: 57,
			N: 5
		}],
		reward: [{
			type: "weapon",
			N: 1,
			ID: 23
		}]
	}, {
		coords: [225, 150],
		name: "King of the Hill",
		desc: "Defeat King Tortox and complete the last trial!",
		start: [33, 34],
		during: [35],
		complete: [13, 36, 37, 38],
		boss: {
			ID: 5,
			element: "storm",
			attacks: [4, 10, 16, 25, 26, 27, 28, 29, 30],
			name: "King Tortox"
		},
		req: [{
			type: "boss",
			N: 1
		}],
		reward: [{
			type: "spell",
			ID: 29
		}]
	}]
};
var Tech = function () {
	function e(t) {
		WalkableScreen.call(this, t, e.DATA), this.assets = ["npc-sprite-boombox", "npc-sprite-merchant", "tileset-core"], this.area = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], this.playerX = 890, this.playerY = 260
	}
	return e.prototype = Object.create(WalkableScreen.prototype), e.prototype.create = function () {
		WalkableScreen.prototype.create.call(this, [], "tech-0")
	}, e.prototype.screenSetup = function () {
		var t = !1;
		if (this.game.prodigy.player.tutorial.getZoneValue(e.DATA.ID) < 1) {
			this.game.prodigy.player.tutorial.setZoneValue(e.DATA.ID, 0, 1);
			var i = this.game.prodigy.dialogue.create();
			i.setText({
				text: "Ladies and gentlemen...it looks like we have a new competitor!",
				face: 4,
				anim: 4,
				audio: e.AUDIO[0]
			}), i.setText({
				text: "The name's Boombox! Come on over here, shortstuff!",
				face: 0,
				audio: e.AUDIO[1]
			}), i.start("boombox"), t = !0
		}
		WalkableScreen.prototype.screenSetup.call(this, t), this.path.addCallback(3, this.toPlains.bind(this)), this.createStoreNPC(670, 250, e.STORE), this.digBtn = this.game.prodigy.create.element(this.content, 1010, 280);
		var a = this.digBtn.add(this.game.prodigy.create.sprite(40, 40, "icons", "star2"));
		a.anchor.setTo(.5, .5), a.inputEnabled = !0, a.angle = -20, a.events.onInputDown.add(this.game.state.start.bind(this.game.state, "DanceDance"), this.game.state), this.digBtn.add(this.game.prodigy.create.sprite(0, 10, "icons", "item/47")), this.game.add.tween(a).to({
			angle: 20
		}, 1e3, Phaser.Easing.Quadratic.InOut, !0, 0, Number.MAX_VALUE, !0);
		var s = this.game.prodigy.create.sprite(437, 462, this.screenName, "m1");
		s.anchor.setTo(.5, 1), this.content.add(s), e.updateTechData(this.game.prodigy.player), new Prodigy.Container.QuestNPC(this.game, this.content, 210, 360, e.DATA, {
			name: "Boombox",
			atlas: "boombox"
		}, null, !1, this.onComplete.bind(this));
		var r = [{
			pre: "Robo-",
			req: [{
				rtype: "item",
				type: "outfit",
				ID: 43
			}, {
				rtype: "item",
				type: "hat",
				ID: 46
			}],
			fail: "You need to buy the Robot set to unlock!"
		}, {
			post: " the W12-4RD",
			req: [{
				rtype: "item",
				type: "item",
				ID: 65
			}],
			fail: "You need to win the Ribbon from the Robolympics to unlock!"
		}, {
			pre: "Dancemaster ",
			req: [{
				rtype: "item",
				type: "outfit",
				ID: 42
			}, {
				rtype: "item",
				type: "hat",
				ID: 47
			}],
			fail: "You need to catch a Tech Gobbler to unlock!"
		}, {
			post: "bot 3000",
			member: !0,
			fail: "You need to become a member to unlock!"
		}, {
			post: " the Machinist",
			member: !0,
			fail: "You need to become a member to unlock!"
		}];
		this.addNicknamer(336, 223, r), this.menuBar.addStore(), new HealEvent(this.game, this.content, this.user, this.path, 628, 460)
	}, e.prototype.onComplete = function () {
		var t = this.game.prodigy.dialogue.create();
		t.setText({
			text: "Come back tomorrow for new opponents and prizes!",
			face: 1,
			audio: e.AUDIO[4]
		}), t.start("boombox")
	}, e.prototype.toPlains = function () {
		this.game.state.states.Plains.playerX = 188, this.game.state.states.Plains.playerY = 560, this.game.state.start("Plains")
	}, e.prototype.toTech = function () {
		this.game.state.states.Plains.playerX = 880, this.game.state.states.Plains.playerY = 370, this.game.state.start("Plains")
	}, e
}();
Tech.STORE = {
	name: "The Machine Shop",
	items: [{
		ID: 46,
		type: "hat"
	}, {
		ID: 69,
		type: "weapon"
	}, {
		ID: 43,
		type: "outfit"
	}, {
		ID: 118,
		type: "pet"
	}]
}, Tech.updateTechData = function (e) {
	var t = Util.getDateSeed(),
		i = (new Date).getDay();
	e.quests.getZoneVar(Tech.DATA.ID, "day") !== i && (e.quests.clearQuestLine(Tech.DATA.ID), e.quests.setZoneVar(Tech.DATA.ID, "day", i));
	var a = [113, 115, 118, 120, 115, 113, 118],
		s = [113, 114, 115, 116, 117, 118, 119, 120, 121],
		r = ["Power", "Super", "Techno", "Bumble", "Scrappy", "Lumpy", "Metal", "Grease", "Clank", "Pocket", "Speed"],
		o = ["bot", "tank", "gear", "byte", "bit", "dude", "-1000", "sprocket", ""],
		n = Tech.DATA.quests[0];
	n.encounter = [{
		ID: a[i]
	}], n.req = [{
		type: "pet",
		ID: a[i],
		N: 2
	}];
	for (var l = 1; l < Tech.DATA.quests.length; l++)
		for (var n = Tech.DATA.quests[l], h = 0; h < n.pets.length; h++) {
			var d = n.pets[h];
			d.ID = Util.randomArrayElement(s, t), t += 10101;
			var p = Util.randomArrayElement(r, t);
			t += 10101;
			var c = Util.randomArrayElement(o, t);
			t += 10101, d.nickname = "Challenger " + p + c
		}
	var u = [{
		ID: 70,
		type: "weapon"
	}, {
		N: 1e3,
		type: "gold"
	}, {
		ID: 41,
		type: "outfit"
	}, {
		N: 1500,
		type: "gold"
	}, {
		ID: 45,
		type: "hat"
	}, {
		ID: 65,
		type: "item"
	}, {
		N: 800,
		type: "gold"
	}];
	Tech.DATA.dialogue[4].text = "Today's prize is...[" + Util.convertItemToIcon(u[i]) + "]", Tech.DATA.dialogue[7].text = e.getName() + "!", Tech.DATA.quests[3].reward = [u[i]]
}, Tech.AUDIO = [{
	tag: "voice-0",
	s: 0,
	d: 2
}, {
	tag: "voice-0",
	s: 2,
	d: 3
}, {
	tag: "voice-0",
	s: 5,
	d: 3
}, {
	tag: "voice-0",
	s: 8,
	d: 2
}, {
	tag: "voice-0",
	s: 10,
	d: 2
}, {
	tag: "voice-0",
	s: 12,
	d: 2
}, {
	tag: "voice-0",
	s: 14,
	d: 4
}], Tech.DATA = {
	ID: 8,
	tag: "Tech",
	zoneName: "zone-tech",
	atlas: "zone-tech",
	fullName: "Clockwork Town",
	npc: "Cumulo",
	icon: "item/47",
	battle: {
		screen: "bg-battle-tech",
		encounter: [{
			ID: 113
		}, {
			ID: 114
		}, {
			ID: 115
		}, {
			ID: 116
		}, {
			ID: 117
		}, {
			ID: 118
		}, {
			ID: 119
		}, {
			ID: 120
		}, {
			ID: 121
		}]
	},
	dialogue: [{
		face: 4,
		anim: 2,
		text: "We have a winner!",
		audio: Tech.AUDIO[2]
	}, {
		face: 0,
		anim: 2,
		text: "Are you ready for your next challenger?",
		audio: Tech.AUDIO[0]
	}, {
		face: 4,
		anim: 4,
		text: "Welcome to the Robolympics!",
		audio: Tech.AUDIO[6]
	}, {
		face: 1,
		anim: 0,
		text: "Today we have 3 tough teams for you to face, but if you beat them all, there's a FANTASTIC prize!"
	}, {
		face: 0,
		anim: 0,
		text: "Today's prize is...-prize-",
		audio: Tech.AUDIO[3]
	}, {
		face: 1,
		anim: 0,
		text: "Did you catch any new robots? If not, come back tomorrow to train with and catch a new one!"
	}, {
		face: 1,
		anim: 0,
		text: "Today's winner is..."
	}, {
		face: 4,
		anim: 4,
		text: "-name-",
		audio: Tech.AUDIO[1]
	}, {
		face: 4,
		anim: 0,
		text: "As promised, here is your grand prize!",
		audio: Tech.AUDIO[3]
	}],
	quests: [{
		coords: [110, 110],
		name: "Training Montage",
		desc: "Defeat the target robots...maybe even catch a few!",
		start: [2, 3, 4],
		during: [],
		complete: [5],
		req: [{
			type: "pet",
			ID: 1,
			N: 1
		}],
		reward: [{
			type: "gold",
			N: 50
		}]
	}, {
		coords: [225, 240],
		name: "Defeat Team Alpha",
		desc: "Defeat the first robot team",
		start: [],
		during: [],
		complete: [0],
		pets: [{
			ID: 85
		}, {
			ID: 84
		}, {
			ID: 84
		}],
		req: [{
			type: "boss",
			N: 1
		}],
		reward: [{
			type: "gold",
			N: 50
		}]
	}, {
		coords: [335, 110],
		name: "Defeat Team Beta",
		desc: "Defeat the second robot team",
		start: [],
		during: [],
		complete: [0],
		pets: [{
			ID: 85
		}, {
			ID: 84
		}, {
			ID: 84
		}, {
			ID: 84
		}],
		req: [{
			type: "boss",
			N: 1
		}],
		reward: [{
			type: "gold",
			N: 50
		}]
	}, {
		coords: [225, 150],
		name: "Defeat Team Delta",
		desc: "Defeat the third robot team",
		start: [],
		during: [],
		complete: [6, 7, 8],
		pets: [{
			ID: 85
		}, {
			ID: 84
		}, {
			ID: 84
		}, {
			ID: 84
		}, {
			ID: 84
		}],
		req: [{
			type: "boss",
			N: 1
		}],
		reward: [{
			type: "gold",
			N: 50
		}]
	}]
};
var Dino = function () {
	function e(t) {
		WalkableScreen.call(this, t, e.DATA), this.assets = ["npc-sprite-scoog", "tileset-core"], this.area = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 4, 4], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 4, 4, 4], [0, 0, 0, 0, 0, 0, 0, 3, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 4, 4, 4, 4], [0, 0, 0, 0, 0, 0, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4], [0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 4, 4, 4, 4, 4], [0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 4, 4, 4, 4, 4, 4], [0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 4, 4, 4, 4, 4], [0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 4, 4, 4, 4], [0, 0, 0, 0, 0, 0, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4], [0, 0, 0, 0, 0, 0, 0, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], this.playerX = 600, this.playerY = 520
	}
	return e.prototype = Object.create(WalkableScreen.prototype), e.prototype.create = function () {
		WalkableScreen.prototype.create.call(this, [], "dino-0")
	}, e.prototype.screenSetup = function () {
		WalkableScreen.prototype.screenSetup.call(this), new Prodigy.Container.QuestNPC(this.game, this.content, 800, 450, e.DATA, {
			name: "Professor Scoog",
			atlas: "scoog"
		}, null, !0);
		var t = function () {
			var e = this.game.prodigy.event.create();
			e.popup("The way is blocked!"), e.start()
		};
		this.game.prodigy.player.backpack.hasItem("key", 4) ? this.path.addCallback(3, this.game.prodigy.world.teleport.bind(this.game.prodigy.world, "shiverchill-B1", 650, 350)) : this.path.addCallback(3, t.bind(this)), this.path.addCallback(4, this.toVolcano.bind(this)), this.path.addCallback(5, this.toMuseum.bind(this)), this.digBtn = this.game.prodigy.create.element(this.content, 975, 65);
		var i = this.digBtn.add(this.game.prodigy.create.sprite(40, 40, "icons", "star2"));
		i.anchor.setTo(.5, .5), i.inputEnabled = !0, i.angle = -20, i.events.onInputDown.add(this.game.state.start.bind(this.game.state, "DinoDig"), this.game.state), this.digBtn.add(this.game.prodigy.create.sprite(0, 10, "icons", "key/1")), this.game.prodigy.create.font(this.digBtn, -20, 0, "Dyno Dig", {
			width: 120,
			size: 20,
			align: "center"
		}), this.game.add.tween(i).to({
			angle: 20
		}, 1e3, Phaser.Easing.Quadratic.InOut, !0, 0, Number.MAX_VALUE, !0);
		var a = [{
			post: " the Digger",
			req: [{
				rtype: "item",
				type: "key",
				ID: 1
			}],
			fail: "You need to find the shovel to unlock!"
		}, {
			pre: "Surveyor ",
			req: [{
				rtype: "quest",
				zone: 6,
				Q: 15
			}],
			fail: "You need to complete the Dyno Dig Oasis quests to unlock!"
		}, {
			pre: "Excavator ",
			req: [{
				rtype: "item",
				type: "fossil",
				ID: 23
			}, {
				rtype: "item",
				type: "fossil",
				ID: 24
			}],
			fail: "You need to complete the fish and plant fossils to unlock!"
		}, {
			pre: "Archaeologist ",
			req: [{
				rtype: "item",
				type: "fossil",
				ID: 13
			}, {
				rtype: "item",
				type: "fossil",
				ID: 14
			}, {
				rtype: "item",
				type: "fossil",
				ID: 15
			}, {
				rtype: "item",
				type: "fossil",
				ID: 16
			}],
			fail: "You need to complete the four main skeletons to unlock!"
		}, {
			post: "saurus",
			member: !0,
			fail: "You need to become a member to unlock!"
		}];
		if (this.addNicknamer(530, 240, a), this.game.prodigy.player.tutorial.getZoneValue(e.DATA.ID) < 1) {
			this.game.prodigy.player.tutorial.setZoneValue(e.DATA.ID, 0, 1);
			var s = this.game.prodigy.dialogue.create();
			s.setText({
				text: "Hey there! A new face! Welcome to Dyno Dig Oasis!",
				face: 1
			}), s.setText({
				text: "We're digging up fossils over here to re-create some of the coolest Dynos on the island! Come see me if you want to help out!",
				face: 0
			}), s.start("scoog")
		}
		this.menuBar.addStore(), new HealEvent(this.game, this.content, this.user, this.path, 256, 398)
	}, e.prototype.toDigGame = function (e) {
		if (!Util.isDefined(e) || this.game.prodigy.player.getGold() >= e) Util.isDefined(e) && this.game.prodigy.player.changeGold(-e), this.game.state.start("DinoDig");
		else {
			var t = this.game.prodigy.dialogue.create();
			t.setText({
				text: "Uh oh! You don't have enough gold!",
				face: 4
			}), t.start("scoog")
		}
	}, e.prototype.toMountain = function () {}, e.prototype.toVolcano = function () {
		this.game.state.states.Volcano.playerX = 100, this.game.state.states.Volcano.playerY = 650, this.game.state.start("Volcano")
	}, e.prototype.toMuseum = function () {
		this.game.state.states.Museum.playerX = 640, this.game.state.states.Museum.playerY = 545, this.game.state.start("Museum")
	}, e
}();
Dino.AUDIO = [{
	tag: "voice-9",
	s: 0,
	d: 3
}, {
	tag: "voice-9",
	s: 3,
	d: 2
}, {
	tag: "voice-9",
	s: 5,
	d: 2
}, {
	tag: "voice-9",
	s: 7,
	d: 2
}, {
	tag: "voice-9",
	s: 9,
	d: 2
}, {
	tag: "voice-9",
	s: 11,
	d: 3
}], Dino.DATA = {
	ID: 6,
	tag: "Dino",
	zoneName: "zone-dino",
	atlas: "zone-dino",
	fullName: "Dyno Dig Oasis",
	icon: "fossil/1",
	battle: {
		screen: "bg-battle-dino",
		encounter: [{
			ID: 105
		}, {
			ID: 106
		}, {
			ID: 107
		}, {
			ID: 108
		}, {
			ID: 109
		}, {
			ID: 110
		}, {
			ID: 111
		}, {
			ID: 112
		}]
	},
	dialogue: [{
		text: "Ponduberous! You certainly are helpful, young chap!",
		face: 1,
		audio: Dino.AUDIO[1],
		anim: 2
	}, {
		text: "Let's get to it, then! Ready to help OINC?",
		face: 0,
		audio: Dino.AUDIO[3]
	}, {
		text: "Well now, what have we here? A young explorer in training, perhaps?",
		face: 2,
		audio: Dino.AUDIO[1]
	}, {
		text: "Oh, but where are my manners? I, my young friend, am Professor Scoog...perhaps you've heard of me?",
		face: 1,
		audio: Dino.AUDIO[0]
	}, {
		text: "...no?",
		face: 3
	}, {
		text: "Hm, well that's quite alright. I am the leader of the Oasis Institute of Natural Creatures! Or, OINC, for short.",
		face: 2,
		audio: Dino.AUDIO[4],
		anim: 3
	}, {
		text: "Right now we're in the middle of a very important dig, and we sure could use your help!",
		face: 1
	}, {
		text: "First, let's see what you're made of! We've been overrun by Scallys the last few days...makes it hard to dig. Go challenge a few for me, will you?",
		face: 0
	}, {
		text: "You did it, young wizard! As a token of my gratitude, take this shovel!",
		face: 1,
		audio: Dino.AUDIO[1],
		anim: 2
	}, {
		text: "The shovel will allow you to help us dig for fossils! To do so, just click the spinning star nearby!",
		face: 0,
		audio: Dino.AUDIO[5]
	}, {
		text: "Now then, OINC has chosen this site for its greatest quest - the search for Dynos!",
		face: 1,
		anim: 2
	}, {
		text: "Dynos are monsters that are long extinct, and have left their fossilized remains here in the oasis.",
		face: 0
	}, {
		text: "We want to learn more about them, so we work hard to dig them up!",
		face: 0
	}, {
		text: "Now that you have a shovel, you can help! Try digging for a Terrosaur bone, or challenge some monsters who carry them.",
		face: 0
	}, {
		text: "While you were away, a monster came and STOLE MY HAT! Be a dear and go fetch it for me, will you?",
		anim: 1,
		face: 2,
		audio: Dino.AUDIO[2]
	}, {
		text: "THAT'S IT! Ah, my lucky hat...though truth is, I do have quite a few lucky hats...",
		anim: 2,
		face: 1,
		audio: Dino.AUDIO[1]
	}, {
		text: "...",
		face: 2
	}, {
		text: "WHAT!?!?!",
		face: 3
	}, {
		text: "YOU SAW A DYNO?!?! PONDUBEROUS!",
		face: 1,
		anim: 3,
		audio: Dino.AUDIO[1]
	}, {
		text: "You know what? Keep the hat! Consider yourself an honorary member of OINC!",
		anim: 4,
		face: 1
	}, {
		text: "A real dyno! Oh my...we have much to do! First, we must ensure that these Dynos are safe!",
		face: 1,
		audio: Dino.AUDIO[4]
	}, {
		text: "Defeat a few fire monsters for me...fire monsters in a dry forest are BAD NEWS!",
		face: 3
	}, {
		text: "Well now, I think it is time to find our new dyno friends! First, let's see if you can track down some Terromites! Let's see how they battle!",
		face: 1,
		anim: 4
	}, {
		text: "Oh, and bring back anything they might be carrying!",
		face: 0
	}, {
		text: "OH NO! This item you brought me is an animal tag...this can only mean one thing...",
		face: 3,
		anim: 1
	}, {
		text: "This animal tag proves that someone has been mistreating these Dynos...and only one man would do such a thing...",
		face: 2
	}, {
		text: "PROFESSOR MOOG!",
		face: 3,
		anim: 4
	}, {
		text: "Moog is a despicable dastardly deviant, who believes that monsters are meant to be kept in cages. Preposterous!",
		face: 3,
		anim: 1,
		audio: Dino.AUDIO[2]
	}, {
		text: "We must help the Dynos! Go out there and remove all the tags you can find!",
		face: 2
	}, {
		text: "Good work! Here's a new shovel...it will help you dig faster when looking for fossils!",
		face: 0,
		anim: 4,
		audio: Dino.AUDIO[1]
	}, {
		text: "We've slowed down Moog for now, but his men are probably out there right now, capturing these Dynos...",
		face: 3,
		anim: 1,
		audio: Dino.AUDIO[2]
	}, {
		text: "I have an idea! Go find Moog's men, and challenge them. Perhaps one of them will have a written copy of Moog's evil scheme.",
		face: 1,
		anim: 4
	}, {
		text: "Moog is dastardly, but he isn't the sharpest tool in the shed...",
		face: 1
	}, {
		text: "According to this novel, Moog plans to capture the Dynos and put them in some kind of dyno theme park...",
		face: 2
	}, {
		text: "...",
		face: 3
	}, {
		text: "That's not very original at all.",
		face: 3,
		audio: Dino.AUDIO[4]
	}, {
		text: "Regardless, we must stop him at all costs! Go out there and find his head assistant, Spokes. If you defeat him, maybe he and his men will leave.",
		face: 0,
		anim: 4
	}, {
		text: "It looks like Spokes and his men have left...for now. But they will be back, I assure you!",
		face: 0
	}, {
		text: "For now, we have other matters. A new dyno has been stealing equipment from the dig site...see if you can bring it back.",
		face: 2
	}, {
		text: "Ponduberous! That's 3 Dynos you've found now, alive and well! Oh, how I would love to study them in their natural habitat.",
		face: 1,
		anim: 2,
		audio: Dino.AUDIO[1]
	}, {
		text: "Alas, the world of science must wait. With Moog still out there, the Dynos will never be safe.",
		face: 3
	}, {
		text: "According to his novel, he next plans to steal dyno eggs. The audacity!",
		face: 3,
		anim: 1,
		audio: Dino.AUDIO[2]
	}, {
		text: "We must act quickly! Go out there, face his egg collectors, and bring back the eggs!",
		face: 0
	}, {
		text: "You're doing great work, my friend! We're stopping Moog at every turn!",
		face: 1,
		anim: 2,
		audio: Dino.AUDIO[1]
	}, {
		text: "But all is not well in the natural world. Some pterrotell have been attacking anyone who comes near...perhaps something has them spooked?",
		face: 2
	}, {
		text: "Find and challenge them for me...perhaps the battle will sooth these Dynos.",
		face: 0
	}, {
		text: "OH NO! It looks like one of Moog's men have captured a team of Dynos!",
		face: 3,
		anim: 2,
		audio: Dino.AUDIO[2]
	}, {
		text: "You'd better defeat him and release those poor Dynos!",
		face: 3,
		anim: 4
	}, {
		text: "Enough is enough! It's time to get rid of Moog once and for all!",
		face: 3,
		anim: 2,
		audio: Dino.AUDIO[2]
	}, {
		text: "I have a theory about Dynos...I believe that a large group of Dynos is run by a single dyno, which I call the Primo Dyno.",
		face: 2
	}, {
		text: "This dyno would be big! And mean! And scary! Scary enough to frighten off Moog forever!",
		face: 1
	}, {
		text: "So, I say we track down this Primo Dyno! First, you'll need to find the nest. Defeat a few Dynos, and they should lead us there.",
		face: 0
	}, {
		text: "Good! I think we know where the nest is! No sign of the Primo Dyno, so we may have to lure it back somehow...",
		face: 2
	}, {
		text: "I know! The digging equipment! The loud noises must have disrupted the Dynos...that's why they were stealing it!",
		face: 1,
		anim: 4
	}, {
		text: "I'll turn on the equipment now...you may have to defeat a few larger Dynos before the Primo Dyno gets here...",
		face: 2,
		audio: Dino.AUDIO[4]
	}, {
		text: "I hear something coming! It must be the Primo Dyno!",
		face: 3,
		anim: 4,
		audio: Dino.AUDIO[4]
	}, {
		text: "...what's that on his back...?",
		face: 2
	}, {
		text: "No...IT CAN'T BE!",
		face: 3,
		anim: 4
	}, {
		text: "PROFESSOR MOOG!",
		face: 3,
		anim: 2
	}, {
		text: "You did it!",
		face: 1,
		anim: 4,
		audio: Dino.AUDIO[1]
	}, {
		text: "It appears that Professor Moog wasn't riding the Primo Dyno after all...he was a captive himself! Oh, the irony!",
		face: 1
	}, {
		text: "Well my friend, I don't think Moog will be bothering these Dynos anymore, and we have you to thank!",
		face: 0
	}, {
		text: "Here, take this shovel - it's the strongest one we have! As a member of OINC, keep up the digging! Who knows what you might find!",
		face: 1,
		anim: 2,
		audio: Dino.AUDIO[5]
	}],
	quests: [{
		coords: [110, 0],
		name: "Welcome to OINC",
		desc: "Scallys are causing problems for OINC, challenge a few of them to help out",
		start: [2, 3, 4, 5, 6, 7],
		during: [],
		complete: [8, 9],
		encounter: [{
			ID: 81
		}],
		req: [{
			type: "pet",
			ID: 81,
			N: 2
		}],
		reward: [{
			type: "key",
			ID: 1,
			lvl: 1
		}]
	}, {
		coords: [335, 0],
		name: "Can You Dig It?",
		desc: "The Professor wants you to bring him a Terrosaur bone",
		start: [10, 11, 12, 13],
		during: [],
		complete: [0],
		encounter: [{
			ID: 31
		}, {
			ID: 29
		}, {
			nickname: "Bone-carrying Luminite",
			ID: 20,
			drops: [{
				ID: 1,
				type: "fossil",
				R: 1
			}]
		}],
		req: [{
			type: "fossil",
			ID: 1,
			N: 1
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [225, 60],
		name: "Hats Off",
		desc: "Find the monster with the Professor's hat and defeat it",
		start: [14],
		during: [],
		mods: {
			"catch": !1
		},
		complete: [15, 16, 17, 18, 19],
		encounter: [{
			ID: 20,
			R: .4
		}, {
			ID: 29,
			R: .4
		}, {
			ID: 111,
			drops: [{
				ID: 61,
				type: "item",
				R: 1
			}],
			R: .2
		}],
		req: [{
			type: "item",
			ID: 61,
			N: 1
		}],
		reward: [{
			type: "hat",
			ID: 43
		}]
	}, {
		coords: [110, 110],
		name: "Getting Hot in Here",
		desc: "Defeat fire monsters to save the oasis from roasting",
		start: [20, 21],
		during: [],
		complete: [0],
		encounter: [{
			ID: 27,
			R: .5
		}, {
			ID: 38,
			R: .5
		}],
		req: [{
			type: "pet",
			ID: 27,
			N: 2
		}, {
			type: "pet",
			ID: 38,
			N: 2
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [0, 75],
		name: "Learning Experience",
		desc: "Find and defeat Terromites to learn about their behaviour",
		start: [22, 23],
		during: [],
		complete: [0, 24],
		encounter: [{
			ID: 111,
			R: .5,
			drops: [{
				ID: 60,
				type: "item",
				R: .25
			}]
		}, {
			ID: 85,
			R: .25
		}, {
			ID: 69,
			R: .25
		}],
		req: [{
			type: "pet",
			ID: 111,
			N: 4
		}, {
			type: "item",
			ID: 60,
			N: 1
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [0, 225],
		name: "TAG! You're it!",
		desc: "Collect tags from Dynos",
		start: [25, 26, 27, 28],
		during: [],
		complete: [29],
		encounter: [{
			ID: 35,
			R: .25
		}, {
			ID: 52,
			R: .25
		}, {
			ID: 111,
			R: .25,
			drops: [{
				ID: 60,
				type: "item",
				R: 1
			}]
		}, {
			ID: 105,
			R: .25,
			drops: [{
				ID: 60,
				type: "item",
				R: 1
			}]
		}],
		req: [{
			type: "item",
			ID: 60,
			N: 6
		}],
		reward: [{
			type: "key",
			ID: 1,
			lvl: 2
		}]
	}, {
		coords: [110, 300],
		name: "Moog's Evil Scheme - A Novel",
		desc: "Track down Moog's men and take a copy of his evil scheme",
		start: [30, 31, 32],
		during: [],
		complete: [0],
		encounter: [{
			nickname: "Moog's Assistant",
			ID: 70,
			R: .5,
			drops: [{
				ID: 62,
				type: "item",
				R: .2
			}]
		}, {
			ID: 55,
			R: .25
		}, {
			ID: 52,
			R: .25
		}],
		req: [{
			type: "item",
			ID: 62,
			N: 1
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [335, 300],
		name: "Spoke Too Soon",
		desc: "Find and defeat Moog's head assistant, Spokes",
		start: [33, 34, 35, 36],
		during: [],
		complete: [0],
		encounter: [{
			ID: 71,
			R: .1,
			nickname: "Assistant Spokes"
		}, {
			ID: 105,
			R: .6
		}, {
			ID: 92,
			R: .3
		}],
		req: [{
			type: "pet",
			ID: 71,
			N: 1
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [225, 240],
		name: "Crabwalking",
		desc: "Find the Dynos that are stealing equipment from Scoog",
		start: [37, 38],
		during: [],
		complete: [0],
		encounter: [{
			ID: 107,
			R: .5,
			drops: [{
				ID: 63,
				type: "item",
				R: 1
			}]
		}, {
			ID: 32,
			R: .25
		}, {
			ID: 19,
			R: .25
		}],
		req: [{
			type: "item",
			ID: 63,
			N: 6
		}],
		reward: [{
			type: "gold",
			N: 600
		}]
	}, {
		coords: [110, 190],
		name: "Egg Hunt",
		desc: "Collect the eggs from Moog's egg collectors",
		start: [39, 40, 41, 42],
		during: [],
		complete: [0],
		encounter: [{
			ID: 75,
			nickname: "Egg Collector",
			R: .5,
			drops: [{
				ID: 64,
				type: "item",
				R: .5
			}]
		}, {
			ID: 105,
			R: .25
		}, {
			ID: 107,
			R: .25
		}],
		req: [{
			type: "item",
			ID: 64,
			N: 5
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [225, 150],
		name: "The Ptrouble with Pterrotells",
		desc: "Defeat pterrotells for Moog, and discover what has them so cranky",
		start: [43, 44, 45],
		during: [],
		complete: [0],
		encounter: [{
			ID: 109,
			R: .25
		}, {
			ID: 13,
			R: .25
		}, {
			ID: 18,
			R: .25
		}, {
			ID: 40,
			R: .25
		}],
		req: [{
			type: "pet",
			ID: 109,
			N: 4
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [335, 190],
		name: "Dyno Force Four",
		desc: "Defeat Moog's henchman and his Dynos!",
		start: [46, 47],
		during: [],
		complete: [0],
		pets: [{
			ID: 91,
			nickname: "Moog's Henchman"
		}, {
			ID: 110,
			nickname: "Rocksy"
		}, {
			ID: 106,
			nickname: "Stampsy"
		}, {
			ID: 108,
			nickname: "Crabbsy"
		}],
		req: [{
			type: "boss",
			N: 1
		}],
		reward: [{
			type: "outfit",
			ID: 40
		}]
	}, {
		coords: [335, 110],
		name: "Nesting Grounds",
		desc: "Defeat different Dynos, and follow them to the nest",
		start: [48, 49, 50, 51],
		during: [],
		complete: [0],
		encounter: [{
			ID: 105,
			R: .25
		}, {
			ID: 107,
			R: .25
		}, {
			ID: 109,
			R: .25
		}, {
			ID: 111,
			R: .25
		}],
		req: [{
			type: "pet",
			ID: 105,
			N: 3
		}, {
			type: "pet",
			ID: 107,
			N: 3
		}, {
			type: "pet",
			ID: 109,
			N: 3
		}, {
			type: "pet",
			ID: 111,
			N: 3
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [450, 75],
		name: "The Bigger They Are...",
		desc: "Defeat the incoming Dynos!",
		start: [52, 53, 54],
		during: [],
		complete: [0],
		encounter: [{
			ID: 110,
			R: .1
		}, {
			ID: 106,
			R: .2
		}, {
			ID: 109,
			R: .3
		}, {
			ID: 111,
			R: .4
		}],
		req: [{
			type: "pet",
			ID: 110,
			N: 2
		}, {
			type: "pet",
			ID: 106,
			N: 3
		}],
		reward: [{
			type: "gold",
			N: 250
		}]
	}, {
		coords: [450, 225],
		name: "Prehistoric Panic",
		desc: "It's Professor Moog and the Primo Dyno! Defeat them!",
		start: [55, 16, 56, 57],
		during: [58],
		complete: [59, 60, 61, 62],
		boss: {
			ID: 8,
			element: "wizard",
			attacks: [3, 4, 9, 11, 18, 16, 34, 33],
			name: "Primo and Moog"
		},
		req: [{
			type: "boss",
			N: 1
		}],
		reward: [{
			type: "key",
			ID: 1,
			lvl: 3
		}]
	}]
};
var Museum = function () {
	function e(t) {
		WalkableScreen.call(this, t, e.DATA), this.assets = [], this.area = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], this.noSoundButton = !0, this.playerX = 640, this.playerY = 545
	}
	return e.prototype = Object.create(WalkableScreen.prototype), e.prototype.create = function () {
		WalkableScreen.prototype.create.call(this, [], "dino-1")
	}, e.prototype.screenSetup = function () {
		WalkableScreen.prototype.screenSetup.call(this);
		var e = this.content.add(this.game.prodigy.create.sprite(196, 522, "zone-museum", "rail"));
		e.anchor.setTo(0, 1), e = this.content.add(this.game.prodigy.create.sprite(1084, 522, "zone-museum", "rail")), e.anchor.setTo(0, 1), e.scale.x = -1, this.path.addCallback(3, this.toDino.bind(this));
		var t = this.game.prodigy.dialogue.create();
		DinoDig.getNewFossils(this.game.prodigy.player.backpack).length > 0 && t.setText({
			text: "Welcome to the Museum! Be sure to bring all your newly-discovered fossils.",
			face: 0
		});
		for (var i = [{
				ID: 13,
				x: 916,
				y: 506,
				nx: 949,
				ny: 490
			}, {
				ID: 14,
				x: 362,
				y: 511,
				nx: 331,
				ny: 490
			}, {
				ID: 15,
				x: 1192,
				y: 707,
				nx: 1216,
				ny: 690
			}, {
				ID: 16,
				x: 85,
				y: 688,
				nx: 65,
				ny: 690
			}, {
				ID: 17,
				x: 290,
				y: 145
			}, {
				ID: 18,
				x: 390,
				y: 145
			}, {
				ID: 19,
				x: 490,
				y: 145
			}, {
				ID: 20,
				x: 590,
				y: 145
			}, {
				ID: 21,
				x: 690,
				y: 145
			}, {
				ID: 22,
				x: 790,
				y: 145
			}, {
				ID: 23,
				x: 890,
				y: 145
			}, {
				ID: 24,
				x: 990,
				y: 145
			}], a = 0; a < i.length; a++) {
			var s = i[a];
			if (s.full = this.game.prodigy.create.element(this.content, s.x, s.y), s.empty = this.game.prodigy.create.element(this.content, s.nx || s.x, s.ny || s.y), !this.processFossil(s) && this.game.prodigy.player.backpack.canCraft("fossil", s.ID)) {
				var r = Items.getItemData("fossil", s.ID);
				t.setText({
					text: "Ponduberous! You collected enough fossils to create the " + r.name + "! \nLet's see what it looks like!",
					face: 1,
					audio: Dino.AUDIO[1]
				}), t.setText({
					callback: this.unlockFossil.bind(this, s)
				}), t.setText({
					text: "WOW! That looks great!",
					face: 1,
					anim: 2
				})
			}
		}
		t.setText({
			callback: this.checkRewards.bind(this)
		}), t.start("scoog")
	}, e.prototype.checkRewards = function () {
		for (var e = !0, t = 13; 24 >= t; t++) this.game.prodigy.player.backpack.hasItem("fossil", t) || (e = !1);
		if (e) {
			var i = [];
			if (this.game.prodigy.player.backpack.hasItem("outfit", 39) || i.push({
					type: "outfit",
					ID: 39
				}), this.game.prodigy.player.backpack.hasItem("hat", 44) || i.push({
					type: "hat",
					ID: 44
				}), i.length > 0) {
				var a = this.game.prodigy.dialogue.create();
				a.setText({
					callback: null
				}), a.setText({
					text: "Ponduberous! You collected all the fossils and completed all the skeletons! Take this as a reward!",
					face: 1,
					audio: Dino.AUDIO[1]
				}), a.setText({
					callback: this.game.prodigy.open.gotItem.bind(this.game.prodigy.open, i)
				}), a.start("scoog")
			}
		}
	}, e.prototype.unlockFossil = function (e) {
		this.game.prodigy.player.backpack.craft("fossil", e.ID), this.processFossil(e, !0)
	}, e.prototype.processFossil = function (e, t) {
		var i = null;
		if (this.game.prodigy.player.backpack.hasItem("fossil", e.ID)) return e.type = "fossil", e.full.removeAll(!0), i = e.ID < 17 ? e.full.add(this.game.prodigy.create.sprite(0, 0, "zone-museum", e.ID + "")) : e.full.add(this.game.prodigy.create.sprite(0, 0, "icons", Util.convertItemToIcon(e))), i.x = -i.width / 2, i.y = -i.height, e.full.visible = !0, e.empty.visible = !1, t && this.game.add.tween(e.full.scale).to({
			x: 1.2,
			y: 1.2
		}, 500, Phaser.Easing.Quadratic.Out).to({
			x: 1,
			y: 1
		}, 500, Phaser.Easing.Quadratic.In).start(), !0;
		e.empty.removeAll(!0), i = e.empty.add(this.game.prodigy.create.sprite(0, 0, "zone-museum", "empty")), i.x = -i.width / 2, i.y = -i.height;
		var a = Items.getItemData("fossil", e.ID).recipe[0],
			s = this.game.prodigy.player.backpack.hasItem(a.type, a.ID);
		return this.game.prodigy.create.font(e.empty, i.x - 50, i.y + 27, s + "/" + a.N, {
			width: 180,
			align: "center"
		}), e.empty.visible = !0, e.full.visible = !1, !1
	}, e.prototype.toDino = function () {
		this.game.state.states.Dino.playerX = 343, this.game.state.states.Dino.playerY = 315, this.game.state.start("Dino")
	}, e
}();
Museum.DATA = {
	tag: "Museum",
	zoneName: "zone-museum",
	atlas: "zone-museum",
	fullName: "Museum",
	icon: "fossil/1"
};
var Dorm = function () {
	function e(e) {
		WalkableScreen.call(this, e, {
			fullName: "Your House",
			zoneName: "zone-house",
			atlas: "zone-house"
		}), this.area = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
	}
	return e.prototype = Object.create(WalkableScreen.prototype), e.prototype.create = function () {
		this.player = this.player || this.game.prodigy.player, this.zoneName = "zone-house-" + this.player.userID;
		var e = this.player.house.getBackground(),
			t = Items.getItemData("dormbg", e);
		this.playerX = t.x, this.playerY = t.y, WalkableScreen.prototype.create.call(this, [t.bg], "house-0")
	}, e.prototype.screenSetup = function () {
		this.disableBots = !0, WalkableScreen.prototype.screenSetup.call(this), this.bgID = this.player.house.getBackground();
		var t = Items.getItemData("dormbg", this.bgID);
		this.bg.loadTexture(t.bg), this.area = t.area, this.path = new Pathfinder(this.area), this.items = this.game.prodigy.create.element(this.background), this.player.userID === this.game.prodigy.player.userID && this.menuBar.addMenu(1, [{
			icon: "move",
			callback: this.game.prodigy.open.dormStore.bind(this.game.prodigy.open, e.BG_STORE, this.move.bind(this))
		}, {
			icon: "edit",
			callback: this.game.prodigy.open.dormEditor.bind(this.game.prodigy.open, this.updateItems.bind(this))
		}]), this.updateItems()
	}, e.prototype.move = function () {
		this.bgID !== this.player.house.getBackground() && this.game.state.start("Dorm")
	}, e.prototype.updateItems = function () {
		this.items.removeAll(!0);
		for (var e = this.player.house.getSortedActive(), t = 0; t < e.length; t++) {
			var i = e[t],
				a = this.items.add(this.game.prodigy.create.sprite(i.x, i.y, "zone-house", "1-0"));
			Prodigy.Menu.DormEditor.setupItem(i.ID, a, i.a), a.anchor.setTo(.5, .5)
		}
	}, e.getItems = function (e) {
		return Items.getDormItems(e)
	}, e
}();
Dorm.ZONE_ID = 8, Dorm.BG_STORE = [{
	name: "HOUSES",
	icon: "star2",
	atlas: "store-dorm",
	pages: [{
		tag: "bg-house",
		tagtop: !0,
		items: [{
			ID: 1,
			type: "dormbg"
		}]
	}, {
		tag: "bg-cave",
		tagtop: !0,
		items: [{
			ID: 2,
			type: "dormbg"
		}]
	}, {
		tag: "bg-tree",
		tagtop: !0,
		items: [{
			ID: 3,
			type: "dormbg"
		}]
	}]
}], Dorm.STORE = {
	name: "HOUSE - COMFY",
	dod: !0,
	pages: [{
		btn: {
			icon: "dorm/1",
			bot: "Seats"
		},
		items: [{
			ID: 1,
			type: "dorm"
		}, {
			ID: 2,
			type: "dorm"
		}, {
			ID: 17,
			type: "dorm"
		}, {
			ID: 10,
			type: "dorm"
		}, {
			ID: 11,
			type: "dorm"
		}, {
			ID: 12,
			type: "dorm"
		}, {
			ID: 15,
			type: "dorm"
		}, {
			ID: 27,
			type: "dorm"
		}, {
			ID: 40,
			type: "dorm"
		}, {
			ID: 45,
			type: "dorm"
		}, {
			ID: 49,
			type: "dorm"
		}, {
			ID: 50,
			type: "dorm"
		}, {
			ID: 54,
			type: "dorm"
		}, {
			ID: 56,
			type: "dorm"
		}, {
			ID: 64,
			type: "dorm"
		}, {
			ID: 67,
			type: "dorm"
		}]
	}, {
		btn: {
			icon: "dorm/3",
			bot: "Tables"
		},
		items: [{
			ID: 3,
			type: "dorm"
		}, {
			ID: 4,
			type: "dorm"
		}, {
			ID: 5,
			type: "dorm"
		}, {
			ID: 14,
			type: "dorm"
		}, {
			ID: 20,
			type: "dorm"
		}, {
			ID: 35,
			type: "dorm"
		}, {
			ID: 62,
			type: "dorm"
		}]
	}, {
		btn: {
			icon: "dorm/6",
			bot: "Plants"
		},
		items: [{
			ID: 6,
			type: "dorm"
		}, {
			ID: 7,
			type: "dorm"
		}, {
			ID: 8,
			type: "dorm"
		}, {
			ID: 9,
			type: "dorm"
		}, {
			ID: 29,
			type: "dorm"
		}, {
			ID: 30,
			type: "dorm"
		}, {
			ID: 53,
			type: "dorm"
		}]
	}, {
		btn: {
			icon: "dorm/13",
			bot: "Storage"
		},
		items: [{
			ID: 13,
			type: "dorm"
		}, {
			ID: 16,
			type: "dorm"
		}, {
			ID: 21,
			type: "dorm"
		}, {
			ID: 28,
			type: "dorm"
		}, {
			ID: 70,
			type: "dorm"
		}]
	}, {
		btn: {
			icon: "dorm/18",
			bot: "Wall"
		},
		items: [{
			ID: 18,
			type: "dorm"
		}, {
			ID: 19,
			type: "dorm"
		}, {
			ID: 23,
			type: "dorm"
		}, {
			ID: 24,
			type: "dorm"
		}, {
			ID: 25,
			type: "dorm"
		}, {
			ID: 26,
			type: "dorm"
		}, {
			ID: 36,
			type: "dorm"
		}, {
			ID: 37,
			type: "dorm"
		}, {
			ID: 38,
			type: "dorm"
		}, {
			ID: 59,
			type: "dorm"
		}, {
			ID: 61,
			type: "dorm"
		}, {
			ID: 63,
			type: "dorm"
		}, {
			ID: 66,
			type: "dorm"
		}, {
			ID: 69,
			type: "dorm"
		}]
	}, {
		btn: {
			icon: "dorm/31",
			bot: "Lamps"
		},
		items: [{
			ID: 31,
			type: "dorm"
		}, {
			ID: 32,
			type: "dorm"
		}, {
			ID: 33,
			type: "dorm"
		}, {
			ID: 41,
			type: "dorm"
		}, {
			ID: 42,
			type: "dorm"
		}, {
			ID: 43,
			type: "dorm"
		}, {
			ID: 44,
			type: "dorm"
		}, {
			ID: 46,
			type: "dorm"
		}, {
			ID: 47,
			type: "dorm"
		}, {
			ID: 60,
			type: "dorm"
		}, {
			ID: 71,
			type: "dorm"
		}]
	}, {
		btn: {
			icon: "dorm/22",
			bot: "Misc."
		},
		items: [{
			ID: 22,
			type: "dorm"
		}, {
			ID: 34,
			type: "dorm"
		}, {
			ID: 39,
			type: "dorm"
		}, {
			ID: 48,
			type: "dorm"
		}, {
			ID: 51,
			type: "dorm"
		}, {
			ID: 52,
			type: "dorm"
		}, {
			ID: 55,
			type: "dorm"
		}, {
			ID: 57,
			type: "dorm"
		}, {
			ID: 58,
			type: "dorm"
		}, {
			ID: 65,
			type: "dorm"
		}, {
			ID: 68,
			type: "dorm"
		}]
	}]
}, Prodigy.Skin = function (e, t) {
	this._eventTag = e, this._screens = t
}, Prodigy.Skin.prototype = {
	constructor: Prodigy.Skin,
	getStoreData: function () {
		return null
	},
	assets: function () {
		return this._eventTag
	},
	active: function (e) {
		for (var t = 0; t < this._screens.length; t++)
			if (this._screens[t] === e.saveTag) return !0;
		return !1
	},
	apply: function () {}
}, Prodigy.October = function () {
	Prodigy.Skin.call(this, "event-october", ["volcano-0", "mountain-0", "cloud-0", "town-0", "dino-0", "pirate-0", "tech-0", "forest-C8"])
}, Prodigy.extends(Prodigy.October, Prodigy.Skin, {
	constructor: Prodigy.October,
	getStoreData: function () {
		return [[{
			ID: 48,
			type: "hat"
		}, {
			ID: 44,
			type: "outfit"
		}, {
			ID: 71,
			type: "weapon"
		}], [{
			ID: 49,
			type: "hat"
		}, {
			ID: 45,
			type: "outfit"
		}], [{
			ID: 50,
			type: "hat"
		}, {
			ID: 46,
			type: "outfit"
		}, {
			ID: 72,
			type: "weapon"
		}], [{
			ID: 51,
			type: "hat"
		}, {
			ID: 52,
			type: "hat"
		}, {
			ID: 53,
			type: "hat"
		}]]
	},
	apply: function (e, t) {
		Prodigy.Skin.prototype.apply.call(this, e, t);
		var i = t.content,
			a = t.foreground,
			s = t.background,
			r = "event-october",
			o = t.saveTag;
		if ("volcano-0" === o) s.add(e.prodigy.create.sprite(960, 495, r, "cobwebs2", !0)), s.add(e.prodigy.create.sprite(50, 560, r, "crack1", !0)), s.add(e.prodigy.create.sprite(780, 200, r, "bal", !0)), i.add(e.prodigy.create.sprite(925, 381, r, "jackolantern1", !0)), i.add(e.prodigy.create.sprite(669, 430, r, "jackolantern2", !0)), i.add(e.prodigy.create.sprite(1060, 330, r, "candybag", !0)), i.add(e.prodigy.create.sprite(845, 520, r, "cal", !0)), a.add(e.prodigy.create.sprite(430, 405, r, "hangingdolls-ghosts", !0)), this.addOwl(e, s, 425, 290);
		else if ("mountain-0" === o) s.add(e.prodigy.create.sprite(636, 605, r, "hangingdolls-ghosts", !0)), s.add(e.prodigy.create.sprite(871, 600, r, "cobwebs2", !0)), i.add(e.prodigy.create.sprite(910, 434, r, "jackolantern1", !0)), i.add(e.prodigy.create.sprite(1077, 274, r, "jackolantern2", !0)), i.add(e.prodigy.create.sprite(440, 502, r, "candybag", !0)), i.add(e.prodigy.create.sprite(540, 405, r, "bal", !0)), i.add(e.prodigy.create.sprite(460, 371, r, "bal", !0)), this.addCandleStand(e, i, 290, 660), this.addCandle(e, s, 757, 126), this.addCandle(e, s, 526, 157);
		else if ("cloud-0" === o) s.add(e.prodigy.create.sprite(1037, 509, r, "hangingdolls-pumpkins")), i.add(e.prodigy.create.sprite(901, 570, r, "jackolantern3", !0)), i.add(e.prodigy.create.sprite(380, 220, r, "jackolantern1", !0)), i.add(e.prodigy.create.sprite(1100, 120, r, "jackolantern4", !0)), i.add(e.prodigy.create.sprite(570, 270, r, "bal", !0)), i.add(e.prodigy.create.sprite(1230, 180, r, "bxver1", !0)), i.add(e.prodigy.create.sprite(1225, 340, r, "candybag", !0)), i.add(e.prodigy.create.sprite(1180, 350, r, "pump2", !0)), this.addOwl(e, s, 90, 290, r), this.addCandle(e, s, 346, 135);
		else if ("town-0" === o) {
			i.add(e.prodigy.create.sprite(901, 500, r, "jackolantern3", !0)), i.add(e.prodigy.create.sprite(380, 220, r, "jackolantern1", !0)), i.add(e.prodigy.create.sprite(1100, 160, r, "jackolantern4", !0)), i.add(e.prodigy.create.sprite(135, 355, r, "bal", !0)), s.add(e.prodigy.create.sprite(1100, 550, r, "hangingdolls-pumpkins"));
			var n = i.add(e.prodigy.create.sprite(668, 410, r, "hauntedwagon", !0));
			n.inputEnabled = !0, n.events.onInputDown.add(this.openStore.bind(this, e)), n = i.add(e.prodigy.create.sprite(690, 415, r, "ghostlymerchant", !0)), n.inputEnabled = !0, n.events.onInputDown.add(this.openStore.bind(this, e)), e.add.tween(n).to({
				y: n.y + 10
			}, 1e3, Phaser.Easing.Quadratic.InOut, !0, 0, Number.MAX_VALUE, !0), this.addCandle(e, s, 370, 135)
		} else "tech-0" === o ? (s.add(e.prodigy.create.sprite(470, 220, r, "bxver1", !0)), i.add(e.prodigy.create.sprite(130, 400, r, "candybag", !0)), i.add(e.prodigy.create.sprite(685, 490, r, "jackolantern1", !0)), i.add(e.prodigy.create.sprite(640, 515, r, "jackolantern2", !0)), i.add(e.prodigy.create.sprite(995, 340, r, "hangingdolls-ghosts", !0)), i.add(e.prodigy.create.sprite(600, 250, r, "cal", !0)), a.add(e.prodigy.create.sprite(458, 426, r, "cobwebs2", !0)), this.addCandleStand(e, i, 310, 230), this.addOwl(e, s, 765, 80), this.addPumpkinCat(e, i, 1040, 470)) : "dino-0" === o ? (s.add(e.prodigy.create.sprite(469, 179, r, "bal", !0)), s.add(e.prodigy.create.sprite(209, 346, r, "bal", !0)), s.add(e.prodigy.create.sprite(895, 110, r, "zombiehand", !0)), s.add(e.prodigy.create.sprite(1030, 550, r, "crack1", !0)), s.add(e.prodigy.create.sprite(980, 470, r, "pt", !0)), i.add(e.prodigy.create.sprite(220, 460, r, "jackolantern3", !0)), i.add(e.prodigy.create.sprite(877, 249, r, "pump2", !0)), a.add(e.prodigy.create.sprite(125, 235, r, "cobwebs1", !0)), a.add(e.prodigy.create.sprite(280, 237, r, "spider", !0)), this.addGrave(e, i, 1060, 502, !0), this.addCat(e, i, 909, 258), this.addCandle(e, i, 605, 160)) : "pirate-0" === o ? (s.add(e.prodigy.create.sprite(105, 380, r, "crack2", !0)), a.add(e.prodigy.create.sprite(1076, 500, r, "bal", !0)), i.add(e.prodigy.create.sprite(123, 653, r, "bxver2", !0)), i.add(e.prodigy.create.sprite(597, 420, r, "jackolantern4", !0)), i.add(e.prodigy.create.sprite(353, 456, r, "jackolantern3", !0)), a.add(e.prodigy.create.sprite(1210, 350, r, "hangingdolls-ghosts", !0)), a.add(e.prodigy.create.sprite(325, 90, r, "hangingdolls-pumpkins", !0)), this.addGrave(e, i, 470, 407, !1), this.addPumpkinCat(e, i, 465, 280)) : "forest-C8" === o && (i.add(e.prodigy.create.sprite(650, 615, r, "pt", !0)), a.add(e.prodigy.create.sprite(568, 280, r, "bal", !0)), i.add(e.prodigy.create.sprite(568, 338, r, "bxver2", !0)), i.add(e.prodigy.create.sprite(594, 364, r, "jackolantern4", !0)), i.add(e.prodigy.create.sprite(234, 314, r, "jackolantern1", !0)), i.add(e.prodigy.create.sprite(990, 313, r, "pump", !0)), a.add(e.prodigy.create.sprite(1240, 355, r, "hangingdolls-ghosts", !0)), a.add(e.prodigy.create.sprite(700, 160, r, "hangingdolls-pumpkins", !0)), i.add(e.prodigy.create.sprite(348, 560, r, "pt", !0)), i.add(e.prodigy.create.sprite(701, 210, r, "cobwebs2")), this.addGrave(e, i, 950, 390, !1), this.addPumpkinCat(e, i, 1005, 297), this.addCandle(e, i, 216, 339))
	},
	openStore: function (e) {
		e.prodigy.open.popupStore(e.prodigy.skin.activeStore(), "Open-Store-Town", "event-october")
	},
	addCat: function (e, t, i, a) {
		var s = t.add(e.prodigy.create.sprite(i, a, "event-october", "o1", !0));
		s.animations.add("stand", ["c1", "c1", "c1", "c1", "c1", "c2"], 1, !0, !1), s.animations.play("stand")
	},
	addOwl: function (e, t, i, a) {
		var s = t.add(e.prodigy.create.sprite(i, a, "event-october", "o1", !0));
		s.animations.add("stand", ["o2", "o2", "o2", "o2", "o2", "o1"], 1, !0, !1), s.animations.play("stand")
	},
	addCandle: function (e, t, i, a) {
		var s = t.add(e.prodigy.create.sprite(i, a, "event-october", "sc1", !0));
		s.animations.add("stand", ["sc1", "sc2", "sc3", "sc4"], 10, !0, !1), s.animations.play("stand")
	},
	addGrave: function (e, t, i, a, s) {
		var r = t.add(e.prodigy.create.sprite(i, a, "event-october", "ts0", !0));
		s && (r.animations.add("stand", ["ts0", "ts0", "ts0", "ts0", "ts0", "ts0", "ts0", "ts0", "ts1", "ts2", "ts3", "ts4", "ts3", "ts2", "ts1"], 8, !0, !1), r.animations.play("stand"))
	},
	addCandleStand: function (e, t, i, a) {
		var s = t.add(e.prodigy.create.sprite(i, a, "event-october", "bc1", !0));
		s.animations.add("stand", ["bc1", "bc3", "bc4"], 10, !0, !1), s.animations.play("stand")
	},
	addPumpkinCat: function (e, t, i, a) {
		var s = t.add(e.prodigy.create.sprite(i, a, "event-october", "cp1", !0));
		s.animations.add("stand", ["cp1", "cp1", "cp1", "cp1", "cp1", "cp1", "cp1", "cp1", "cp1", "cp1", "cp1", "cp2", "cp3", "cp4", "cp4", "cp4", "cp4", "cp4", "cp4", "cp5"], 10, !0, !1), s.animations.play("stand")
	}
}), Prodigy.Snow = function () {
	Prodigy.Skin.call(this, null, ["lamplight-B2", "lamplight-B1", "lamplight-B3", "lamplight-A1", "lamplight-C1"])
}, Prodigy.extends(Prodigy.Snow, Prodigy.Skin, {
	constructor: Prodigy.Snow,
	apply: function (e, t) {
		Prodigy.Skin.prototype.apply.call(this, e, t);
		for (var i = t.foreground, a = 0; 50 > a; a++) {
			var s = i.add(e.prodigy.create.sprite(0, 0, "font-general", "42-30"));
			this.newFlake(e, s, !0)
		}
	},
	newFlake: function (e, t, i) {
		if (Util.isDefined(e)) {
			var a = 5e3 + Math.floor(2e3 * Math.random());
			t.frameName = Math.random() < .5 ? "42-16" : "42-30", t.x = Math.floor(1280 * Math.random()), i ? (t.y = Math.floor(700 * Math.random()), a -= Math.floor(a / 720 * t.y)) : t.y = 0;
			var s = e.add.tween(t).to({
				x: t.x,
				y: 720
			}, a, Phaser.Easing.Linear.None);
			s.onComplete.addOnce(this.newFlake.bind(this, e, t, !1)), s.start()
		}
	}
}), Prodigy.Winterfest = function () {
	Prodigy.Skin.call(this, "event-winterfest", ["lamplight-B2", "lamplight-B1", "lamplight-B3", "lamplight-A1", "lamplight-C1"])
}, Prodigy.extends(Prodigy.Winterfest, Prodigy.Skin, {
	constructor: Prodigy.Winterfest,
	getStoreData: function () {
		return [[{
			ID: 76,
			type: "item"
		}, {
			ID: 77,
			type: "item"
		}], [{
			ID: 25,
			type: "hat"
		}, {
			ID: 19,
			type: "boots"
		}, {
			ID: 25,
			type: "outfit"
		}], [{
			ID: 24,
			type: "hat"
		}, {
			ID: 26,
			type: "outfit"
		}, {
			ID: 48,
			type: "weapon"
		}], [{
			ID: 27,
			type: "hat"
		}, {
			ID: 28,
			type: "hat"
		}, {
			ID: 26,
			type: "hat"
		}], [{
			ID: 49,
			type: "outfit"
		}, {
			ID: 57,
			type: "hat"
		}, {
			ID: 58,
			type: "hat"
		}], [{
			ID: 29,
			type: "hat"
		}, {
			ID: 30,
			type: "hat"
		}]]
	},
	apply: function (e, t) {
		Prodigy.Skin.prototype.apply.call(this, e, t);
		var i = t.content,
			a = t.foreground,
			s = t.background,
			r = "event-winterfest",
			o = t.saveTag;
		"lamplight-B2" === o ? (s.add(e.prodigy.create.sprite(1040, 485, r, "snowpile1")), s.add(e.prodigy.create.sprite(280, 570, r, "snowpile1")), s.add(e.prodigy.create.sprite(75, 330, r, "snowpile1")), s.add(e.prodigy.create.sprite(400, 200, r, "snowpile1")), s.add(e.prodigy.create.sprite(1165, 295, r, "snowpile1")), s.add(e.prodigy.create.sprite(360, 565, r, "snowpile2")), s.add(e.prodigy.create.sprite(840, 600, r, "snowpile2")), s.add(e.prodigy.create.sprite(120, 480, r, "snowpile2")), s.add(e.prodigy.create.sprite(560, 120, r, "snowpile2")), s.add(e.prodigy.create.sprite(1040, 280, r, "snowpile2")), s.add(e.prodigy.create.sprite(1160, 480, r, "snowpile2")), s.add(e.prodigy.create.sprite(690, 120, r, "snowpile3")), s.add(e.prodigy.create.sprite(925, 515, r, "snowpile3")), s.add(e.prodigy.create.sprite(360, 605, r, "snowpile3")), s.add(e.prodigy.create.sprite(190, 320, r, "snowpile3")), s.add(e.prodigy.create.sprite(280, 140, r, "wreath1")), s.add(e.prodigy.create.sprite(640, 15, r, "wreath1")), s.add(e.prodigy.create.sprite(1040, 200, r, "wreath1")), i.add(e.prodigy.create.sprite(506, 198, r, "candycanepole1", !0)), i.add(e.prodigy.create.sprite(776, 198, r, "candycanepole1", !0)), i.add(e.prodigy.create.sprite(506, 638, r, "candycanepole1", !0)), i.add(e.prodigy.create.sprite(776, 638, r, "candycanepole1", !0)), i.add(e.prodigy.create.sprite(840, 345, r, "sleigh", !0)), i.add(e.prodigy.create.sprite(641, 432, r, "winterfesttree-base", !0)), i.add(e.prodigy.create.sprite(350, 510, r, "candycanepole2", !0)), i.add(e.prodigy.create.sprite(930, 510, r, "candycanepole3", !0)), this.sleigh = t.addClickableEvent(755, 200, 160, 140, this.sleighClick.bind(this, e, t), null), this.addLights(e, a, 573, 147), this.storeNPC = t.addGnome(940, 380, "Shopkeeper Gurgle", 11, 1, e.prodigy.open.popupStore.bind(e.prodigy.open, e.prodigy.skin.activeStore(), "Open-Store-Town", "event-winterfest")), this.storeNPC.setIndicator("store"), this.npc = t.addGnome(495, 355, "Gift-Giver Kip", 4, 2, this.npcClick.bind(this, e)), this.npc.flip(), this.presentactive = !1, this.present = t.addClickableEvent(426, 355, 105, 105, this.presentClick.bind(this, e, t), null), this.img = this.getDate() !== this.getState(e, "event") ? i.add(e.prodigy.create.sprite(501, 460, "event-winterfest", "present1")) : i.add(e.prodigy.create.sprite(501, 460, "event-winterfest", "present2")), this.img.anchor.setTo(.5, 1)) : "lamplight-B1" === o ? (s.add(e.prodigy.create.sprite(300, 565, r, "snowpile1")), s.add(e.prodigy.create.sprite(360, 330, r, "snowpile1")), s.add(e.prodigy.create.sprite(685, 140, r, "snowpile1")), s.add(e.prodigy.create.sprite(1160, 300, r, "snowpile1")), s.add(e.prodigy.create.sprite(830, 322, r, "snowpile2")), s.add(e.prodigy.create.sprite(320, 280, r, "snowpile2")), s.add(e.prodigy.create.sprite(0, 600, r, "snowpile2")), s.add(e.prodigy.create.sprite(765, 160, r, "snowpile2")), s.add(e.prodigy.create.sprite(110, 155, r, "snowpile3")), s.add(e.prodigy.create.sprite(1200, 325, r, "snowpile3")), s.add(e.prodigy.create.sprite(-70, 685, r, "snowpile3"))) : "lamplight-B3" === o ? (s.add(e.prodigy.create.sprite(40, 500, r, "snowpile1")), s.add(e.prodigy.create.sprite(365, 255, r, "snowpile1")), s.add(e.prodigy.create.sprite(615, 520, r, "snowpile1")), s.add(e.prodigy.create.sprite(975, 275, r, "snowpile2")), s.add(e.prodigy.create.sprite(245, 270, r, "snowpile2")), s.add(e.prodigy.create.sprite(1230, 480, r, "snowpile2")), s.add(e.prodigy.create.sprite(85, 510, r, "snowpile2")), s.add(e.prodigy.create.sprite(875, 615, r, "snowpile3")), s.add(e.prodigy.create.sprite(1200, 325, r, "snowpile3")), s.add(e.prodigy.create.sprite(-30, 315, r, "snowpile3"))) : "lamplight-A1" === o ? (s.add(e.prodigy.create.sprite(500, 375, r, "snowpile1")), s.add(e.prodigy.create.sprite(130, 455, r, "snowpile1")), s.add(e.prodigy.create.sprite(60, 560, r, "snowpile1")), s.add(e.prodigy.create.sprite(80, 480, r, "snowpile2")), s.add(e.prodigy.create.sprite(600, 155, r, "snowpile2")), s.add(e.prodigy.create.sprite(500, 200, r, "snowpile3")), s.add(e.prodigy.create.sprite(195, 550, r, "snowpile3")), s.add(e.prodigy.create.sprite(1e3, 305, r, "wreath1")), s.add(e.prodigy.create.sprite(1200, 305, r, "wreath1")), s.add(e.prodigy.create.sprite(1020, 325, r, "reindeer2")), i.add(e.prodigy.create.sprite(410, 464, r, "snowman1", !0)), s.add(e.prodigy.create.sprite(165, 355, r, "stockings3")), s.add(e.prodigy.create.sprite(285, 355, r, "stockings4")), i.add(e.prodigy.create.sprite(342, 487, r, "candycanepole1", !0)), i.add(e.prodigy.create.sprite(137, 487, r, "candycanepole1", !0))) : "lamplight-C1" === o && (s.add(e.prodigy.create.sprite(40, 255, r, "snowpile1")), s.add(e.prodigy.create.sprite(1125, 165, r, "snowpile1")), s.add(e.prodigy.create.sprite(390, 300, r, "snowpile1")), s.add(e.prodigy.create.sprite(520, 245, r, "snowpile1")), s.add(e.prodigy.create.sprite(275, 235, r, "snowpile2")), s.add(e.prodigy.create.sprite(920, 270, r, "snowpile3")), s.add(e.prodigy.create.sprite(440, 185, r, "wreath1")), s.add(e.prodigy.create.sprite(960, 185, r, "wreath1")), i.add(e.prodigy.create.sprite(625, 519, r, "snowman2", !0)), i.add(e.prodigy.create.sprite(810, 519, r, "snowman3", !0)), i.add(e.prodigy.create.sprite(1050, 355, r, "candycanepole2", !0)), i.add(e.prodigy.create.sprite(385, 355, r, "candycanepole3", !0)))
	},
	sleighClick: function (e, t) {
		var i = e.prodigy.event.create();
		i.validPath(t.user, t.path, 755, 300), i.function(e.prodigy.open.popupStore.bind(e.prodigy.open, e.prodigy.skin.activeStore(), "Open-Store-Town", "event-winterfest")), i.start()
	},
	openStore: function (e) {
		e.prodigy.open.popupStore(e.prodigy.skin.activeStore(), "Open-Store-Town", "event-winterfest")
	},
	addLights: function (e, t, i, a) {
		var s = t.add(e.prodigy.create.sprite(i, a, "event-winterfest", "winterfesttree-lights1"));
		s.animations.add("lights", ["winterfesttree-lights1", "winterfesttree-lights2", "winterfesttree-lights3", "winterfesttree-lights4"], 5, !0, !1), s.animations.play("lights")
	},
	presentClick: function (e, t) {
		if (this.getState(e, "1stpresent")) {
			var i = function (e) {
				if (this.getDate() !== this.getState(e, "event") && (this.presentactive = !0), this.presentactive) {
					var t = this.getDate();
					if (this.getState(e, "event") !== t) {
						var i = [{
								type: "item",
								ID: 76
							}, {
								type: "item",
								ID: 77
							}, {
								type: "gold",
								N: 50
							}, {
								type: "outfit",
								ID: 26
							}, {
								type: "boots",
								ID: 21
							}, {
								type: "hat",
								ID: 28
							}],
							a = 100 * Math.random();
						if (70 >= a) 2 * Math.random() <= 1 ? e.prodigy.open.gotItem([i[1]]) : (console.log(i[0]), e.prodigy.open.gotItem([i[0]]));
						else if (96 >= a) e.prodigy.open.gotItem([i[2]]);
						else {
							var s = 3 * Math.random();
							1 >= s ? e.prodigy.open.gotItem([i[3]]) : 2 >= s ? e.prodigy.open.gotItem([i[4]]) : e.prodigy.open.gotItem([i[5]])
						}
						this.setState(e, t, "event");
						var r = e.prodigy.event.create();
						r.set(this.img, "frameName", "present2"), r.start(), this.presentactive = !1
					}
					console.log(this.getState(e, "event"))
				}
			};
			if (this.getDate() !== this.getState(e, "event")) {
				var a = e.prodigy.event.create();
				a.validPath(t.user, t.path, 421, 370), a.function(i.bind(this, e, t)), a.start()
			}
		}
	},
	npcClick: function (e) {
		var t = e.prodigy.event.create();
		this.getState(e, "1stpresent") || this.setState(e, 1, "1stpresent"), this.getDate() === this.getState(e, "event") ? (t.text(1, "winterfest"), t.start()) : (t.text(0, "winterfest"), t.start(), this.presentactive = !0)
	},
	getState: function (e, t) {
		var i = e.prodigy.world.getZone("lamplight");
		return i.getState(t)
	},
	setState: function (e, t, i) {
		var a = e.prodigy.world.getZone("lamplight");
		a.setState(i, t)
	},
	getDate: function () {
		var e = new Date,
			t = e.getDate(),
			i = e.getMonth() + 1,
			a = e.getFullYear();
		return 10 > t && (t = "0" + t), 10 > i && (i = "0" + i), i + "/" + t + "/" + a
	}
});
var Battle = function () {
		function e(e) {
			Screen.call(this, e, "Challenge!", "battle", "battle"), this.area = "", this.teamA = new Array, this.teamB = new Array, this.runAwayCallback = null, this.victoryCallback = null, this.defeatCallback = null
		}
		return e.prototype = Object.create(Screen.prototype), e.prototype.create = function () {
			this.game.prodigy.network.setZone(this), Screen.prototype.create.call(this, this.game.prodigy.battle.getAssets(this.screenName, this.teamA, this.teamB)), this.game.prodigy.player.saveEnabled = !1
		}, e.prototype.screenSetup = function () {
			this.bg = this.game.prodigy.create.sprite(0, 0, this.screenName), this.background.add(this.bg), this.heartsA = new Prodigy.Container.Hearts(this.game, this.background, 30, -150, null), this.heartsB = new Prodigy.Container.Hearts(this.game, this.background, 784, -150, null, !0), this.teams = new Array, this.teams.push(new Team(this.game, this.content, this.teamA, !0, -200, 550, 250, 550, this.heartsA)), this.teams.push(new Team(this.game, this.content, this.teamB, !1, 1480, 550, 1030, 550, this.heartsB)), this.addSoundButton(), 1 != Util.getUrlVariable("iosApp") && this.game.prodigy.audio.playBGM("bgm-battle", !0, !0), this.startCombat()
		}, e.prototype.screenUpdate = function () {
			Screen.prototype.screenUpdate.call(this), Util.isDefined(this.currentManager) && Util.isDefined(this.currentManager.update) && this.currentManager.update()
		}, e.prototype.startCombat = function () {
			this.game.add.tween(this.heartsA).to({
				y: 30
			}, 1e3, Phaser.Easing.Quadratic.Out).start(), (!this.teams[1].isBoss() || this.teams[1].showHearts()) && this.game.add.tween(this.heartsB).to({
				y: 30
			}, 1e3, Phaser.Easing.Quadratic.Out).start(), this.currentManager = new CombatManager(this.game, this)
		}, e.prototype.startVictory = function () {
			1 != Util.getUrlVariable("iosApp") && this.game.prodigy.audio.playBGM("bgm-victory", !0, !0), this.game.add.tween(this.heartsA).to({
				y: -150
			}, 1e3, Phaser.Easing.Quadratic.Out).start(), this.game.add.tween(this.heartsB).to({
				y: -150
			}, 1e3, Phaser.Easing.Quadratic.Out).start(), this.heartsA.soundEnabled = !1, this.currentManager = new VictoryManager(this.game, this), this.currentManager.skipMemberAds = this.skipMemberAds, this.currentManager.waitOnComplete = this.waitOnComplete
		}, e.prototype.startMilestone = function () {
			Util.isDefined(this.startMilestoneCallback) && this.startMilestoneCallback(), this.currentManager = new MilestoneManager(this.game, this)
		}, e.prototype.endBattle = function (e) {
			this.game.prodigy.player.tutorial.getMenuValue(3, 2) < 2 && this.game.prodigy.player.tutorial.setMenuValue(3, 2, 2), this.game.prodigy.player.saveEnabled = !0, this.game.prodigy.network.processPlayer = !0;
			var t = this.game.prodigy.education.getUpdatedData();
			if (this.game.prodigy.network.updateUserAbility(t), this.game.prodigy.player.getCurrentHearts() <= 0 && this.game.prodigy.player.changeCurrentHearts(2), "run" === e) this.runAwayCallback();
			else if ("win" === e) {
				for (var i = this.teams[1].getDefeated(), a = 0; a < i.length; a++) Util.isDefined(this.mods.quest) && this.game.prodigy.player.quests.defeatMonster(this.mods.zoneID, this.mods.quest, i[a].getID());
				Util.isDefined(this.mods.quest) && this.game.prodigy.player.quests.defeatBoss(this.mods.zoneID, this.mods.quest), this.victoryCallback(this.mods, this.teams[1].getDefeated())
			} else "lose" === e && (Util.isDefined(this.defeatCallback) && this.defeatCallback(), this.game.state.states.Faint.targetZone = this.defeatZone, this.game.state.start("Faint"))
		}, e
	}(),
	PVP = function () {
		function e(e) {
			Screen.call(this, e, "Challenge!", "battle", "battle"), this.area = "", this.teamA = new Array, this.teamB = new Array, this.runAwayCallback = null, this.victoryCallback = null, this.defeatCallback = null
		}
		return e.prototype = Object.create(Screen.prototype), e.prototype.setupLoadingScreen = function () {
			this.showChallenge()
		}, e.prototype.showChallenge = function (e) {
			if (Util.isDefined(e) && "fail" !== e) return this.endPVP(), void 0;
			this.overlay.removeAll(!0), this.game.prodigy.create.panel(this.overlay, 0, 0, 32, 5, "dark"), this.game.prodigy.create.panel(this.overlay, 0, 200, 32, 8, "light"), this.game.prodigy.create.panel(this.overlay, 0, 520, 32, 5, "dark");
			var t = this.overlay.add(new Phaser.TileSprite(this.game, 0, 199, 1280, 40, "core", "pvp-top")),
				i = this.overlay.add(new Phaser.TileSprite(this.game, 0, 481, 1280, 40, "core", "pvp-top2"));
			this.game.add.tween(t.tilePosition).to({
				x: 400
			}, 1e4, Phaser.Easing.Linear.None, !0).repeat(9999), this.game.add.tween(i.tilePosition).to({
				x: -400
			}, 1e4, Phaser.Easing.Linear.None, !0).repeat(9999);
			var a = this.playerA,
				s = this.playerB,
				r = this.game.prodigy.create.player(this.overlay, a, 2, 400, 450);
			r.reload();
			var o = this.game.prodigy.create.player(this.overlay, s, 2, 880, 450);
			o.reload(), o.flip();
			var n = this.game.prodigy.create.font(this.overlay, 0, 350, "VS.", {
					size: 80,
					align: "center",
					width: 1280
				}),
				l = this.game.prodigy.create.panel(this.overlay, 200, 60, 22, 2, "banner");
			this.game.prodigy.create.font(l, 40, 20, "$" + a.getLevel(), {
				size: 36,
				font: "button"
			}), this.game.prodigy.create.font(l, 40, 20, a.getName(), {
				size: 36,
				font: "button",
				align: "center",
				width: 800
			}), this.game.prodigy.create.font(l, 40, 20, a.isMember ? " [membership]" : "", {
				size: 36,
				font: "button",
				align: "right",
				width: 800
			});
			var h = this.game.prodigy.create.panel(this.overlay, 200, 580, 22, 2, "banner");
			if (this.game.prodigy.create.font(h, 40, 20, "$" + s.getLevel(), {
					size: 36,
					font: "button"
				}), this.game.prodigy.create.font(h, 40, 20, s.getName(), {
					size: 36,
					font: "button",
					align: "center",
					width: 800
				}), this.game.prodigy.create.font(h, 40, 20, s.isMember ? " [membership]" : "", {
					size: 36,
					font: "button",
					align: "right",
					width: 800
				}), Util.isDefined(e)) {
				n.setText("Player Left"), r.x -= 100, o.x += 100;
				var d = this.game.prodigy.event.create();
				d.delay(3e3), d.function(this.endPVP.bind(this)), d.start()
			}
		}, e.prototype.checkLoaded = function () {}, e.prototype.onMessage = function (e) {
			Util.isDefined(this.game) && ("request_data" === e.action ? this.game.prodigy.network.emitMessage({
				action: "data",
				data: {
					equipment: this.game.prodigy.player.equipment.data,
					appearance: this.game.prodigy.player.appearance.data,
					data: this.game.prodigy.player.data,
					pets: this.game.prodigy.player.kennel.data
				}
			}) : "request_init" === e.action && this.isLoaded ? this.game.prodigy.network.emitMessage({
				action: "init",
				data: {}
			}) : "request_action" === e.action && Util.isDefined(this.currentManager.currentAction) ? this.game.prodigy.network.emitMessage({
				action: "action",
				data: this.currentManager.currentAction
			}) : "request_next" === e.action && Util.isDefined(this.currentManager.nextAction) ? this.game.prodigy.network.emitMessage({
				action: "next",
				data: this.currentManager.nextAction
			}) : "data" === e.action && "request_data" === this._state ? (this._state = "loading", this.playerB = new Player, this.playerB.init(e.data), this.teamA = this.game.prodigy.battle.getTeam(this.playerA), this.teamB = this.game.prodigy.battle.getTeam(this.playerB), this.game.prodigy.load.assets(this.game.prodigy.battle.getAssets("", this.teamA, this.teamB), this.loadedAssets.bind(this))) : "init" === e.action && "request_init" === this._state ? (this._state = "working", this.isProcessed = !0) : "action" === e.action && "request_action" === this._state && Util.isDefined(e.data) && e.data.turn == this.currentManager.turn ? (this._state = "working", this.currentManager.processAction(e.data)) : "next" === e.action && "request_next" === this._state ? (this._state = "working", this.currentManager.playerTurn(e.data)) : "loading" === e.action || "working" === e.action, this._timeout = (new Date).getTime() + 6e4)
		}, e.prototype.loadedAssets = function (e, t) {
			Util.isDefined(this.game) && (this.isLoaded = t, this._state = "request_init")
		}, e.prototype.create = function () {
			this.mods.arena && (this.game.prodigy.player.data.deserter = 1, this.game.prodigy.player.updated = !0), this.game.prodigy.network.setZone(this), this.inCombat = !1, this._processConnections = !0, Screen.prototype.create.call(this, [this.screenName, "battle", "attacks", "bgm-battle", "bgm-victory"]), this._state = "request_data", this._timeout = (new Date).getTime() + 45e3, this._heartbeat = (new Date).getTime() + 3e3
		}, e.prototype.screenSetup = function () {
			this.game.prodigy.player.saveEnabled = !1, this.game.prodigy.network.sendAnalytics("PVP", "start", "Events"), this.bg = this.game.prodigy.create.sprite(0, 0, this.screenName), this.background.add(this.bg), this.heartsA = new Prodigy.Container.Hearts(this.game, this.background, 30, -150, null), this.heartsB = new Prodigy.Container.Hearts(this.game, this.background, 784, -150, null, !0), this.teams = new Array, this.teams.push(new Team(this.game, this.content, this.teamA, !0, -200, 550, 250, 550, this.heartsA)), this.teams.push(new Team(this.game, this.content, this.teamB, !1, 1480, 550, 1030, 550, this.heartsB)), 1 != Util.getUrlVariable("iosApp") && this.game.prodigy.audio.playBGM("bgm-battle", !0, !0), this.msgPanel = this.game.prodigy.create.panel(this.foreground, 520, 600, 6, 2, "item-common"), this.msgPanel.msgTop = this.game.prodigy.create.font(this.msgPanel, 5, 5, "Waiting on player", {
				width: 230,
				align: "center"
			}), this.msgPanel.msgBot = this.game.prodigy.create.font(this.msgPanel, 5, 45, "...", {
				width: 230,
				align: "center"
			}), this.msgPanel.visible = !1, this.startCombat()
		}, e.prototype.setState = function (e) {
			this._state = e, this._sendNow = !0
		}, e.prototype.update = function () {
			Screen.prototype.update.call(this), this._processConnections && Util.isDefined(this._timeout) && this._timeout < (new Date).getTime() && (this.inCombat ? (this._processConnections = !1, delete this._heartbeat, delete this._timeout, this.currentManager.processEnd(!0)) : this.endCombat("fail")), this._processConnections && Util.isDefined(this._heartbeat) && (this._heartbeat < (new Date).getTime() || this._sendNow) && (this.game.prodigy.network.emitMessage({
				action: this._state,
				data: {}
			}), this._heartbeat = (new Date).getTime() + 3e3, this._sendNow = !1)
		}, e.prototype.screenUpdate = function () {
			Screen.prototype.screenUpdate.call(this), this.msgPanel.visible = "loading" !== this._state && "working" !== this._state && "deserted" !== this._state ? !0 : !1
		}, e.prototype.startCombat = function () {
			this.game.add.tween(this.heartsA).to({
				y: 30
			}, 1e3, Phaser.Easing.Quadratic.Out).start(), (!this.teams[1].isBoss() || this.teams[1].showHearts()) && this.game.add.tween(this.heartsB).to({
				y: 30
			}, 1e3, Phaser.Easing.Quadratic.Out).start(), this.currentManager = new Prodigy.PVPManager(this.game, this), this.inCombat = !0
		}, e.prototype.endCombat = function (e) {
			this.mods.arena && (delete this.game.prodigy.player.data.deserter, this.game.prodigy.player.updated = !0), this.game.prodigy.external.closeQuestion(), this._processConnections = !1, delete this._heartbeat, delete this._timeout, this.game.prodigy.network.sendAnalytics("PVP", e || "fail", "Events"), this.showChallenge(e), this.background.removeAll(!0), this.foreground.removeAll(!0), this.content.removeAll(!0)
		}, e.prototype.endPVP = function () {
			var e = this.game.prodigy.education.getUpdatedData();
			this.game.prodigy.network.updateUserAbility(e), this.game.prodigy.player.heal(), this.game.prodigy.player.saveEnabled = !0, this.game.prodigy.network.processPlayer = !0, this.callback()
		}, e
	}(),
	Team = function () {
		function e(e, t, i, a, s, r, o, n, l) {
			this.game = e, this.team = new Array;
			for (var h = 0; h < i.length; h++) i[h] instanceof Player ? this.team.push(e.prodigy.create.player(t, i[h], 2, s, r)) : i[h] instanceof Monster ? this.team.push(e.prodigy.create.monster(t, i[h], 2, s, r)) : i[h] instanceof Boss && (this.team.push(e.prodigy.create.boss(t, i[h], s, r)), this.bossTeam = !0), this.team[h].setup(null, !0), this.team[h].flip(), this.team[h].pairs = new Array, this.team[h].visible = !1, Util.isDefined(this.current) || i[h].isKnockedOut() || (this.current = this.team[h], this.current.visible = !0);
			this.playerControlled = a, this.offScreenX = s, this.offScreenY = r, this.onScreenX = o, this.onScreenY = n, this.hearts = l
		}
		return e.prototype.spreadPlayersOut = function (e) {
			for (var t = Math.floor(1280 / (this.team.length + 1)), i = 0; i < this.team.length; i++) this.team[i].visible = !0, this.team[i].speed = 10, this.team[i].setPath([{
				x: (i + 1) * t,
				y: 550
			}], i === this.team.length - 1 ? e : null, 4)
		}, e.prototype.movePlayerIn = function (e, t) {
			this.current.visible = !1, this.current = t, this.current.visible = !0, this.current.speed = 10, this.hearts.setSource(this.current.source), this.current instanceof Prodigy.Container.BossContainer ? (this.current.x = this.onScreenX, this.current.y = this.onScreenY, this.current.setPath([{
				x: this.onScreenX,
				y: this.onScreenY
			}], e)) : (this.current.speed = 10, this.current.setPath([{
				x: this.onScreenX,
				y: this.onScreenY
			}], e))
		}, e.prototype.movePlayerOut = function (e, t) {
			t.speed = 30, t.setPath([{
				x: this.offScreenX,
				y: this.offScreenY
			}], e, 4)
		}, e.prototype.swapPlayers = function (e, t) {
			var i = this.team[t];
			!Util.isDefined(this.current) || this.current.source.isKnockedOut() || Util.isDefined(this.current.captured) ? this.movePlayerIn(e, i) : this.movePlayerOut(this.movePlayerIn.bind(this, e, i), this.current)
		}, e.prototype.failRun = function (e) {
			var t = function (e, t) {
				e.speed = 10, e.setPath([{
					x: e.x + 200
				}], t)
			};
			this.game.prodigy.audio.playSFX("run"), this.current.speed = 40, this.current.setPath([{
				x: this.current.x - 200
			}], t.bind(this, this.current, e), 4)
		}, e.prototype.runAway = function (e) {
			Util.isDefined(this.current.captured) || (this.bossTeam ? this.game.add.tween(this.current).to({
				alpha: 0
			}, 500, Phaser.Easing.Linear.None).start() : (this.game.prodigy.audio.playSFX("run"), this.current.speed = 40, this.current.flip(), this.current.moonwalk(), this.game.time.events.add(500, this.movePlayerOut.bind(this, e, this.current), this)))
		}, e.prototype.pairOpponent = function (e) {
			Util.inArray(this.current.pairs, e) || this.current.pairs.push(e)
		}, e.prototype.getXPReward = function (e) {
			for (var t = 0, i = 0; i < this.team.length; i++) {
				for (var a = this.team[i], s = 0, r = !1, o = 0; o < a.pairs.length; o++) a.pairs[o].source.isKnockedOut() || s++, a.pairs[o] === e && (r = !0);
				0 >= s && (s = 1);
				var n = Math.floor((a.source.getLevel() - e.source.getLevel()) / s / 4);
				r && (t += Math.max(1, Math.floor(a.source.getStarReward() / s) + n))
			}
			return t
		}, e.prototype.chooseNextCandidate = function (e, t) {
			if (0 === e) {
				for (var i = null, a = null, s = 0; s < this.team.length; s++) {
					var r = this.team[s];
					if (Util.isDefined(r) && !Util.isDefined(r.captured) && !r.source.isKnockedOut()) {
						var o = this.game.prodigy.battle.battleScore(r, t, !0, 1);
						(!Util.isDefined(a) || o > a) && (i = s, a = o)
					}
				}
				return i
			}
			return null
		}, e.prototype.getDrops = function () {
			for (var e = [], t = 0; t < this.team.length; t++) this.team[t].source.isKnockedOut() && !Util.isDefined(this.team[t].captured) && (e = e.concat(this.team[t].source.getDrops()));
			return e
		}, e.prototype.isDefeated = function () {
			for (var e = 0; e < this.team.length; e++)
				if (!this.team[e].source.isKnockedOut() && !Util.isDefined(this.team[e].captured)) return !1;
			return !0
		}, e.prototype.getDefeated = function () {
			for (var e = [], t = 0; t < this.team.length; t++) this.team[t].source.isKnockedOut() && !Util.isDefined(this.team[t].captured) && e.push(this.team[t].source);
			return e
		}, e.prototype.isBoss = function () {
			for (var e = 0; e < this.team.length; e++)
				if (this.team[e] instanceof Prodigy.Container.BossContainer) return !0;
			return !1
		}, e.prototype.showHearts = function () {
			for (var e = 0; e < this.team.length; e++)
				if (this.team[e] instanceof Prodigy.Container.BossContainer && this.team[e].source.source.showHP) return !0;
			return !1
		}, e
	}(),
	CombatManager = function () {
		function e(e, t) {
			this.game = e, this.battleScreen = t, this.bounty = this.battleScreen.mods.bounty, Util.isDefined(this.battleScreen.mods.encounter) && (this.nickname = this.battleScreen.mods.encounter[0].nickname), this.content = t.content, this.menus = t.menus, this.background = t.background, this.teams = t.teams, this.teams[0].movePlayerIn(null, this.teams[0].current), this.teams[1].movePlayerIn(null, this.teams[1].current), this.turn = 0, this.firstQuestion = !0;
			var i = "Wizard Battle!";
			this.teams[1].isBoss() && (i = "Boss Time!"), this.battleScreen.mods.intro && (i = this.battleScreen.mods.intro), this.game.prodigy.effects.flashText(i, this.playerTurn.bind(this))
		}
		return e.prototype.processEvents = function (e) {
			for (var t = this.battleScreen.mods.events || [], i = 0; i < t.length; i++) {
				var a = !1,
					s = t[i];
				if (Util.isDefined(s.repeat) || (s.repeat = 0), !(s.lastProc === this.turn || s.repeat < 0) && ("turn" === s.action && s.value === this.turn ? a = !0 : "miss" === s.action && this.stateMiss ? a = !0 : "hit" === s.action && this.stateHit && (a = !0), a)) return s.repeat--, s.lastProc = this.turn, s.callback(this.game, e), !1
			}
			return !0
		}, e.prototype.playerTurn = function () {
			if (this.processEvents(this.playerTurn.bind(this))) {
				var e = this.teams[0],
					t = this.teams[1];
				t.pairOpponent(e.current), e.isDefeated() ? (e.runAway(), this.game.prodigy.effects.flashText("YOU LOST...", this.battleScreen.endBattle.bind(this.battleScreen, "lose"))) : e.current.source.isKnockedOut() ? e.current.source instanceof Player ? (e.runAway(), this.game.prodigy.open.battle(e.current, e.team, t.current, this.battleScreen.mods, !0, null, e.swapPlayers.bind(e, this.playerTurn.bind(this)))) : (e.runAway(), this.game.prodigy.open.battle(e.current, e.team, t.current, this.battleScreen.mods, !0, null, e.swapPlayers.bind(e, this.playerTurn.bind(this)))) : this.game.prodigy.open.battle(e.current, e.team, t.current, this.battleScreen.mods, null, this.openQuestion.bind(this), e.swapPlayers.bind(e, this.opponentTurn.bind(this)), this.runAway.bind(this), this.tryCatch.bind(this, e.current, t.current)), this.stateMiss = this.stateHit = !1, this.turn++
			}
		}, e.prototype.opponentTurn = function () {
			var e = this.teams[1],
				t = this.teams[0];
			if (e.isDefeated()) e.runAway(), this.bounty ? this.game.prodigy.effects.bountyComplete(this.game.prodigy.bounty.getReward(this.bounty), this.battleScreen.startVictory.bind(this.battleScreen)) : this.game.prodigy.effects.flashText("YOU WON!", this.battleScreen.startVictory.bind(this.battleScreen));
			else if (e.current.source.isKnockedOut() || Util.isDefined(e.current.captured)) e.runAway(e.swapPlayers.bind(e, this.opponentTurn.bind(this), e.chooseNextCandidate(0, t.current)));
			else {
				var i = this.battleScreen.mods.difficulty;
				this.game.prodigy.battle.chooseAction(i, e.current, t.current, e.team, t.team, this.attack.bind(this), e.swapPlayers.bind(e), this.playerTurn.bind(this))
			}
		}, e.prototype.answerQuestion = function (e, t) {
			this.content.visible = this.menus.visible = !0, this.battleScreen.heartsA.visible = this.battleScreen.heartsB.visible = !0, this.stateMiss = !t, this.stateHit = t, t ? this.attack(this.teams[0].current, this.teams[1].current, this.opponentTurn.bind(this), e, null, this.battleScreen.mods) : this.opponentTurn()
		}, e.prototype.openQuestion = function (e) {
			if (this.content.visible = this.menus.visible = !1, this.battleScreen.heartsA.visible = this.battleScreen.heartsB.visible = !1, this.game.prodigy.debug.disableEdu) this.answerQuestion(e, !0);
			else {
				var t = 0;
				if (this.firstQuestion) {
					var t = this.game.prodigy.player.state.get("tutorial-0") || 0;
					4 > t && t++, this.game.prodigy.player.state.set("tutorial-0", t), this.firstQuestion = !1
				}
				this.game.prodigy.external.question(this.answerQuestion.bind(this, e), t), this.game.prodigy.education.isNew = !1
			}
		}, e.prototype.attack = function (e, t, i, a, s, r) {
			var o = a.animation,
				n = window[o];
			e.attack(), Util.isDefined(o) && Util.isDefined(n) && "function" == typeof n ? new n(this.game, e, t, this.background, this.content, a, i, s, r) : Util.isDefined(i) && i()
		}, e.prototype.tryCatch = function (e, t) {
			this.game.prodigy.open.catch(t, this.catch.bind(this, e, t))
		}, e.prototype.catch = function (e, t, i) {
			if (i) {
				t.captured = !0, Util.isDefined(this.nickname) && (t.source.data.nickname = this.nickname);
				var a = function () {
					this.game.prodigy.open.gotItem([{
						type: "pet",
						ID: t.source.data.ID,
						N: 1,
						data: t.source.data
					}], this.opponentTurn.bind(this))
				};
				new CatchPet(this.game, e, t, this.background, this.content, null, a.bind(this))
			} else t.source.catchAttempt || (t.source.catchAttempt = 0), t.source.catchAttempt++, this.opponentTurn()
		}, e.prototype.runAway = function () {
			Math.random() < .75 * this.game.prodigy.affixes.getEscape() && this.battleScreen.mods.run ? (this.game.prodigy.effects.flashText("YOU RAN AWAY...", this.battleScreen.endBattle.bind(this.battleScreen, "run")), this.teams[0].runAway()) : (this.battleScreen.mods.run = !1, this.game.prodigy.effects.flashText("YOU COULDN'T RUN!"), this.teams[0].failRun(this.opponentTurn.bind(this)))
		}, e
	}();
Prodigy.PVPManager = function (e, t) {
	this.game = e, this.battleScreen = t, this.currentAction = null, this.nextAction = null, this.content = t.content, this.menus = t.menus, this.background = t.background, this.teams = t.teams, this.teams[0].movePlayerIn(null, this.teams[0].current), this.teams[1].movePlayerIn(null, this.teams[1].current), this.turn = 0, this.game.prodigy.effects.flashText("Player vs. Player!", this.playerTurn.bind(this))
}, Prodigy.PVPManager.prototype = {
	constructor: Prodigy.PVPManager,
	playerTurn: function (e) {
		this.currentAction = null;
		var t = this.teams[0],
			i = this.teams[1];
		return Util.isDefined(e) && Util.isDefined(e.index) ? (i.swapPlayers(this.playerTurn.bind(this), e.index), void 0) : (console.log("TURN INCREASE TO " + (this.turn + 1)), this.turn++, this.game.prodigy.open.battle(t.current, t.team, i.current, this.battleScreen.mods, null, this.openQuestion.bind(this), this.handleSwitch.bind(this)), void 0)
	},
	handleSwitch: function (e) {
		this.currentAction = {
			type: "switch",
			index: e,
			turn: this.turn
		}, this.battleScreen.setState("request_action")
	},
	handleAttack: function (e, t, i) {
		this.content.visible = this.menus.visible = !0, this.battleScreen.heartsA.visible = this.battleScreen.heartsB.visible = !0, this.currentAction = {
			type: "spell",
			ID: e.ID,
			hit: t,
			time: i,
			turn: this.turn,
			seed: Math.floor(999999 * Math.random())
		}, this.battleScreen.setState("request_action")
	},
	processAction: function (e) {
		this.nextAction = null;
		var t = this.teams[0],
			i = this.teams[1],
			a = this.game.prodigy.player.userID === this.battleScreen.challengerID;
		if ("switch" === this.currentAction.type && "switch" === e.type)
			if (a) {
				var s = i.swapPlayers.bind(i, this.processEnd.bind(this, !1), e.index);
				t.swapPlayers(s, this.currentAction.index)
			} else {
				var s = t.swapPlayers.bind(t, this.processEnd.bind(this, !1), this.currentAction.index);
				i.swapPlayers(s, e.index)
			}
		else if ("spell" === this.currentAction.type && "spell" === e.type)
			if (this.currentAction.time < e.time || this.currentAction.time === e.time && a) {
				var s = this.attack.bind(this, i.current, t.current, this.processEnd.bind(this, !1), this.game.prodigy.attacks.getAttack(e.ID), !e.hit, {
					seed: e.seed
				});
				this.attack(t.current, i.current, s, this.game.prodigy.attacks.getAttack(this.currentAction.ID), !this.currentAction.hit, {
					seed: this.currentAction.seed
				})
			} else {
				var s = this.attack.bind(this, t.current, i.current, this.processEnd.bind(this, !1), this.game.prodigy.attacks.getAttack(this.currentAction.ID), !this.currentAction.hit, {
					seed: this.currentAction.seed
				});
				this.attack(i.current, t.current, s, this.game.prodigy.attacks.getAttack(e.ID), !e.hit, {
					seed: e.seed
				})
			}
		else "spell" === this.currentAction.type && "switch" === e.type ? i.swapPlayers(this.swapAttack.bind(this, t, i, this.currentAction.ID, this.currentAction.hit, {
			seed: this.currentAction.seed
		}), e.index) : "switch" === this.currentAction.type && "spell" === e.type && t.swapPlayers(this.swapAttack.bind(this, i, t, e.ID, e.hit, {
			seed: e.seed
		}), this.currentAction.index)
	},
	swapAttack: function (e, t, i, a, s) {
		this.attack(e.current, t.current, this.processEnd.bind(this, !1), this.game.prodigy.attacks.getAttack(i), !a, s)
	},
	processEnd: function (e) {
		var t = this.teams[0],
			i = this.teams[1];
		e ? (this.battleScreen._state = "deserted", this.game.prodigy.external.closeQuestion(), this.game.prodigy.open.menuCloseAll(), i.runAway(), this.game.prodigy.effects.flashText("YOU WON!", this.showResults.bind(this, "win"))) : t.isDefeated() && i.isDefeated() ? (t.runAway(), i.runAway(), this.game.prodigy.effects.flashText("DRAW!", this.showResults.bind(this, "draw"))) : t.isDefeated() ? (t.runAway(), this.game.prodigy.effects.flashText("YOU LOST...", this.showResults.bind(this, "lose"))) : i.isDefeated() ? (i.runAway(), this.game.prodigy.effects.flashText("YOU WON!", this.showResults.bind(this, "win"))) : t.current.source.isKnockedOut() ? (t.runAway(), this.game.prodigy.open.battle(t.current, t.team, i.current, this.battleScreen.mods, !0, null, this.completeTurn.bind(this))) : this.completeTurn()
	},
	showResults: function (e) {
		if ("win" === e && this.battleScreen.mods.arena && 1 != Util.getUrlVariable("iosApp") && this.game.prodigy.audio.playBGM("bgm-victory", !0, !0), !this.battleScreen.mods.arena) return this.battleScreen.endCombat(e), void 0;
		var t = this.game.prodigy.player.getArenaScore(),
			i = this.battleScreen.playerB.getArenaScore(),
			a = 10;
		"win" === e ? a = Math.max(10, 50 + Math.floor((i - t) / 40)) : "lose" === e && (a = Math.min(-10, -50 - Math.floor((t - i) / 40))), a = Math.min(a, 250), a = Math.max(a, -250);
		var s = this.game.prodigy.player.getArenaRank(),
			r = this.game.prodigy.player.isUnranked();
		this.game.prodigy.player.addArenaScore(a, "win" === e);
		var o = this.game.prodigy.player.getArenaRank(),
			n = r && !this.game.prodigy.player.isUnranked(),
			l = this.game.prodigy.create.panel(this.menus, 400, 300, 12, 4, "item-common");
		this.game.prodigy.create.font(l, 20, 0, "{Arena Points", {
			size: 36,
			font: "button"
		});
		var h = this.game.prodigy.create.font(l, 20, 40, t + "", {
				size: 80,
				align: "left",
				width: 440
			}),
			d = this.game.prodigy.create.font(l, 20, 40, "", {
				size: 80,
				align: "right",
				width: 440
			});
		l.visible = !1;
		var p = this.game.prodigy.event.create();
		p.delay(500), p.set(l, "visible", !0), p.delay(500);
		for (var c = 0; c < Math.abs(a); c++) t += a > 0 ? 1 : -1, 0 > t && (t = 0), t > 5e3 && (t = 5e3), p.sound("tick"), p.function(h.setText.bind(h, "" + t)), p.function(d.setText.bind(d, (a > 0 ? "(+" + Math.max(0, a - c - 1) : "(" + Math.min(0, a + c + 1)) + ")")), p.delay(80);
		p.function(d.setText.bind(d, ""));
		var u = ["Bronze", "Silver", "Gold", "Platinum", "Diamond"];
		if (o > s || s > o || n) {
			p.delay(2e3), p.set(l, "visible", !1), (o > s || n) && p.sound("victory");
			var g = "";
			(o > s || n) && (g = "You ranked up to " + u[o] + "!"), s > o && (g = "You ranked down to " + u[o] + "..."), p.functionCallback(this.game.prodigy.effects.pvpComplete.bind(this.game.prodigy.effects, g, "emblem-rank" + (o + 1)))
		} else p.delay(2e3);
		p.delay(4e3), p.function(this.battleScreen.endCombat.bind(this.battleScreen, e)), p.start()
	},
	completeTurn: function (e) {
		Util.isDefined(e) && this.teams[0].swapPlayers(null, e), this.nextAction = {
			type: "ready",
			index: e
		}, this.battleScreen.setState("request_next")
	},
	openQuestion: function (e) {
		this.content.visible = this.menus.visible = !1, this.battleScreen.heartsA.visible = this.battleScreen.heartsB.visible = !1, this.game.prodigy.external.question(this.handleAttack.bind(this, e), this.game.prodigy.education.isNew), this.game.prodigy.education.isNew = !1
	},
	attack: function (e, t, i, a, s, r) {
		var o = a.animation,
			n = window[o];
		e.attack(), Util.isDefined(o) && Util.isDefined(n) && "function" == typeof n ? new n(this.game, e, t, this.background, this.content, a, i, s, r) : Util.isDefined(i) && i()
	}
};
var VictoryManager = function () {
		function e(e, t, i) {
			this.game = e, this.battleScreen = t, this.content = t.content, this.menus = t.menus, this.background = t.background, this.team = t.teams[0], this.opponents = t.teams[1], this.waitOnComplete = i, this.getItems(), this.oldPlayerLevel = this.game.prodigy.player.getLevel()
		}
		return e.prototype.getItems = function () {
			var e = [];
			if (Util.isDefined(this.battleScreen.drops))
				for (var t = 0; t < this.battleScreen.drops.length; t++) e.push(this.battleScreen.drops[t]);
			if (!Util.isDefined(this.battleScreen.mods) || !this.battleScreen.mods.dropsDisabled) {
				for (var i = this.opponents.getDrops(), a = 4, t = 0; t < i.length; t++)
					if ("hat" === i[t].type || "outfit" === i[t].type || "weapon" === i[t].type || "boots" === i[t].type || "relic" === i[t].type) var s = i[t];
					else 0 !== a && ("item" === i[t].type && a--, e.push(i[t]));
				Util.isDefined(s) && e.push(s), console.log(e)
			}
			new Prodigy.Container.Chest(this.game, this.battleScreen.menus, this.battleScreen.mods.allowMember, e, [{
				type: "gold",
				N: 100
			}], this.showDrops.bind(this))
		}, e.prototype.showDrops = function (e, t) {
			Util.isDefined(e) && e.length > 0 ? this.game.prodigy.open.gotItem(e, this.getStars.bind(this, t)) : this.getStars(t)
		}, e.prototype.getStars = function (e) {
			this.team.spreadPlayersOut(), this.game.time.events.add(2e3, this.calculateStars.bind(this, e), this)
		}, e.prototype.calculateStars = function (e) {
			var t = 0,
				i = 0;
			this.contents = this.game.prodigy.create.element(this.menus);
			for (var a = 0; a < this.team.team.length; a++) {
				var s = this.team.team[a];
				if (!(s.source.getCurrentHearts() <= 0)) {
					var r = this.opponents.getXPReward(s);
					r > 0 && Util.isDefined(this.battleScreen.mods) && Util.isDefined(this.battleScreen.mods.starMod) && (r *= this.battleScreen.mods.starMod), e && (r += 5), new Prodigy.Container.StarDisplay(this.game, this.contents, s.x, s.y, s.source, r), r > t && (t = r), i += r
				}
			}
			t *= 200, this.game.prodigy.effects.flashText("You earned " + i + " stars!", null, Prodigy.EffectFactory.TOP, Prodigy.EffectFactory.SMALL, t), this.game.time.events.add(t + 500 + 1e3, this.showButtons.bind(this), this)
		}, e.prototype.showButtons = function () {
			this.battleScreen.mods.allowMember && (!this.game.prodigy.player.isMember && !this.skipMemberAds || this.waitOnComplete) ? (this.game.prodigy.player.isMember || this.skipMemberAds || this.game.prodigy.create.button(this.contents, 308, 100, "battle", "level-btn", this.game.prodigy.open.membership.bind(this.game.prodigy.open, Prodigy.Menu.MemberAd.MORE_EXP)), Prodigy.Control.TextButton.createNextButton(this.game, this.contents, 547.5, 180, this.complete.bind(this))) : this.complete()
		}, e.prototype.complete = function () {
			this.game.prodigy.player.getLevel() > this.oldPlayerLevel && (this.game.prodigy.player.justLeveled = !0), this.contents.destroy(), this.battleScreen.startMilestone()
		}, e
	}(),
	MilestoneManager = function () {
		function e(e, t) {
			this.game = e, this.battleScreen = t, this.content = t.content, this.menus = t.menus, this.background = t.background, this.team = t.teams[0], this.contents = this.game.prodigy.create.element(this.content, 0, 0), this.start()
		}
		return e.prototype.start = function () {
			this.events = [], this.events.push(this.showBG.bind(this, this.next.bind(this)));
			for (var e = 0; e < this.team.team.length; e++) {
				var t = this.team.team[e],
					i = t.source.getUnprocessedLevelEvents();
				if (Util.isDefined(i)) {
					for (var a = 0; a < i.length; a++) {
						0 === a && this.events.push(this.focusPlayer.bind(this, t, this.next.bind(this)));
						var s = i[a];
						Util.isDefined(s.h) && this.events.push(this.newHeart.bind(this, t, this.next.bind(this))), Util.isDefined(s.a) && this.events.push(this.newSpell.bind(this, t, this.game.prodigy.attacks.getAttack(s.a), this.next.bind(this))), Util.isDefined(s.e) && this.events.push(this.evolve.bind(this, t, s.e, this.next.bind(this)))
					}
					t.source.clearUnprocessedLevelEvents()
				}
			}
			this.events.length <= 1 && (this.events = []), this.events.push(this.complete.bind(this)), this.next()
		}, e.prototype.update = function () {
			Util.isDefined(this.bar) && (this.bar.tilePosition.x += 1, this.bar.tilePosition.y += 1)
		}, e.prototype.complete = function () {
			this.game.time.events.add(1e3, this.battleScreen.endBattle.bind(this.battleScreen, "win"), this.battleScreen)
		}, e.prototype.next = function () {
			if (this.contents.removeAll(!0), this.events.length > 0) {
				var e = this.events[0];
				this.events.splice(0, 1), e()
			}
		}, e.prototype.showBG = function (e) {
			this.bar = new Phaser.TileSprite(this.game, 0, 0, 1280, 720, "battle", "star-bg"), this.background.add(this.bar), this.bar.alpha = 0, this.game.add.tween(this.battleScreen.bg).to({
				alpha: 0
			}, 500, Phaser.Easing.Linear.None).start();
			var t = this.game.add.tween(this.bar).to({
				alpha: 1
			}, 500, Phaser.Easing.Linear.None).start();
			Util.isDefined(e) && t.onComplete.add(e, this)
		}, e.prototype.focusPlayer = function (e, t) {
			for (var i = 0; i < this.team.team.length; i++) {
				var a = this.team.team[i];
				if (a === e) {
					a.visible = !0;
					var s = this.game.add.tween(a).to({
						x: 640,
						y: 450,
						alpha: 1
					}, 1e3, Phaser.Easing.Quadratic.Out).start();
					Util.isDefined(t) && s.onComplete.add(t, this)
				} else this.game.add.tween(a).to({
					alpha: 0
				}, 500, Phaser.Easing.Linear.None).start()
			}
		}, e.prototype.newSpell = function (e, t, i) {
			this.game.prodigy.effects.flashText(e.source.getName() + " learned...", this.game.prodigy.effects.flashText.bind(this.game.prodigy.effects, t.name + "!", i, Prodigy.EffectFactory.BOTTOM, Prodigy.EffectFactory.MEDIUM, 2e3), Prodigy.EffectFactory.TOP, Prodigy.EffectFactory.SMALL, 3e3);
			for (var a = 0; 6 > a; a++) {
				var s = this.game.prodigy.create.sprite(e.x, e.y - 50, "icons", t.element);
				this.contents.add(s), s.anchor.setTo(3, 3), s.angle = 60 * a, this.game.add.tween(s).to({
					angle: "+1000"
				}, 3500, Phaser.Easing.Linear.None).to({
					alpha: 0
				}, 500, Phaser.Easing.Linear.None).start(), this.game.add.tween(s.anchor).to({
					x: .5,
					y: .5
				}, 1500, Phaser.Easing.Linear.None).delay(2e3).to({
					x: 5,
					y: 5
				}, 500, Phaser.Easing.Linear.None).start()
			}
		}, e.prototype.newHeart = function (e, t) {
			this.game.prodigy.effects.flashText(e.source.getName() + " got...", this.game.prodigy.effects.flashText.bind(this.game.prodigy.effects, "a new HEART!", t, Prodigy.EffectFactory.BOTTOM, Prodigy.EffectFactory.MEDIUM, 2e3), Prodigy.EffectFactory.BOTTOM, Prodigy.EffectFactory.SMALL, 3e3);
			for (var i = 0; 10 > i; i++) {
				var a = this.game.prodigy.create.sprite(e.x, e.y - 50, "icons", "heart");
				this.contents.add(a), a.anchor.setTo(.5, .5), a.alpha = .5, this.game.add.tween(a).to({
					x: 100
				}, 1e3, Phaser.Easing.Linear.None).delay(300 * i).to({
					alpha: 0
				}, 1, Phaser.Easing.Linear.None).start(), this.game.add.tween(a).to({
					y: 100
				}, 1e3, Phaser.Easing.Quadratic.Out).delay(300 * i).start()
			}
			this.hearts = new Prodigy.Container.Hearts(this.game, this.contents, 30, -150, e.source), this.game.add.tween(this.hearts).to({
				y: 30
			}, 500, Phaser.Easing.Quadratic.Out).to({}, 5e3, Phaser.Easing.Linear.None).to({
				y: -150
			}, 500, Phaser.Easing.Linear.None).start()
		}, e.prototype.evolve = function (e, t, i) {
			this.loadCompleted = !1, this.blinkCount = 0, this.stopEvolve = !1, this.game.prodigy.effects.flashText(e.source.getName() + " is evolving into...", null, Prodigy.EffectFactory.TOP, Prodigy.EffectFactory.SMALL, 3500);
			var a = this.game.prodigy.create.sprite(640, 0, "attacks", "core-beam2");
			this.contents.add(a), a.alpha = .75, a.anchor.setTo(.5, 0);
			var s = this.game.prodigy.create.button(this.contents, 441, 620, "battle", "stop-evolve", this.stopEvolving.bind(this));
			this.game.add.tween(a).to({
				height: 720
			}, 250, Phaser.Easing.Linear.None).delay(500).start();
			var r = this.game.add.tween(a).to({
				alpha: .25
			}, 400, Phaser.Easing.Linear.None, !0, 0, 1e3, !0);
			r.onLoop.add(this.blinkComplete.bind(this, e, t, r, a, s, i), this), this.game.prodigy.load.assets(Prodigy.Container.MonsterContainer.getAssets(e.source), this.loadComplete.bind(this))
		}, e.prototype.loadComplete = function (e, t) {
			Util.isDefined(this.game) && t && (this.loadCompleted = !0)
		}, e.prototype.stopEvolving = function () {
			this.stopEvolve = !0
		}, e.prototype.blinkComplete = function (e, t, i, a, s, r) {
			return this.loadCompleted && !(this.blinkCount < 14) || this.stopEvolve ? (Util.isDefined(s) && (s.visible = !1), i.stop(), this.game.add.tween(a).to({
				alpha: 0
			}, 300, Phaser.Easing.Linear.None, !0), this.game.add.tween(a.scale).to({
				x: 5
			}, 300, Phaser.Easing.Linear.None, !0), this.stopEvolve ? this.game.prodigy.effects.flashText(e.source.getName() + " stopped evolving!", r, Prodigy.EffectFactory.BOTTOM, Prodigy.EffectFactory.SMALL, 3500) : (e.source.evolve(t), e.reload(), this.game.prodigy.effects.flashText(e.source.getSourceName() + "!", r, Prodigy.EffectFactory.BOTTOM, Prodigy.EffectFactory.MEDIUM, 3500)), void 0) : (this.blinkCount++, void 0)
		}, e
	}(),
	DinoDig = function () {
		function e(e) {
			Screen.call(this, e, "Dig Site", "game-dino", "game-dinodig"), this.area = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], this.showMenu = !1
		}

		function t() {
			if (this.playGame && !this.digging) {
				var e = Math.floor(this.game.input.x / 20),
					t = Math.floor(this.game.input.y / 20),
					i = Math.floor(this.user.x / 20),
					a = Math.floor(this.user.y / 20);
				if (e === i && t === a) return;
				var s = this.path.findBasicPath(this.user.x, this.user.y, this.game.input.x, this.game.input.y);
				this.digBtn.visible = !1;
				var r = !1;
				1 === this.area[t][e] && (r = !0, this.user.setPath(s, this.askDig.bind(this, r, e, t), this.walkSpeed))
			}
		}
		return e.prototype = Object.create(Screen.prototype), e.prototype.shutdown = function () {
			Screen.prototype.shutdown.call(this);
			try {
				this.bg.destroy(), this.bg = null
			} catch (e) {}
			try {
				this.user.destroy(), this.user = null
			} catch (e) {}
		}, e.prototype.create = function () {
			this.game.prodigy.audio.pauseBGM(), Screen.prototype.create.call(this, ["game-dinodig", "bgm-game", "npc-sprite-scoog"].concat(Prodigy.Container.PlayerContainer.getAssets(this.game.prodigy.player, 1, 39))), this.game.prodigy.player.saveEnabled = !1
		}, e.prototype.screenSetup = function () {
			Screen.prototype.screenSetup.call(this), this.path = new Pathfinder(this.area), this.bg = this.game.prodigy.create.sprite(0, 0, "game-dinodig", "bg"), this.bg.inputEnabled = !0, this.bg.events.onInputDown.add(t, this), this.background.add(this.bg), this.npc = new Prodigy.Container.QuestNPC(this.game, this.content, 130, 640, null, {
				atlas: "scoog",
				name: "Scoog"
			}), this.user = this.game.prodigy.create.player(this.content, this.game.prodigy.player, 1, 600, 350), this.user.forceOutfit(39), this.user.setup(null, !0), this.user.showName(!1), this.content.add(this.game.prodigy.create.sprite(694, 32, "game-dinodig", "platform")), this.digBtn = this.game.prodigy.create.element(this.content, this.user.x - 40, this.user.y - 160);
			var e = this.digBtn.add(this.game.prodigy.create.sprite(0, 0, "icons", "icon-base"));
			e.inputEnabled = !0, e.events.onInputDown.add(this.dig.bind(this), this);
			var i = this.digBtn.add(this.game.prodigy.create.sprite(0, 0, "icons", "key/1"));
			this.game.add.tween(i).to({
				y: -10
			}, 1e3, Phaser.Easing.Quadratic.InOut, !0, 0, Number.MAX_VALUE, !0), this.digBtn.visible = !1, this.timer = this.game.prodigy.create.timer(this.foreground, 15, 15), this.timer.setTime(9e4), this.timer.setMsg("Items recovered : 0"), this.botPanel = this.game.prodigy.create.panel(this.foreground, 965, 605, 6, 2), this.botPanel.alpha = .8, this.rewards = [], this.setNextDig(), this.menu = new DinoDigMenu(this.game, this.content, this.showBoosts.bind(this), this.showInstructions.bind(this), this.toDino.bind(this)), this.showUI(!1), this.digging = !1
		}, e.prototype.showUI = function (e) {
			this.npc.visible = this.user.visible = this.timer.visible = this.botPanel.visible = e, this.menu.visible = !e
		}, e.prototype.showInstructions = function () {
			this.showUI(!0);
			var e = function (e, t) {
					e.visible = t
				},
				t = this.game.prodigy.dialogue.create();
			t.setText({
				text: "This game is all about digging up fossils!",
				face: 0,
				anim: 4
			}), t.setText({
				text: "To find fossils, just click around the dig site to start digging.",
				face: 2
			}), t.setText({
				callback: this.dig.bind(this)
			}), t.setText({
				text: "Your shovel will tell you how close to the fossil you are! \nCold means you're far away \nHot means you're close!",
				face: 0
			}), t.setText({
				callback: e.bind(this, this.digBtn, !0)
			}), t.setText({
				text: "When you find something, the shovel button will pop up. Keep clicking it to dig up your new find!",
				face: 0
			}), t.setText({
				callback: this.dig.bind(this)
			}), t.setText({
				text: "Once you dig it up, you can start looking for the next item!",
				face: 1
			}), t.setText({
				callback: this.timer.blink.bind(this.timer)
			}), t.setText({
				text: "You have 90 seconds to dig up as many fossils as you can.",
				face: 1,
				anim: 2
			}), t.setText({
				callback: this.showUI.bind(this, !1)
			}), t.start("scoog")
		}, e.prototype.showBoosts = function () {
			this.showUI(!0);
			var e = [{
				icon: "boots/7",
				d: "walk faster!"
			}, {
				icon: "fossil/1",
				d: "more fossils!"
			}, {
				icon: "key/1",
				d: "dig faster!"
			}];
			this.game.prodigy.open.boostSelect(e, this.startGame.bind(this))
		}, e.prototype.startGame = function (e) {
			this.walkSpeed = 0 === e ? 1.5 : 1, this.fossilOff = 1 === e ? .1 : 0, this.power = 2 === e ? 2 : 0, this.game.prodigy.effects.flashText("START DIGGING!", this.begin.bind(this))
		}, e.prototype.begin = function () {
			this.playGame = !0, this.timer.start(9e4, this.endGame.bind(this)), this.game.prodigy.audio.playBGM("bgm-game", !0, !0)
		}, e.prototype.setNextItem = function () {
			var t = Math.random();
			if (.2 > t) this.item = {
				type: "gold",
				N: 10
			}, this.targetDigs = 3;
			else if (.33 > t) this.item = {
				type: "gold",
				N: 25
			}, this.targetDigs = 4;
			else if (t < .66 + (this.fossilOff || 0)) {
				var i = e.getNewFossils(this.game.prodigy.player.backpack);
				i.length <= 0 ? (this.item = {
					type: "gold",
					N: 50
				}, this.targetDigs = 5) : (this.item = {
					type: "fossil",
					ID: i[Math.floor(Math.random() * i.length)]
				}, this.targetDigs = 8)
			} else {
				for (var i = []; i.length <= 0;) i = Items.getItemDrops();
				this.item = i[0];
				var a = this.item.type;
				this.targetDigs = "outfit" === a ? 10 : "weapon" === a ? 12 : "item" === a ? 5 : 8
			}
			this.targetDigs -= this.power || 0
		}, e.prototype.setNextDig = function () {
			for (this.setNextItem(), this.targetCoords = {
					x: 0,
					y: 0
				}; 1 !== this.area[this.targetCoords.y][this.targetCoords.x];) this.targetCoords.x = Math.floor(64 * Math.random()), this.targetCoords.y = Math.floor(36 * Math.random())
		}, e.prototype.askDig = function (e, t, i) {
			e && (this.digX = t, this.digY = i, this.dig())
		}, e.prototype.dig = function () {
			this.game.prodigy.audio.playSFX("dig");
			var e = 100;
			if (Util.isDefined(this.digX)) var e = this.game.prodigy.math.distance(this.digX, this.digY, this.targetCoords.x, this.targetCoords.y);
			this.digging || (this.digging = !0, 3 > e && (this.timer.setMsg("YOU FOUND SOMETHING!"), this.hole = this.game.prodigy.create.sprite(20 * this.digX, 20 * this.digY, "game-dinodig", "hole1"), this.hole.visible = !0, this.background.add(this.hole), this.digs = 0)), 3 > e && (this.hole.frameName = "hole" + Math.max(1, 1 + Math.floor(3 * (this.digs / this.targetDigs))));
			var t = 3 > e ? "DIG DIG DIG!" : 5 > e ? "Hot!" : 8 > e ? "Warm..." : 15 > e ? "Cold" : "Ice cold!";
			Util.isDefined(this.text) && this.text.destroy(), this.text = this.game.prodigy.create.font(this.foreground, this.user.x - 100, this.user.y - 100, t, {
				width: 200,
				align: "center"
			}), this.game.add.tween(this.text).to({
				y: this.user.y - 200,
				alpha: 0
			}, 2e3, Phaser.Easing.Quadratic.Out).start();
			var i = this.game.prodigy.player.backpack.getKeyItemData(1, "lvl"),
				a = 2 === i ? 12 : 3 === i ? 16 : 8;
			this.shoveling = !0, this.user.performFunction(a, this.digEnd.bind(this, e)), this.digBtn.visible = !1
		}, e.prototype.digEnd = function (e) {
			if (this.shoveling = !1, 3 > e)
				if (this.digs++, this.digs >= this.targetDigs) {
					this.game.prodigy.audio.playSFX("heart"), this.rewards.push(this.item), this.timer.setMsg("Items recovered : " + this.rewards.length);
					var t = this.foreground.add(this.game.prodigy.create.sprite(20 * this.digX + 10, 20 * this.digY + 10, "icons", Util.convertItemToIcon(this.item)));
					t.anchor.setTo(.5, .5), t.scale.x = t.scale.y = 0;
					var i = 995 + (this.rewards.length - 1) % 5 * 60,
						a = 630 + 50 * Math.floor((this.rewards.length - 1) / 5);
					this.game.add.tween(t.scale).to({
						x: 1.2,
						y: 1.2
					}, 1e3, Phaser.Easing.Quadratic.Out).to({
						x: .8,
						y: .8
					}, 1e3, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(t).to({
						x: i,
						y: a
					}, 2e3, Phaser.Easing.Quadratic.Out).start(), this.rewards.length % 3 === 0 && this.extendTime(), this.digging = !1, this.setNextDig()
				} else this.digBtn.x = this.user.x - 40, this.digBtn.y = this.user.y < 160 ? this.user.y : this.user.y - 160, this.digBtn.visible = !0;
			else this.digging = !1
		}, e.prototype.extendTime = function () {
			this.timer.add(15e3), this.timer.pause();
			var e = function (e) {
					e.resume()
				},
				t = this.game.prodigy.dialogue.create();
			t.setText({
				text: "Ponduberous! Since you got so many items, I'll give you another 15 seconds!",
				face: 1,
				anim: 4,
				audio: Dino.AUDIO[1]
			}), t.setText({
				callback: e.bind(this, this.timer)
			}), t.start("scoog")
		}, e.prototype.endGame = function () {
			this.game.prodigy.audio.playSFX("bell"), this.game.prodigy.audio.pauseBGM(), this.digBtn.visible = !1, this.playGame = !1, this.game.prodigy.effects.flashText("TIME'S UP!", this.end.bind(this))
		}, e.prototype.end = function () {
			var e = this.game.prodigy.dialogue.create();
			this.rewards.length > 0 ? (e.setText({
				text: "Time's up! Now let's see what items you dug up!",
				face: 1,
				anim: 2
			}), e.setText({
				callback: this.game.prodigy.open.gotItem.bind(this.game.prodigy.open, this.rewards, this.examineResults.bind(this))
			})) : (e.setText({
				text: "Time's up! Come back to try again sometime!",
				face: 2
			}), e.setText({
				callback: this.toDino.bind(this)
			})), e.start("scoog")
		}, e.prototype.examineResults = function () {
			for (var e = !1, t = 0; t < this.rewards.length; t++) "fossil" === this.rewards[t].type && (e = !0);
			var i = this.game.prodigy.dialogue.create();
			e ? (i.setText({
				text: "Looks like you got a fossil! Be sure to visit the museum to see your progress - maybe you completed a skeleton!",
				face: 1,
				anim: 2,
				audio: Dino.AUDIO[1]
			}), i.setText({
				callback: this.toDino.bind(this)
			}), i.start("scoog")) : this.toDino()
		}, e.prototype.toDino = function () {
			this.game.state.states.Dino.playerX = 775, this.game.state.states.Dino.playerY = 240, this.game.state.start("Dino")
		}, e
	}();
DinoDig.getNewFossils = function (e) {
	for (var t = [], i = Items.data.fossil, a = e.getBackpackItemsByType("fossil"), s = 0; s < i.length; s++) {
		var r = i[s];
		if (!e.hasItem("fossil", r.ID + 12)) {
			for (var o = r.count, n = 0; n < a.length; n++)
				if (a[n].ID === r.ID) {
					o -= a[n].N || 1;
					break
				} for (var n = 0; o > n; n++) t.push(r.ID)
		}
	}
	return t
};
var DinoDigMenu = function () {
		function e(e, t, i, a, s) {
			Prodigy.Control.Element.call(this, e, t, 440, 150), this.startCallback = i, this.instructionsCallback = a, this.game.prodigy.create.panel(this, 25, 25, 7, 6), this.game.prodigy.create.textButton(this, 50, 50, {
				size: Prodigy.Control.TextButton.MED,
				icon: "key/1",
				text: "Start!"
			}, this.tryStart.bind(this)), this.game.prodigy.create.textButton(this, 50, 130, {
				size: Prodigy.Control.TextButton.MED,
				icon: "star",
				text: "How to Play"
			}, this.instructions.bind(this)), this.game.prodigy.create.textButton(this, 50, 250, {
				size: Prodigy.Control.TextButton.MED,
				icon: "back",
				text: "Cancel"
			}, s)
		}
		return e.prototype = Object.create(Prodigy.Control.Element.prototype), e.prototype.tryStart = function () {
			var e = this.game.prodigy.dialogue.create();
			this.game.prodigy.player.backpack.hasItem("key", 1) ? DinoDig.getNewFossils(this.game.prodigy.player.backpack).length <= 0 ? e.setText({
				text: "The museum is full, so we don't need any fossils, but do you want to dig anyways? \nIt will cost you [gold] 200",
				face: 4,
				yes: this.start.bind(this, 200)
			}) : e.setText({
				text: "Ready to start digging for fossils? \n\nIt will cost you [gold] 300.",
				face: 4,
				yes: this.start.bind(this, 300)
			}) : e.setText({
				text: "You want to start digging? First you'll need a shovel!",
				face: 4
			}), e.start("scoog")
		}, e.prototype.start = function (e) {
			if (!Util.isDefined(e) || this.game.prodigy.player.getGold() >= e) Util.isDefined(e) && this.game.prodigy.player.changeGold(-e), this.startCallback();
			else {
				var t = this.game.prodigy.dialogue.create();
				t.setText({
					text: "Uh oh! You don't have enough gold!",
					face: 4
				}), t.start("scoog")
			}
		}, e.prototype.instructions = function () {
			this.instructionsCallback()
		}, e
	}(),
	DanceDance = function () {
		function e(e) {
			Screen.call(this, e, "The Stage", "game-dancedance", "game-dancedance"), this.showMenu = !1
		}
		return e.prototype = Object.create(Screen.prototype), e.RED_LIGHTS = [{
			x: 192,
			y: 65
		}, {
			x: 403,
			y: 40
		}, {
			x: 613,
			y: 68
		}, {
			x: 791,
			y: 83
		}, {
			x: 908,
			y: 88
		}, {
			x: 408,
			y: 539
		}, {
			x: 887,
			y: 538
		}], e.YELLOW_LIGHTS = [{
			x: 118,
			y: 47
		}, {
			x: 318,
			y: 78
		}, {
			x: 376,
			y: 164
		}, {
			x: 744,
			y: 79
		}, {
			x: 1103,
			y: 139
		}, {
			x: 1129,
			y: 49
		}, {
			x: 1232,
			y: 39
		}, {
			x: 305,
			y: 474
		}, {
			x: 746,
			y: 572
		}], e.BLUE_LIGHTS = [{
			x: 66,
			y: 37
		}, {
			x: 338,
			y: 119
		}, {
			x: 396,
			y: 183
		}, {
			x: 652,
			y: 72
		}, {
			x: 1039,
			y: 97
		}, {
			x: 1071,
			y: 38
		}, {
			x: 548,
			y: 571
		}, {
			x: 984,
			y: 476
		}], e.prototype.create = function () {
			this.game.prodigy.audio.pauseBGM(), this.startedSpeed = !1, this.game.prodigy.player.saveEnabled = !1, Screen.prototype.create.call(this, ["game-dancedance", "bgm-dance1", "bgm-dance2"])
		}, e.prototype.screenSetup = function () {
			Screen.prototype.screenSetup.call(this), this.background.add(this.game.prodigy.create.sprite(0, 0, "game-dancedance", "bg")), this.danceBots = [], this.danceBots.push(new DanceBot(this.game, this.content, 260, 285)), this.danceBots.push(new DanceBot(this.game, this.content, 640, 420)), this.danceBots.push(new DanceBot(this.game, this.content, 1030, 285)), this.danceBots[0].scale.x = this.danceBots[0].scale.y = .5, this.danceBots[2].scale.x = this.danceBots[2].scale.y = .5, this.danceBots[0].setPose(1), this.danceBots[2].setPose(1), this.menu = new DanceMenu(this.game, this.content, this.startGame.bind(this), this.showInstructions.bind(this), this.toTech.bind(this))
		}, e.prototype.showInstructions = function () {
			this.menu.visible = !1;
			var e = function (e) {
					e.visible = !0
				},
				t = this.game.prodigy.dialogue.create();
			t.setText({
				text: "This game is all about showing your moves and leveling up your TEK-Y4!",
				face: 0,
				anim: 4
			}), t.setText({
				text: "When a dance move is shown up top, select the matching dance card below before the timer runs out.",
				face: 1,
				anim: 0
			}), t.setText({
				text: "But look out! The timer speeds up over time! For each correct dance move, you earn gears to level up!",
				face: 2,
				anim: 0
			}), t.setText({
				callback: e.bind(this, this.menu)
			}), t.start("boombox")
		}, e.prototype.createUI = function (e) {
			this.timer = new DanceTimer(this.game, this.content, 590, 30);
			var t = function (e) {
				for (var t = 50, i = 2; e >= i; i++) t += Math.max(0, Math.floor(100 * (i / 9) * 5));
				return e >= 10 && (t = -1), {
					target: t,
					text: "" + e
				}
			};
			this.gearBar = this.game.prodigy.create.fillBar(this.content, 65, 415, 34, 250, 1, t, 15975263, "star2", .7, !0), this.gearBar.setValue(this.game.prodigy.player.backpack.getKeyItemData(2, "gears") || 0);
			var t = function (t) {
				var i = 15975263,
					a = Math.max(0, 5 * t);
				return t >= e && (a = -1), 1 >= t && (i = 15157320), {
					target: a,
					color: i,
					text: 1 >= t ? "uh oh" : "x" + (t - 1)
				}
			};
			this.bonusBar = this.game.prodigy.create.fillBar(this.content, 1181, 415, 34, 250, 1, t, 15314234, "item/47", .7, !0, this.setMultiplier.bind(this)), this.bonusBar.setValue(5), this.score = this.game.prodigy.create.element(this.content, 20, 20), this.score.text = this.game.prodigy.create.font(this.score, 0, 0, "[item/47]0", {
				size: 36,
				font: "button"
			});
			var i = this.game.prodigy.player.backpack.getKeyItemData(2, "score");
			this.high = this.game.prodigy.create.element(this.content, 960, 20), this.high.text = this.game.prodigy.create.font(this.high, 0, 0, (Util.isDefined(i) ? i : 0) + " [item/47]", {
				size: 36,
				font: "button",
				align: "right",
				width: 300
			}), this.game.prodigy.create.font(this.high, 0, 40, "my best ", {
				size: 16,
				width: 220,
				align: "right"
			})
		}, e.prototype.setMultiplier = function (e) {
			e > 1 ? this.game.prodigy.audio.playSFX("yay") : Util.isDefined(this.multiplier) && this.multiplier !== e && this.game.prodigy.audio.playSFX("aw"), this.multiplier = e
		}, e.prototype.startGame = function (e, t) {
			this.menu.visible = !1, this.gearBonus = 0 === t ? 1 : 0, this.speedOffset = 1 === t ? .25 : 0, this.maxMult = 2 === t ? 5 : 4, this.createUI(this.maxMult), this.currentScore = 0, this.lightTimer = window.setInterval(this.processLights.bind(this), 500), this.startTime = (new Date).getTime(), this.finishTime = this.startTime + 7e4, this.speedTime = this.startTime + 4e4, this.timeDelay = 1500, this.setDifficulty(e);
			var i = function (e) {
				e.game.prodigy.audio.playSFX("go"), e.game.prodigy.effects.flashText("DANCE!"), e.nextPose()
			};
			this.game.prodigy.audio.playBGM("bgm-dance1", !0), this.game.prodigy.audio.playSFX("ready"), this.game.prodigy.effects.flashText("READY?", i.bind(this, this))
		}, e.prototype.endGame = function (e) {
			this.timer.visible = !1;
			for (var t = 0; t < this.poses.length; t++) this.poses[t].visible = !1;
			this.game.prodigy.audio.pauseBGM(), e ? this.game.prodigy.audio.playSFX("victory") : this.game.prodigy.audio.playSFX("bell");
			for (var t = 0; t < this.danceBots.length; t++) this.danceBots[t].setPose(e ? -3 : -1);
			this.danceBots[1].setPose(e ? -2 : -1), this.game.prodigy.effects.flashText(e ? "Dance Complete!" : "Dance Failed", this.finalize.bind(this, e))
		}, e.prototype.finalize = function (e) {
			var t = this.game.prodigy.dialogue.create();
			if (e) {
				var i = this.game.prodigy.player.backpack.getKeyItemData(2, "score");
				(!Util.isDefined(i) || i < this.currentScore) && (this.game.prodigy.player.backpack.setKeyItemData(2, "score", this.currentScore), this.high.text.setText(this.currentScore + " [item/47]"), t.setText({
					text: "Looks like we have a new HIGH SCORE!",
					face: 4,
					anim: 4,
					audio: Tech.AUDIO[2]
				})), t.setText({
					text: "Great moves! Let's see how many gears you earned!",
					face: 0
				}), t.setText({
					callback: this.gearBar.addValue.bind(this.gearBar, this.currentScore, null, this.finishFill.bind(this))
				})
			} else this.difficulty > 1 ? t.setText({
				text: "Oh dear...you got too many poses wrong. Perhaps try again on a lower difficulty?",
				face: 3,
				audio: Tech.AUDIO[4]
			}) : t.setText({
				text: "Oh dear...you got too many poses wrong. Try again another time!",
				face: 3,
				audio: Tech.AUDIO[4]
			}), t.setText({
				callback: this.toTech.bind(this)
			});
			t.start("boombox")
		}, e.prototype.finishFill = function () {
			var e = this.game.prodigy.player.backpack.getKeyItemData(2, "lvl"),
				t = this.gearBar.getLevel(),
				i = this.game.prodigy.dialogue.create();
			if (this.game.prodigy.player.backpack.setKeyItemData(2, "gears", this.gearBar.getValue()), t > e) {
				var a = [{
					type: "gold",
					N: 500 * (t - e)
				}];
				this.game.prodigy.player.backpack.setKeyItemData(2, "lvl", t), 5 > t ? i.setText({
					text: "You leveled up your TEK-Y4! Now he can try the level " + t + " challenge and earn even more gears!",
					face: 4,
					anim: 4,
					audio: Tech.AUDIO[2]
				}) : 10 > t ? i.setText({
					text: "You leveled up your TEK-Y4! Get him to level 10, and there will be a fantastic reward!",
					face: 4,
					anim: 4,
					audio: Tech.AUDIO[2]
				}) : (i.setText({
					text: "You leveled up your TEK-Y4 to the maximum level!",
					face: 4,
					anim: 4,
					audio: Tech.AUDIO[3]
				}), a.push({
					type: "hat",
					ID: 47
				}), a.push({
					type: "outfit",
					ID: 42
				})), i.setText({
					text: "I almost forgot...here's your reward!",
					face: 1
				}), i.setText({
					callback: this.game.prodigy.open.gotItem.bind(this.game.prodigy.open, a, this.toTech.bind(this))
				})
			} else 10 > e ? i.setText({
				text: "Good job! Level up your TEK-Y4 to try new difficulties, get more gear and cool rewards!",
				face: 4
			}) : i.setText({
				text: "Your TEK-Y4 is at the highest level! Try again to beat your friends' high scores!",
				face: 4,
				anim: 4,
				audio: Tech.AUDIO[3]
			}), i.setText({
				callback: this.toTech.bind(this)
			});
			i.start("boombox")
		}, e.prototype.setDifficulty = function (e) {
			this.difficulty = e, this.poseElement = this.game.prodigy.create.element(this.content, 0, 600);
			var t = 3 > e ? 3 : 5 > e ? 4 : 5;
			this.poses = [];
			for (var i = 0; t > i; i++) this.poses[i] = new DancePose(this.game, this.poseElement, 130 * i, 0, this.selectAnswer.bind(this, i));
			this.poseElement.x = 640 - this.poseElement.width / 2
		}, e.prototype.nextPose = function () {
			var e = this.timer.start(this.difficulty, this.speedOffset, this.pose.bind(this));
			this.correctPose = e.currentPose, this.correct = Math.floor(Math.random() * this.poses.length);
			for (var t = [e], i = 0; i < this.poses.length; i++) i === this.correct ? this.poses[i].setPose(e) : this.poses[i].randomPose(this.difficulty, t), t.push(this.poses[i]), this.poses[i].flip();
			this.answerID = null, this.deselectAll()
		}, e.prototype.selectAnswer = function (e) {
			this.answerID = e, this.deselectAll()
		}, e.prototype.deselectAll = function () {
			for (var e = 0; e < this.poses.length; e++) this.poses[e].deselect()
		}, e.prototype.pose = function () {
			for (var e = this.answerID === this.correct, t = 0; t < this.poses.length; t++) this.poses[t].flip();
			for (var t = 0; t < this.danceBots.length; t++) 1 === t ? this.danceBots[t].setPose(e ? this.correctPose : -1) : this.danceBots[t].setPose(this.correctPose);
			if (e) this.game.prodigy.audio.playSFX("heart"), this.currentScore += (this.poses.length + this.gearBonus) * (this.bonusBar.getLevel() - 1), this.score.text.setText("[item/47]" + this.currentScore), this.bonusBar.addValue(1);
			else if (this.game.prodigy.audio.playSFX("damage"), this.bonusBar.getValue() > 5) this.bonusBar.setValue(5);
			else {
				var i = this.bonusBar.addValue(-1);
				if (0 >= i) return this.endGame(!1), void 0
			}
			var a = (new Date).getTime();
			return a > this.finishTime ? (this.endGame(!0), void 0) : (a > this.speedTime && (this.startedSpeed || (this.startedSpeed = !0, this.speedOffset -= .25, this.game.prodigy.effects.flashText("Speed Up!"), this.game.prodigy.audio.playBGM("bgm-dance2", !0)), this.timeDelay = Math.max(500, this.timeDelay - 150)), window.setTimeout(this.nextPose.bind(this), this.timeDelay), void 0)
		}, e.prototype.processLights = function () {
			if (!Util.isDefined(this.lights)) {
				this.lights = [];
				for (var t = 0; 3 > t; t++) this.lights.push(this.background.add(this.game.prodigy.create.sprite(0, 0, "icons", "empty"))), this.lights[t].alpha = .25;
				this.lights[0].tint = 14492708, this.lights[1].tint = 15396941, this.lights[2].tint = 5107440
			}
			for (var i = [Util.randomArrayElement(e.RED_LIGHTS), Util.randomArrayElement(e.YELLOW_LIGHTS), Util.randomArrayElement(e.BLUE_LIGHTS)], t = 0; 3 > t; t++) this.lights[t].x = i[t].x - 25, this.lights[t].y = i[t].y - 25
		}, e.prototype.toTech = function () {
			this.game.state.states.Tech.playerX = 969, this.game.state.states.Tech.playerY = 389, this.game.state.start("Tech")
		}, e
	}(),
	DanceMenu = function () {
		function e(e, t, i, a, s) {
			Prodigy.Control.Element.call(this, e, t), this.startCallback = i, this.cancelCallback = s, this.instructionsCallback = a;
			var r = this.add(this.game.prodigy.create.sprite(0, 0, "core", "overlay"));
			r.alpha = .5, r.width = 1280, r.height = 720, this.game.prodigy.player.backpack.hasItem("key", 2) ? this.createMenu() : this.giveItem()
		}
		return e.prototype = Object.create(Prodigy.Control.Element.prototype), e.prototype.giveItem = function () {
			var e = function (e) {
					var t = this.game.prodigy.dialogue.create();
					t.setText({
						text: "It's just a little TEK-Y4, so it hasn't learned how to dance yet. It'll be your job to teach it some moves!",
						face: 1
					}), t.setText({
						callback: e.createMenu.bind(e)
					}), t.start("boombox")
				},
				t = this.game.prodigy.dialogue.create();
			t.setText({
				text: "Welcome to the Dance Stage! Ready to show everyone what your TEK-Y4 robot can do?",
				face: 4,
				anim: 4
			}), t.setText({
				text: "OH! You don't have a TEK-Y4? Well now, only the TEK-Y4 dancing robot can use the stage...",
				face: 2
			}), t.setText({
				text: "Here, you can have this one!",
				face: 1,
				audio: Tech.AUDIO[3]
			}), t.setText({
				callback: this.game.prodigy.open.gotItem.bind(this.game.prodigy.open, [{
					type: "key",
					ID: 2,
					lvl: 1
				}], e.bind(this, this))
			}), t.start("boombox")
		}, e.prototype.createMenu = function () {
			Util.isDefined(this.menu) && this.menu.destroy(), this.menu = this.game.prodigy.create.element(this, 465, 220), this.game.prodigy.create.panel(this.menu, 0, 0, 7, 5), this.game.prodigy.create.textButton(this.menu, 25, 20, {
				size: Prodigy.Control.TextButton.MED,
				icon: "key/2",
				text: "Start!"
			}, this.createDifficulty.bind(this)), this.game.prodigy.create.textButton(this.menu, 25, 100, {
				size: Prodigy.Control.TextButton.MED,
				icon: "star",
				text: "How to Play"
			}, this.instructions.bind(this)), this.game.prodigy.create.textButton(this.menu, 25, 180, {
				size: Prodigy.Control.TextButton.MED,
				icon: "back",
				text: "Cancel"
			}, this.cancelCallback.bind(this))
		}, e.prototype.createDifficulty = function () {
			Util.isDefined(this.menu) && this.menu.destroy(), this.menu = this.game.prodigy.create.element(this, 390, 220);
			var e = this.game.prodigy.player.backpack.getKeyItemData(2, "lvl");
			this.game.prodigy.create.panel(this.menu, 0, 0, 10, 6), this.game.prodigy.create.font(this.menu, 110, 20, "Choose Difficulty", {
				size: 36,
				font: "button"
			}), this.game.prodigy.create.font(this.menu, 110, 60, "Higher levels = more gears!"), this.menu.add(this.game.prodigy.create.sprite(10, 10, "icons", "key/2"));
			for (var t = 0; 5 > t; t++) {
				var i = 30 + 90 * t,
					a = 110;
				e >= t + 1 ? this.game.prodigy.create.stackButton(this.menu, i, a, [{
					tag: "star2"
				}, {
					text: "" + (t + 1),
					y: 20,
					size: 30
				}], this.chooseDifficulty.bind(this, t + 1)) : this.game.prodigy.create.stackButton(this.menu, i, a, [{
					tag: "empty",
					x: 15,
					y: 15
				}, {
					text: "" + (t + 1),
					y: 20,
					size: 30
				}], this.game.prodigy.open.message.bind(this.game.prodigy.open, "Your TEK-Y4 needs to be a higher level! Try a lower difficulty to earn gears and level up!", null, null, "Uh oh!"))
			}
			this.game.prodigy.create.textButton(this.menu, 40, 230, {
				size: Prodigy.Control.TextButton.SMALL,
				icon: "back",
				text: "Back"
			}, this.createMenu.bind(this)), this.game.prodigy.create.textButton(this.menu, 260, 230, {
				size: Prodigy.Control.TextButton.SMALL,
				icon: "yes",
				text: "GO!"
			}, this.tryStart.bind(this)), this.yes = this.menu.add(this.game.prodigy.create.sprite(0, 170, "icons", "yes")), this.yes.width = this.yes.height = 25, this.chooseDifficulty(Math.min(e, 5))
		}, e.prototype.chooseDifficulty = function (e) {
			this.difficulty = e, this.yes.x = 90 * e - 10
		}, e.prototype.tryStart = function () {
			Util.isDefined(this.menu) && this.menu.destroy();
			var e = this.game.prodigy.dialogue.create();
			e.setText({
				text: "Ready to start robo-dancing? \n\nIt will cost you [gold] 200.",
				face: 4,
				yes: this.openBoosts.bind(this, 200),
				no: this.createMenu.bind(this)
			}), e.start("boombox")
		}, e.prototype.openBoosts = function (e) {
			if (!Util.isDefined(e) || this.game.prodigy.player.getGold() >= e) {
				Util.isDefined(e) && this.game.prodigy.player.changeGold(-e);
				var t = [{
					icon: "item/47",
					d: "more gears"
				}, {
					icon: "fossil/1",
					d: "slow time"
				}, {
					icon: "star2",
					d: "multiplier"
				}];
				this.game.prodigy.open.boostSelect(t, this.start.bind(this))
			} else {
				var i = this.game.prodigy.dialogue.create();
				i.setText({
					text: "Uh oh! You don't have enough gold!",
					face: 3,
					anim: 1,
					audio: Tech.AUDIO[4]
				}), i.setText({
					callback: this.createMenu.bind(this)
				}), i.start("boombox")
			}
		}, e.prototype.start = function (e) {
			this.startCallback(this.difficulty, e)
		}, e.prototype.instructions = function () {
			this.instructionsCallback()
		}, e
	}(),
	DanceTimer = function () {
		function e(e, t, i, a) {
			Prodigy.Control.Element.call(this, e, t, i, a), this.pose = new DancePose(this.game, this, 0, 0), this.pose.flip(), this.bar1 = this.add(this.game.prodigy.create.sprite(0, 34, "core", "overlay-light")), this.bar1.anchor.setTo(1, 0), this.bar2 = this.add(this.game.prodigy.create.sprite(100, 34, "core", "overlay-light")), this.bar1.height = this.bar2.height = 30, this.bar1.width = this.bar2.width = 244, this.bar1.alpha = this.bar2.alpha = .7, this.bar1.tint = this.bar2.tint = 8768643
		}
		return e.prototype = Object.create(Prodigy.Control.Element.prototype), e.prototype.start = function (e, t, i) {
			this.pose.randomPose(e, []), this.callback = i;
			var a = 2.5 - .35 * (e - 1);
			a += t, a *= 1e3, this.bar1.width = this.bar2.width = 244;
			var s = this.game.add.tween(this.pose).to({
				y: -10
			}, 250, Phaser.Easing.Quadratic.Out).to({
				y: 0
			}, 250, Phaser.Easing.Quadratic.In);
			return s.onComplete.addOnce(this.beginTimer.bind(this, a), this), s.start(), this.pose
		}, e.prototype.beginTimer = function (e) {
			this.startTime = (new Date).getTime(), this.targetTime = (new Date).getTime() + e
		}, e.prototype.update = function () {
			if (Prodigy.Control.Element.prototype.update.call(this), Util.isDefined(this.bar1) && Util.isDefined(this.bar2) && Util.isDefined(this.targetTime)) {
				var e = (new Date).getTime();
				if (e >= this.targetTime) this.bar1.width = this.bar2.width = 0, this.targetTime = null, this.callback();
				else {
					var t = (this.targetTime - e) / (this.targetTime - this.startTime),
						i = Math.floor(244 * t);
					this.bar1.width = this.bar2.width = i
				}
			}
		}, e
	}(),
	DanceBot = function () {
		function e(e, t, i, a) {
			Prodigy.Control.Element.call(this, e, t, i, a), this.sprite = this.add(this.game.prodigy.create.sprite(-100, -200, "game-dancedance", "pose1-1")), this.sprite.animations.add("-3", ["pose2-1"], 1, !0, !1), this.sprite.animations.add("-2", ["poseSuccess"], 1, !0, !1), this.sprite.animations.add("-1", ["poseFail"], 1, !0, !1), this.sprite.animations.add("0", ["pose0-1", "pose0-2"], 1, !0, !1), this.sprite.animations.add("1", ["pose1-1", "pose1-2"], 1, !0, !1), this.sprite.animations.add("2", ["pose2-1", "pose2-2"], 1, !0, !1), this.sprite.animations.add("3", ["pose3-1", "pose3-2"], 1, !0, !1), this.sprite.animations.add("4", ["pose4-1", "pose4-2"], 1, !0, !1), this.sprite.animations.add("5", ["pose5-1", "pose5-2"], 1, !0, !1), this.sprite.animations.add("6", ["pose6-1", "pose6-2"], 1, !0, !1), this.sprite.animations.add("7", ["pose7-1", "pose7-2"], 1, !0, !1), this.sprite.animations.add("8", ["pose8-1", "pose8-2"], 1, !0, !1), this.sprite.animations.add("9", ["pose9-1", "pose9-2"], 1, !0, !1), this.setPose(-3)
		}
		return e.prototype = Object.create(Prodigy.Control.Element.prototype), e.prototype.setPose = function (e) {
			this.sprite.animations.play(e + "", 2.15, !0), -1 === e && this.game.add.tween(this.sprite).to({
				x: -105
			}, 100, Phaser.Easing.Linear.None).to({
				x: -95
			}, 100, Phaser.Easing.Linear.None).to({
				x: -105
			}, 100, Phaser.Easing.Linear.None).to({
				x: -95
			}, 100, Phaser.Easing.Linear.None).to({
				x: -105
			}, 100, Phaser.Easing.Linear.None).to({
				x: -95
			}, 100, Phaser.Easing.Linear.None).to({
				x: -100
			}, 100, Phaser.Easing.Linear.None).start(), -2 === e && this.game.add.tween(this.sprite).to({
				y: -230
			}, 250, Phaser.Easing.Linear.None, !0, 0, 1, !0)
		}, e
	}(),
	DancePose = function () {
		function e(e, t, i, a, s) {
			Prodigy.Control.Element.call(this, e, t, i, a), this.onSelect = s, this.flipped = !1, this.frame = this.add(this.game.prodigy.create.sprite(0, 0, "game-dancedance", "pose-card")), this.frame.events.onInputDown.add(this.select.bind(this)), this.sprite = this.add(this.game.prodigy.create.sprite(10, 10, "game-dancedance", "card0")), this.sprite.width = 0, this.sprite.x = 50, this.sprite.alpha = .9, this.currentPose = 1, this.currentTint = 14080234
		}
		return e.prototype = Object.create(Prodigy.Control.Element.prototype), e.TINTS = [14254209, 9946096, 8444311, 16755318, 15788439, 13080560], e.prototype.randomPose = function (t, i) {
			var a = 3 > t ? 4 : 3 === t ? 6 : 4 === t ? 8 : 10;
			this.currentTint = 14080234;
			for (var s = 0; 100 > s; s++) {
				this.currentPose = Math.floor(Math.random() * a), this.currentTint = e.TINTS[Math.floor(Math.random() * e.TINTS.length)];
				for (var r = !1, o = 0; o < i.length; o++)
					if (this.equals(i[o], t)) {
						r = !0;
						break
					} if (!r) break
			}
			this.sprite.frameName = "card" + this.currentPose, this.frame.tint = this.currentTint
		}, e.prototype.setPose = function (e) {
			this.currentPose = e.currentPose, this.currentTint = e.currentTint
		}, e.prototype.flip = function () {
			this.sprite.frameName = "card" + this.currentPose, this.frame.inputEnabled = !1, "pose-frame" === this.frame.frameName ? this.game.add.tween(this.sprite).to({
				width: 0,
				x: 50
			}, 250, Phaser.Easing.Linear.None).start() : this.frame.tint = 16777215;
			var e = this.game.add.tween(this.frame).to({
				width: 0,
				x: 50
			}, 250, Phaser.Easing.Linear.None);
			e.onComplete.addOnce(this.flipStep.bind(this), this), e.start()
		}, e.prototype.flipStep = function () {
			"pose-card" === this.frame.frameName ? (this.frame.frameName = "pose-frame", this.frame.tint = this.currentTint, this.game.add.tween(this.sprite).to({
				width: 80,
				x: 10
			}, 250, Phaser.Easing.Linear.None).start()) : (this.frame.frameName = "pose-card", this.frame.tint = 16777215);
			var e = this.game.add.tween(this.frame).to({
				width: 100,
				x: 0
			}, 250, Phaser.Easing.Linear.None);
			e.onComplete.addOnce(this.flipComplete.bind(this), this), e.start()
		}, e.prototype.flipComplete = function () {
			this.frame.inputEnabled = "pose-frame" === this.frame.frameName
		}, e.prototype.equals = function (e) {
			return Util.isDefined(e) && (e.currentPose == this.currentPose || e.currentTint == this.currentTint && 14080234 !== e.currentTint)
		}, e.prototype.select = function () {
			Util.isDefined(this.onSelect) && (this.game.prodigy.audio.playSFX("pop"), this.onSelect(), this.frame.y = -15, this.sprite.y = -5)
		}, e.prototype.deselect = function () {
			this.frame.y = 0, this.sprite.y = 10
		}, e
	}();
Prodigy.Controller.BattleController = function (e) {
	this.game = e, this.MOD_DEFAULTS = {
		run: !0,
		difficulty: 3,
		dropsDisabled: !1,
		starMod: 1,
		"catch": !0,
		switchDisabled: !1,
		drops: [],
		encounter: null,
		opponent: null,
		boss: null,
		pets: null,
		dmgMod: 0,
		events: [],
		intro: null,
		allowMember: !0,
		level: null,
		unique: !1
	}
}, Prodigy.Controller.BattleController.prototype = {
	constructor: Prodigy.Controller.BattleController,
	start: function (e, t, i, a, s) {
		var r = this.game.state.states.Battle;
		Util.isDefined(e) || (e = {});
		for (var o in this.MOD_DEFAULTS) {
			var n = this.MOD_DEFAULTS[o];
			Util.isDefined(e[o]) || (e[o] = n)
		}
		var l = this.getTeam(this.game.prodigy.player),
			h = this.getBattleLevel(l);
		r.teamB = this.initBattle(e, h), r.teamA = l, r.drops = e.drops, r.mods = e, r.runAwayCallback = t, r.victoryCallback = i, r.defeatCallback = a, r.defeatZone = s || "Academy", r.screenName = e.screen, this.game.state.start("Battle")
	},
	end: function () {},
	getBattleLevel: function (e) {
		var t = 1;
		if (Util.isDefined(e))
			for (var i = 0; i < e.length; i++) e[i].getLevel() > t && (t = e[i].getLevel());
		return t
	},
	getTeam: function (e) {
		for (var t = e.kennel.getTeam(), i = 0; i < t.length; i++) Util.isDefined(t[i]) || (t.splice(i, 1), i--);
		return t
	},
	getEventsOfType: function (e, t) {
		var i = [];
		if (Util.isDefined(e) && Util.isDefined(e.events))
			for (var a = 0; a < e.events.length; a++) Util.inArray(t, e.events[a].action) && i.push(e.events[a]);
		return i
	},
	initBattle: function (e, t) {
		var i = [];
		if (Util.isDefined(e.boss) && i.push(new Boss(e.boss)), Util.isDefined(e.encounter)) {
			var a = new Monster(this.chooseOpponent(e.encounter)),
				s = Math.max(1, t - Math.floor(6 * Math.random()));
			Util.isDefined(e.level) && (s = e.level), Util.isDefined(e.maxLevel) && (s < e.minLevel && (s = e.minLevel), s > e.maxLevel && (s = e.maxLevel)), a.generate(e.level || s, 0), i.push(a)
		}
		if (Util.isDefined(e.pets))
			for (var r = 0; r < e.pets.length; r++) {
				var o = e.pets[r];
				Util.isDefined(o.level) || (o.level = t), i.push(new Monster(o))
			}
		if (Util.isDefined(e.opponent))
			for (var r = 0; r < e.opponent.length; r++) i.push(this.initPlayerOpponent(e.opponent[r]));
		return i
	},
	initPlayerOpponent: function (e) {
		var t = new Player;
		return t.init(e), t
	},
	chooseOpponent: function (e) {
		for (var t = 0, i = 0; i < e.length; i++) t += Util.isDefined(e[i].R) ? e[i].R : Monsters.getEncounterRate(e[i].ID);
		var a = Math.random() * t;
		t = 0;
		for (var i = 0; i < e.length; i++)
			if (t += Util.isDefined(e[i].R) ? e[i].R : Monsters.getEncounterRate(e[i].ID), t > a) return Util.copyObject(e[i]);
		return {
			ID: 1
		}
	},
	chooseRandomMonster: function (e) {
		for (var t = 0, i = 0; i < e.length; i++) t += 1 / Math.max(1, Util.isDefined(e[i].R) ? e[i].R : Monsters.getEncounterRate(e[i].ID));
		var a = Math.random() * t;
		t = 0;
		for (var i = 0; i < e.length; i++)
			if (t += 1 / Math.max(1, Util.isDefined(e[i].R) ? e[i].R : Monsters.getEncounterRate(e[i].ID)), t > a) return Util.copyObject(e[i]);
		return {
			ID: 1
		}
	},
	chooseAction: function (e, t, i, a, s, r, o, n) {
		e /= 10;
		var l = t.source.getAttacks();
		if (l.length <= 0) return n(), void 0;
		if (Math.random() < .8 * e) {
			for (var h = null, d = this.battleScore(t, i, !0, e), p = 0; p < a.length; p++)
				if (a[p] !== t && a[p].source.getCurrentHearts() > 0) {
					var c = this.battleScore(a[p], i, !1);
					c > d && (h = p, d = c)
				} if (Util.isDefined(h)) return o(n, h), void 0
		}
		var u = this.game.prodigy.attacks.getBestAttack(l, i.source, 1 - e);
		if (!Util.isDefined(u)) return n(), void 0;
		if (t.source.getCurrentHearts() / t.source.getMaxHearts() < .25 && Math.random() < e) {
			var g = this.game.prodigy.attacks.getHealingAttack(l);
			Util.isDefined(g) && (u = g)
		}
		var m = (.25 - .25 * e) * this.game.prodigy.affixes.getDodge();
		r(t, i, n, u, Math.random() < m)
	},
	battleScore: function (e, t, i, a) {
		var s = this.game.prodigy.attacks.getBestAttack(e.source.getAttacks(), t.source, 1 - a),
			r = this.game.prodigy.attacks.getBestAttack(t.source.getAttacks(), e.source, 1 - a),
			o = this.game.prodigy.attacks.calculateDamage(s, null, t.source, 0);
		if (0 === o) return Number.NEGATIVE_INFINITY;
		var n = this.game.prodigy.attacks.calculateDamage(r, null, e.source, 0);
		if (0 === n) return Number.POSITIVE_INFINITY;
		var l = e.source.getMaxHearts();
		i || (l = Math.max(l - n, 0));
		var h = l / n,
			d = t.source.getMaxHearts() / o;
		return h - d
	},
	getAssets: function (e, t, i) {
		for (var a = [e, "battle", "attacks", "bgm-battle", "bgm-victory"], s = 0; s < t.length; s++) t[s] instanceof Player ? a = a.concat(Prodigy.Container.PlayerContainer.getAssets(t[s], 2)) : t[s] instanceof Monster ? a = a.concat(Prodigy.Container.MonsterContainer.getAssets(t[s])) : t[s] instanceof Boss && (a = a.concat(Prodigy.Container.BossContainer.getAssets(t[s])));
		for (var s = 0; s < i.length; s++) i[s] instanceof Player ? a = a.concat(Prodigy.Container.PlayerContainer.getAssets(i[s], 2)) : i[s] instanceof Monster ? a = a.concat(Prodigy.Container.MonsterContainer.getAssets(i[s])) : i[s] instanceof Boss && (a = a.concat(Prodigy.Container.BossContainer.getAssets(i[s])));
		return a
	}
}, Prodigy.Controller.PVPController = function (e) {
	Prodigy.Controller.BattleController.call(this, e)
}, Prodigy.extends(Prodigy.Controller.PVPController, Prodigy.Controller.BattleController, {
	constructor: Prodigy.Controller.PVPController,
	start: function (e, t, i, a, s) {
		console.log(i);
		var r = this.game.state.states.PVP;
		r.playerA = t, r.playerB = i;
		var o = {
			screen: "bg-battle-arena"
		};
		for (var n in this.MOD_DEFAULTS) {
			var l = this.MOD_DEFAULTS[n];
			Util.isDefined(o[n]) || (o[n] = l)
		}
		o.arena = s, o.catch = !1, o.run = !1, r.zoneName = "zone-battle-" + e, r.zoneName += t.userID != e ? "-" + t.userID : "-" + i.userID, console.log(r.zoneName), r.challengerID = e, r.mods = o, r.callback = a, r.screenName = o.screen, this.game.state.start("PVP")
	},
	end: function () {}
}), Prodigy.EventController = function (e, t) {
	this.game = e, this.ID = t, this.end()
}, Prodigy.EventController.prototype = {
	start: function () {
		this.text(), this.next()
	},
	end: function (e) {
		Util.isDefined(e) && e(), this._npc = null, this._dialogue = [], this._events = []
	},
	next: function () {
		if (this._events.length > 0) {
			var e = this._events[0];
			this._events.splice(0, 1), e()
		} else this.end()
	},
	add: function (e) {
		this.text(), this._events.push(e)
	},
	text: function (e, t, i) {
		var a = this.game.prodigy.dialogue.create();
		if (this._dialogue.length > 0 && (t !== this._npc || !Util.isDefined(e))) {
			var s = function (e, t) {
				for (var s = 0; s < t.length; s++) a.setText(t[s]);
				a.setText({
					callback: this.next.bind(this)
				}), a.start(e, i)
			};
			this._events.push(s.bind(this, this._npc, this._dialogue)), this._dialogue = []
		} else Util.isDefined(e) && this._dialogue.push(e);
		this._npc = t
	},
	yesNoText: function (e, t, i) {
		var a = {};
		isNaN(e) || (a.index = e), a.yes = this.next.bind(this), a.no = this.end.bind(this, i), this.text(a, t)
	},
	"function": function (e) {
		var t = function (t) {
			e(), t()
		};
		this.add(t.bind(this, this.next.bind(this)))
	},
	enableInput: function (e) {
		var t = function () {
			this.game.input.enabled = e, this.next()
		};
		this.add(t.bind(this))
	},
	enableSave: function (e) {
		var t = function () {
			this.game.prodigy.player.saveEnabled = e, this.next()
		};
		this.add(t.bind(this))
	},
	set: function (e, t, i) {
		var a = function () {
			e[t] = i, this.next()
		};
		this.add(a.bind(this))
	},
	path: function (e, t, i, a) {
		var s = function () {
			a ? (e.setPath(t, null, i), this.next()) : e.setPath(t, this.next.bind(this), i)
		};
		this.add(s.bind(this))
	},
	validPath: function (e, t, i, a, s) {
		var r = function () {
			s ? (e.setValidPath(t, i, a, null), this.next()) : e.setValidPath(t, i, a, this.next.bind(this))
		};
		this.add(r.bind(this))
	},
	hop: function (e, t, i, a, s) {
		var r = function () {
			s ? (e.hop(t, null, i, a), this.next()) : e.hop(t, this.next.bind(this), i, a)
		};
		this.add(r.bind(this))
	},
	delay: function (e) {
		this.add(this.game.time.events.add.bind(this.game.time.events, e, this.next, this))
	},
	explode: function (e, t, i, a, s, r) {
		var o = function () {
			r ? (this.game.prodigy.effects.explode(e, t, i, a, s), this.next()) : this.game.prodigy.effects.explode(e, t, i, a, s, this.next.bind(this))
		};
		this.add(o.bind(this))
	},
	shake: function (e, t, i, a, s) {
		var r = function () {
			s ? (this.game.prodigy.effects.shake(e, t, i, a), this.next()) : this.game.prodigy.effects.shake(e, t, i, a, this.next.bind(this))
		};
		this.add(r.bind(this))
	},
	firework: function (e, t) {
		var i = function () {
			this.game.prodigy.effects.firework(e, t, this.next.bind(this))
		};
		this.add(i.bind(this))
	},
	confetti: function (e, t) {
		var i = function () {
			this.game.prodigy.effects.confetti(e, t, this.next.bind(this))
		};
		this.add(i.bind(this))
	},
	goldwork: function (e, t) {
		var i = function () {
			this.game.prodigy.effects.goldwork(e, t, this.next.bind(this))
		};
		this.add(i.bind(this))
	},
	sound: function (e, t) {
		if (t) this.add(this.game.prodigy.audio.playSFX(e, this.next.bind(this)));
		else {
			var i = function () {
				this.game.prodigy.audio.playSFX(e), this.next()
			};
			this.add(i.bind(this))
		}
	},
	tween: function (e, t, i, a) {
		var s = function () {
			var s = this.game.add.tween(e).to(t, i, a);
			s.onComplete.add(this.next.bind(this)), s.start()
		};
		this.add(s.bind(this))
	},
	reward: function (e) {
		this.add(this.game.prodigy.open.gotItem.bind(this.game.prodigy.open, e, this.next.bind(this)))
	},
	popup: function (e) {
		this.add(this.game.prodigy.open.message.bind(this.game.prodigy.open, e, this.next.bind(this)))
	},
	functionCallback: function (e) {
		var t = function () {
			e(this.next.bind(this))
		};
		this.add(t.bind(this))
	}
}, Prodigy.EventController.prototype.constructor = Prodigy.EventController, Prodigy.Controller.AudioController = function (e) {
	this.game = e, this.bgmVolume = .1, this.sfxVolume = .9, this.voiceVolume = 1
}, Prodigy.Controller.AudioController.SOUNDS = {
	blop: {
		tag: "sfx-main",
		s: 0,
		d: 1
	},
	damage: {
		tag: "sfx-main",
		s: 1,
		d: 1
	},
	heart: {
		tag: "sfx-main",
		s: 2,
		d: 1
	},
	pop: {
		tag: "sfx-main",
		s: 3,
		d: 1
	},
	run: {
		tag: "sfx-main",
		s: 4,
		d: 1
	},
	tick: {
		tag: "sfx-main",
		s: 5,
		d: 1
	},
	whoosh: {
		tag: "sfx-main",
		s: 6,
		d: 1
	},
	dig: {
		tag: "sfx-main",
		s: 7,
		d: 1
	},
	bell: {
		tag: "sfx-main",
		s: 8,
		d: 1
	},
	ready: {
		tag: "sfx-main",
		s: 9,
		d: 1
	},
	go: {
		tag: "sfx-main",
		s: 10,
		d: 1
	},
	victory: {
		tag: "sfx-main",
		s: 11,
		d: 2
	},
	aw: {
		tag: "sfx-main",
		s: 13,
		d: 1
	},
	yay: {
		tag: "sfx-main",
		s: 14,
		d: 1
	},
	item: {
		tag: "sfx-main",
		s: 15,
		d: 3
	},
	monster: {
		tag: "sfx-main",
		s: 18,
		d: 3
	}
}, Prodigy.Controller.AudioController.prototype = {
	clearOldSounds: function () {
		for (var e = this.game.sound._sounds.length; e--;) this.game.sound._sounds[e].isPlaying || this.game.sound._sounds.splice(e, 1)
	},
	setMute: function (e) {
		e ? (this.setSFXVolume(0), this.setBGMVolume(0)) : (this.setSFXVolume(.6), this.setBGMVolume(.2))
	},
	playSFX: function (e, t) {
		this.clearOldSounds();
		var i = Prodigy.Controller.AudioController.SOUNDS[e];
		if (!Util.isDefined(i)) return null;
		var a = this.getSFXVolume(),
			s = this.game.add.sound(i.tag, a);
		return Util.isDefined(t) && s.onMarkerComplete.add(t), s.addMarker("play", i.s, i.d), s.play("play", 0, a), s
	},
	setSFXVolume: function (e) {
		this.sfxVolume = e
	},
	getSFXVolume: function () {
		return this.sfxVolume
	},
	playBGM: function (e, t) {
		if (!Util.isDefined(this.currentBgm) || this.currentBgm.key !== e) {
			var i = this.getBGMVolume();
			Util.isDefined(this.currentBgm) && this.currentBgm.stop(), this.clearOldSounds(), this.currentBgm = this.game.add.audio(e, i, t), this.currentBgm.play("", 0, i, t)
		}
	},
	pauseBGM: function () {
		Util.isDefined(this.currentBgm) && this.currentBgm.pause()
	},
	resumeBGM: function () {
		Util.isDefined(this.currentBgm) && this.currentBgm.resume()
	},
	setBGMVolume: function (e) {
		Util.isDefined(this.currentBgm) && (this.currentBgm.volume = e), this.bgmVolume = e
	},
	getBGMVolume: function () {
		return this.bgmVolume
	},
	playVoice: function (e, t, i, a) {
		this.clearOldSounds(), Util.isDefined(this.currentVoice) && this.currentVoice.stop();
		var s = this.getVoiceVolume(),
			r = this.game.add.sound(e, s);
		return Util.isDefined(t) && r.onMarkerComplete.add(t), a = a || r.duration, i = i || 0, r.addMarker("play", i, a), r.play("play", 0, s), this.currentVoice = r, r
	},
	setVoiceVolume: function (e) {
		this.voiceVolume = e
	},
	getVoiceVolume: function () {
		return this.voiceVolume
	}
}, Prodigy.Controller.GraphicsController = function (e) {
	this.game = e
}, Prodigy.Controller.GraphicsController.prototype = {
	constructor: Prodigy.Controller.GraphicsController,
	setResolutionSmall: function () {
		this.game.scale.maxWidth = 640, this.game.scale.maxHeight = 360, this.game.scale.updateLayout()
	},
	setResolutionMedium: function () {
		this.game.scale.maxWidth = 1280, this.game.scale.maxHeight = 720, this.game.scale.updateLayout()
	},
	setResolutionLarge: function () {
		this.game.scale.maxWidth = 0, this.game.scale.maxHeight = 0, this.game.scale.scaleMode = Phaser.ScaleManager.EXACT_FIT, this.game.scale.refresh()
	}
}, Prodigy.MailController = function (e) {
	this.game = e, this._mail = [], this._callbacks = []
}, Prodigy.MailController.prototype = {
	constructor: Prodigy.MailController,
	test: function () {
		var e = new Player,
			t = {
				equipment: e.equipment.data,
				appearance: e.appearance.data,
				data: e.data,
				pets: e.kennel.data,
				isMember: e.isMember
			};
		this.add({
			action: "challenge",
			target: 1234,
			data: {
				userID: 123,
				player: t
			}
		})
	},
	cleanup: function () {
		this._callbacks = []
	},
	getMailCount: function () {
		return this._mail.length
	},
	getMail: function (e, t) {
		return this._mail.slice(e, e + t)
	},
	add: function (e) {
		console.log("mail recieved "), console.log(e), this._mail = [e].concat(this._mail), Util.isDefined(e.time) && window.setTimeout(this.remove.bind(this, e), e.time), this.invokeCallbacks(e)
	},
	remove: function (e) {
		for (var t = 0; t < this._mail.length; t++)
			if (this._mail[t] === e) {
				this._mail.splice(t, 1);
				break
			} this.invokeCallbacks()
	},
	addUpdateCallback: function (e) {
		this._callbacks.push(e)
	},
	invokeCallbacks: function (e) {
		for (var t = 0; t < this._callbacks.length; t++) Util.isDefined(this._callbacks[t]) && this._callbacks[t](this.getMailCount(), e)
	}
}, Prodigy.MailController.prototype.constructor = Prodigy.MailController, Prodigy.DialogueController = function (e) {
	this.game = e, this.events = [], this.currentID = 0
}, Prodigy.DialogueController.prototype = {
	create: function (e, t, i, a) {
		Util.isDefined(this.game) && a && (this.spinner.destroy(), e.alpha = 1, this.face = this.game.prodigy.create.sprite(180, 188, t, "face_0"), this.face.anchor.setTo(.5, 1), e.add(this.face), this.text = this.game.prodigy.create.font(e, 300, 20, "", {
			size: 30,
			width: 680,
			lineHeight: 40
		}), this.yesBtn = this.game.prodigy.create.button(e, 1e3, 20, "core", "yes-btn", this.yes.bind(this)), this.nextBtn = this.game.prodigy.create.button(e, 1e3, 115, "core", "next-btn", this.next.bind(this, this.currentID)), this.noBtn = this.game.prodigy.create.button(e, 1e3, 115, "core", "no-btn", this.no.bind(this)), this.nextBtn.highlight(!0, -20, -10), this.next(this.currentID))
	},
	start: function (e, t, i) {
		this.currentID++, this.onClose = i, this.cleanup();
		for (var a = 0; a < this.events.length; a++) {
			var s = this.events[a];
			if (Util.isDefined(s.index)) {
				var r = this.game.prodigy.dialogues.get(e, s.index);
				s.text = r.text, s.face = r.face, s.audio = r.audio, s.anim = r.anim
			}
		}
		if (this.window = this.game.prodigy.create.element(this.menuLayer, 0, 0), this.overlayMode = t, !t) {
			var o = this.window.add(this.game.prodigy.create.sprite(0, 0));
			o.width = this.game.world.width, o.height = this.game.world.height, o.inputEnabled = !0
		}
		this.element = this.game.prodigy.create.element(this.window, 0, 0);
		var n = this.game.prodigy.create.element(this.window, 103, 510);
		n.x = 0;
		for (var a = 0; 26 > a; a++) n.add(this.game.prodigy.create.sprite(50 * a, 0, "core", "dialogue"));
		n.alpha = .8, this.spinner = this.window.add(this.game.prodigy.create.sprite(645, 610, "core", "loading")), this.spinner.alpha = 0, this.spinner.anchor.setTo(.5, .5), this.game.add.tween(this.spinner).to({
			angle: 360
		}, 1500, Phaser.Easing.Linear.None, !0, 0, Number.MAX_VALUE, !1), this.game.add.tween(this.spinner).to({
			alpha: 1
		}, 500, Phaser.Easing.Linear.None, !0, 300);
		for (var l = [], a = 0; a < this.events.length; a++) Util.isDefined(this.events[a].audio) && (Util.inArray(l, this.events[a].audio.tag) || l.push(this.events[a].audio.tag));
		e = "npc-face-" + e, this.game.prodigy.load.assets(l.concat(e), this.create.bind(this, n, e))
	},
	close: function (e) {
		this.cleanup(), Util.isDefined(this.currentSound) && this.currentSound.stop(), this.events = [], this.current = null, Util.isDefined(this.element) && this.element.removeAll(!0), Util.isDefined(this.onClose) && !e && this.onClose()
	},
	cleanup: function () {
		Util.isDefined(this.window) && (this.window.destroy(), this.window = null)
	},
	setText: function (e) {
		if (Util.isDefined(e)) {
			var t = {};
			isNaN(e) ? (Util.isDefined(e.index) && (t.index = e.index), Util.isDefined(e.text) && (t.text = e.text), Util.isDefined(e.face) && (t.face = e.face), Util.isDefined(e.audio) && (t.audio = e.audio), Util.isDefined(e.yes) && (t.yes = e.yes), Util.isDefined(e.no) && (t.no = e.no), Util.isDefined(e.callback) && (t.callback = e.callback), Util.isDefined(e.anim) && (t.anim = e.anim), Util.isDefined(e.element) && (t.element = e.element), Util.isDefined(e.hideNext) && (t.hideNext = e.hideNext)) : t.index = e, this.events.push(t)
		}
	},
	next: function (e) {
		if (e === this.currentID)
			if (Util.isDefined(this.currentSound) && this.currentSound.stop(), this.events.length > 0) {
				var t = !1;
				this.current = this.events[0], this.events.splice(0, 1), this.yesBtn.visible = this.noBtn.visible = !1, this.nextBtn.visible = !this.current.hideNext && !this.overlayMode, Util.isDefined(this.current.text) && this.text.setText(this.current.text), Util.isDefined(this.current.face) ? (this.face.visible = !0, this.face.frameName = "face_" + this.current.face) : this.face.visible = !1, Util.isDefined(this.current.audio) && (this.currentSound = this.game.prodigy.audio.playVoice(this.current.audio.tag, null, this.current.audio.s, this.current.audio.d)), this.setAnimation(this.current.anim), (Util.isDefined(this.current.yes) || Util.isDefined(this.current.no)) && (this.noBtn.visible = this.yesBtn.visible = !this.overlayMode, this.nextBtn.visible = !1), Util.isDefined(this.current.callback) && (this.current.callback(), t = !0), Util.isDefined(this.current.element) && (this.element.removeAll(!0), this.current.element(this.element), t = !0), t && this.next(e)
			} else this.close()
	},
	setAnimation: function (e) {
		Util.isDefined(this.faceAnim) && this.game.tweens.remove(this.faceAnim), this.face.x = 185, this.face.y = 188, this.face.scale.x = this.face.scale.y = 1, Util.isDefined(e) && (1 === e ? this.faceAnim = this.game.add.tween(this.face).to({
			x: this.face.x + 10
		}, 100, Phaser.Easing.Quadratic.Out, !1).to({
			x: this.face.x - 10
		}, 200, Phaser.Easing.Quadratic.InOut).to({
			x: this.face.x + 10
		}, 200, Phaser.Easing.Quadratic.InOut).to({
			x: this.face.x - 10
		}, 200, Phaser.Easing.Quadratic.InOut).to({
			x: this.face.x
		}, 100, Phaser.Easing.Quadratic.InOut).start() : 2 === e ? this.faceAnim = this.game.add.tween(this.face).to({
			y: this.face.y - 20
		}, 500, Phaser.Easing.Quadratic.Out, !0, 0, 9999, !0) : 3 === e ? this.faceAnim = this.game.add.tween(this.face.scale).to({
			x: -1
		}, 50, Phaser.Easing.Quadratic.InOut, !1).to({
			x: 1
		}, 50, Phaser.Easing.Quadratic.InOut, !1, 300).to({
			x: -1
		}, 50, Phaser.Easing.Quadratic.InOut, !1, 300).to({
			x: 1
		}, 50, Phaser.Easing.Quadratic.InOut, !1, 300).start() : 4 === e && (this.faceAnim = this.game.add.tween(this.face.scale).to({
			x: 1.2,
			y: 1.1
		}, 300, Phaser.Easing.Linear.None, !1).to({
			y: 1.3,
			x: 1.1
		}, 200, Phaser.Easing.Quadratic.InOut).to({
			x: 1,
			y: 1
		}, 300, Phaser.Easing.Quadratic.InOut).start()))
	},
	yes: function () {
		var e = this.current.yes;
		this.close(), Util.isDefined(e) && e()
	},
	no: function () {
		var e = this.current.no;
		this.close(), Util.isDefined(e) && e()
	}
}, Prodigy.DialogueController.prototype.constructor = Prodigy.DialogueController, Prodigy.MenuFactory = function (e) {
	this.game = e, this.renderMenus = [], this._menus = []
}, Prodigy.MenuFactory.prototype = {
	cleanup: function () {
		this.renderMenus = [], this._menus = []
	},
	setActiveRenderMenu: function (e) {
		if (Util.isDefined(e)) {
			for (var t = 0; t < this.renderMenus.length; t++) this.renderMenus[t].setActive(!1);
			this.renderMenus.push(e)
		} else this.renderMenus.splice(this.renderMenus.length - 1, 1), this.renderMenus.length > 0 && this.renderMenus[this.renderMenus.length - 1].setActive(!0)
	},
	menuOpen: function (e) {
		this.menuLayer.callAll("hide", e)
	},
	close: function (e) {
		for (var t = this._menus.length - 1; t >= 0; t--) this._menus[t] === e && this._menus.splice(t, 1)
	},
	menuCloseAll: function () {
		for (var e = this._menus.length - 1; e >= 0; e--) Util.isDefined(this._menus[e].close) ? this._menus[e].close() : this._menus[e].destroy();
		this._menus = []
	},
	popupStore: function (e, t, i) {
		this._menus.push(new Prodigy.Menu.PopupStore(this.game, this.menuLayer, e, i))
	},
	rankStore: function (e, t) {
		this._menus.push(new Prodigy.Menu.RankStore(this.game, this.menuLayer, e, t))
	},
	mailbox: function () {
		this._menus.push(new Prodigy.Menu.Mailbox(this.game, this.menuLayer))
	},
	rating: function () {
		this._menus.push(new Prodigy.Menu.Rating(this.game, this.menuLayer))
	},
	chooseSpell: function (e, t) {
		this._menus.push(new Prodigy.Menu.ChooseSpell(this.game, this.menuLayer, e, t))
	},
	choosePet: function (e, t) {
		this._menus.push(new Prodigy.Menu.ChoosePet(this.game, this.menuLayer, e, t))
	},
	createAccount: function (e, t, i, a) {
		this._menus.push(new Prodigy.Menu.AccountCreate(this.game, this.menuLayer, e, t, i, a))
	},
	charSelect: function (e, t) {
		this._menus.push(new Prodigy.Menu.CharSelect(this.game, this.menuLayer, e, t))
	},
	server: function (e, t) {
		this._menus.push(new Prodigy.Menu.Server(this.game, this.menuLayer, e, t))
	},
	dormEditor: function (e) {
		this._menus.push(new Prodigy.Menu.DormEditor(this.game, this.menuLayer, e))
	},
	leaderPrompt: function () {
		this._menus.push(new Prodigy.Menu.LeaderPrompt(this.game, this.menuLayer))
	},
	pets: function (e, t) {
		this._menus.push(new Prodigy.Menu.Pets(this.game, this.menuLayer, e, t))
	},
	"catch": function (e, t) {
		this._menus.push(new Prodigy.Menu.Catcher(this.game, this.menuLayer, e, t))
	},
	battle: function (e, t, i, a, s, r, o, n, l) {
		this._menus.push(new Prodigy.Menu.AttackSelect(this.game, this.menuLayer, e, t, i, a, s, r, o, n, l))
	},
	memberPrompt: function () {
		this._menus.push(new Prodigy.Menu.MemberPrompt(this.game, this.menuLayer))
	},
	itemInfo: function (e, t, i) {
		this._menus.push(new Prodigy.Menu.ItemInfo(this.game, this.menuLayer, e, t, i))
	},
	bountyBoard: function (e) {
		this._menus.push(new Prodigy.Menu.BountyBoard(this.game, this.menulayer, e))
	},
	social: function (e) {
		this._menus.push(new Prodigy.Menu.Social(this.game, this.menuLayer, e))
	},
	boostSelect: function (e, t) {
		this._menus.push(new Prodigy.Menu.BoostSelect(this.game, this.menuLayer, e, t))
	},
	card: function (e, t) {
		this._menus.push(new Prodigy.Menu.Card(this.game, this.menuLayer, e, t))
	},
	arena: function () {
		this._menus.push(new Prodigy.Menu.Coliseum(this.game, this.menuLayer, this.game.prodigy.player))
	},
	stylist: function () {
		this._menus.push(new Prodigy.Menu.Stylist(this.game, this.menuLayer, this.game.prodigy.player))
	},
	membership: function (e, t) {
		this._menus.push(new Prodigy.Menu.MemberAd(this.game, this.menuLayer, e, t))
	},
	nicknamer: function (e, t) {
		this._menus.push(new Prodigy.Menu.Nicknamer(this.game, this.menuLayer, e, t))
	},
	gotItem: function (e, t) {
		this._menus.push(new Prodigy.Menu.GotItem(this.game, this.menuLayer, e, t))
	},
	message: function (e, t, i, a) {
		var s = new Prodigy.Menu.Message(this.game, this.menuLayer);
		return this._menus.push(s), s.setText(e, i, a), s.setOkay(t), s
	},
	confirm: function (e, t, i, a, s) {
		var r = new Prodigy.Menu.Message(this.game, this.menuLayer);
		return this._menus.push(r), r.setText(e, a, s), r.setConfirm(t, i), r
	},
	character: function () {
		this._menus.push(new Prodigy.Menu.Character(this.game, this.menuLayer, this.game.prodigy.player))
	},
	inventory: function () {
		this._menus.push(new Prodigy.Menu.Inventory(this.game, this.menuLayer, this.game.prodigy.player))
	},
	backpack: function () {
		this._menus.push(new Prodigy.Menu.Backpack(this.game, this.menuLayer, this.game.prodigy.player))
	},
	pouch: function (e, t, i) {
		this._menus.push(new Prodigy.Menu.Pouch(this.game, this.menuLayer, this.game.prodigy.player, e, t, i))
	},
	settings: function () {
		this._menus.push(new Prodigy.Menu.SystemMenu(this.game, this.menuLayer))
	},
	map: function () {
		this._menus.push(new Prodigy.Menu.Map(this.game, this.menuLayer))
	},
	store: function (e, t) {
		this._menus.push(new Prodigy.Menu.Store(this.game, this.menuLayer, e, t))
	},
	dormStore: function (e, t) {
		this._menus.push(new Prodigy.Menu.DormStore(this.game, this.menuLayer, e, !1, t))
	},
	levelUp: function (e, t) {
		this._menus.push(new Prodigy.Menu.LevelUp(this.game, this.menuLayer, e, t))
	}
}, Prodigy.MenuFactory.prototype.constructor = Prodigy.MenuFactory, Prodigy.DialogueFactory = function (e) {
	this.game = e
}, Prodigy.DialogueFactory.prototype = {
	create: function () {
		return new Prodigy.DialogueController(this.game)
	}
}, Prodigy.EffectFactory = function (e) {
	this.game = e
}, Prodigy.EffectFactory.MIDDLE = 300, Prodigy.EffectFactory.BOTTOM = 500, Prodigy.EffectFactory.BASE = 600, Prodigy.EffectFactory.TOP = 100, Prodigy.EffectFactory.SMALL = 2, Prodigy.EffectFactory.MEDIUM = 1, Prodigy.EffectFactory.prototype = {
	setSource: function (e) {
		this.screen = e
	},
	pvpComplete: function (e, t, i) {
		var a = this.screen.menus.add(new Phaser.TileSprite(this.game, 0, 280, 1280, 200, "core", "bounty-runner"));
		a.alpha = 0, a.height = 200;
		var t = this.screen.menus.add(this.game.prodigy.create.sprite(640, 350, "battle", t));
		t.anchor.setTo(.5, 1), t.scale.x = t.scale.y = 2, t.alpha = 0;
		var e = this.game.prodigy.create.font(this.screen.menus, 1280, 330, e, {
			size: 80,
			width: 1280,
			align: "center"
		});
		this.game.add.tween(t).to({
			alpha: 1
		}, 200, Phaser.Easing.Quadratic.In).to({}, 4100, Phaser.Easing.Linear.None).to({
			alpha: 0
		}, 250, Phaser.Easing.Quadratic.Out).start(), this.game.add.tween(t.scale).to({
			x: 1,
			y: 1
		}, 200, Phaser.Easing.Quadratic.In).start();
		var s = this.game.add.tween(a);
		s.to({}, 100, Phaser.Easing.Linear.None), s.to({
			alpha: .9
		}, 250, Phaser.Easing.Quadratic.In), s.to({}, 4e3, Phaser.Easing.Linear.None), s.to({
			alpha: 0
		}, 250, Phaser.Easing.Quadratic.Out), s.start(), this.game.add.tween(e).to({}, 100, Phaser.Easing.Linear.None).to({
			x: 25
		}, 250, Phaser.Easing.Quadratic.Out).to({
			x: -25
		}, 4e3, Phaser.Easing.Linear.None).to({
			x: -1280
		}, 250, Phaser.Easing.Quadratic.Out).start(), Util.isDefined(i) && s.onComplete.add(i, this)
	},
	bountyComplete: function (e, t) {
		console.log(e);
		var i = this.screen.menus.add(new Phaser.TileSprite(this.game, 0, 280, 1280, 200, "core", "bounty-runner"));
		i.alpha = 0, i.height = 200;
		var a = this.screen.menus.add(this.game.prodigy.create.sprite(640, 250, "core", "emblem-bounty"));
		a.anchor.setTo(.5, .5), a.scale.x = a.scale.y = 2, a.alpha = 0;
		var s = "" + e,
			r = this.game.prodigy.create.font(this.screen.menus, 520, 175, s, {
				size: 80,
				width: 240,
				align: "center"
			});
		r.alpha = 0;
		var o = this.game.prodigy.create.font(this.screen.menus, 1280, 330, "Bounty Complete!", {
			size: 80,
			width: 1280,
			align: "center"
		});
		this.game.add.tween(a).to({
			alpha: 1
		}, 200, Phaser.Easing.Quadratic.In).to({}, 4100, Phaser.Easing.Linear.None).to({
			alpha: 0
		}, 250, Phaser.Easing.Quadratic.Out).start(), this.game.add.tween(a.scale).to({
			x: 1,
			y: 1
		}, 200, Phaser.Easing.Quadratic.In).start(), this.game.add.tween(r).to({
			alpha: 1
		}, 200, Phaser.Easing.Quadratic.In).to({}, 4100, Phaser.Easing.Linear.None).to({
			alpha: 0
		}, 250, Phaser.Easing.Quadratic.Out).start();
		var n = this.game.add.tween(i);
		n.to({}, 100, Phaser.Easing.Linear.None), n.to({
			alpha: .9
		}, 250, Phaser.Easing.Quadratic.In), n.to({}, 4e3, Phaser.Easing.Linear.None), n.to({
			alpha: 0
		}, 250, Phaser.Easing.Quadratic.Out), n.start(), this.game.add.tween(o).to({}, 100, Phaser.Easing.Linear.None).to({
			x: 25
		}, 250, Phaser.Easing.Quadratic.Out).to({
			x: -25
		}, 4e3, Phaser.Easing.Linear.None).to({
			x: -1280
		}, 250, Phaser.Easing.Quadratic.Out).start(), Util.isDefined(t) && (n.onComplete.add(this.cleanup.bind(this, [i, o, a]), this), n.onComplete.add(t, this))
	},
	flashText: function (e, t, i, a, s) {
		Util.isDefined(i) || (i = Prodigy.EffectFactory.MIDDLE), Util.isDefined(a) || (a = Prodigy.EffectFactory.MEDIUM), Util.isDefined(s) || (s = 2e3);
		var r = this.screen.menus.add(new Phaser.TileSprite(this.game, 0, i - 20, 1280, 200, "core", "dialogue"));
		r.alpha = 0, r.height = 200 / a;
		var o = this.game.prodigy.create.font(this.screen.menus, 1280, i + 30 / a, e, {
				size: 80 / a,
				width: 1280,
				align: "center"
			}),
			n = this.game.add.tween(r);
		n.to({
			alpha: .5
		}, 250, Phaser.Easing.Quadratic.In), n.to({}, s, Phaser.Easing.Linear.None), n.to({
			alpha: 0
		}, 250, Phaser.Easing.Quadratic.Out), n.start();
		var l = this.game.add.tween(o);
		l.to({
			x: 25
		}, 250, Phaser.Easing.Quadratic.Out), l.to({
			x: -25
		}, s, Phaser.Easing.Linear.None), l.to({
			x: -1280
		}, 250, Phaser.Easing.Quadratic.Out), l.start(), Util.isDefined(t) && (n.onComplete.add(this.cleanup.bind(this, [r, o]), this), n.onComplete.add(t, this))
	},
	explode: function (e, t, i, a, s, r) {
		i = Math.ceil(i / 80), a = Math.ceil(a / 80);
		for (var o = [], n = 0; i > n; n++)
			for (var l = 0; a > l; l++) o.push(this.screen.menus.add(this.game.prodigy.create.sprite(40 + e + 80 * n, 40 + t + 80 * l, "core", "smoke")));
		for (var n = 0; i - 1 > n; n++)
			for (var l = 0; a - 1 > l; l++) o.push(this.screen.menus.add(this.game.prodigy.create.sprite(80 + e + 80 * n, 80 + t + 80 * l, "core", "smoke")));
		for (var n = 0; n < o.length; n++) {
			var h = o[n];
			h.anchor.setTo(.5, .5), h.scale.x = h.scale.y = 0, h.angle = Math.floor(1e3 * Math.random());
			var d = this.game.add.tween(h),
				p = this.game.add.tween(h.scale),
				c = Math.floor(1e3 / o.length) * n + 10;
			0 === n && (c = 1e3), d.to({}, c, Phaser.Easing.Linear.None), p.to({}, c, Phaser.Easing.Linear.None);
			for (var u = Math.floor((h.x - e - Math.floor(80 * i / 2)) / 2), l = 0; s > l; l++) 0 === n && this.game.time.events.add(1e3 * l, this.game.prodigy.audio.playSFX.bind(this.game.prodigy.audio, "dig")), d.to({
				x: h.x,
				y: h.y,
				alpha: 1,
				angle: h.angle
			}, 10, Phaser.Easing.Linear.None), d.to({
				x: h.x + u,
				y: h.y - 50,
				alpha: 1,
				angle: h.angle + 100
			}, 1e3, Phaser.Easing.Linear.None), p.to({
				x: .5,
				y: .5
			}, 10, Phaser.Easing.Linear.None), p.to({
				x: 1.4,
				y: 1.4
			}, 1e3, Phaser.Easing.Quadratic.Out);
			d.to({
				alpha: 0
			}, 10, Phaser.Easing.Linear.None), 0 === n && Util.isDefined(r) && d.onComplete.addOnce(r), 0 === n && d.onComplete.addOnce(this.cleanup.bind(this, o), this), d.start(), p.start()
		}
	},
	shake: function (e, t, i, a, s) {
		i = i || 10;
		for (var r = [], o = [this.screen.background, this.screen.content, this.screen.foreground], n = Math.floor(t / 50), l = 0; n > l; l++)
			for (var h = this.game.rnd.integerInRange(-i, i), d = this.game.rnd.integerInRange(-i, i), p = 0; p < o.length; p++) 0 === l && (r[p] = this.game.add.tween(o[p]), Util.isDefined(s) && 0 === p && r[p].onComplete.add(s)), r[p].to({
				x: "v" === a ? 0 : h,
				y: "h" === a ? 0 : d
			}, 50, Phaser.Easing.Linear.None), l === n - 1 && (r[p].to({
				x: 0,
				y: 0
			}, 100, Phaser.Easing.Linear.None), r[p].delay(e), r[p].start())
	},
	firework: function (e, t, i) {
		var a = 75 * Math.random() + 25,
			s = Math.random(),
			r = 100 * s - 50,
			o = Math.random() + 1,
			n = this.screen.foreground.add(this.game.prodigy.create.sprite(e - 20, t + 100, "core", "rocket")),
			l = this.screen.foreground.add(this.game.prodigy.create.sprite(e + r, t - a, "core", "fireworks"));
		n.anchor.setTo(.5, .5), l.anchor.setTo(.5, .5), l.angle = 360 * Math.random(), l.scale.x = .1, l.scale.y = .1;
		var h = this.game.add.tween(n).to({
				y: t - a
			}, 500, Phaser.Easing.Quadratic.Out, !0, 0),
			d = (this.game.add.tween(n).to({
				x: e + r
			}, 500, Phaser.Easing.Quadratic.Out, !0, 0), this.game.add.tween(n).to({
				angle: 35 * (2 * s - 1)
			}, 500, Phaser.Easing.Linear.None, !0), this.game.add.tween(l.scale).to({
				x: o,
				y: o
			}, 500, Phaser.Easing.Back.Out, !0, 500), this.game.add.tween(l).to({
				alpha: 0
			}, 1e3, Phaser.Easing.Linear.None, !0, 1e3));
		this.game.prodigy.audio.playSFX("dig"), h.onComplete.addOnce(n.destroy.bind(n)), d.onComplete.addOnce(l.destroy.bind(l)), d.onComplete.add(i)
	},
	confetti: function (e, t, i) {
		var a = (75 * Math.random() + 25, Math.random(), Math.random() + 1),
			s = this.screen.foreground.add(this.game.prodigy.create.sprite(e - 20, t + 100, "core", "confetti1"));
		s.animations.add("confetti", ["confetti1", "confetti2", "confetti3", "confetti4"], 10, !0, !1), s.anchor.setTo(.5, .5), s.scale.x = .1, s.scale.y = .1, s.animations.play("confetti");
		var r = this.game.add.tween(s).to({
				y: "-25"
			}, 500, Phaser.Easing.Linear.Out, !0, 0),
			o = (this.game.add.tween(s.scale).to({
				x: a,
				y: a
			}, 500, Phaser.Easing.Quadratic.In, !0, 0), this.game.add.tween(s).to({
				y: "+100"
			}, 2e3, Phaser.Easing.Sinusoidal.Out, !1, 250)),
			n = this.game.add.tween(s).to({
				alpha: 0
			}, 1e3, Phaser.Easing.Linear.None, !0, 2500);
		this.game.prodigy.audio.playSFX("dig"), r.chain(o), n.onComplete.addOnce(s.destroy.bind(s)), n.onComplete.add(i)
	},
	goldwork: function (e, t, i) {
		for (var a = 75 * Math.random() + 25, s = Math.random(), r = 100 * s - 50, o = Math.floor(3 * Math.random() + 1), n = [], l = function () {
				console.log("got gold")
			}, h = 1; o + 1 > h; h++) n.push(this.screen.addClickableEvent(e + 100 * h + s, t - 100 * h + s, 80, 80, l)), n[h - 1].img = n[h - 1].add(new Phaser.Image(this.game, 0, 0, "icons", "gold"));
		console.log(o), console.log(n);
		var d = this.screen.foreground.add(this.game.prodigy.create.sprite(e - 20, t + 100, "core", "rocket"));
		d.anchor.setTo(.5, .5);
		var p = this.game.add.tween(d).to({
				y: t - a
			}, 500, Phaser.Easing.Quadratic.Out, !0, 0),
			c = (this.game.add.tween(d).to({
				x: e + r
			}, 500, Phaser.Easing.Quadratic.Out, !0, 0), this.game.add.tween(d).to({
				angle: 35 * (2 * s - 1)
			}, 500, Phaser.Easing.Linear.None, !0));
		p.onComplete.addOnce(d.destroy.bind(d)), c.onComplete.add(i)
	},
	cleanup: function (e) {
		for (var t = 0; t < e.length; t++) e[t].destroy()
	}
}, Prodigy.EffectFactory.prototype.constructor = Prodigy.EffectFactory, Prodigy.Factory.GameObjectFactory = function (e) {
	this.game = e
}, Prodigy.Factory.GameObjectFactory.prototype = {
	constructor: Prodigy.GameObjectFactory,
	advButton: function (e, t, i, a, s) {
		return new Prodigy.Control.AdvButton(this.game, e, t, i, a, s)
	},
	button: function (e, t, i, a, s, r) {
		return new Prodigy.Control.Button(this.game, e, t, i, a, s, r)
	},
	element: function (e, t, i) {
		return new Prodigy.Control.Element(this.game, e, t, i)
	},
	fillBar: function (e, t, i, a, s, r, o, n, l, h, d, p) {
		return new Prodigy.Control.FillBar(this.game, e, t, i, a, s, r, o, n, l, h, d, p)
	},
	font: function (e, t, i, a, s) {
		return new Prodigy.Control.BitmapFont(this.game, e, t, i, a, s)
	},
	input: function () {},
	panel: function (e, t, i, a, s, r, o) {
		return new Prodigy.Control.Panel(this.game, e, t, i, a, s, r, o)
	},
	panelButton: function (e, t, i, a, s, r, o) {
		return new Prodigy.Control.PanelButton(this.game, e, t, i, a, s, r, o)
	},
	scrollBar: function (e, t, i, a, s) {
		return new Prodigy.Control.ScrollBar(this.game, e, t, i, a, s)
	},
	slider: function (e, t, i, a, s, r) {
		return new Prodigy.Control.Slider(this.game, e, t, i, a, s, r)
	},
	sprite: function (e, t, i, a, s) {
		return new Prodigy.Control.Sprite(this.game, e, t, i, a, s)
	},
	stackButton: function (e, t, i, a, s) {
		return new Prodigy.Control.StackButton(this.game, e, t, i, a, s)
	},
	textButton: function (e, t, i, a, s) {
		return new Prodigy.Control.TextButton(this.game, e, t, i, a, s)
	}
}, Prodigy.Factory.AdvGameObjectFactory = function (e) {
	Prodigy.Factory.GameObjectFactory.call(this, e)
}, Prodigy.extends(Prodigy.Factory.AdvGameObjectFactory, Prodigy.Factory.GameObjectFactory, {
	constructor: Prodigy.AdvGameObjectFactory,
	boss: function (e, t, i, a, s) {
		return new Prodigy.Container.BossContainer(this.game, e, t, i, a, s)
	},
	icon: function (e, t, i, a, s, r, o) {
		return new Prodigy.Container.QuantityIcon(this.game, e, t, i, a, s, r, o)
	},
	item: function (e, t, i, a, s, r) {
		return new Prodigy.Container.ItemContainer(this.game, e, t, i, a, s, r)
	},
	monster: function (e, t, i, a, s, r) {
		return new Prodigy.Container.MonsterContainer(this.game, e, t, i, a, s, r)
	},
	player: function (e, t, i, a, s, r) {
		return new Prodigy.Container.PlayerContainer(this.game, e, t, i, a, s, r)
	},
	timer: function (e, t, i, a) {
		return new Prodigy.Container.Timer(this.game, e, t, i, a)
	},
	level: function (e, t, i, a, s, r) {
		return new Prodigy.Container.LevelContainer(this.game, e, t, i, a, s, r)
	}
}), Prodigy.EventFactory = function (e) {
	this.game = e, this._events = {}, this._eventID = 0
}, Prodigy.EventFactory.prototype = {
	create: function () {
		return this._eventID++, new Prodigy.EventController(this.game, this._eventID)
	}
}, Prodigy.EventFactory.prototype.constructor = Prodigy.EventFactory;
var ExternalFactory = function () {
	function e(e) {
		this.game = e
	}
	return e.prototype.openFull = function () {
		this.game.stage.visible = !1
	}, e.prototype.closeFull = function () {
		this.game.stage.visible = !0
	}, e.prototype.question = function (e, t) {
		var i = Util.getUrlVariable("skillID");
		Util.isDefined(i) || (i = this.game.prodigy.education.selectSkill().ID), this.game.prodigy.assets._assets["battle-skill-" + i] = {
			type: "json",
			base: "",
			url: "data/skills/" + i + ".json"
		}, this.game.prodigy.load.assets(["battle-skill-" + i], this.showQuestion.bind(this, "battle-skill-" + i, e, t))
	}, e.prototype.showQuestion = function (e, t, i) {
		var a = this.game.cache.getJSON(e),
			s = this.game.prodigy.education.selectQuestion(a.skill);
		this.game.input.keyboard.clearCaptures();
		var r = s.homeworkID;
		Util.isDefined(s.ID) || (s.ID = a.skill.questions[s.index].ID), s.skillID = a.skill.ID, QI.showQuestion({
			selector: "#external-content",
			skill: a,
			questionId: s.ID,
			userID: this.game.prodigy.player.userID,
			secondChance: !Util.isDefined(r) || 0 >= r,
			callback: this.answerQuestion.bind(this, t, s),
			inAmerica: 2 === this.game.prodigy.education.country,
			tutorialState: i,
			isTeacher: !1,
			hideCallback: this.openFull.bind(this),
			background: null
		})
	}, e.prototype.answerQuestion = function (e, t, i, a, s) {
		this.game.input.keyboard.addKeyCapture([Phaser.Keyboard.BACKSPACE]), console.log(i + ", " + s + ", " + a), s = s || 0, this.game.prodigy.education.answerQuestion(i, s), this.game.prodigy.network.answerQuestion(t.ID, a, i, s, -1, t.homeworkID || 0, t.skillID, this.game.prodigy.player.classIDs), this.closeFull(), Util.isDefined(e) && e(i, s)
	}, e.prototype.closeQuestion = function () {
		QI.close(), this.closeFull()
	}, e
}();
Prodigy.SkinFactory = function (e) {
	this.game = e
}, Prodigy.SkinFactory.prototype = {
	constructor: Prodigy.SkinFactory,
	active: [],
	activeStore: function () {
		for (var e = 0; e < this.active.length; e++) {
			var t = this.active[e].getStoreData();
			if (Util.isDefined(t)) return t
		}
		return null
	},
	assets: function (e) {
		for (var t = [], i = 0; i < this.active.length; i++) this.active[i].active(e) && t.push(this.active[i].assets(e));
		return t
	},
	apply: function (e) {
		for (var t = 0; t < this.active.length; t++) this.active[t].active(e) && this.active[t].apply(this.game, e)
	}
}, Prodigy.Listener.MessageListener = function (e) {
	this.game = e, this.callbacks = []
}, Prodigy.Listener.MessageListener.prototype = {
	constructor: Prodigy.Listener.MessageListener,
	add: function (e, t) {
		this.callbacks.push({
			action: e,
			callback: t
		})
	},
	addOnce: function (e, t) {
		this.callbacks.push({
			action: e,
			callback: t,
			once: !0
		})
	},
	clear: function (e) {
		if (Util.isDefined(e))
			for (var t = this.callbacks.length - 1; t >= 0; t--) {
				var i = this.callbacks[t];
				i.action === e && this.callbacks.splice(t, 1)
			} else this.callbacks = []
	},
	onMessage: function (e) {
		console.log(e);
		for (var t = this.callbacks.length - 1; t >= 0; t--) {
			var i = this.callbacks[t];
			i.action === e.action && (i.callback(e.data), i.once && this.callbacks.splice(t, 1))
		}
	}
}, Prodigy.Math = {
	distance: function (e, t, i, a) {
		return Math.sqrt(Math.pow(i - e, 2) + Math.pow(a - t, 2))
	},
	circleX: function (e, t, i) {
		return Math.floor(e + t * Math.cos(i))
	},
	circleY: function (e, t, i) {
		return Math.floor(e + t * Math.sin(i))
	},
	range: function (e, t, i) {
		return t > e && (e = t), e > i && (e = i), e
	},
	randInRange: function (e, t) {
		return Math.floor(e + Math.random() * (t - e))
	}
}, Device.isDesktopOrTablet = function (e) {
	return e.device.desktop || navigator.userAgent.indexOf("iPad") >= 0 || navigator.userAgent.indexOf("Android") >= 0 && -1 === navigator.userAgent.indexOf("Mobile")
}, Device.isTablet = function () {
	return navigator.userAgent.indexOf("iPad") >= 0 || navigator.userAgent.indexOf("Android") >= 0 && -1 === navigator.userAgent.indexOf("Mobile")
}, Device.isIE = function () {
	return -1 !== navigator.userAgent.indexOf("Trident")
}, Device.iPadMini = function () {
	return navigator.userAgent.indexOf("iPad") >= 0 && (screen.width <= 1024 && screen.height <= 768 || screen.height <= 1024 && screen.width <= 768)
}, Prodigy.Loader = function (e) {
	this._game = e, this._assets = [], this._timer = setInterval(this.process.bind(this), 100), this._loading = !1, this._version = "?v=0.70"
}, Prodigy.Loader.RETRY_TIME = 1e3, Prodigy.Loader.prototype = {
	constructor: Prodigy.Loader,
	setLoader: function (e) {
		this._loader = e, this._loader.crossOrigin = "anonymous", this._loader.baseURL = "https://web.archive.org/web/20160415163509/https://prodigy.blob.core.windows.net/prodigy-1-24-0/", this._loader.onLoadComplete.add(this.loadComplete.bind(this), this)
	},
	assets: function (e, t) {
		this._assets.push({
			tags: e,
			callback: t,
			retry: 5
		})
	},
	loadComplete: function () {
		for (var e = this._assets.length - 1; e >= 0; e--) {
			for (var t = this._assets[e], i = !1, a = !1, s = 0; s < t.tags.length; s++)
				if (!this.isFileLoaded(t.tags[s])) {
					a = !0;
					break
				} a ? t.retry <= 0 && (i = !0, Util.isDefined(t.callback) && t.callback(t.tags, !1)) : (i = !0, Util.isDefined(t.callback) && t.callback(t.tags, !0)), i && this._assets.splice(e, 1)
		}
		this._loading = !1
	},
	process: function () {
		if (!(!Util.isDefined(this._loader) || this._loading || this._assets.length <= 0)) {
			for (var e = (new Date).getTime(), t = !1, i = 0; i < this._assets.length; i++) {
				var a = this._assets[i];
				if (!a.nextRetry || a.nextRetry <= e) {
					t = !0, a.nextRetry = e + Prodigy.Loader.RETRY_TIME;
					for (var i = 0; i < a.tags.length; i++) this.processFile(a.tags[i])
				}
			}
			t && (this._loading = !0, this._loader.start())
		}
	},
	processFile: function (e) {
		if (Util.isDefined(e) && null !== e && "" !== e && !this.isFileLoaded(e)) try {
			var t = "",
				i = this._game.prodigy.assets.getAsset(e),
				a = t + i.base + i.url;
			if (!Util.isDefined(a)) return;
			var s = a + this._version;
			switch (i.type) {
			case "json":
				this._loader.json(e, s, !0);
				break;
			case "sprite":
				this._loader.image(e, s, !1);
				break;
			case "spritesheet":
				var r = i.w,
					o = i.h;
				this._loader.spritesheet(e, s, r, o);
				break;
			case "sfx":
			case "bgm":
				this._loader.audio(e, [a.replace(".mp3", ".ogg"), a], !0);
				break;
			case "atlas":
				var n = t + i.base + i.json + this._version;
				this._loader.atlasJSONHash(e, s, n)
			}
		} catch (l) {}
	},
	isFileLoaded: function (e) {
		if (!Util.isDefined(e) || null === e || "" === e) return !0;
		try {
			var t = this._game.prodigy.assets.getAsset(e);
			switch (t.type) {
			case "json":
				if (!this._game.cache.checkJSONKey(e)) return !1;
				break;
			case "sprite":
			case "spritesheet":
			case "atlas":
				if (!this._game.cache.checkImageKey(e)) return !1;
				break;
			case "sfx":
			case "bgm":
				if (!this._game.cache.checkSoundKey(e)) return !1
			}
		} catch (i) {}
		return !0
	}
};
var Pathfinder = function () {
	function e(e, t) {
		this.init(e, t), this.callbacks = [], this.events = []
	}
	return e.prototype.addCallback = function (e, t) {
		this.callbacks.push({
			ID: e,
			callback: t
		})
	}, e.prototype.init = function (e, t) {
		this.area = e, this.size = t || 20
	}, e.prototype.getValidCoord = function () {
		for (var e = -1, t = -1, i = 10; !this.isNodeOpen(e, t) && i > 0;) e = Math.floor(Math.random() * this.area[0].length), t = Math.floor(Math.random() * this.area.length), i--;
		return [e * this.size, t * this.size]
	}, e.prototype.getCallback = function (e, t) {
		for (var i = 0; i < this.callbacks.length; i++) {
			var a = this.callbacks[i];
			if (a.ID === this.getNodeValue(e, t)) return a.callback
		}
		return null
	}, e.prototype.findBasicPath = function (e, t, i, a) {
		var s = i,
			r = a;
		e = Math.floor(e / this.size), t = Math.floor(t / this.size), i = Math.floor(i / this.size), a = Math.floor(a / this.size);
		var o = this.findNodeBetween({
			x: e,
			y: t
		}, {
			x: i,
			y: a
		});
		return o ? [{
			x: o.x * this.size,
			y: o.y * this.size
		}] : [{
			x: s,
			y: r
		}]
	}, e.prototype.findPath = function (e, t, i, a, s) {
		if (!this.lookingForPath) {
			this.lookingForPath = !0;
			var r = i,
				o = a;
			e = Math.floor(e / this.size), t = Math.floor(t / this.size), i = Math.floor(i / this.size), a = Math.floor(a / this.size);
			var n = new EasyStar.js;
			n.setGrid(this.area), n.setAcceptableTiles([1, 2, 3, 4, 5]), e = e > 63 ? 63 : 0 > e ? 0 : e, i = i > 63 ? 63 : 0 > i ? 0 : i, t = t > 35 ? 35 : 0 > t ? 0 : t, a = a > 35 ? 35 : 0 > a ? 0 : a, n.findPath(e, t, i, a, this.processPath.bind(this, e, t, r, o, s)), n.calculate()
		}
	}, e.prototype.processPath = function (e, t, i, a, s, r) {
		if (Util.isDefined(r)) {
			var o = [];
			o.push(r[0]);
			for (var n = r.length - 1; n > 0 && o[o.length - 1] !== r[n]; n--) {
				var l = this.findNodeBetween(o[o.length - 1], r[n]);
				l || (o.push(r[n]), n = r.length)
			}
			for (var h = [], n = o.length - 1; n > 0; n--) o[n].x *= 20, o[n].y *= 20, h.push(o[n]);
			h[0] = {
				x: i,
				y: a
			}
		}
		Util.isDefined(s) && s(h), this.lookingForPath = !1
	}, e.prototype.findNodeBetween = function (e, t) {
		var i = t.x - e.x,
			a = t.y - e.y,
			s = Math.abs(i) >= Math.abs(a) ? Math.abs(i) : Math.abs(a);
		if (0 === s) return e;
		i /= s, a /= s;
		for (var r = e.x, o = e.y, n = e; r !== t.x || o !== t.y;) {
			if (r += i, o += a, (i > 0 && r > t.x || 0 > i && r < t.x) && (r = t.x), (a > 0 && o > t.y || 0 > a && o < t.y) && (o = t.y), !this.isNodeOpen(Math.floor(r), Math.floor(o))) return n;
			n = {
				x: Math.floor(r),
				y: Math.floor(o)
			}
		}
		return null
	}, e.prototype.isNodeOpen = function (e, t) {
		return this.getNodeValue(e, t) > 0
	}, e.prototype.getNodeValue = function (e, t) {
		return t < this.area.length && t >= 0 && e < this.area[0].length && e >= 0 ? this.area[t][e] : -1
	}, e.prototype.isPathBlocked = function (e, t, i, a) {
		e = Math.floor(e / this.size), t = Math.floor(t / this.size), i = Math.floor(i / this.size), a = Math.floor(a / this.size);
		var s = this.findNodeBetween({
			x: e,
			y: t
		}, {
			x: i,
			y: a
		});
		return Util.isDefined(s)
	}, e
}();
Prodigy.GameObj = function (e) {
	this.version = "version 1.24.0", this.player = new Player, this.assets = new Prodigy.Assets, this.load = new Prodigy.Loader(e), this.graphics = new Prodigy.Controller.GraphicsController(e), this.audio = new Prodigy.Controller.AudioController(e), this.mail = new Prodigy.MailController(e), this.battle = new Prodigy.Controller.BattleController(e), this.pvp = new Prodigy.Controller.PVPController(e), this.open = new Prodigy.MenuFactory(e), this.effects = new Prodigy.EffectFactory(e), this.event = new Prodigy.EventFactory(e), this.dialogue = new Prodigy.DialogueFactory(e), this.external = new ExternalFactory(e), this.skin = new Prodigy.SkinFactory(e), this.create = new Prodigy.Factory.AdvGameObjectFactory(e), this.chat = new Prodigy.ChatManager(e), this.network = new NetworkManager(e), this.education = new Prodigy.EducationSystem(e), this.bounty = new Prodigy.BountyManager(e), this.affixes = new Prodigy.AffixManager(e), this.attacks = new Prodigy.Attacks(e), this.messageListener = new Prodigy.Listener.MessageListener(e), this.world = new Prodigy.World(e), this.canvas = null, this.bmd = new Phaser.BitmapData(e, null, 1280, 720), this.math = Prodigy.Math, this.dialogues = new Prodigy.Dialogues, this.debug = new Prodigy.Debug(e), console.log("%c %c %c Prodigy " + this.version + " | patch 0 %c %c ", "background: #555", "background: #333", "background: #111; color: #eeeeee", "background: #333", "background: #555")
}, Prodigy.GameObj.prototype = {
	constructor: Prodigy.GameObj,
	init: function (e) {
		this.textureBelow = e.add.renderTexture(1280, 720), this.textureAbove = e.add.renderTexture(1280, 720), this.textureMenu = e.add.renderTexture(1280, 720)
	},
	update: function () {},
	cleanup: function () {
		this.mail.cleanup(), this.open.cleanup(), this.messageListener.clear()
	}
}, Prodigy.Debug = function (e) {
	setQuest = this.debugQuest.bind(this, e), tp = this.tp.bind(this, e), easyMode = this.easyMode.bind(this, e), inspect = this.inspect.bind(this, e), showLayer = this.showLayer.bind(this, e), showCollide = this.showCollide.bind(this, e), answer = this.answer.bind(this, e), createEdu = this.createEdu.bind(this, e), saveEdu = this.saveEdu.bind(this, e), killGore = this.killGore.bind(this, e), player = this.player.bind(this, e), godHand = this.godHand.bind(this, e), hoard = this.hoard.bind(this, e), grabBag = this.grabBag.bind(this, e), getItem = this.getItem.bind(this, e), getPet = this.getPet.bind(this, e), getBounty = this.getBounty.bind(this, e), getSpell = this.getSpell.bind(this, e), getGold = this.getGold.bind(this, e), bookWorm = this.bookWorm.bind(this, e), smallLoan = this.smallLoan.bind(this, e)
}, Prodigy.Debug.prototype = {
	constructor: Prodigy.Debug,
	debugQuest: function (e, t, i) {
		var t = e.prodigy.world.getZone(t);
		t.UTIL_TEST_QUEST(i), e.state.states.TileScreen.process()
	},
	tp: function (e, t) {
		e.prodigy.world.teleport(t)
	},
	easyMode: function (e, t) {
		this.disableEdu = t
	},
	inspect: function (e, t) {
		t ? console.log(e.prodigy.player[t].data) : console.log(e.prodigy.player.data)
	},
	showLayer: function (e, t, i) {
		e.state.states.TileScreen[t].visible = i
	},
	showCollide: function (e) {
		e.state.states.TileScreen.debug()
	},
	createEdu: function (e, t, i, a) {
		e.prodigy.education.setCurriculum(t, i, a)
	},
	saveEdu: function (e) {
		var t = e.prodigy.education.getUpdatedData();
		e.prodigy.network.updateUserAbility(t)
	},
	answer: function (e, t, i) {
		var a = e.prodigy.education;
		if (Util.isDefined(t)) {
			i = i || 1;
			for (var s = 0; i > s; s++) a.selectSkill(), a.selectQuestion(), a.answerQuestion(t, 1)
		} else e.prodigy.external.question()
	},
	killGore: function () {
		Prodigy.Attacks.data[30].damage = 200
	},
	godHand: function (e, t, i) {
		Prodigy.Attacks.data[t].damage = i
	},
	player: function (e) {
		return e.prodigy.player
	},
	hoard: function (e) {
		for (var t = 1; 29 > t; t++) e.prodigy.player.backpack.add("boots", t);
		for (var t = 1; 53 > t; t++) e.prodigy.player.backpack.add("outfit", t);
		for (var t = 1; 78 > t; t++) e.prodigy.player.backpack.add("weapon", t);
		for (var t = 1; 62 > t; t++) e.prodigy.player.backpack.add("hat", t);
		for (var t = 1; 78 > t; t++) e.prodigy.player.backpack.add("item", t);
		for (var t = 1; 8 > t; t++) e.prodigy.player.backpack.add("key", t);
		for (var t = 1; 25 > t; t++) e.prodigy.player.backpack.add("fossil", t);
		for (var t = 1; t < 21 * Math.random(); t++) e.prodigy.player.backpack.add("relic", t)
	},
	grabBag: function (e) {
		for (var t = 1; t < 29 * Math.random(); t++) e.prodigy.player.backpack.add("boots", Math.floor(28 * Math.random() + 1));
		for (var t = 1; t < 55 * Math.random(); t++) e.prodigy.player.backpack.add("outfit", Math.floor(54 * Math.random() + 1));
		for (var t = 1; t < 80 * Math.random(); t++) e.prodigy.player.backpack.add("weapon", Math.floor(79 * Math.random() + 1));
		for (var t = 1; t < 64 * Math.random(); t++) e.prodigy.player.backpack.add("hat", Math.floor(63 * Math.random() + 1));
		for (var t = 1; t < 78 * Math.random(); t++) e.prodigy.player.backpack.add("item", Math.floor(77 * Math.random() + 1));
		for (var t = 1; t < 21 * Math.random(); t++) e.prodigy.player.backpack.add("relic", Math.floor(20 * Math.random() + 1));
		for (var t = 1; t < 72 * Math.random(); t++) e.prodigy.player.backpack.add("dorm", Math.floor(71 * Math.random() + 1));
		for (var t = 1; t < 25 * Math.random(); t++) e.prodigy.player.backpack.add("fossil", Math.floor(24 * Math.random() + 1))
	},
	getItem: function (e) {
		var t = [],
			i = [{
				type: "hat",
				n: 63
			}, {
				type: "outfit",
				n: 54
			}, {
				type: "weapon",
				n: 79
			}, {
				type: "boots",
				n: 28
			}, {
				type: "relic",
				n: 20
			}],
			a = Math.floor(5 * Math.random()),
			s = i[a].type,
			r = Math.floor(2 * Math.random()),
			o = Math.floor(2 * Math.random()),
			n = Math.floor(2 * Math.random());
		o && t.push({
			type: s,
			ID: Math.floor(Math.random() * i[a].n + 1)
		}), n && t.push({
			type: "spell",
			ID: Math.floor(35 * Math.random() + 1)
		});
		for (var l = 0; l < Math.floor(5 * Math.random()); l++) t.push({
			type: "item",
			ID: Math.floor(77 * Math.random() + 1)
		});
		if (r)
			for (var l = 0; l < Math.floor(5 * Math.random()); l++) t.push({
				type: "gold",
				N: 100
			});
		console.log(t), 0 === t.length ? this.getItem(e) : e.prodigy.open.gotItem(t)
	},
	getPet: function (e) {
		var t = Math.floor(124 * Math.random() + 1);
		e.prodigy.open.gotItem([{
			type: "pet",
			ID: t,
			data: {
				ID: t,
				hp: 1,
				stars: 0,
				nickname: "Steve",
				level: 1
			}
		}])
	},
	getBounty: function (e) {
		e.prodigy.open.gotItem([{
			type: "bounty",
			N: 100
		}]), e.prodigy.player.addBountyScore(100)
	},
	getSpell: function (e) {
		e.prodigy.open.gotItem([{
			type: "spell",
			ID: Math.floor(35 * Math.random() + 1)
		}])
	},
	getGold: function (e) {
		for (var t = [], i = 0; i < Math.floor(9 * Math.random() + 1); i++) t.push({
			type: "gold",
			N: 100
		});
		console.log(t), e.prodigy.open.gotItem(t)
	},
	smallLoan: function (e) {
		e.prodigy.player.changeGold(1e6)
	},
	bookWorm: function (e) {
		for (var t = 1; 37 > t; t++) 31 !== t && e.prodigy.player.addSpell(t)
	}
}, Prodigy.ChatManager = function () {}, Prodigy.ChatManager.prototype = {
	getEmotes: function () {
		return Prodigy.ChatManager.EMOTES
	},
	getEmote: function (e) {
		var t = this.getEmotes();
		return t[e]
	},
	getPhrase: function (e) {
		var t = this.getPhrases();
		return t[e]
	},
	getPhraseID: function (e) {
		for (var t = this.getPhrases(), i = 0; i < t.length; i++)
			if (t[i] === e) return i;
		return 0
	},
	getPhrases: function () {
		return Prodigy.ChatManager.CHAT
	}
}, Prodigy.ChatManager.prototype.constructor = Prodigy.ChatManager, Prodigy.ChatManager.CHAT = ["alright", "bad", "busy", "bye", "bye bye", "can't right now", "check it out", "do you have a minute?", "everyone look!", "follow me", "friends?", "go away", "go to [zone]", "good", "goodbye", "greetings!", "hello", "hello there!", "hey", "how are you?", "how?", "i caught a [pet]", "i got a [item]", "i have to go", "i have to leave", "i leveled up!", "i love Prodigy!", "just kidding!", "keep going", "keep it up!", "keep walking", "leave me alone", "look", "my favorite is [all]", "my favorite item is [item]", "my favorite pet is [pet]", "neat", "no", "not right now", "not today", "over", "puyoy!", "quack quack", "quite", "right", "right behind you", "see you later", "thank you", "there you are", "think about it", "time for bed", "time for dinner!", "time to go", "up there", "very good", "what's up?", "who?", "who are you?", "why?", "you coming?", "you look cool!", "you still there?", "zzz"], Prodigy.ChatManager.EMOTES = ["apple", "exclamation", "question", "tear", "clover", "swear", "frustration", "dot", "moon", "music", "heart", "star", "cake", "sun", "idea"], Prodigy.BountyManager = function (e) {
	this.game = e, this._reward = [1, 1, 3, 1, 3, 5, 3, 1, 1, 5, 1], this._mode = ["pet"], this._name = ["Aze", "Apple", "Ame", "Ave", "Accu", "Ah", "Atu", "Aitro", "Ava", "Alba", "Ami", "Auri", "Aura", "Bri", "Buri", "Blobo", "Blu", "Bra", "Bron", "Bri", "Bizu", "Bamo", "Brede", "Bru", "Bro", "Bil", "Ca", "Cami", "Copmero", "Caru", "Cray", "Ci", "Car", "Ces", "Char", "Cha", "Da", "Dar", "De", "Dru", "Dub", "Du", "Dere", "Doe", "Dev", "Ecar", "Ed", "Emu", "Ever", "Eli", "Eli", "Em", "Erme", "Eta", "Ferni", "Fran", "Fruit", "Gri", "Geo", "Gero", "Gio", "Gra", "Gre", "Ham", "Hu", "Har", "Hay", "Hec", "Hev", "Homu", "Hunt", "If", "Iri", "Isa", "Iro", "Ic", "Jaco", "Jav", "Jelly", "Jim", "Jer", "Jamu", "Kal", "Kam", "Ke", "Ki", "La", "Lar", "Law", "Leo", "Lev", "Lam", "Log", "Lucas", "Lui", "Mal", "Man", "Mar", "My", "Na", "North", "Ni", "Nym", "Nol", "Obe", "Oma", "On", "Ozz", "Own", "Py", "Pa", "Pey", "Phil", "Par", "Pre", "Ral", "Ra", "Ric", "Ri", "Rob", "Ro", "Roh", "Roe", "Rom", "Sa", "Sco", "Se", "Seb", "Ser", "Sha", "Spe", "Ste", "Ter", "Tho", "Ti", "Tra", "Tre", "Tri", "Ty", "Va", "Vi", "Vin", "Wal", "Wa", "Way", "Wes", "Wil", "Wi", "Wy", "Yo", "Za"], this._name2 = ["ron", "cup", "rush", "ria", "lomo", "sari", "da", "siri", "pos", "lin", "tru", "rious", "ri", "yte", "ros", "lya", "bos", "kin", "rt", "zipher", "son", "bloor", "math", "buu", "steak", "flace", "tato", "ium", "iar", "lious", "lo", "lio", "tion", "til", "lite", "ser", "kar", "ton", "vous", "cas", "foth", "vicus", "lith", "lik", "vin", "lae", "frost", "ras", "masa", "roth", "tark", "pus", "cico", "isan", "chi", "gtre", "rth", "mith", "phith", "pott", "nibo", "finik", "nmy", "goroth", "bro", "tik", "ford", "tis", "ier", "lus", "ear", "ret", "los", "a", "lak", "como", "ios", "bo", "ini", "old", "esch", "erio", "tara", "moth", "an", "ndo", "tus", "brak", "nid", "ious", "bu", "goth", "art", "si", "aki", "ikir", "oth", "sil", "cuo", "io", "so", "vus", "with", "cho", "rys", "ron", "rin", "ith", "mat", "ra", "thos", "ci", "tri", "ius", "kos", "sa", "igos", "yn", "ard", "cha", "led", "obo", "gear", "ule"], this._title = [" the Firemonger", " of the Void", " the Waterweaver", " the Earthshaker", " the Windcaller", " Burrowich", " the Digger", " the Therapist", " of Malakai", " Geronido", " Masterflash", " Meganoth", " Seratone", " the Goldwatch", " Passimore", " of the Gatewatch", " the Alchemical", " the Pacifier", " the Ultraverser", ", Chewer of Bones", " the Great", " Bergenwharph", " of Tsao", " of Ruples", " HwyLisco", ", Observer of Hew", ", Shade of Liu", ", Temp of Jude"]
}, Prodigy.BountyManager.prototype = {
	constructor: Prodigy.BountyManager,
	getMap: function (e) {
		var t = this.getZone(e),
			i = [];
		for (var a in this.game.prodigy.world.zones[t].maps) Util.isDefined(this.game.prodigy.world.zones[t].maps[a].coord) && i.push(a);
		var s = new Prodigy.SeededRandomGenerator(e.seed);
		return i[Math.floor(s.jumpFromStart(1) * i.length)]
	},
	getZone: function (e) {
		var t = [];
		for (var i in this.game.prodigy.world.zones) Util.isDefined(this.game.prodigy.world.zones[i].monsters) && t.push(i);
		var a = new Prodigy.SeededRandomGenerator(e.seed);
		return t[Math.floor(a.jumpFromStart(0) * t.length)]
	},
	getMode: function (e) {
		var t = new Prodigy.SeededRandomGenerator(e.seed),
			i = Math.floor(t.jumpFromStart(7) * this._mode.length),
			a = this._mode[i];
		return a
	},
	getMonster: function (e) {
		var t = new Prodigy.SeededRandomGenerator(e.seed),
			i = Math.floor(t.jumpFromStart(2) * this.game.prodigy.world.zones[this.getZone(e)].monsters.length),
			a = this.game.prodigy.world.zones[this.getZone(e)].monsters[i];
		return a
	},
	getTeam: function (e) {
		for (var t = new Prodigy.SeededRandomGenerator(e.seed), i = 2464565433 * t.jumpFromStart(2), a = new Prodigy.SeededRandomGenerator(i), s = Math.floor(3 * a.jumpFromStart(0) + 2), r = [], o = 0, n = 1; s >= n; n++) o = Math.floor(a.jumpFromStart(n) * this.game.prodigy.world.zones[this.getZone(e)].monsters.length), r.push({
			ID: this.game.prodigy.world.zones[this.getZone(e)].monsters[o],
			level: this.getLevel(e),
			nickname: this.getName({
				seed: e.seed * a.jumpFromStart(n)
			})
		});
		return r
	},
	getName: function (e) {
		var t = new Prodigy.SeededRandomGenerator(e.seed),
			i = Math.floor(t.jumpFromStart(3) * this.game.prodigy.bounty._name.length),
			a = new Prodigy.SeededRandomGenerator(1e6 * t.jumpFromStart(3)),
			s = Math.floor(a.jumpFromStart(0) * this._name2.length),
			r = this._name[i] + this._name2[s];
		if (5 === this.getReward(e)) {
			var a = new Prodigy.SeededRandomGenerator(1e6 * t.jumpFromStart(3)),
				o = Math.floor(a.jumpFromStart(1) * this._title.length),
				n = this._title[o];
			r += n
		}
		return r
	},
	getCoord: function (e) {
		var t = new Prodigy.SeededRandomGenerator(e.seed),
			i = this.getZone(e),
			a = Math.floor(t.jumpFromStart(4) * this.game.prodigy.world.zones[i].maps[this.getMap(e)].coord.length),
			s = this.game.prodigy.world.zones[i].maps[this.getMap(e)].coord[a];
		return s
	},
	getReward: function (e) {
		var t = new Prodigy.SeededRandomGenerator(e.seed),
			i = Math.floor(t.jumpFromStart(5) * this.game.prodigy.bounty._reward.length),
			a = this.game.prodigy.bounty._reward[i];
		return a
	},
	getLevel: function (e) {
		{
			var t = new Prodigy.SeededRandomGenerator(e.seed);
			Math.floor(100 * t.jumpFromStart(6))
		}
		if (5 === this.getReward(e)) var i = Math.floor(9 * t.jumpFromStart(6) + 11);
		else if (3 === this.getReward(e)) var i = Math.floor(4 * t.jumpFromStart(6) + 6);
		else var i = Math.floor(4 * t.jumpFromStart(6) + 1);
		var a = this.game.prodigy.player.kennel.getAvgTeamLv() + i;
		return a > 100 && (a = 100), a
	},
	getBounties: function () {
		for (var e = [], t = 0; t < Prodigy.Lamplight_B1.MAX_BOUNTIES; t++) this.game.prodigy.player.backpack.hasItem("key", t + 5) && e.push({
			ID: t + 5,
			seed: this.game.prodigy.player.backpack.getKeyItemData(t + 5, "seed"),
			complete: this.game.prodigy.player.backpack.getKeyItemData(t + 5, "complete")
		});
		return e
	},
	hasBounty: function (e, t) {
		if (Util.isDefined(this.getBounties()))
			for (var i = 0; i < this.getBounties().length; i++) {
				var a = this.getZone(this.getBounties()[i]);
				if (a === e) {
					var s = this.getMap(this.getBounties()[i]);
					if (s === t && !Util.isDefined(this.getBounties()[i].complete)) return this.getBounties()[i]
				}
			}
		return !1
	},
	compairBounties: function (e, t) {
		return this.getZone(e) === this.getZone(t) && this.getMap(e) === this.getMap(t) ? !0 : !1
	},
	placeBounty: function (e, t, i) {
		var a = this.getLevel(e),
			s = this.getCoord(e);
		if ("pet" === this.getMode(e)) {
			var r = this.getMonster(e),
				o = this.getName(e),
				n = {
					intro: "Bounty Battle!",
					randDir: !0,
					encounter: [{
						ID: r,
						nickname: o
					}],
					level: a,
					bounty: e
				},
				l = i.addBounty(this.game, t, 9, s.x, s.y, !1, n);
			l.showName(!0, o)
		} else if ("team" === this.getMode(e)) var n = {
				encounter: [{
					ID: this.getTeam(e)[0].ID,
					nickname: this.getTeam(e)[0].nickname
				}],
				level: a,
				intro: "Bounty Battle!",
				bounty: e,
				screen: "bg-battle-mountain",
				pets: this.getTeam(e).slice(1, this.getTeam(e).length)
			},
			l = i.addBounty(this.game, t, 9, s.x, s.y, !1, n)
	},
	generateBounties: function (e) {
		for (var t = this.game.prodigy.player.state.get("world-bounties") || [], i = new Prodigy.SeededRandomGenerator(e), a = 0; a < Prodigy.Lamplight_B1.MAX_BOUNTIES; a++)
			if (!Util.isDefined(this.game.prodigy.player.state.get("world-bounties")) || this.game.prodigy.player.state.get("world-bounties").length < 3) {
				console.log("1st time generating..." + a);
				for (var s = 175451218 * i.jumpFromStart(a), r = 1; !this.checkValidBounty(s, a);) console.log("1st time generating..." + a), s = i.jumpFromStart(a) * r * 175451218, r++;
				t.push(s), this.game.prodigy.world.setState("bounties", t)
			} else if (!this.game.prodigy.player.backpack.hasItem("key", a + 5)) {
			console.log("generating..." + a);
			for (var s = 175451218 * i.jumpFromStart(a), r = 1; !this.checkValidBounty(s, a);) console.log("generating..." + a), s = i.jumpFromStart(a) * r * 175451218, r++;
			t[a] = s
		}
		this.game.prodigy.world.setState("bounties", t)
	},
	checkValidBounty: function (e, t) {
		if (Util.isDefined(this.game.prodigy.player.state.get("world-bounties")))
			for (var i = 0; t > i; i++)
				if (this.game.prodigy.player.state.get("world-bounties")[i] > 0) {
					if (this.game.prodigy.bounty.compairBounties({
							seed: this.game.prodigy.player.state.get("world-bounties")[i]
						}, {
							seed: e
						})) return !1;
					if (this.getReward({
							seed: this.game.prodigy.player.state.get("world-bounties")[i]
						}) > 1 && this.getReward({
							seed: e
						}) > 1) return !1;
					if (this.getName({
							seed: this.game.prodigy.player.state.get("world-bounties")[i]
						}) === this.getName({
							seed: e
						})) return !1
				} return !0
	},
	completeBounty: function (e) {
		this.game.prodigy.player.backpack.setKeyItemData(e.ID, "complete", 1)
	},
	getText: function (e) {
		var t = new Prodigy.SeededRandomGenerator(e.seed),
			i = Math.floor(4.9 * t.jumpFromStart(8));
		return i
	}
}, Prodigy.AffixManager = function (e) {
	this.game = e
}, Prodigy.AffixManager.prototype = {
	constructor: Prodigy.AffixManager,
	getDamageModifier: function (e, t, i) {
		if (22 === e.ID) return 0;
		var a = 0,
			s = i.getAffixes(),
			r = [];
		Util.isDefined(t) && (r = t.getAffixes());
		for (var o = 0; o < s.length; o++) {
			var n = Prodigy.AffixManager.data[s[o]];
			if (n.type.split("-")[0] === e.element)
				if ("resist" === n.type.split("-")[1] || "weakness" === n.type.split("-")[1]) a += n.value;
				else if ("immune" === n.type.split("-")[1] && Math.random() < n.value) return 0
		}
		for (var o = 0; o < r.length; o++) {
			var n = Prodigy.AffixManager.data[r[o]];
			n.type.split[0] === e.element ? "damage" === n.type.split("-")[1] && (a *= n.value) : "damage" === n.type && (console.log("added damage"), a += n.value)
		}
		return console.log("damagemod " + a), a
	},
	getCatch: function () {
		var e = this.game.prodigy.player.getAffixes();
		return this.getMultiplier(e, [60, 61, 61])
	},
	getGold: function () {
		var e = this.game.prodigy.player.getAffixes();
		return this.getMultiplier(e, [39, 40, 41])
	},
	getEscape: function () {
		var e = this.game.prodigy.player.getAffixes();
		return this.getMultiplier(e, [42, 43, 44])
	},
	getHearts: function (e) {
		var t = e.getAffixes();
		return this.getMultiplier(t, [33, 34, 35, 82, 83])
	},
	getThorns: function (e) {
		for (var t = e.getAffixes(), i = [36, 37, 38], a = 0, s = 0; s < t.length; s++)
			for (var r = 0; r < i.length; r++) t[s] === i[r] && (a += Prodigy.AffixManager.data[t[s]].value);
		return Math.min(a, 1)
	},
	getDodge: function () {
		var e = this.game.prodigy.player.getAffixes();
		return this.getMultiplier(e, [63, 64, 65])
	},
	getMultiplier: function (e, t) {
		for (var i = 1, a = 0; a < e.length; a++)
			for (var s = 0; s < t.length; s++) e[a] === t[s] && (i *= Prodigy.AffixManager.data[e[a]].value);
		return i
	},
	getAffixData: function (e) {
		return Prodigy.AffixManager.data[e]
	},
	hasResist: function (e, t) {
		return this.hasProperty(e, t, "resist")
	},
	hasDamage: function (e, t) {
		return this.hasProperty(e, t, "damage")
	},
	hasWeakness: function (e, t) {
		return this.hasProperty(e, t, "weakness")
	},
	hasProperty: function (e, t, i) {
		for (var a = 0; a < t.length; a++)
			if (this.getAffixData(t[a]).type.split("-")[0] === e && this.getAffixData(t[a]).type.split("-")[1] === i) return !0;
		return !1
	}
}, Prodigy.AffixManager.data = [{
	type: "fire-resist",
	value: -4
}, {
	type: "fire-resist",
	value: -4
}, {
	type: "fire-resist",
	value: -4
}, {
	type: "ice-resist",
	value: -4
}, {
	type: "ice-resist",
	value: -4
}, {
	type: "ice-resist",
	value: -4
}, {
	type: "water-resist",
	value: -4
}, {
	type: "water-resist",
	value: -4
}, {
	type: "water-resist",
	value: -4
}, {
	type: "storm-resist",
	value: -4
}, {
	type: "storm-resist",
	value: -4
}, {
	type: "storm-resist",
	value: -4
}, {
	type: "earth-resist",
	value: -4
}, {
	type: "earth-resist",
	value: -4
}, {
	type: "earth-resist",
	value: -4
}, {
	type: "fire-damage",
	value: 1.1
}, {
	type: "fire-damage",
	value: 1.2
}, {
	type: "fire-damage",
	value: 1.3
}, {
	type: "ice-damage",
	value: 1.1
}, {
	type: "ice-damage",
	value: 1.2
}, {
	type: "ice-damage",
	value: 1.3
}, {
	type: "water-damage",
	value: 1.1
}, {
	type: "water-damage",
	value: 1.2
}, {
	type: "water-damage",
	value: 1.3
}, {
	type: "storm-damage",
	value: 1.1
}, {
	type: "storm-damage",
	value: 1.2
}, {
	type: "storm-damage",
	value: 1.3
}, {
	type: "earth-damage",
	value: 1.1
}, {
	type: "earth-damage",
	value: 1.2
}, {
	type: "earth-damage",
	value: 1.3
}, {
	type: "damage",
	value: 1
}, {
	type: "damage",
	value: 2
}, {
	type: "damage",
	value: 3
}, {
	type: "hearts",
	value: 2
}, {
	type: "hearts",
	value: 4
}, {
	type: "hearts",
	value: 6
}, {
	type: "thorns",
	value: .1
}, {
	type: "thorns",
	value: .2
}, {
	type: "thorns",
	value: .3
}, {
	type: "gold",
	value: 1.1
}, {
	type: "gold",
	value: 1.2
}, {
	type: "gold",
	value: 1.3
}, {
	type: "escape",
	value: 1.1
}, {
	type: "escape",
	value: 1.2
}, {
	type: "escape",
	value: 1.3
}, {
	type: "fire-weakness",
	value: 4
}, {
	type: "fire-weakness",
	value: 4
}, {
	type: "fire-weakness",
	value: 4
}, {
	type: "ice-weakness",
	value: 4
}, {
	type: "ice-weakness",
	value: 4
}, {
	type: "ice-weakness",
	value: 4
}, {
	type: "water-weakness",
	value: 4
}, {
	type: "water-weakness",
	value: 4
}, {
	type: "water-weakness",
	value: 4
}, {
	type: "storm-weakness",
	value: 4
}, {
	type: "storm-weakness",
	value: 4
}, {
	type: "storm-weakness",
	value: 4
}, {
	type: "earth-weakness",
	value: 4
}, {
	type: "earth-weakness",
	value: 4
}, {
	type: "earth-weakness",
	value: 4
}, {
	type: "catch",
	value: 1.1
}, {
	type: "catch",
	value: 1.2
}, {
	type: "catch",
	value: 1.3
}, {
	type: "dodge",
	value: 1.1
}, {
	type: "dodge",
	value: 1.2
}, {
	type: "dodge",
	value: 1.3
}, {
	type: "fire-immune",
	value: .1
}, {
	type: "fire-immune",
	value: .2
}, {
	type: "fire-immune",
	value: .3
}, {
	type: "ice-immune",
	value: .1
}, {
	type: "ice-immune",
	value: .2
}, {
	type: "ice-immune",
	value: .3
}, {
	type: "water-immune",
	value: .1
}, {
	type: "water-immune",
	value: .2
}, {
	type: "water-immune",
	value: .3
}, {
	type: "storm-immune",
	value: .1
}, {
	type: "storm-immune",
	value: .2
}, {
	type: "storm-immune",
	value: .3
}, {
	type: "earth-immune",
	value: .1
}, {
	type: "earth-immune",
	value: .2
}, {
	type: "earth-immune",
	value: .3
}, {
	type: "damage",
	value: 4
}, {
	type: "hearts",
	value: 8
}, {
	type: "hearts",
	value: 10
}], Prodigy.SeededRandomGenerator = function (e) {
	this.seed = e, this.cur_seed = e
}, Prodigy.SeededRandomGenerator.prototype = {
	next: function () {
		return this.cur_seed = this.cur_seed + Prodigy.SeededRandomGenerator.CONSTANT, this.generate(this.cur_seed)
	},
	jumpFromStart: function (e) {
		for (var t = 0, i = 0; e >= i; i++) t = this.generate(this.seed + i * Prodigy.SeededRandomGenerator.CONSTANT);
		return t
	},
	jump: function (e) {
		for (var t = this.generate(), i = 0; e > i; i++) t = this.next();
		return t
	},
	generate: function (e) {
		var t = e || this.seed;
		return (9301 * t + 49297) % 233280 / 233280
	}
}, Prodigy.SeededRandomGenerator.CONSTANT = 2949751391065249e4;
var NetworkManager = function () {
	function e(e) {
		$(document).ajaxError(function () {
			console.log(arguments)
		}), this.player = null, this.game = e, this.socketConnected = !0;
		var t = {};
		this.api = new ApiClient(t, {
			503: this.initBoot.bind(this)
		}), this.api.generic_ajax_error = this.onError.bind(this), setInterval(this.updateCharacter.bind(this), 1e3)
	}
	return e.LOGIN = {
		200: "All Good!",
		400: "Enter A Username And Password",
		401: "Incorrect Username Or Password",
		503: "Prodigy Is Updating",
		500: "Prodigy Is Temporarily Offline.",
		0: "Prodigy Is Temporarily Offline."
	}, e.SKILLS = {
		0: "There was an error loading your skills. Please try again."
	}, e.prototype.sendNotification = function (e) {
		var t = this.game.prodigy.player.owners;
		e.timestamp = new Date;
		var i = "https://web.archive.org/web/20160415163509/http://52.90.199.4:3000/notification-api/v1/";
		try {
			document.domain.indexOf("prodigygame.com") >= 0 && (i = "https://web.archive.org/web/20160415163509/https://prodigygame.com/notification-api/v1/")
		} catch (a) {}
		for (var s = 0; s < t.length; s++) try {
			$.ajax({
				url: i + t[s].ownerID,
				type: "POST",
				data: e
			})
		} catch (a) {}
	}, e.prototype.getErrorMessage = function (e, t) {
		return Util.isDefined(e) && Util.isDefined(t) ? t[e] : Util.isDefined(t) ? t[0] : "There was an error with your request"
	}, e.prototype.sendAnalytics = function (e, t, i) {
		if (!Util.isDefined(this.player) || !this.loggedIn) return console.log("GAQ " + i + ", " + e + ", " + t), void 0;
		Util.isDefined(i) || (i = this.player.isMember ? "Member-Events" : "Non-Member-Events", this.player.isMember && 1 === this.player.data.nm && (i = "New-Member-Events")), console.log("GAQ " + i + ", " + e + ", " + t);
		try {
			_gaq.push(["_trackEvent", i + "", e + "", t + ""])
		} catch (a) {}
	}, e.prototype.log = function (e, t) {
		Util.isDefined(this.player) && (t.userID = this.player.userID), console.log("MSG = debug, " + e + ", " + JSON.stringify(t)), this.api.log("debug", e, t)
	}, e.prototype.initBoot = function () {
		-1 === this.bootCount && this.loggedIn && (this.bootCount = (new Date).getTime() + 7e4, this.bootMsg = "Prodigy is going offline, and you will be logged off in ")
	}, e.prototype.onError = function (e, t, i) {
		console.log("FAIL : " + e + " , " + t + ", " + i), !Util.isDefined(this.updateFailedTime) && this.loggedIn && Util.isDefined(e) && -1 !== e.indexOf("update") && (this.updateFailedTime = (new Date).getTime(), console.log("logout countdown"))
	}, e.prototype.getCharData = function (e, t, i) {
		this.api.getUser(e, t, {
			200: i
		})
	}, e.prototype.canUseMP = function () {
		return this.loggedIn && this.socketConnected && Util.isDefined(this.zone)
	}, e.prototype.getWorldList = function (e, t) {
		this.api.getWorldList({
			200: e,
			400: t,
			500: t,
			0: t
		})
	}, e.prototype.startMatchmaking = function (e, t, i, a, s) {
		this.api.startMatchmaking(e, t, i, {
			200: a,
			400: s,
			500: s,
			0: s
		})
	}, e.prototype.quitMatchmaking = function (e, t) {
		this.api.quitMatchmaking({
			200: e,
			400: t,
			500: t,
			0: t
		})
	}, e.prototype.joinMultiplayerServer = function (e, t, i, a, s) {
		this.socketConnectFailed = !1, a = this.onDisconnect.bind(this, a), this.api.joinMultiplayerServer(e, t, {
			200: this.joinSuccess.bind(this, e, i),
			400: a,
			500: a,
			0: a,
			503: a,
			409: a,
			504: a,
			502: s
		}, this.onMessage.bind(this), this.onPlayerList.bind(this), this.onDisconnect.bind(this, null), this.onPlayerJoined.bind(this), this.onPlayerLeft.bind(this))
	}, e.prototype.joinSuccess = function (e, t) {
		this.game.prodigy.player.world = e, this.socketConnected = !0, t()
	}, e.prototype.setZone = function (e) {
		this.zone = e, this.loggedIn && this.api.switchZones(e.zoneName, {
			200: function () {},
			401: function () {},
			409: function () {}
		})
	}, e.prototype.verifyClassCode = function (e, t, i) {
		this.api.verifyClassCode(e, {
			200: t,
			400: i,
			500: i,
			0: i,
			404: i,
			503: i,
			504: i
		})
	}, e.prototype.attachClassCode = function (e, t, i) {
		this.api.attachStudentUsingClassCode(e, {
			200: t,
			400: i,
			500: i,
			0: i,
			404: i,
			503: i,
			504: i
		})
	}, e.prototype.emitMessage = function (e) {
		return this.canUseMP() ? (console.log("sent msg"), console.log(e), this.api.emitMessage(e, {
			200: function () {}
		})) : void 0
	}, e.prototype.onMessage = function (e) {
		this.canUseMP() && (this.game.prodigy.messageListener.onMessage(e), Util.isDefined(this.zone.onMessage) && this.zone.onMessage(e))
	}, e.prototype.onPlayerList = function (e) {
		console.log("playerList " + e), this.canUseMP() && Util.isDefined(this.zone.onPlayerList) && this.zone.onPlayerList(e)
	}, e.prototype.onDisconnect = function (e, t) {
		console.log("disconnect " + t), this.socketConnected = !1, this.socketConnectFailed = !0, Util.isDefined(e) && e()
	}, e.prototype.onPlayerJoined = function (e) {
		console.log("join " + e), this.canUseMP() && Util.isDefined(this.zone.onPlayerJoined) && this.zone.onPlayerJoined(e)
	}, e.prototype.onPlayerLeft = function (e) {
		console.log("left " + e), this.canUseMP() && Util.isDefined(this.zone.onPlayerLeft) && this.zone.onPlayerLeft(e)
	}, e.prototype.getLeaderboard = function (e, t, i, a) {
		this.api.getLeaderboard(t, e, 30, {
			200: i,
			400: a,
			500: a,
			0: a
		})
	}, e.prototype.getPVPLeaderboard = function (e, t, i, a, s, r) {
		this.api.getPvpLeaderboard(e, t, i, a, {
			200: s,
			400: r,
			500: r,
			0: r
		})
	}, e.prototype.completeAssignment = function (e) {
		this.api.completeAssignment(e, {
			200: null
		})
	}, e.prototype.answerQuestion = function (e, t, i, a, s, r, o, n) {
		a > 300 && (this.game.prodigy.network.log("answer-question", {
			data: a
		}), a = 300);
		var l = {
			questionID: e,
			userAnswer: t,
			wasCorrect: i,
			respTime: a,
			hintID: s,
			hwID: r,
			skillID: o,
			ownerIDs: n
		};
		console.log(JSON.stringify(l)), this.api.saveAnswer(l, {
			200: null
		})
	}, e.prototype.finishPlacement = function (e, t) {
		this.api.updatePlacementTest(e, t, {
			200: null
		})
	}, e.prototype.updateUser = function (e, t) {
		this.api.updateUser(e, {
			200: t,
			400: t,
			500: t,
			401: t,
			0: t
		})
	}, e.prototype.updateUserAbility = function (e) {
		console.log(JSON.stringify(e)), this.api.updateUserAbility(e, {
			200: null
		})
	}, e.prototype.loadSkills = function (e, t, i, a) {
		this.loggedIn && this.api.loadSkills(e, t, {
			200: i,
			401: a,
			409: a
		})
	}, e.prototype.setInstance = function (e) {
		this.api.selectInstance("", e, {
			200: null,
			401: null,
			409: function () {}
		})
	}, e.prototype.createPlayer = function (e, t, i, a, s) {
		this.api.create(e, t, i, {
			200: s,
			400: a,
			500: a,
			0: a
		})
	}, e.prototype.createCharacter = function (e, t, i, a) {
		this.api.createCharacter(e, t, {
			200: a,
			400: i,
			500: i,
			0: i
		})
	}, e.prototype.login = function (e, t, i, a, s, r) {
		if (this.player = i, Util.isDefined(this.loginTimer) && window.clearInterval(this.loginTimer), Util.isDefined(r) ? r++ : r = 1, r > 5) return a(), void 0;
		var o = this.login.bind(this, e, t, i, a, s, r);
		this.api.login(e, t, {
			401: this.processLogin.bind(this, !1, a, o),
			206: this.processLogin.bind(this, !0, s, o),
			200: this.processLogin.bind(this, !0, s, o),
			503: this.processLogin.bind(this, !1, a, o),
			340: this.processLogin.bind(this, !1, a, o),
			0: this.processLogin.bind(this, !1, a, o),
			500: this.processLogin.bind(this, !1, a, o)
		})
	}, e.prototype.processLogin = function (e, t, i, a, s) {
		return e || !Util.isDefined(i) || 0 !== s && 500 !== s && 340 !== s ? (e && (this.loggedIn = !0, this.updateID = 0, this.bootCount = -1, this.updateFailedTime = null, this.player.init(a), Util.isSchoolHours() ? this.sendAnalytics("School", "", "Login-Events") : this.sendAnalytics("Home", "", "Login-Events")), Util.isDefined(t) && t(a, s), void 0) : (this.loginTimer = setInterval(i, 1e3), void 0)
	}, e.prototype.logout = function () {
		this.loggedIn = !1, this.api.logout({
			200: function () {}
		}), window.location.reload()
	}, e.prototype.setSaveCallback = function (e) {
		this.saveCallback = e
	}, e.prototype.updateCharacter = function () {
		if (!this.saving) {
			if (!this.loggedIn || !Util.isDefined(this.player) || !Util.isDefined(this.zone)) return Util.isDefined(this.saveCallback) && (this.saveCallback(), delete this.saveCallback), void 0;
			if (Util.isDefined(this.updateFailedTime) && -1 === this.bootCount && ((new Date).getTime() - this.updateFailedTime) / 1e3 > 120 && (this.bootCount = (new Date).getTime() + 6e4, this.bootMsg = "Cannot connect to Prodigy...you will be logged off in "), -1 !== this.bootCount) {
				var e = this.bootCount - (new Date).getTime();
				0 > e ? this.logout() : this.zone.showMessage(this.bootMsg + Math.floor(e / 1e3) + " seconds", 5e3)
			}
			if (this.player.saveEnabled) {
				var t = this.player.getUpdatedData(this.processPlayer);
				this.processPlayer = !1;
				var i = !Util.isEmptyObject(t);
				i || Util.isDefined(this.lastUpdate) && !((new Date).getTime() - this.lastUpdate > 3e4) || (i = !0), console.log(i + " : " + JSON.stringify(t)), this.saving = i, i && this.api.updateCharacter(t, {
					401: this.processUpdate.bind(this, !1, !1, null),
					404: this.processUpdate.bind(this, !1, !1, null),
					409: this.processUpdate.bind(this, !1, !0, null),
					0: this.processUpdate.bind(this, !1, !1, null),
					200: this.processUpdate.bind(this, !0, !1, this.saveCallback)
				})
			} else Util.isDefined(this.saveCallback) && (this.saveCallback(), delete this.saveCallback)
		}
	}, e.prototype.processUpdate = function (e, t, i) {
		this.saving = !1, this.sendAnalytics("Player-Alive", "", "Login-Events"), e || (!Util.isDefined(this.updateFailedTime) && this.loggedIn && (this.updateFailedTime = (new Date).getTime()), t && -1 === this.bootCount && this.loggedIn && (this.bootMsg = "You have logged in elsewhere...you will be logged off in ", this.bootCount = (new Date).getTime() + 5e3), console.log("network update fail")), e && (i === this.saveCallback && delete this.saveCallback, Util.isDefined(i) && i(), this.updateFailedTime = null, this.lastUpdate = (new Date).getTime()), this.processPlayer = !e
	}, e
}()